cset: moving following pidspec: 3467
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.410916533 seconds)
loading group "string"... done (took 0.503271776 seconds)
loading group "linalg"... done (took 8.445028053 seconds)
loading group "parallel"... done (took 0.174339175 seconds)
loading group "find"... done (took 2.988872508 seconds)
loading group "tuple"... done (took 1.970525794 seconds)
loading group "dates"... done (took 1.44537634 seconds)
loading group "micro"... done (took 0.199051363 seconds)
loading group "io"... done (took 0.529832885 seconds)
loading group "scalar"... done (took 49.388212012 seconds)
loading group "sparse"... done (took 13.399119577 seconds)
loading group "broadcast"... done (took 1.267701785 seconds)
loading group "union"... done (took 9.111163664 seconds)
loading group "simd"... done (took 2.997230404 seconds)
loading group "random"... done (took 11.216365926 seconds)
loading group "problem"... done (took 2.17702817 seconds)
loading group "array"... done (took 24.72857304 seconds)
loading group "misc"... done (took 1.102399252 seconds)
loading group "sort"... done (took 3.683431526 seconds)
loading group "collection"... done (took 19.159444632 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.606420757 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126896768 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204364926 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.285003278 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.230636028 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165509522 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142572571 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.23361757 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.565779033 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207282196 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138408154 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421247072 seconds)
done (took 6.05343465 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253403433 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.246543436 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166060468 seconds)
  done (took 1.083961682 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075456204 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158049422 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107816697 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094371762 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093756558 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10957354 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093551847 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109023536 seconds)
  done (took 1.441461862 seconds)
done (took 3.530037176 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.497337654 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.865278907 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.499612009 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.143127176 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312082902 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.2949164 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.269421477 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.199846388 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093470824 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088507294 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174885301 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.416981443 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.381201479 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.992348265 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088253868 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.092845824 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.129112809 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.786381266 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077561793 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109082122 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506673793 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.191304747 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113571638 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105394907 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184293322 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133148569 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161006266 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101226483 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664932225 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130753754 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.178089758 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096791089 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158212662 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.186493609 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.207391954 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093773949 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.712190933 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200100091 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099920349 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09961266 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.707038314 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116210568 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.186043835 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103102918 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088110603 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.1882525 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101247937 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092321094 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093262136 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084839585 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.161418479 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.471895145 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102468758 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169916344 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091880727 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.695683856 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098149995 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274606767 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125324207 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098006699 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089233201 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087849735 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.160824384 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093346295 seconds)
  done (took 20.025762262 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146733384 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164999312 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076952706 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15599689 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122627477 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079493013 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099553923 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077752776 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124684518 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180093631 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138156747 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152816059 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091277909 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090682473 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128240399 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248344843 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108406999 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120661696 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089589118 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088741678 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138161632 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096019634 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106149813 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092281989 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168283728 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200947719 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106437449 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12110898 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088782441 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094735913 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140515298 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144303307 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090589059 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089193874 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188279506 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107666902 seconds)
  done (took 5.145557267 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.218350947 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104517153 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.227915636 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196829051 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133131263 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183468696 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168405092 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25496697 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.198588695 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176828064 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11263989 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112685294 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079833522 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079962864 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077024653 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.475485416 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148810628 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.190922829 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165257245 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111807517 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082406541 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380058697 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103207867 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084304285 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110107895 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065394206 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199757722 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093304748 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.134396181 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082400258 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.120018641 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.114209253 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135279703 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197640793 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141576476 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121833389 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109737503 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.134701442 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.100944424 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.207229578 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119068947 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077705488 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132188247 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115320371 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130472431 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105569591 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109395633 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.221725383 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085556674 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09825674 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110600738 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.058909267 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086582233 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196201721 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126697643 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102538881 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293368052 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107169047 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117991043 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09007998 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.810068007 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116356159 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081194242 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098353796 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094340209 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077340415 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.446596439 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107291864 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.303199586 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084325741 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156999382 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097456832 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117595112 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085354665 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102256053 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.108497617 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085132976 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094245477 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085771298 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07785578 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105790141 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114031494 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099257464 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079649985 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14672458 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.112121416 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107061914 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122789145 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090870797 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084909717 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127415157 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08103497 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104483582 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.145033222 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114452371 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113150527 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113547042 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140278022 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089519631 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.235991782 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096564661 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122058354 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097297221 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11358018 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116377328 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080426435 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082659783 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094846014 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079876226 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145191485 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101798058 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080478845 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086645885 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10973339 seconds)
  done (took 28.413072671 seconds)
done (took 54.25397974 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.435817423 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082900954 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082131641 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101486386 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082927742 seconds)
  done (took 1.529542974 seconds)
done (took 2.249236573 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319288708 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.18787132 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101099887 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186277103 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087047197 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191219578 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.17798557 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094063431 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205006904 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082868636 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182696537 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083214895 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10258726 seconds)
  done (took 2.747616888 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10187162 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108801807 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100060375 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11734758 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083040911 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10008663 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115953847 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111683118 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099334802 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111629849 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085179083 seconds)
  done (took 1.857547006 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098826952 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10542546 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097206959 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115554981 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084709525 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096040644 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113204676 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108255469 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096476405 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10982984 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083814622 seconds)
  done (took 1.836440149 seconds)
done (took 7.161273615 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.0969933 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.355965854 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146874565 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.208602372 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346097877 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.234820653 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.56142099 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.151150677 seconds)
  done (took 13.970607182 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.119928651 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.149632765 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093086243 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.092560733 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090553314 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.110122825 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.092435163 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090080721 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111056611 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090555871 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09195108 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104027926 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090438927 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090894588 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092686469 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.108347843 seconds)
  done (took 2.403857153 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141597228 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138924098 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097179341 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098256857 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10986275 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.09839337 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099654014 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113701196 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093459176 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094698631 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.11652369 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.097917568 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096714323 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107595302 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097734278 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115597015 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.108151235 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097601619 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115254012 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114472527 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099107712 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096550143 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112737355 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098666759 seconds)
  done (took 3.366462865 seconds)
done (took 20.468398345 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146295312 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099120358 seconds)
  done (took 0.974625572 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14013547 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153759135 seconds)
  done (took 1.025673643 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111586658 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08876721 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13463429 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102443018 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091481112 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.104720138 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115266513 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104850292 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090700044 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089908315 seconds)
  done (took 1.769599018 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093044224 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093675004 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.11937173 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.135433503 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097334536 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108212768 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093946157 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092669545 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110374446 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089885975 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094025504 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121614223 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093994934 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123157967 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095312496 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094168261 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113729937 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092911096 seconds)
  done (took 2.600130863 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088848137 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091846638 seconds)
  done (took 0.920231216 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092187302 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090372137 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090572198 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105875889 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089302078 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089568464 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103552069 seconds)
  done (took 1.400513424 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485994448 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.377070992 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.355817168 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107456926 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146876714 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.348908641 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147484973 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103590799 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120503498 seconds)
  done (took 2.967003487 seconds)
done (took 12.393824053 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089128657 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.223293712 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.602630424 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112143327 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088995299 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155829957 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.283080082 seconds)
done (took 2.295368456 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338679343 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14226088 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080606275 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091232304 seconds)
  done (took 1.392189908 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081040778 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097029076 seconds)
  done (took 0.925674788 seconds)
done (took 3.066112544 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087814873 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.119453515 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.105101041 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.086424812 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088100472 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.085589571 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.103942387 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087416117 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086601471 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.104940682 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.088193545 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.087362398 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08734095 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101620793 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087510323 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086482356 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.085826342 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102460009 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087612483 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086154811 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102914672 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086950346 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087060666 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0864152 seconds)
  done (took 2.999158444 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105023132 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089802448 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108559446 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091863139 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091484436 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106440616 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092655177 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.089943683 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107745496 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08899946 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091806162 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091734071 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104296659 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093249884 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088789605 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.107005596 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092516704 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088907702 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10475614 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.092953313 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091454783 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10479921 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09323166 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092719524 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10753746 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092885049 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090290959 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106912469 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092889325 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093034605 seconds)
  done (took 3.643186708 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096822294 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085293564 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087046392 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111585197 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085797751 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088255065 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100371704 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087137483 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.088514378 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088092199 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105980085 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088480207 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085353857 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.104980537 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088797128 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091290086 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.095796184 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.102387666 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08706465 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088415751 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.106996931 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085953041 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087766536 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086982065 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.104756687 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085417566 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.087990158 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.10393405 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089224659 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088758848 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091004194 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107795002 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088066324 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.0972063 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106570233 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087878619 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093666442 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.100517561 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089503333 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084747419 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085197263 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.104891308 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085561181 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093647036 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.10362346 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089065029 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086077609 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.087837665 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.105399944 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090793896 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085255491 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.101197005 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090274706 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089686769 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.106084335 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085386014 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089499662 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084314312 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.104789372 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.087316555 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08529245 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085150077 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.109932501 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089182601 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102443885 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11056422 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085739557 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089025291 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.105894613 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094271469 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089981334 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113349578 seconds)
  done (took 7.502730293 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101183547 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0975748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088162566 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105817245 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089428999 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088781981 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11041622 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08959381 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089171464 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110232991 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088887913 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089336705 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090294296 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106751061 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090870907 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089735129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111375279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089819814 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088621177 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105591943 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089491455 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093729619 seconds)
  done (took 2.860248743 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235072749 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09519788 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138587926 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119209788 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108573698 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118940457 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093433782 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094329041 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108562592 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098505182 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097694596 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10993619 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108152715 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117486646 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101337037 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099293273 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109899138 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100685826 seconds)
  done (took 2.81272683 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103055242 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09166922 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126496782 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09059714 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091355303 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09241602 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111832017 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110121179 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.106664774 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09291385 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09730984 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091627458 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.106563373 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091262514 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09077143 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106668605 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091379983 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090819158 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114203426 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098119649 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096185868 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113569365 seconds)
  done (took 2.964505926 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103865378 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090965975 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124185436 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093228675 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091043937 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089101398 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.112562143 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090653112 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096369 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107312641 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091896673 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091163368 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121505155 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091405641 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097078513 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107797152 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092472523 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091873971 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106963874 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091919366 seconds)
  done (took 2.742828102 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168767755 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121537911 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107531697 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113640854 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12187431 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107465267 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113620917 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12273587 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107515192 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133264425 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107916862 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107088299 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130939131 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112592009 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105266197 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130338144 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115717223 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131611931 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107309302 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106482513 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134777514 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106357214 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130677825 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106881465 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10551339 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123315981 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108018097 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110778491 seconds)
  done (took 4.061960722 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089857214 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089440087 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088518255 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104867077 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089949377 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089304856 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087686083 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105601297 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08993081 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08864638 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.106212802 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090167255 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089392907 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088596022 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105286469 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090064847 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088979971 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105048796 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090507189 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08967142 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089017071 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105424168 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090772628 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090204312 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088475749 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107767063 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090293195 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088980776 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106022633 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091042023 seconds)
  done (took 3.580273734 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102416205 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10053832 seconds)
  done (took 0.967585062 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.09732593 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104607584 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089225719 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107344149 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096690733 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089691555 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114533129 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096661359 seconds)
  done (took 1.563912063 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.14042261 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.157759758 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096104335 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100007769 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.158832592 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149325611 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130898187 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.093478285 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105746551 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084867343 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152986772 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082515747 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09062363 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086789179 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108297399 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097151519 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091296818 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.11749967 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097244503 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090872453 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111938893 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09728658 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091820729 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.117264906 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085513589 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092083701 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111645689 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102162996 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086996424 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109466532 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089299307 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090484623 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109825257 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095836718 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091002205 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158488239 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097129277 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104345462 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091025224 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095992521 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.139695716 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091600326 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092411067 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105208325 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094930216 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095694527 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.094542524 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.108580204 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084527119 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08535551 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.106987928 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088635498 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090370385 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108358744 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093693176 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097894187 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108560907 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089141439 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087459907 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102204065 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090406191 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087544637 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109841423 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094679263 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093242233 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108109254 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091916202 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091006685 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090968559 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.107816407 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090605069 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104001659 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110024734 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095390678 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094592763 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.107940635 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089162419 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095232807 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107048317 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091979083 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093427491 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13574951 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094404412 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085737913 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103211908 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098627178 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092975634 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.109955602 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08532329 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099056161 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.10886134 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092350066 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08400152 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08910532 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104080955 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.093894846 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083671346 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109224543 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090566333 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095063818 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112901124 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090407466 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091830073 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112274377 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097489047 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09023846 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152628454 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087843974 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085442247 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.11163599 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095743417 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08610555 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10822443 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091058867 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08808242 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10361247 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096977656 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091558611 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.108592872 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.094914215 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093277601 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109219222 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093791937 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092069382 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086559927 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.111339013 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100511736 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094166058 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.109609512 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092333501 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092127922 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107536227 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094792162 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088836742 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111450384 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089265979 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090895472 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091786868 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112268425 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09278051 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087169228 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.107262218 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093634995 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092320614 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.110771584 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.0938406 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086736599 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100932181 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092880905 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087139184 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.108209799 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100406647 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087640869 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.11021804 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088844043 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101061357 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105148688 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097037205 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094187616 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096541406 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114039613 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085088401 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088638909 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110361105 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094682721 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089243492 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112011236 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092398479 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099534153 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.1020205 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096022279 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084607914 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087827687 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.113228513 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093716706 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094002864 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10592245 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131153536 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104812447 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116013273 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09272953 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090567188 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.112015018 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093256855 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095788842 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113943711 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097705061 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089428691 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107056719 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098714912 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089062446 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093676564 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109391188 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093945839 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08426473 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.111747712 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08592167 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095899649 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111151149 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096607351 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096312131 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111126681 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092328702 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100162267 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105891893 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095930229 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084879002 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096254428 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.120759193 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099042233 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096440594 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112207574 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090515277 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093269356 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117107605 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095918197 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09277402 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.110471543 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087143303 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086292131 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097185878 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.112218167 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090213163 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092053318 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.121684449 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095235276 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089946306 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102840342 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096611413 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095743731 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105705241 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094601898 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088704819 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107427735 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10110154 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085614497 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106807409 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09484431 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096960164 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.109290602 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093674327 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094882515 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098274322 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.113820774 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095016134 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09128453 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118745453 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09175626 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091687308 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106742645 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10537818 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086109366 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093495063 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.111676198 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090562499 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088517216 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114380025 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098757132 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.097312123 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110241984 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098594805 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097505832 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.116800276 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092516208 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097685515 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106874238 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087850309 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090824004 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084785115 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.113590763 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090011839 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097335143 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.109229018 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093053558 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.096286591 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114583065 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091094691 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.097505725 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123762807 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0865199 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084699053 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108692565 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093618295 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.088818369 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.108186503 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095239928 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094252926 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.113684327 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096421138 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088470904 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.109665297 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098586974 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089251996 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.0977823 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.117172426 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099208855 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088206593 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.115196853 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090778962 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096999493 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.105108233 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092632964 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090896618 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110814568 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09117868 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090917021 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108361852 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087081331 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088977876 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.115668267 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092464316 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096367884 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091811891 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109310569 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08993655 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088036291 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117616815 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092734737 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097743962 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.110620709 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087150885 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08683666 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.114826702 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094957713 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097636094 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088084829 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.115536477 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099127954 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096430394 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.110868301 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102459067 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100859449 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.116671401 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100454399 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085437564 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109749727 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098688365 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092530363 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.113037295 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09629097 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087671859 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09425867 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118364837 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095183515 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090995307 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105723804 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094160017 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098533324 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.113927556 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097856351 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094965191 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112919542 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089282014 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09576002 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.096863054 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.112665686 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099544491 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093546085 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115129652 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091357751 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.097795202 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.112355273 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087860628 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086962061 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108454261 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100105759 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087060643 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.096691712 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.115605885 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092115823 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090764758 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.116715265 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091489248 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095396959 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115586369 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092662622 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101750725 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.112529649 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092257369 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097487356 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097228458 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105345651 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092090109 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09168891 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118613768 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094434989 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097198692 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112715753 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098901166 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095340823 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116705963 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.09972277 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098123638 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086690647 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.11916136 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097277638 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094758694 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.109331275 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094066197 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0877164 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111559212 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100806757 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090516649 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119470714 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10090699 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091757292 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10971204 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101155385 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092683466 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116804225 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091075213 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095559176 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085977302 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.114474188 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092970209 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099533567 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108488279 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088538249 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097181533 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.116951685 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099467421 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096259727 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118079199 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089342705 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087548215 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094792802 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110871111 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103880974 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097281066 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.111358563 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092853999 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094025472 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.114975487 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101430292 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087860641 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107833948 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095347445 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094377832 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110496067 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089809983 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097980359 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111020492 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097418189 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093055071 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087156818 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112740052 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100081541 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091946187 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108431849 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091749863 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099984407 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112183489 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091270103 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087704587 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118015416 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097353169 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09898722 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109823222 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097171983 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091406507 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.113643459 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104435362 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091265892 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11225388 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093432151 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099758152 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099176183 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.106481418 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092493675 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101525388 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116850659 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095846063 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097161532 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.111459009 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101256341 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099511057 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.115368788 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088872251 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088109362 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111659745 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088683331 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096295256 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098687201 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113116871 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092295138 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097664229 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117277466 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097941748 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095264086 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105790378 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102436278 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091660572 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114951247 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089672448 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088086155 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094540699 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119381956 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094083445 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094187609 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.11455471 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098488856 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088918042 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109814243 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099456156 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097427783 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.09837784 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113713391 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092882109 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095858209 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12267974 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095017664 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092600673 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120941876 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10175521 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093995037 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.112629705 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099531949 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.098402665 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.115001735 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101276419 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09146567 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.111589225 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101324818 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101139594 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121273848 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094424629 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088256638 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.115727149 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093626004 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088902807 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098007815 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120175826 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102227254 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093330951 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110317276 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103179333 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099161773 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113064638 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092394338 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091499543 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.11775831 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093195615 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097833773 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.109838375 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10239434 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100489107 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09917471 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122454973 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089596597 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100335238 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116309623 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102515181 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094837243 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108148063 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089284118 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095921561 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.119978081 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101411416 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097396962 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097131518 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.117047448 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095923319 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094144691 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111658746 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10245724 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099189688 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.113959102 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097184369 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093356678 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113991034 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096786147 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100173777 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.099750085 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115755791 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103961118 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100611849 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.113415549 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092837189 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094726628 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.116361242 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096125045 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098973026 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111131911 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089499107 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099284618 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119888887 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095998005 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102442229 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100453553 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.113788045 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097110363 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100833441 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.119704572 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098590601 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095675615 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.117179846 seconds)
  done (took 60.620414641 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144443615 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102818106 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115605708 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097011358 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113761931 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117581914 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097630285 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097690604 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116415855 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107093193 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096836874 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115609039 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11308139 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117756976 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134457062 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107247744 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115952929 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098557053 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096878703 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097303296 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131083225 seconds)
  done (took 3.151627185 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.1150249 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110233234 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128184179 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111496905 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103585091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12905113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108226695 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127291759 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112321024 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104722692 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130104468 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107963119 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123814415 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106475987 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105011137 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126100658 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111828912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103151062 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12829932 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10861625 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125082906 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109923569 seconds)
  done (took 3.352864957 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.126770617 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099509524 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094867857 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116577045 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10053374 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096478233 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.119187229 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09896009 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105144165 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.111797347 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089155185 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092347846 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095592144 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115912804 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091810024 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097054414 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123868192 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102080768 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101142874 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096131536 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108752379 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097669122 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.096473439 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107125781 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103272073 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10154483 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.116291934 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101779934 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087988458 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099368691 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116523031 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091843048 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087539339 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.107571376 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.088937614 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100505513 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.098743711 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.115849804 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098607731 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087684382 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.117169783 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102286887 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088473399 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096631975 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117097367 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092128077 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.09996229 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117295344 seconds)
  done (took 5.744137065 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127717865 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161931059 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101810566 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135018278 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132445808 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.106807681 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099442464 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135092668 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099201469 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123094446 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113406228 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111227099 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122818901 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10638215 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099116981 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124160651 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10370616 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.33604155 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126610813 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101465899 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105494149 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123126332 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110848347 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130567918 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105355633 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100657019 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119553571 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106132463 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111593881 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.126228966 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106281016 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10460504 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131111467 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100813131 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100983469 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.122445486 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113988198 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121576773 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104326337 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101094087 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.101610016 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124959515 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103463924 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132275369 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103065836 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10224798 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122898959 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100051415 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110458359 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122045308 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109277114 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112222772 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12340667 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103093584 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10406432 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131997425 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104229237 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100212169 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123826879 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110690385 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10055955 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123809223 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112206632 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121948248 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109148371 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111046314 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122486806 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104620923 seconds)
  done (took 8.924103316 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132720054 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103507129 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13257887 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113892364 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104208853 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12523568 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105756095 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104196268 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125426711 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110832468 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124096857 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.197681874 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122563589 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110213317 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10533372 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125273121 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104872619 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104223482 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125206382 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106639111 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104814236 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133261082 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105309127 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131552682 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115821914 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101691037 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.1264966 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10559478 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111922944 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126395545 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116014909 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125707018 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106810859 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113487239 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136526711 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106149223 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098764514 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125241701 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105986107 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104782753 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123848573 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115726142 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12531221 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102930744 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105229845 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124514679 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115148073 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116927582 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132240526 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110963357 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125865719 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116321431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106636149 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125707136 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114845878 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139574077 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114870048 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113114699 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12687166 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114449642 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133735551 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121443237 seconds)
  done (took 8.14640323 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099455911 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099561479 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097759872 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.117548658 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099306398 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097676734 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097688234 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118582866 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099577538 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097719166 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118546202 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099685262 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098242065 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09749953 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119069356 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099619656 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097728826 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117528376 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100206466 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098613812 seconds)
  done (took 2.907971256 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110215652 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115957624 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120527319 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107728409 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101192471 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126595366 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101867744 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101537247 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100522354 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122091988 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109776001 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128624744 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101766154 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106788238 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128743109 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108358156 seconds)
  done (took 2.631199641 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120566125 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116755295 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187988561 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102490407 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123001264 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109769779 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101611023 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124339383 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102518116 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106782181 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104301374 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.125461512 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103320036 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101269955 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12378427 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105849991 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100535847 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125421856 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103141963 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.186348255 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106091088 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103175343 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102382984 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.127522387 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102882421 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10468297 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128572474 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102069634 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102266828 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123153399 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103196386 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108173809 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122786911 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106981571 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101259002 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122528361 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102667041 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100984498 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125929987 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103869294 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102983551 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102586483 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.123275675 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103580442 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.09962818 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.122423589 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101266039 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10607138 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123312518 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103519485 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101114759 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128662292 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.1057534 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110419542 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129374611 seconds)
  done (took 7.081437101 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113708318 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102669985 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134727022 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101972698 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10187351 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102667183 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122691702 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103260776 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101962867 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12143105 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10358378 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10272012 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123200341 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105204982 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103525015 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123912087 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10001362 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103153297 seconds)
  done (took 2.814376597 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108011996 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101595628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105999637 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122815928 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101696377 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100750674 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120811373 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101538921 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100961774 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10086595 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124390739 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102323215 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100482737 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121512867 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101970126 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101642869 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123017768 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10225008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100664862 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099489499 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123187996 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101731928 seconds)
  done (took 3.213374067 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113376101 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.18307377 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107849737 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191342917 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097661896 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095594525 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128759387 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098627251 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.11245217 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118657018 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097600788 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096296723 seconds)
  done (took 2.288721887 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129828065 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137567416 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122728383 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101776068 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109396056 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126477085 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106544841 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104209646 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135245641 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117816974 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125646291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114787281 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11206315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134237596 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109091192 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130482507 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106969909 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106176499 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122322967 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121486551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105774648 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133962696 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106551908 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105006847 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127461271 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113991199 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133302227 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119816317 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10518172 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134775201 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110552541 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12649795 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114920582 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116917027 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123845909 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114717952 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104252581 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142836173 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108681578 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134193784 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103580066 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110239036 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13516554 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112015818 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13309615 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107250611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110448551 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12746227 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106603874 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126216893 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132006891 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114269458 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13102339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114434416 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112873502 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148751368 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118338284 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136008071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110257049 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139501029 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11413187 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110729903 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137248566 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1182728 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131638314 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114880256 seconds)
  done (took 8.765433295 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143179266 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103199096 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12731703 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119615824 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135084898 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107310512 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106724491 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128111461 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109396992 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103007591 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170625422 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106950402 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112442917 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137708763 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107042904 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127053865 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107629729 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113344829 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12385522 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128421705 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12708263 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116961303 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114076782 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134942373 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118907336 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13210916 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10779723 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106253809 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127707101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108087124 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111678112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128517439 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116442147 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102388294 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136759007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107108555 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128068607 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11352063 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106354772 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132034371 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114981165 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120746238 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128745137 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106228024 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138751258 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107231419 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106170295 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124901927 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108114937 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103027263 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139671253 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11930951 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139925409 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116063043 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106853752 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12779199 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107736219 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107836879 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128987545 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112332637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135471395 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108550575 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127994607 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1282318 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108246229 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135947318 seconds)
  done (took 8.760201012 seconds)
done (took 164.848808361 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147229136 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184131943 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144295859 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176379559 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093960868 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127327061 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146942344 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.145625043 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091205309 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115937846 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093228618 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094081975 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1823064 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093767021 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091935644 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.095136777 seconds)
  done (took 2.873705788 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193592715 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305387552 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10889981 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118682146 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100727717 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097111485 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118229676 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100763192 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098163604 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126316359 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098687214 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093718612 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125903441 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094326869 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097445756 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.118320735 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106262246 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096957092 seconds)
  done (took 3.062230195 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118555555 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.13987394 seconds)
  done (took 1.121872095 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128408094 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211693565 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280689656 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169024451 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118702936 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139707428 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147430459 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133485829 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186857854 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133005594 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11140934 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095714324 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145296259 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103885414 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135334299 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097053808 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126176591 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133455402 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112436913 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099794878 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141486011 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102424915 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103134548 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134796483 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178046239 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133315291 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102692892 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101562975 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123065949 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113023027 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104469437 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139064245 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110833952 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179047379 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101246589 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175259316 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126944152 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.099924927 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111572226 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120066729 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10311513 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101447149 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133577408 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098284777 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101238392 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126750414 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103816791 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100558623 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129196946 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107365765 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129745384 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10714776 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174338635 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.106456386 seconds)
  done (took 7.794765034 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.865430832 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141398608 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097583607 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.017083398 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150324132 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111595086 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.887026994 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122609531 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254978154 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.894003106 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112706691 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134875778 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238719509 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.280199069 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.263366022 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359000014 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.735440253 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112227784 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151872998 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.139005654 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130242304 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125742438 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142190771 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.492574109 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.1215072 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0997057 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105820397 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.133935139 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176503097 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100539683 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102826288 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199268812 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294072642 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208466181 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099969625 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119391744 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099554849 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18448368 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275623899 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221230926 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172170601 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117861545 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100090541 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108137787 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141312156 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095347289 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181984011 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192690686 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190827536 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105043731 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112762562 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131761344 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10736995 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177746048 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097515182 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360898851 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385674394 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099583422 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107370636 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.136980131 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270123595 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099168539 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235551993 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148773296 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215446591 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098388104 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82867434 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185012079 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098211932 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129114937 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106356562 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12591354 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108149413 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188145751 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.475723479 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133396259 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104610717 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098881854 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232398497 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.120635236 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100530427 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179678501 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100599452 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107691647 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135535192 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11209677 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190359075 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270203165 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112100199 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129190972 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106427153 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112443108 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122597631 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209830787 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.250535332 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.153545527 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234906286 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12953288 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16050696 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185840341 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127236874 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170298005 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128726136 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11646851 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12775175 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229555636 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134995904 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124845651 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107141058 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108597677 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159325518 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103119358 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130997393 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166765028 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553128532 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18577255 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09609809 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126204654 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111141017 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181123942 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107083564 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263505812 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130945645 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164087973 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128986615 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097334567 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108107275 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181303393 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131646419 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11140517 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107379192 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130933713 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258734771 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24481102 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114640961 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253374243 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.200908829 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1068959 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192238753 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107545079 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189259725 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108789911 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130634339 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101274202 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821581441 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137283825 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108882385 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104378021 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205430877 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09858767 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123792204 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100561115 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097157094 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811173558 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124058401 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098967503 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102736763 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12753415 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109680007 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108056897 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12804875 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156293877 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.270308301 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11421989 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127475546 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101177883 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.177469723 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102202265 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10114753 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099218894 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12458517 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109696936 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125539074 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105126385 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191590521 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154111561 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.252107802 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.656415113 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101586877 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100458862 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242731057 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123866039 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327379136 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108738007 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.256725578 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16369485 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.11864108 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364383584 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187136255 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185952985 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.123968188 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169799741 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118986121 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109896069 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178102273 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101154458 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107425567 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.176832108 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137453413 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114507773 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.278936478 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122365623 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228509298 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.119838459 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16615299 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124413227 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108686772 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32703322 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121621543 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119932946 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180812799 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105422042 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099858193 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.623966896 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124016064 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113348428 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129000948 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237136524 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182660471 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109945321 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109129543 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135032156 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178659628 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207107088 seconds)
  done (took 47.720554434 seconds)
done (took 63.427472246 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263882312 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175522163 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280259375 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174319879 seconds)
  done (took 1.850620113 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.241193113 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154105479 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.198285789 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.118958386 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.203920076 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.118610171 seconds)
  done (took 1.9235117 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.176077122 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167614587 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143716762 seconds)
  done (took 1.374165584 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197449878 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213736374 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.322882889 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252644982 seconds)
  done (took 1.961011388 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.266601113 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114584447 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123306938 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.204814973 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.21842952 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.205963753 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.121390071 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170849404 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127051537 seconds)
  done (took 2.481473616 seconds)
done (took 10.482246175 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.308722672 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.164150848 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.37431207 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.219875208 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.206758875 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.180760342 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.13516501 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.116236662 seconds)
    (9/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110895483 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.33809795 seconds)
    (11/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.179863342 seconds)
    (12/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.326217951 seconds)
    (13/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132412331 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.256887782 seconds)
    (15/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.250301331 seconds)
    (16/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.2731618 seconds)
    (17/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.178184746 seconds)
    (18/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108103601 seconds)
    (19/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114616562 seconds)
    (20/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.07555537 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.153084986 seconds)
    (22/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154307643 seconds)
    (23/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.126722435 seconds)
    (24/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149161978 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.205561642 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121316354 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.279660387 seconds)
    (28/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.104715382 seconds)
    (29/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.257824357 seconds)
    (30/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.147978807 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.120375366 seconds)
    (32/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.291630561 seconds)
    (33/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078592318 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.127563308 seconds)
    (35/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.199866931 seconds)
    (36/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076116842 seconds)
    (37/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.264955324 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099784672 seconds)
    (39/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.161164634 seconds)
    (40/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.141756317 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108556828 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.127936025 seconds)
    (43/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108288286 seconds)
    (44/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.174130391 seconds)
    (45/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075270018 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.21211292 seconds)
    (47/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.098026297 seconds)
    (48/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.082537933 seconds)
    (49/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.191098753 seconds)
    (50/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.126664756 seconds)
    (51/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.196505894 seconds)
    (52/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.135554195 seconds)
    (53/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.138371609 seconds)
    (54/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.212593495 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.246484274 seconds)
    (56/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.189285995 seconds)
    (57/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.170205712 seconds)
    (58/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.22184712 seconds)
    (59/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.125773178 seconds)
    (60/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184551366 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.124980471 seconds)
    (62/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.122795332 seconds)
    (63/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.0788929 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.214285464 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.097615647 seconds)
    (66/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.08490385 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.143590792 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101159942 seconds)
    (69/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100188826 seconds)
    (70/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.106826637 seconds)
    (71/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.0779374 seconds)
    (72/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.169798989 seconds)
    (73/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.195354077 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10162096 seconds)
    (75/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107551792 seconds)
    (76/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.230925766 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101032768 seconds)
    (78/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.180122868 seconds)
    (79/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108934667 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111295068 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12159319 seconds)
    (82/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.100654746 seconds)
    (83/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.202915422 seconds)
    (84/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.106790665 seconds)
    (85/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.109087016 seconds)
    (86/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.080387562 seconds)
    (87/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114341839 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128162119 seconds)
    (89/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.16109397 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120051096 seconds)
    (91/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122208155 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106003804 seconds)
    (93/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083236147 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122091102 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.10763024 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119685412 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100722404 seconds)
    (98/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076018342 seconds)
    (99/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.104059233 seconds)
    (100/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109917598 seconds)
    (101/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.139929674 seconds)
    (102/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.191936225 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099310478 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107530879 seconds)
    (105/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.130900678 seconds)
    (106/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.085388478 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125627302 seconds)
    (108/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.192082535 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102329719 seconds)
    (110/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.144684197 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.167392959 seconds)
    (112/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.085169252 seconds)
    (113/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.080178424 seconds)
    (114/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.07755981 seconds)
    (115/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.079675843 seconds)
    (116/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.15436475 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077084617 seconds)
    (118/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076589184 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10050951 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123026739 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084159037 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084575595 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.10689872 seconds)
    (124/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.104043184 seconds)
    (125/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078330311 seconds)
    (126/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.077860577 seconds)
    (127/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.123410557 seconds)
    (128/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.10731389 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102297495 seconds)
    (130/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108195336 seconds)
    (131/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.148360033 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08583819 seconds)
    (133/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.084554222 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121229033 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.144768643 seconds)
    (136/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.085806651 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101978428 seconds)
    (138/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.107802697 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.122938395 seconds)
    (140/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078563005 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110227849 seconds)
    (142/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077848117 seconds)
    (143/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.105185041 seconds)
    (144/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112090501 seconds)
    (145/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077889708 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084374247 seconds)
    (147/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.157012699 seconds)
    (148/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.194578667 seconds)
    (149/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079457816 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.109044234 seconds)
    (151/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.129377581 seconds)
    (152/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080060487 seconds)
    (153/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076432707 seconds)
    (154/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.123340192 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085859608 seconds)
    (156/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080116366 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097364727 seconds)
    (158/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.126578325 seconds)
    (159/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.078557054 seconds)
    (160/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079908828 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10645662 seconds)
    (162/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.133284913 seconds)
    (163/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.13608284 seconds)
    (164/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.078694599 seconds)
    (165/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084055291 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.146048426 seconds)
    (167/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.083788948 seconds)
    (168/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080940625 seconds)
    (169/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076598261 seconds)
    (170/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.122440822 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10199475 seconds)
    (172/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.078281253 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.1010869 seconds)
    (174/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.103798337 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102629066 seconds)
    (176/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082969473 seconds)
    (177/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.106892207 seconds)
    (178/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.099956529 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.102098645 seconds)
    (180/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080068873 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083270792 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.14291023 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103463814 seconds)
    (184/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101047466 seconds)
    (185/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.208345532 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101515998 seconds)
    (187/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.133765156 seconds)
    (188/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077805679 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077814377 seconds)
    (190/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.109545676 seconds)
    (191/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.131689626 seconds)
    (192/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083741694 seconds)
  done (took 26.243980435 seconds)
done (took 27.134973261 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.202893078 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126048367 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109126688 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108542369 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197801771 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11562191 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.121465684 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.134832336 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118252489 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.107447178 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.12271495 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120899945 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10784127 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201452752 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110927412 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125411638 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100696 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117736406 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.147551342 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125227821 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.198300077 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101901434 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118635961 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122637598 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.176115412 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125038286 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109356491 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110522758 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.144187261 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110033744 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.11052176 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098934531 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.148804568 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124321131 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099023944 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.133603982 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100960041 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085360543 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132607556 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111892015 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120918363 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133484315 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11178488 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102545705 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108888338 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.134555686 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100661111 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111615458 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.12342394 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110283122 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102302404 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.148418681 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110239647 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098138427 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122032904 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102850934 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121327948 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122829575 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124266035 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100445492 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10168655 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124998081 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112095042 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099991178 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133273744 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10242253 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112102444 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.135018428 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111015981 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102167754 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122987803 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110078793 seconds)
done (took 9.692346868 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106810954 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1451859 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.199231043 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.209291719 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129251248 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.139972506 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.1158742 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125619968 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137333534 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120693417 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137619119 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158266504 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181129344 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143450297 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117901609 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112368878 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13741363 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110805184 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.205210522 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126714054 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149248394 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119087606 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127390209 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142469035 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106177059 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126741767 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13326149 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114328943 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104329172 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14669337 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127305735 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103769313 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134068992 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124656198 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121524333 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.13949777 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117512746 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.13614019 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106710408 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106197665 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136259578 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121912248 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105275027 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14043194 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114506521 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119038236 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.135632217 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118714514 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106903513 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.135269695 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107831054 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130945429 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142529027 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122973651 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11705171 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.140924621 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119509658 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118003133 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131926673 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11844207 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10546451 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129029393 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107950381 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126673066 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133418197 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118490417 seconds)
  done (took 9.473389687 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124426575 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134220676 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140519548 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117321884 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110056281 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122735942 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098959728 seconds)
  done (took 1.783816562 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101833346 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183848555 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.207183436 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207974139 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178175568 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.21842383 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148897295 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101491477 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135343681 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136372074 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183969055 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236208693 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109972232 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142194847 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184266197 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127543613 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.187195475 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.126776259 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115378288 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210511683 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117475997 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.155904783 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115550225 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102346932 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.204160259 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101517939 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.262592293 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11909414 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135625894 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115892133 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115198349 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206136489 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.205865819 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115926812 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108666543 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208645951 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.203498297 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115556066 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220177751 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104818257 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.204190239 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11494866 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114892616 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141242871 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.115675229 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.194232967 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120421073 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115699423 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140768895 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18760988 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136901611 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182874922 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136540235 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115895564 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111710933 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142360984 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123159664 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114942154 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214449233 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11731304 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210209975 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209135663 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180504201 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210338556 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123202861 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209351887 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.201432769 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113956183 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109408885 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.143089325 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18447717 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140979711 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113662348 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199447676 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117961552 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211404345 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183547452 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139220475 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114594219 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104123002 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140324479 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102768938 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.200590626 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115617351 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112838757 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145258594 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114794809 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115572995 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.13232859 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.12537215 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115322504 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.13863296 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121861719 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.13990617 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119775061 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.214593196 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113953874 seconds)
  done (took 15.555426866 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103846269 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102927461 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106540012 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128814576 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103663514 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103006657 seconds)
  done (took 1.604838798 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139278242 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116835077 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.14906323 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117605441 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160161424 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.214797333 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.217406033 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110978275 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156975571 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125275568 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.213532235 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191427992 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.21572227 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118632211 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.218752367 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117505196 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.219279353 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113537776 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151403817 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113236718 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115419669 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146498326 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11327844 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.20649155 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116817582 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117227184 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136148457 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125982897 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149144531 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111423662 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119739971 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141750297 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.128622749 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111751793 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.218634492 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107597997 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137771547 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120279044 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118369846 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142926044 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.192791907 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138845876 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122781124 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.117634781 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.138018163 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109650379 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144814202 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111529725 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.219640801 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120254119 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119845602 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.143106828 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117494985 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119479561 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.134202648 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1126753 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118633718 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.221048375 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.117653717 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.135881865 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117694077 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.117557143 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138187403 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121180066 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142453431 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120583086 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108477763 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.141809448 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115285031 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117540148 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.142965965 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118198505 seconds)
  done (took 11.08258418 seconds)
done (took 40.430996058 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.665774996 seconds)
  done (took 2.618924219 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.88220032 seconds)
  done (took 1.839337071 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.722946396 seconds)
  done (took 18.70864477 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.421199352 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464178515 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.123640384 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146701697 seconds)
  done (took 3.110737612 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.816453049 seconds)
  done (took 1.793371754 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280900769 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259354378 seconds)
  done (took 1.500708835 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.70448239 seconds)
  done (took 1.674333638 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.5081318 seconds)
  done (took 2.467834474 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.283983571 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.239555248 seconds)
  done (took 1.497520752 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.606758329 seconds)
  done (took 1.579850782 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.556977194 seconds)
  done (took 20.534081616 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255150678 seconds)
  done (took 1.232440593 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28924187 seconds)
  done (took 1.269234945 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.477209881 seconds)
  done (took 4.455731032 seconds)
done (took 65.250622381 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.1149377 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116510086 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114354913 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138945093 seconds)
  done (took 1.451791761 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12137965 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116699059 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.143568194 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.116534281 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.121978394 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116027321 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141448847 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118938992 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115815461 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144477544 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117428911 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115321624 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143233698 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115883736 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113307546 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.143128717 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121421012 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115891432 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141562267 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118231213 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11662781 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141842396 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.11971248 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119067009 seconds)
  done (took 3.97920462 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114378817 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107070993 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108226429 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130719109 seconds)
  done (took 1.44297878 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124415301 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129304284 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150569522 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124634359 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127567428 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153704053 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116578844 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112299221 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141030586 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126397408 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131509406 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154854292 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127980024 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117343669 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151648727 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.109894522 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.1152538 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152308833 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124121723 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124075214 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145842303 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122133248 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119803027 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.151840774 seconds)
  done (took 4.134012343 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191591775 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127748179 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171897855 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160535448 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174150578 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113987112 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.141405176 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148048382 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.123143239 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117460714 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146642405 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160703444 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147056031 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119298009 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116631045 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147311299 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130654692 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121655804 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18911551 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121270987 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149097823 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128250791 seconds)
  done (took 4.131731203 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12029389 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107215665 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.126845789 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109557751 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12010076 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109539505 seconds)
  done (took 1.682192214 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.105709738 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100821554 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102009786 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.1250683 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105391898 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101194378 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100380604 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.1278105 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101528896 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100638303 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125946592 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.100867252 seconds)
  done (took 2.285486138 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.328672795 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106458926 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134007204 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109749484 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111683413 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104479748 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145045396 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105910535 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267198698 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10275002 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.128853474 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195184404 seconds)
  done (took 2.828454271 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198732303 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143668557 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254657714 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367942161 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183830182 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158670827 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289125244 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187332475 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176710927 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161381812 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205866874 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158659644 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150259534 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208631419 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13715156 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183560745 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159864896 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231413886 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167332858 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209117717 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181178882 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198124639 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186753702 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174157496 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138857749 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185557957 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116710794 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125307683 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189330295 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187361554 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172406719 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1737723 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13918487 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215272752 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251220911 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172798074 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271582491 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156794405 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170311093 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211662348 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256287331 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137503192 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213266422 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175591829 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1275889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20691603 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153613132 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207485755 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132546798 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167604591 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178768493 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204400757 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200652634 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135804971 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306359488 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131159562 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165633309 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164667648 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210522182 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222784229 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175928726 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.146055967 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177053538 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213363298 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235686864 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.13922332 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187825844 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123098102 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189350313 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20122347 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207133068 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183292822 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.232262656 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12875149 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193030173 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166503467 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179735765 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200758876 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19576264 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116377711 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176993019 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132398684 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150374791 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188969194 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119804859 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24132393 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154813955 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342526057 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181508339 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180921187 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158876953 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183151105 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159968409 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172732955 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.100899214 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140357148 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.188122569 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153610091 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154785013 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152306261 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164814571 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125094156 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177905477 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121839764 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190411713 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133828436 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158494616 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193942226 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127881177 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202920233 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143905782 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.188816379 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191977762 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191800527 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155528606 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13075526 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245274623 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165576228 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162079787 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171584907 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220833439 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174566182 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133150102 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18694341 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190533171 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167794203 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196798937 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163220683 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133550605 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.165140514 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168744034 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184969419 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151515907 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152014152 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163489769 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215044063 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123172038 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163743075 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177986955 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158614286 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122953768 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133231278 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160128383 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138837598 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173628857 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135975526 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176631072 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163453157 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188795578 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155296615 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158419762 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169313261 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15799115 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.167603137 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172176792 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117461046 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198903005 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195136821 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153622502 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178530481 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187823547 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208820142 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170866867 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153135398 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181760025 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150763807 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120453075 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157618214 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197306234 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186186032 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185457698 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206494285 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191026183 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160409938 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173582771 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165085799 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.208432029 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179733925 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142230285 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195547672 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166848915 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118856377 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.148417071 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.12676792 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15964599 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129330162 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135331357 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201587033 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186046724 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177446427 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190991727 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134674939 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216809605 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122079833 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184188908 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170774592 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164435517 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.21103646 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190180242 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20154225 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138798618 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189530509 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118922795 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124047827 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.158908915 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158745495 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163501554 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133258134 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166123632 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190022104 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197034237 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145949807 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219403991 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189213024 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224790282 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119556523 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.157661773 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19381145 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164083403 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.208202058 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132094765 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186264266 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189274495 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165530389 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187930697 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193351419 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203372192 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192337794 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.190124388 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1284777 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174136063 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160285911 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163523583 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160281256 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170594207 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130676429 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149668252 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163328911 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137270712 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210351198 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167830263 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176062117 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183016067 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16954763 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150211937 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139358808 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201750599 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142273209 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103332101 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193900225 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221735109 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147684327 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180445328 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171327185 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156648233 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312834509 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212326874 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200186285 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134798122 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134744155 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196079008 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157831986 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186922802 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210593445 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141454654 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231550692 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167256905 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.168906794 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129376512 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173446961 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148897167 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137374872 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.177323621 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.186010122 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141447996 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213264588 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133948903 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194633537 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173669771 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.171400326 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148484502 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134841571 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249784558 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19359827 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168337729 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189942321 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188162904 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181547289 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121306887 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15399343 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130572719 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212288993 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126689446 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202039602 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.167493734 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209830751 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198317119 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159005815 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166754507 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124845907 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192343719 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147636267 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212791461 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133326295 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.16211694 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211237575 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.127985297 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127760679 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185820581 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269646078 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171872156 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16926986 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.133574801 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265562192 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152135826 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131052072 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186561374 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167584695 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.158445633 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180120332 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199127515 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138865971 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160063297 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16125258 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20531929 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18571294 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193231048 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198321454 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144255002 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186846707 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158866441 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199301746 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144366851 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.171305014 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156682576 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220599381 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179904271 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.156869727 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167233655 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194433169 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169998335 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20001496 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136273814 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207611765 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125328279 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191472114 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134830244 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148220257 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159617837 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192830737 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129029286 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200912263 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168284565 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157604064 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125518069 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171416107 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164048206 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1631217 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12808618 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209768978 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127966482 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204951224 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205103644 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154200797 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165880774 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170007172 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127419618 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135644987 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169695808 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128209615 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171687262 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203037882 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128507127 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202010784 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189791764 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161973764 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18191607 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140600442 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.352566309 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127368305 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215621545 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148909355 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223385226 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147844498 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202673525 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166138466 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176396842 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161202609 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173348382 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.218987254 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191552529 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163877106 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158567829 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140396559 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163494506 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132623177 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150444892 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195824939 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137440611 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.161623671 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164783245 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171277304 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145194241 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167512851 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199166032 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177430572 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184170107 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213604271 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135988578 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201942706 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203143258 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126522926 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189245618 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167886503 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171414453 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150473609 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131227356 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164106908 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236900624 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124315885 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157016935 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201318329 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16715498 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197604551 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132961635 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204244497 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139421972 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201919355 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124887117 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179390185 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169075249 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162438368 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125590276 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197338101 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157628148 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.190457211 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139374451 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174386046 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217248104 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12239727 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160085152 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268191986 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183005344 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220893614 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135445053 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134035912 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171934621 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156392845 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.1916045 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167976776 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.158270552 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12671991 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.170797864 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157318667 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.166324778 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167722183 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195115034 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159928574 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21009409 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133327213 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279914921 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140747266 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194299885 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11695872 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127294699 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165550221 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133918169 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140550855 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210153422 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239049573 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160871074 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.175543218 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133474996 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.153468486 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128367987 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161791167 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176289939 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190725714 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14574198 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101856297 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166156291 seconds)
  done (took 85.061806982 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16021109 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149448194 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165031778 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219087074 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192679854 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28657904 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226780706 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243808923 seconds)
  done (took 2.714510854 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117647902 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154722893 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140448438 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141213245 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107072429 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.440747932 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129991776 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.14434458 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160260196 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148450986 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132742017 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.529067825 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114393442 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.140640697 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120355028 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.131846094 seconds)
  done (took 3.919979093 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.625791452 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540756493 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.912451989 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.290847303 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.256574323 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.201572684 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.737568885 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.196341662 seconds)
  done (took 11.831623692 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152290431 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145676266 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.414094859 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.752883985 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.203082082 seconds)
  done (took 2.74809864 seconds)
done (took 129.182818468 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12239214 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121053104 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120195111 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150398854 seconds)
  done (took 1.580555455 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.175482585 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090247097 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092296123 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117210983 seconds)
  done (took 1.55179966 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.425517648 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089490539 seconds)
  done (took 1.618349349 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150593043 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132594129 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167558836 seconds)
  done (took 1.540022535 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13694576 seconds)
  done (took 1.217511954 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12349317 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12424531 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.22811571 seconds)
  done (took 1.55871312 seconds)
done (took 10.147942724 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118418165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.923574386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429603199 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130851668 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.70745524 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424380508 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.45522108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171550151 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17238453 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.134089256 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129637142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685846912 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.464029799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873024865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.420593055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.896666503 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692677751 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109316259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143679332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109895462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.433653039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133490757 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110062633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108666372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71566912 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417233604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106840728 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.915348886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107115774 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111153142 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423200049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108403238 seconds)
  done (took 20.954912125 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115412572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.166896018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143533267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110210272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111387559 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136269229 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119953411 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121586626 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200841301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107441402 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157647153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108122955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113342441 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135665566 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133833158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107956602 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138482518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110624832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116185182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136125458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131520209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106370164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137010284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110358717 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108462275 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15578115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109309156 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12090956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.134373109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114378331 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113082219 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.133867313 seconds)
  done (took 5.158108223 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155910086 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173731354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144845911 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146993119 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184908232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110223603 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220987182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147412049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200281137 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111678292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129643815 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134418237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148421435 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107921465 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162050285 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10832972 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.110776924 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137706835 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116934484 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109652904 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158539661 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108168384 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109672113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137842826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10854808 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130862178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136016482 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12197133 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13267619 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113812008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113419589 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108964152 seconds)
  done (took 5.429538596 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123287403 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123279738 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129721687 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.159576007 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118308241 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.120935016 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150371937 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.11788259 seconds)
  done (took 2.136261855 seconds)
done (took 34.762809941 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132814718 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127741297 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129838981 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15084197 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.184904827 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145708922 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12571135 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114948748 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150151603 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13062375 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107872707 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115517364 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156038132 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119374217 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.216735175 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123677471 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.220803168 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.18756101 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146731367 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124056553 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116529349 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.223081336 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120471744 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.11595967 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.220178152 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111376953 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.211006818 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118802762 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148471237 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110362416 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.216319046 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121474128 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115894842 seconds)
  done (took 5.940705436 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.206463522 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.148619458 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.119019503 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116276576 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118086613 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145517448 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.20763482 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.145764906 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117686031 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115406908 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115426563 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.218872826 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121989039 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.142477698 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120166627 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108084372 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.237183938 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118127828 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108192255 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120063905 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113096975 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.11614414 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.249751933 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112071021 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116451254 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.146503879 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120035152 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121331027 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.147433277 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120113031 seconds)
  done (took 5.314632482 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123953872 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129843921 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134790453 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214212331 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145907743 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.1581879 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137361176 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13161298 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169199215 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112332979 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125587817 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176415199 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128187915 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121482597 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143547942 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130080339 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133528527 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14139489 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119186827 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128583257 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.160949167 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130404627 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134329152 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148486321 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111029314 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119217499 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151010917 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127095621 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119758734 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.152333325 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114677591 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114579223 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.1137201 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.175547201 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114961788 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153369571 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138998081 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123156939 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.153232011 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145966277 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114731837 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.140681521 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138660064 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163475425 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.140108348 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125373651 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123010356 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.152797454 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111925754 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129465071 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.180918114 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112961946 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131964091 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.136926917 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110950516 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119437399 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111755647 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144109749 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126091803 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114132492 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.164690685 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120430261 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121582865 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.140736205 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123483281 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.109914519 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.109779509 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.144836297 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137348348 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118855208 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.176938169 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11189493 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122417584 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153283118 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123053009 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12280052 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.140046091 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123310521 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121437344 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.145850694 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125253996 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114073172 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1418358 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129268047 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.13314128 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.154190634 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124714525 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.123905446 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.142826124 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114968681 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12797478 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112638752 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.145627067 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124732401 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111679536 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.144082829 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126032797 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123721598 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.137760587 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137267787 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115273462 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.137915841 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137173124 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114385061 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116281999 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.15073422 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154086292 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.112145891 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152981113 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125516686 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110892434 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.14851637 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116829804 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110499401 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.15766565 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128276643 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119171843 seconds)
  done (took 16.682060347 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.315055341 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.271596982 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.213777459 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.242758494 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124535516 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.236512579 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.29871588 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.302801827 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111904588 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180583157 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164331188 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.27148448 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.111634561 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.172290404 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.303802058 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.357173269 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.169990943 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151277472 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177440784 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126562245 seconds)
  done (took 5.419585131 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133052763 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145220742 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164676056 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140417188 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12152423 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.15775629 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112351586 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133631962 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153181621 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122001381 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113517515 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158149102 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125961763 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.127589611 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155623978 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146401002 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119234054 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146503652 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135454002 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11618729 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130678392 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139764874 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120785775 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163943054 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131525784 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12371973 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.139301882 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117954952 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11858728 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149017052 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118835673 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132231673 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147928548 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107856615 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124230374 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.1259724 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.146997245 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115120464 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.11579644 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143790889 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128567785 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12460237 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.147658216 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097717533 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131476302 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108484329 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155769504 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125735232 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105907078 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.159657356 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127013877 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126836298 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118982033 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164482231 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119253459 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129094348 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.153268318 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126871489 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116335249 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139096824 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110607763 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115004437 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.149112455 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128142418 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124153749 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.161613618 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129965683 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111933863 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.145131312 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117551509 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115899225 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.154149321 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134406742 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12140009 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.14698428 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126210492 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120300965 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09320763 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.150113496 seconds)
  done (took 11.530975904 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138457109 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122715136 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130595618 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177870855 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125357922 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.116959333 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150709036 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13290174 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.127925932 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162444808 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128331779 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124390723 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164287377 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123171506 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122364807 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.157177583 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12800863 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150349222 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161126469 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140618585 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156767266 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118857977 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125061217 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.122546077 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171894588 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124080075 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166763762 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128228704 seconds)
  done (took 5.02203245 seconds)
done (took 51.003177211 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.287077552 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.442360737 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.224801327 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.218175083 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.241287297 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.239901036 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.24300009 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.233854362 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.580121677 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.196994993 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.223090479 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.220736404 seconds)
done (took 28.472993694 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.284663986 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.797190839 seconds)
    (2/2) benchmarking "String"...
    done (took 1.511409673 seconds)
  done (took 4.421693934 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.211861126 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.211576176 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.472054449 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.211961308 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.234094985 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.212452248 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.212529644 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.223040843 seconds)
  done (took 15.893411147 seconds)
done (took 25.924767472 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.253670922 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.393213788 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.455068941 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.217620401 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.217994927 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.221221999 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.215066373 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.238452345 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.224534959 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.222353297 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.624072388 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.474025248 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.225790445 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.579366599 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.219574743 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.213639186 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.228852391 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.440091119 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.218554933 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.248332868 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.190557268 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.202441547 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.223107538 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.211133015 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.219116103 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.230843108 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.273997781 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.213439057 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.401303353 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.23866915 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.245690452 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.216831591 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.272324003 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.217179403 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.213408766 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.220661009 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.403821421 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.223401145 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.196208927 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.250026668 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.413909856 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.235319674 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.216735186 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.214930262 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.224993016 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.264226029 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.209716753 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.326103231 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.241778039 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.228644797 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.235332865 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.582479877 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.217661109 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.231957711 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.229152796 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.443484234 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.234541081 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.276683989 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.244482295 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.230979387 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.219095051 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.216176275 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.245219303 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.232998274 seconds)
  done (took 144.528798197 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.217069096 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.222779195 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.224641158 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.239933894 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.223378696 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.223827589 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.216670153 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.217064667 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.222396308 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.252439415 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.22264568 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.217291147 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.223008766 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.171525025 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.228000365 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.242252278 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.224330016 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.222452096 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.228486629 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.21905531 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.223657311 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.223632091 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.233999947 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.218159701 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.265302655 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.297253725 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.245790644 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.254359936 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.234336464 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.21739693 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.268032066 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.227939576 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.826471634 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.093446355 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.227646128 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.238019423 seconds)
  done (took 80.874517299 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.218325969 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.217397279 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21727408 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.25131731 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.217649111 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783886458 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790820406 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.194566483 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.314230665 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.555263264 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.434535366 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.219397352 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309635074 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.232320482 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.219681649 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.235416231 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.245422492 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.222514227 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220727858 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786766026 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.23911536 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.416583299 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.394678953 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.235078208 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251730277 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.610055754 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.219993036 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251482532 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.55012731 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.268184389 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22055631 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.219823176 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.550006899 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.71601891 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332028804 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.221656887 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.252336907 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.220772091 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.221520685 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.500891719 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220682191 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.221687551 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.223224499 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.852857666 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.226825389 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.789471705 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.22697542 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.161285939 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.222905569 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.221103783 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220487816 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.168607967 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.227089186 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.892500149 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226132445 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.223402934 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.223430294 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.221582727 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222405494 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.254129834 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.21458945 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.319010539 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.222710349 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.225332582 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255647381 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.223027248 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.371553596 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.2226937 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.359352434 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.28246612 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320487515 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791754828 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.227646931 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316316202 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338175333 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223253526 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.22338641 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.224552438 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.221333821 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.334809698 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.224842423 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.894706162 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.398158381 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.239617133 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.555298094 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.32646762 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.224290788 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.538299206 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.229640413 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.223957061 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.909356503 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318171685 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.224642562 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.224615277 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.224146521 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.906300657 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793424749 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.448776044 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.231008375 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.752629509 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.230276215 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.075815727 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.777624713 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.871098631 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.230826585 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334747143 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.400718091 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.24152116 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.224556268 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.557919887 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.233719787 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.2821017 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.22507139 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.62492718 seconds)
  done (took 376.270002818 seconds)
done (took 602.78841326 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.116545472 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.067565634 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.209489098 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.079017004 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.062383036 seconds)
  done (took 11.660187718 seconds)
done (took 12.784749499 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.416118471 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.418304085 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286348352 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.419146585 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257805055 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.432107375 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399208342 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.245150039 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.336768439 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.312102359 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.334935419 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.280604124 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.26008381 seconds)
  done (took 18.523080007 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.504711899 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.236762711 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294698622 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.484008336 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269496518 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.517170347 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.569024993 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.236740502 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385558732 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270481455 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248840182 seconds)
  done (took 18.143530188 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496044455 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.236573062 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294204255 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.485789119 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272303712 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505620711 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.544095359 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.23643768 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.388098173 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249903759 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247537716 seconds)
  done (took 18.083055169 seconds)
done (took 55.876991984 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.266326201 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.326197832 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.261146125 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.246006753 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.243996708 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.244576309 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.248515791 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.245171765 seconds)
  done (took 11.208483569 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.243189708 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.243812732 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.243843566 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.242923814 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.244912805 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.246817858 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.244505946 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.245457866 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.246019361 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.245436167 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.243187074 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.243934532 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.246134751 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.247981957 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.244525622 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.24572017 seconds)
  done (took 21.045912042 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.24798874 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.24485265 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.246259194 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.245106285 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.246329634 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.245475105 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.247239565 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.244655183 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.246152776 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.244096002 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.246556355 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.244975371 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.245874725 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.246308577 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.245515594 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.248218599 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.245901878 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.247181781 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.248949705 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.246862359 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.249089933 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.247962577 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.245739766 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.246374539 seconds)
  done (took 31.043161805 seconds)
done (took 64.424760235 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.237298032 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.242266666 seconds)
  done (took 5.609315039 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.304131677 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.303854876 seconds)
  done (took 3.737620163 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.247187566 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.246770848 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.24903429 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.249237576 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.246142861 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.247320433 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.248968043 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.246638642 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.247001092 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.246595848 seconds)
  done (took 13.605502136 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.248731701 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.2483093 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.24733869 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.247271177 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.247501909 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.247537784 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.246333335 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.247841075 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.249991177 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.247066476 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.248595624 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.247839499 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.248377887 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.249426783 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.249119848 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.249016693 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.248719721 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.248431494 seconds)
  done (took 23.59630275 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.260901719 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.267032986 seconds)
  done (took 3.660634761 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.376971835 seconds)
    (2/7) benchmarking "second"...
    done (took 1.289302588 seconds)
    (3/7) benchmarking "month"...
    done (took 1.353601154 seconds)
    (4/7) benchmarking "year"...
    done (took 1.345091151 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.289801992 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.269566086 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.292248963 seconds)
  done (took 10.349354136 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.250816635 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.472380558 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.599933835 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.847971029 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.251219396 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.253863227 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.092704464 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.254620756 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.256523281 seconds)
  done (took 14.412206432 seconds)
done (took 76.100597307 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.245910531 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.278649619 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.26793136 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.256481424 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.587780162 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.249241868 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.238929782 seconds)
done (took 16.257380049 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.219059594 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.228320727 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.219127895 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.258365647 seconds)
  done (took 10.057604308 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.241439706 seconds)
    (2/2) benchmarking "read"...
    done (took 1.565860106 seconds)
  done (took 4.940744467 seconds)
done (took 16.130858109 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251249149 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.250679859 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.251948992 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.250583879 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.251424384 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.252200079 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.250812374 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.251945564 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.251918747 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.251543191 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.25305917 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.250918762 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251862997 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253199464 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251704792 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251517381 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.251004984 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25141796 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252509398 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.252594474 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252781398 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.252818175 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.253574816 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.252417407 seconds)
  done (took 31.179589987 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.252207661 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.253258536 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.25296297 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.253323648 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.252300309 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.251967639 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.253082177 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.253790123 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.252638568 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.253705826 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253338719 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.252863721 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.253593655 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.255137255 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252826018 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.253132364 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.252784615 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252913678 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252905447 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.252886312 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.2527415 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251746616 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.25372465 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252975362 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.25291483 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2535638 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.253296086 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.252544825 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25374102 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.253156958 seconds)
  done (took 38.72735387 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.254983635 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.254217981 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.252789221 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.253237202 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.253997009 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.253199189 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.253157457 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.253213244 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.253614724 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.255102659 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.254451222 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.2536849 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.254140791 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.25262069 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.254399949 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.25439981 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.254906313 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.253443254 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.253978007 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.255092399 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.254618946 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.254587507 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.255274003 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.253245919 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.254060396 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.254230219 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.255425154 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.2564234 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.254646041 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.255133548 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.255183298 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.254795934 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.255548907 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.254244091 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.255303795 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.254268397 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.256878114 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.254466987 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.254439795 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.25424348 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.252556794 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.253975488 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.254729369 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.254370339 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.257008842 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.25390005 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.253123464 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.253515636 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.253913121 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.253849676 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.25388623 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.254455504 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.253556775 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.253797211 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.253425286 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.253511036 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.253871845 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.255386867 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.254410314 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.254481953 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.25439366 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.253450703 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.253249407 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.254469567 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.255331993 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.254854508 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.253969711 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.255000433 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.253533885 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.254842004 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.254130945 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.254252529 seconds)
  done (took 91.447791442 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.254002182 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.255152216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.254018675 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.252434938 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254191708 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253155666 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.2553789 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253017115 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252389508 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.254911762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253531573 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.257745067 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252716124 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.254992682 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253726232 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.254191106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25374941 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254068343 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.25639893 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.253766903 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253943703 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.255302313 seconds)
  done (took 28.729558869 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254111169 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25480928 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.252608618 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254041518 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258549345 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255996794 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.253365218 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254373991 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253702365 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253241358 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252959271 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252472288 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.257423832 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253358215 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253425191 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254803742 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254478764 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.255742063 seconds)
  done (took 23.715701127 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.25392073 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.254296907 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.253088207 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.252926788 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.253842051 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252977944 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25471778 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.254809588 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.253693866 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.254439813 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.252779131 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253104916 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.253202647 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252885486 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253827295 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25347286 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.255115033 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253498504 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254899901 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253673582 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254600829 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254834092 seconds)
  done (took 28.72009765 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254199636 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255496324 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.255930273 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253786081 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.253544436 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.253955732 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.254035655 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.254777485 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.255127738 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.254213521 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25424557 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.253909635 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.25631306 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254253719 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.254632596 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255040946 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.254873994 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254914369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254370138 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.255809919 seconds)
  done (took 26.229063433 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255093592 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255171957 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.256726853 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256730238 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256444669 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.256559395 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256791028 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.255689339 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257075468 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25733391 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256687818 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.256418937 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262976892 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257034818 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257123964 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257013349 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257434741 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258921038 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255719832 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255711107 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256917061 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257213868 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257275305 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255665903 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257102173 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257401927 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258467878 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256232675 seconds)
  done (took 36.331422367 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258539536 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255979429 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.256773067 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.256241218 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.258784839 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.256835569 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.257561346 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.257914432 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257204423 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.256076606 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.25857943 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.256141295 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259613711 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.257857456 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257567094 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.258371422 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255398271 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.257859003 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257968537 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257322548 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.257535773 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257689814 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.258442567 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259089718 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257015107 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.258643191 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258680706 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257861696 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260071414 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256883135 seconds)
  done (took 38.869442781 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.27582948 seconds)
    (2/2) benchmarking "in"...
    done (took 1.277513476 seconds)
  done (took 3.692956682 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.258810842 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25872097 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.258443443 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.259200929 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.261221931 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.258529963 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.258956834 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259527754 seconds)
  done (took 11.212762884 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250549711 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.260845658 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.260474761 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.259878524 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.261693785 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251663125 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259390077 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.264096325 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252943147 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253547347 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254111465 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.252469797 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.255492689 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255378359 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.253530345 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256651462 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.264698723 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.261871967 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.261298296 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.260580759 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261354466 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255494986 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258267717 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.265689937 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.25279409 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.260974352 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.261984462 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.26438996 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255213676 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259866647 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.257085886 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.264456331 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.263176021 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.262224021 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.260326295 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.261069412 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262623771 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261114882 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.26239005 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26708125 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261490858 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.262266843 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256765328 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.258192158 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262289388 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.267598706 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.263503336 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.263814075 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.25565841 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258832118 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.263872554 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255932527 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.264562292 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260233033 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.262060419 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267129966 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.26927716 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25843547 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.257832328 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.264323691 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.273647496 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.26491027 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262093596 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.267935374 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260888793 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263690449 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26879 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.270044078 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.265189274 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.263221166 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.264807144 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272647889 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.26897978 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.269088901 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263676117 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.264083567 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259324729 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267297435 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265034047 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.267921622 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.268666224 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264723319 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260466047 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262441449 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.259701557 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.268164676 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.264372943 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.264057632 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.256473496 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267510354 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.272228212 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.263132895 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.258046102 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.259279403 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.261132807 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.266290688 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.255776968 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261045149 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.268392645 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.263733993 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26517567 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257496695 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.263081082 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268842613 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265156442 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.266079468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.272031395 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257536536 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.272036158 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.273264522 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26467574 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.257478584 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.261872747 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.268202114 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259245629 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.263892772 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.270106522 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.260871276 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.272222575 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.265147615 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261310398 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.268235553 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.270589874 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.266596116 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.259553894 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.269144382 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266594689 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262474579 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.271033695 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.26514479 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.265096891 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.262134369 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.271956303 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.259286973 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269661197 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259444273 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.268498163 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265494273 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.264975541 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.262434902 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.267101705 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262470814 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.265534274 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.269740366 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.271498315 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262709067 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.273236821 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.267446373 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.264663716 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.267706225 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.270304929 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267720935 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.261455333 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.270616192 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.259561293 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269665059 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.260115928 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.271200211 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266659805 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265965173 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267202511 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.258598557 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261884305 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.271894403 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.264833952 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.265812695 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.26968882 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.267246387 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.268372053 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.259988777 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.270029122 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.258339268 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.262978766 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.269219682 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.268782038 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266541257 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266353246 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274888414 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267639734 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267670452 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.260203952 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.266305018 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.273107895 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.267739537 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.275689162 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268081142 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.267439095 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.259687071 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.26265951 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268880319 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.261085145 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.269770543 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272285041 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273180842 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.263731179 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269310591 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257739336 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.268361922 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267403716 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.275326033 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.267210249 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267612042 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260833594 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27047786 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.261968949 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.270002964 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258899368 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269508581 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.269487212 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.266520583 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268122249 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.260197438 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26429781 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.270310208 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26758206 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26726287 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.261899145 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.270871424 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.26181267 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26330106 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.271332612 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268305301 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.267860922 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.276083977 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265368628 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273280996 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270270857 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.263003075 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270551217 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26716764 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.26852454 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273792288 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271403291 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.264710546 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273691462 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.270432429 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.263523779 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.270000433 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.278794117 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.269586446 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.265120964 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.270994396 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.270088752 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270644691 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.270891395 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262423335 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27335044 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.271188127 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.277177163 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.261680881 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.273758994 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.264777142 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.273774153 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.265903226 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.271478378 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268840204 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272819299 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278738583 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.270079387 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263903397 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.274922612 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.270153574 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.270424321 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264183962 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.273216895 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.272617345 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.273013729 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.267762225 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268873187 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.272716283 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.263556176 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272561871 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.264975479 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280257217 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.286811792 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271875595 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.274676675 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.275285405 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271497011 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.273961201 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.265340838 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265991237 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269532154 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.267079474 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.265844493 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.274875948 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265522799 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.274325052 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269409492 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.273422521 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273854118 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271938841 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263556915 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.275763539 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.2714252 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.272374616 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26538344 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.273132119 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.267256363 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273659569 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.272985557 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.268583282 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27722782 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277273661 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.269131009 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.26954435 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.267670793 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.266972996 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.270983779 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.279249316 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.266806961 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.276495464 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.267433746 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.271573685 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.269762747 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.279140587 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.284043504 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.267084305 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.278072306 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273469732 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265605466 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.267899209 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.275747699 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276707921 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.284765769 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.266708651 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.276889126 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274150343 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.274641327 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.274188208 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.274261971 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273628556 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.27483133 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278542145 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278096051 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269363055 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277678098 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.28420319 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.274951229 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.273890941 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.267373929 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275659686 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.285168731 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.269382803 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.272411127 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.270717518 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.275698673 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.274190496 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.274569915 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.276608601 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.275269346 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278272388 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.280478651 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.277996245 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.275861296 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.279989321 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286803632 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279408862 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.288785189 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.271233586 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.280879599 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.276215846 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.27160265 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.272787473 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.273078871 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279894586 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.26915943 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.281213572 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.276038086 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.272385252 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.277181822 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.283180712 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267495518 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275512298 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284295183 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269958247 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278061462 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.276511954 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268705714 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.279091928 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275923333 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.269622936 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.271697856 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273696525 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.280193562 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.27022569 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.280099568 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271920606 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281913837 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.277520768 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.277543905 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.277290659 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.278061604 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.269450449 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.27847075 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276833124 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.286201273 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.271348847 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275902935 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.273757724 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.28373522 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.287730833 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.273296577 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281659435 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.277050386 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.269976623 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.275510921 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.284334624 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272676855 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281162112 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.271349903 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.273311229 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.272933335 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.277814535 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.281536294 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280809012 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.271179233 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271968583 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.279960553 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.277166608 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280011227 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.274171838 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.284847551 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270886579 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.272315388 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.280086175 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.271389485 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283598603 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272770833 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.274423735 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275607322 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.281714412 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.278229295 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279498628 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.272032209 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272405695 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.28407867 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282014142 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.274746136 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.273036914 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.280520485 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.272285595 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274814038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.274891846 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.272720861 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273654708 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282713059 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.273857692 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.274157418 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.275026545 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280605787 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.283711507 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.281514609 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.273272545 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286745097 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286977185 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286153403 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.273696134 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.27457214 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.27692655 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281282814 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.282165041 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.272822829 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288273129 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.285003257 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285315266 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278128363 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.281479022 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271661231 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282973043 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280646084 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.277393339 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.285959728 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.276235591 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286910604 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280912512 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.280581781 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273055685 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274377072 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.27593577 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27607173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.282625028 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279372557 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283669007 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.278375979 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286301449 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281355709 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.281244782 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.279851456 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.270916317 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281666133 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.27255313 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.281998741 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.281024888 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274169163 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.283365631 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280808271 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273282345 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.277056393 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.28459189 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.282266603 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.273616658 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.279585288 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.285395822 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291790061 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.281244218 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273829697 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.278871399 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.284612212 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280678869 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.281612512 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.274279815 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287866214 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293832405 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274438327 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.278540171 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285538006 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.291982767 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.280369198 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.279760848 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.277837602 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.280624379 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28592059 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.281534178 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286498721 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.286931189 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276162339 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.284825583 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277143028 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.276132489 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281593807 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.292293823 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.283083583 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.276424918 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.288028384 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29296903 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280530106 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.292728765 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.288584827 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.282207557 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288825261 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.274949496 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.283864987 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278731631 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.286219413 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.283720883 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28332177 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.283577416 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.274687648 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.28446941 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.289316995 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.293223287 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28291564 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.275202954 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.278765553 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285173038 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.283608053 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.284279908 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.283278997 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.285277169 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.282287004 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277351116 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293886361 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.298218174 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288096556 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.283824806 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.283697567 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.285037209 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287768759 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278819058 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.28704767 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.283746506 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.283072726 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.279249391 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291049491 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.285419093 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27726949 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280010488 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279880491 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286203903 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.291325876 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301824257 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.286771943 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.285373899 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.28548747 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.283400517 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27873173 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285874922 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284102196 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278240974 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27970295 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285989471 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.28415694 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.2843643 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27785648 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.287588259 seconds)
  done (took 759.513603382 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.283314418 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283245446 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28367698 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.284089303 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.285498156 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286283576 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282697451 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283711058 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.283399163 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.284555147 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285184408 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284553226 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284092949 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286291086 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.284082724 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.284786326 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.285625756 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286856349 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285611451 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286249575 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28626076 seconds)
  done (took 28.13910563 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284915612 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.284682855 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.285372535 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.286098221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28622285 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285077648 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.285869318 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285015027 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285204598 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286086293 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28648477 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285682136 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.285703663 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283581156 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28622051 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284752456 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.283118625 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28427723 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285681624 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2846916 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287079436 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.285469013 seconds)
  done (took 29.436198224 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.286032166 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285551742 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.279223325 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.287112929 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.285520593 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.285177385 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.286904786 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.286917816 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285711103 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.278594953 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.280339011 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.279934338 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.28235267 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.28995933 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.281788178 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.2922278 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285954633 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.285774118 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286772934 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.285956209 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289294187 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.297269342 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.288149025 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.275883305 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.286824437 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.286785314 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.286112766 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285840875 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.278668862 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.287429174 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.288208198 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.279509011 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.288830309 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.287840253 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.281142701 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.288352022 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.287585044 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.287591472 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.286770132 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.282463375 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.293603256 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.28672782 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289882499 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.297977097 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.288475107 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.281378366 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.292476894 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.286508822 seconds)
  done (took 62.895907587 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.286467147 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.286787333 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.287523851 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287731586 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.287642045 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.286659336 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.285977222 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288258931 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.28712245 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287069943 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.286916937 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.285701334 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286895954 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.287638424 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.285880101 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287830043 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287641655 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287673904 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287468461 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287243473 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.287964393 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.288495119 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.288486893 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.289487731 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287826721 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289284566 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286525234 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.286760542 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.289000533 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286910767 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.287426884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285514181 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.287671782 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.28788403 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289380355 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289831142 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.287705544 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28839326 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289401614 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.287687264 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.287295985 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289037626 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.288279071 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.291189714 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288873903 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.288098851 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287693185 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.28830368 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.287996192 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.289944772 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.288916976 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.289357609 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28824642 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.28817827 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287942699 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.288748083 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.288807779 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.287085583 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.288250549 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290368725 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.286998023 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289124627 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.289663979 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.289254512 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.288288628 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289505384 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.289614952 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290335479 seconds)
  done (took 88.751573645 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290436481 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288929519 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290921373 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290302707 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290514889 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.289801515 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290572537 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291122977 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291476524 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289575308 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29054802 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290946457 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.290703332 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29146226 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292235844 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291087676 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290815914 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291744361 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291090804 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289921833 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291666698 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293097149 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291658053 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.290877505 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.292568582 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292220401 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291360127 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291719206 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290838713 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291846252 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292278372 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.291801743 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291406741 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291519425 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.292053392 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.29266836 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292182455 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292868114 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.292979416 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291986774 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292023124 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293022223 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292373496 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.291687941 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292179324 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293556367 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292820234 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293426955 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292780858 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291455621 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.293153449 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292735557 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292629857 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.293451518 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293604019 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293066391 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292515861 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293857085 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293553451 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293864417 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293563706 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.292148047 seconds)
  done (took 81.260518102 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293888737 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292863237 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.293254251 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.292712813 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293922562 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293003509 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293646538 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292993182 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2945105 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.293919003 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295531569 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294164938 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296430802 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2940235 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293768576 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295581237 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294704379 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294099842 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294574632 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295862353 seconds)
  done (took 27.048634669 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.29327269 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295029242 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.294857059 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295928311 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.295689417 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294648658 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.296060127 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296305263 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29408102 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296809504 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296434154 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295605851 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293979738 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294838885 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297496512 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295394183 seconds)
  done (took 21.892345465 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.296204143 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.297303586 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.297658717 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295416649 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.295348684 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.295716676 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.295787324 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294928346 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.29572928 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297445803 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.296706885 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.295733521 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.294971242 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296954168 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295726061 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.296309391 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.295600455 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.296066875 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296308179 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296409949 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.297551163 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.296223627 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.297080084 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296511439 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.296584061 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.296371696 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.296109506 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.298299818 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.298762129 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297028137 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.297218373 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297354145 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.297184305 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.29824996 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.297503184 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.29741132 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.298463527 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.298999421 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.299451266 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.299025113 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296899715 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.299152307 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.298517461 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.29914798 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.298764498 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.29778922 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.29805243 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.299191575 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.298093182 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298838174 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.298252857 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.29846591 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.298484599 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.299216445 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.299640481 seconds)
  done (took 72.521729064 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298884596 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299584946 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.299854444 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.299168982 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300515946 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298048587 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.299907148 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300837368 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299638649 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.298735508 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30033597 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30139362 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2998037 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299251479 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299928977 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300217951 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299771337 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29881861 seconds)
  done (took 24.56511523 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.302180841 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29967511 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.300138281 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.300428331 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.300295635 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300968148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300255047 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301922521 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300214335 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.300694412 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301127488 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.30064608 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300510161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.299729226 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300431207 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302872996 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300106229 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300641559 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300512602 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300588087 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.301497087 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299630752 seconds)
  done (took 29.786502081 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.292151476 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.291580175 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.291320582 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.303768522 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.30156772 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.292167672 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.291691596 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.292977665 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.308390524 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.313681257 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.310944424 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.297846629 seconds)
  done (took 16.759033368 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302222349 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301930355 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301764154 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302394013 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299860478 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301306099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301894361 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301151321 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301901422 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301569189 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304397048 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301457771 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302812871 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303826784 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301333517 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302433173 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302090813 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301805155 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303026778 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301499982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302436375 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303079819 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303205593 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303896924 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302913487 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303694662 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303132889 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304670329 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303807003 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303459378 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30381683 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304121125 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304269533 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303098263 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303911181 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30423296 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303506357 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303589267 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303304698 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303696631 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303461563 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304534292 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303763164 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304718578 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304835434 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304195432 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304142032 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303620351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305699594 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305372396 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305704399 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304733623 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304434717 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306465554 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302450209 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305878609 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303475665 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304903795 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306079956 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304231559 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305170373 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305608712 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303700935 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30553358 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305746504 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30696983 seconds)
  done (took 87.213182851 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30612444 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305661469 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305695497 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305472458 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3066846 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304893991 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306342724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305938516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306138678 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304611081 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305497321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306498607 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305729638 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305640096 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30618552 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306288975 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307496349 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306572538 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307351176 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308002511 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307988734 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305951572 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306130722 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305833856 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309148092 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306387688 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306298669 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306717857 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307959777 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307105624 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307732379 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306771287 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307144707 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307401876 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308360747 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3076346 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309115784 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306512245 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306635686 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309524744 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308660768 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309255108 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308901229 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30915085 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309331359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310005508 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308334044 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310882595 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308424068 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308217986 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308409249 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310012693 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310244166 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310222339 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307922782 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309057536 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310567935 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308595122 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30885986 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31024061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311354672 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310135053 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309601221 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308991964 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308753976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308999981 seconds)
  done (took 87.489559649 seconds)
done (took 1777.262079237 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.464099023 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.42136454 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299090546 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.304202625 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.300369833 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.298427098 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.314358442 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300961651 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.300702643 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.299257435 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301901863 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.490486057 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.333306858 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.299516726 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.299106511 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.396391751 seconds)
  done (took 26.603317584 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.32721514 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30821136 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.409157284 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.306413987 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.329099862 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.479839183 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.358499128 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.306202571 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.455226779 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.322523762 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.301004953 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.325103085 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.306079358 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.29969837 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.323155609 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.477140769 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.544399046 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.302148203 seconds)
  done (took 28.660871635 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.693884465 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.308312144 seconds)
  done (took 5.183445719 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.324773464 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.307538503 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308190235 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.306093353 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.297797545 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.29700425 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.307268798 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.305475914 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.306993181 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.423469636 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.316509797 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.320787273 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.321353531 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.309150068 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.313853991 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.349227658 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.471248662 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317146637 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.313745811 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314197775 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.306186331 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.400224255 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.345450329 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.315266572 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.42035242 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.301108823 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.33148309 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315720536 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.421824962 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318739746 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306701365 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.307807588 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.308195516 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.196600223 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.820363977 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.309126229 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33077262 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.317670113 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.315579204 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.462087839 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.309447306 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.317826223 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.311444301 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.818950927 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.406654904 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.41765948 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.316511645 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.308763193 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.309527272 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36998642 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.310120455 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312395797 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.365293648 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.087728965 seconds)
  done (took 83.829213145 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.35838795 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.301767894 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.48329037 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.31844855 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.303988664 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.312828091 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.309514884 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.554602723 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.313746106 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.304432704 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.607548227 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.892753935 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319444385 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.367857241 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.338639202 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.356604578 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.300175055 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.297825603 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.298133183 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.30020733 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836843321 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293680828 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.289408833 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.360588233 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.328637893 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788138868 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.283454471 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.296952625 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.282347233 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.285458444 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835889025 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.289060097 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.325349472 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.2784153 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.546581477 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.630442123 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.591062623 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.273893619 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.29254241 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.27437351 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.291478153 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.76320879 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607521075 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.267063265 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.267337965 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761186965 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.264953081 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.265318979 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.267886006 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526635427 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.263969101 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.261661332 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.270412578 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.26608477 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.261774208 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.325457391 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.334431884 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.77181502 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.261681291 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.258024758 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.302067736 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.261267103 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.2589204 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.260561842 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.254403592 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.597430692 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.482049872 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.254678579 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.593273484 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.799193697 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.262187594 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.877131312 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.251877983 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.263855643 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.283729988 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.25931223 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.252232266 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755796197 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.283437628 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.251904356 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.572912249 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.256784923 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.541957431 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.268002835 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.253865594 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815056588 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.271082507 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.301545488 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.249834241 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.25094668 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.250831566 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.254913008 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.523097121 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.280930573 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.247557391 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.24804806 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.273564446 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.2443788 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.258167235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.24343759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867030956 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.24672412 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.254411813 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.242244465 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.241443562 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.245266457 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.24519794 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.242880007 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.521240512 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.241919387 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.250952225 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.242553888 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.242208899 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.245986921 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.316805909 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.243465789 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.523863968 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.244029483 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.241819032 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.247416685 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.241966827 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.246702199 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.243197049 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.256617871 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.228792314 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.55979333 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.258644988 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.256966305 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.242796455 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.253310552 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.242485676 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.251414912 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.298007646 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.246599533 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.017678149 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.282046707 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.290126364 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.243233293 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.25655203 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.248046584 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.251794107 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.245221691 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.542569652 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.526726766 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.468614646 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.248711778 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.246119493 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.033136864 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.281475075 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.428918386 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.261680449 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.247304937 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524306073 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.463724905 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.247546854 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.248959189 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.246687392 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52182551 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.249324268 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.563260101 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.833459269 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.248337653 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.258800959 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015353459 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.052033045 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.254100828 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.25129176 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.532429746 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.263372954 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.247518387 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.248484969 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.248355896 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.248023325 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.25407537 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.258045108 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.248205524 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.247494745 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.589801895 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.442451892 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.26425899 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.249315401 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754295325 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.270046769 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248081962 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.265706239 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.249363529 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.249030685 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.315102531 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.252205522 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.284244961 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.249683662 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.250857172 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.778853845 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.249649587 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.253278442 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.439236102 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963076474 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.248240357 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.248516172 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.241875344 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.304351982 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.779724043 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.263796795 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.521948749 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.239768205 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.279782854 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.238620561 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.249996437 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781097545 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.253406602 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.239618876 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952896201 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.23863539 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.671473603 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.23890688 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.241579238 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.864393297 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.237790028 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.240133177 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.239861612 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.245297454 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556334078 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.241152018 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.239506349 seconds)
  done (took 480.77365407 seconds)
done (took 626.229574297 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.237081876 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.245291179 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.246023747 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.245046638 seconds)
  done (took 10.106062706 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.255962131 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.245451036 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.253513465 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.244541617 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.256154422 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.24626321 seconds)
  done (took 8.637542515 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.239006559 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.246596121 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.24494597 seconds)
  done (took 7.864320143 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.432695685 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.27157383 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.572812042 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.24695913 seconds)
  done (took 8.66104518 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.259173863 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.255858331 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.255750156 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.258086566 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.258251487 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.258097143 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.258965007 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.258636336 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.258198203 seconds)
  done (took 12.457033792 seconds)
done (took 48.858887134 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.472405934 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.246959972 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.372537105 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.308208675 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.391688974 seconds)
    (6/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.363648308 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.279980393 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.344816456 seconds)
    (9/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.279225267 seconds)
    (10/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.456396602 seconds)
    (11/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.577036636 seconds)
    (12/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.217845203 seconds)
    (13/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.415099061 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.442486871 seconds)
    (15/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.340935709 seconds)
    (16/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.396071501 seconds)
    (17/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.335627443 seconds)
    (18/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.416033446 seconds)
    (19/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.244373262 seconds)
    (20/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.32819338 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.324200767 seconds)
    (22/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.445557606 seconds)
    (23/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.347449304 seconds)
    (24/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.476542819 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.335361719 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.242216249 seconds)
    (27/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.25600377 seconds)
    (28/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.333603065 seconds)
    (29/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.220483847 seconds)
    (30/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.398484571 seconds)
    (31/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.32645915 seconds)
    (32/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.45980991 seconds)
    (33/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.515614755 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.348649308 seconds)
    (35/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.353691552 seconds)
    (36/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.221042924 seconds)
    (37/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.244716688 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.370340129 seconds)
    (39/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.243400528 seconds)
    (40/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.249250944 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.322157622 seconds)
    (42/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.3155759 seconds)
    (43/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.28812889 seconds)
    (44/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.225504501 seconds)
    (45/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.239115773 seconds)
    (46/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.427267917 seconds)
    (47/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.398690353 seconds)
    (48/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.256548403 seconds)
    (49/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.410266695 seconds)
    (50/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.317555569 seconds)
    (51/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.306785584 seconds)
    (52/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.276390578 seconds)
    (53/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.449841031 seconds)
    (54/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.645631797 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.433219302 seconds)
    (56/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.24551623 seconds)
    (57/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.229696162 seconds)
    (58/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.361233312 seconds)
    (59/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.4014166 seconds)
    (60/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.549861576 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.403450168 seconds)
    (62/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.405473812 seconds)
    (63/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.264709311 seconds)
    (64/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.540893509 seconds)
    (65/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.359855055 seconds)
    (66/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.228682612 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.402754883 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.268187999 seconds)
    (69/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.282332646 seconds)
    (70/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.419358957 seconds)
    (71/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.226702576 seconds)
    (72/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.233097211 seconds)
    (73/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.311598264 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.350372162 seconds)
    (75/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.292667887 seconds)
    (76/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.24245698 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.405885816 seconds)
    (78/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.277678056 seconds)
    (79/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.282646882 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.395518379 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.346214764 seconds)
    (82/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.227436179 seconds)
    (83/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.227365858 seconds)
    (84/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.283071628 seconds)
    (85/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.460476493 seconds)
    (86/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.350425987 seconds)
    (87/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.254469619 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.387447633 seconds)
    (89/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.375820393 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.335360843 seconds)
    (91/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.426420729 seconds)
    (92/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.359032553 seconds)
    (93/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.492535225 seconds)
    (94/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.338868531 seconds)
    (95/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.540402418 seconds)
    (96/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.484390083 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.358277864 seconds)
    (98/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.228675147 seconds)
    (99/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.484297616 seconds)
    (100/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.289055769 seconds)
    (101/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.412109828 seconds)
    (102/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.377428455 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.369020161 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.285918281 seconds)
    (105/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.285555409 seconds)
    (106/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.394626201 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.32657336 seconds)
    (108/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.229267853 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.489853365 seconds)
    (110/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.454501496 seconds)
    (111/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.58795032 seconds)
    (112/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.236286918 seconds)
    (113/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.261427451 seconds)
    (114/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.246256719 seconds)
    (115/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.339326564 seconds)
    (116/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.478232649 seconds)
    (117/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.228943115 seconds)
    (118/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.245688339 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.253705806 seconds)
    (120/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.344579078 seconds)
    (121/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.553488054 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.243559397 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.296212385 seconds)
    (124/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.481924225 seconds)
    (125/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.279999524 seconds)
    (126/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.231614229 seconds)
    (127/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.34014427 seconds)
    (128/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.648362351 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.501610807 seconds)
    (130/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.289594536 seconds)
    (131/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.333334828 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.532787401 seconds)
    (133/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.474387055 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.38692546 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.344549941 seconds)
    (136/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.404710385 seconds)
    (137/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.252575176 seconds)
    (138/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.322055707 seconds)
    (139/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.354670578 seconds)
    (140/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.439164209 seconds)
    (141/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.32420604 seconds)
    (142/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.349939248 seconds)
    (143/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.331639511 seconds)
    (144/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.323767478 seconds)
    (145/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.231737094 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.468673977 seconds)
    (147/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.334998881 seconds)
    (148/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.231330272 seconds)
    (149/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.486860543 seconds)
    (150/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.24477196 seconds)
    (151/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.348290923 seconds)
    (152/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.350930569 seconds)
    (153/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.239794727 seconds)
    (154/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.31510095 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.432796838 seconds)
    (156/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.485471448 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.32056519 seconds)
    (158/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.279359457 seconds)
    (159/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.251189314 seconds)
    (160/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.322636017 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.293395216 seconds)
    (162/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.286598856 seconds)
    (163/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.283475591 seconds)
    (164/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.342195957 seconds)
    (165/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.257251246 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.372420879 seconds)
    (167/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.368280065 seconds)
    (168/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.379019136 seconds)
    (169/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.234047158 seconds)
    (170/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.373113466 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.399054394 seconds)
    (172/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.323043557 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.360656918 seconds)
    (174/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.404776415 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.407188988 seconds)
    (176/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.36806446 seconds)
    (177/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.298040155 seconds)
    (178/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.235849248 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.355175496 seconds)
    (180/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.489226533 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.415262259 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.457590376 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.397571214 seconds)
    (184/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.278959013 seconds)
    (185/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.337543994 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.370157901 seconds)
    (187/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.337618759 seconds)
    (188/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.232815424 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.240667985 seconds)
    (190/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.328069403 seconds)
    (191/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.289654255 seconds)
    (192/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.459786888 seconds)
  done (took 308.243798107 seconds)
done (took 309.379720885 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286382047 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.361554412 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.26545835 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.265586724 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.267638143 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.250101101 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.294318064 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.268340667 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.280688668 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.281688175 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.258088125 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.283088658 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.281358649 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.276328379 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.29928563 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.267081007 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.266147186 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.277276624 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.282407848 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.284097973 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268850564 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268513646 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.295488931 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.267431963 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27599457 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.275732243 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.274044669 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.259682423 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.277495587 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.281549327 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.26069313 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.2738304 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.285234675 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.280113978 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.269270255 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.278309908 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.267195357 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.361077219 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.289667478 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.278457816 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.276044328 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.284522038 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.273219815 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.27378414 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.280344794 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.297218034 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276406636 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.285575142 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.266680987 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.25592377 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293784691 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.282198526 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.277223271 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.251903646 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.280066443 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.290528786 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.279400466 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.289520467 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.276491536 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.26995627 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.30328421 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.291682935 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.281805362 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.278167935 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.277102926 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.286049685 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.280782214 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.286488586 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.277837464 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.272069688 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.271237818 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.278138737 seconds)
done (took 101.284649522 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.393748036 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.266819881 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.425577144 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.277211815 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.434042424 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.390506588 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.277307189 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.279436586 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.278069694 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.073719924 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.2784351 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.277850003 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.267681537 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.279142748 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.388491811 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.278942858 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.278387361 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.978234216 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.277712315 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.406323067 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.270288793 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.28049681 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.281112568 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.073699251 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.268074164 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.264043347 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.40626346 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.278942231 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.974744979 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.262272118 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.264890634 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.973440887 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.405721905 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.297678893 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.288211094 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.289186352 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.435880561 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.282708573 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.396090396 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.395006239 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.427950401 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.308914823 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.264489609 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.269783885 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.282325651 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.280994741 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.278987338 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.308366215 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.270006786 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.280986396 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.973695587 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.290458289 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.288494203 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.280134281 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.280855702 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.300838556 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.280609505 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.281369667 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.408718829 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.281208138 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.398631136 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.0749175 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.079940444 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.280792909 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.26781782 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.282237528 seconds)
  done (took 104.374731396 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.341212176 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.346655583 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.381228942 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.273248133 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.323688047 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.382704079 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.273829461 seconds)
  done (took 10.480539429 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.279027012 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.281434698 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328254429 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329130015 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.28232785 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.44689522 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281827156 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.285614509 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.283430117 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.331105279 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.283780692 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.283441743 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.292880967 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.271802469 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.328737054 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.2873832 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.390782473 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.276359611 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.281758208 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.427729861 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281819688 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.292816075 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.323762566 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.285844296 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.284346362 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.281299667 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.098371066 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.28429253 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.283297351 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.284482083 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.282740325 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.341200534 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.282505955 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.274113073 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284336783 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412973322 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.285404416 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284506953 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.283503638 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.275754347 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.285900486 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.284993689 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.283715432 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.285070212 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.284057718 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.301665567 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.283817225 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.28487348 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.284571516 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.285496894 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.330668024 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.285573561 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.287183348 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.285632204 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.336437543 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293529803 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.285452094 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.285089302 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.286205038 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287538261 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.428910878 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331657602 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.286652723 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.332426214 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.287237466 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.28584992 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.285734174 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.28614464 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367529804 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.286494604 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.331866533 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.288148453 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.498581594 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.30206376 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.288608272 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.28207369 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.283848806 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.286604506 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.274845775 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.285439379 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.287590744 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.279332635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.28498538 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288545966 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.288117151 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.462660758 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40977834 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.287344936 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.293661259 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.284953778 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.286678082 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.337437101 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.288841206 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.287771932 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.346334002 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.398824838 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.329992908 seconds)
  done (took 132.694094106 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.291417966 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.292372477 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.281906103 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.307935126 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.280158022 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.27813851 seconds)
  done (took 8.895121362 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.280834706 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.292002133 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.288775516 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.288964072 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.289566859 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.290431185 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.288065111 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.284369198 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.292630755 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.289692733 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.290199131 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.290083826 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.292677116 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.29104642 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.289965814 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.289659369 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.291821983 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.289485685 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.289619759 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291533297 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.278058476 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.289081465 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.291039543 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.283767194 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.294604469 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.29330705 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.307129734 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.290369614 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.290801078 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.289507572 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.294579594 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.291192688 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.28418388 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.286004011 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.293943882 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.283386551 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293889631 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.292336363 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.291453214 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.291778039 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.291263666 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.291815607 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.29268539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.293919997 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.283462469 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.287135451 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.296213849 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.306375154 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.291309495 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.29324305 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.293580743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.292561147 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.293744266 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.293697074 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.286375171 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286503978 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.294745576 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.29306889 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.29315781 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.286165557 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.295392622 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.295797338 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.286964794 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.294708336 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.293301714 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.292856862 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.286547362 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.29568658 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295029105 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.292354373 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.292861792 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.292828556 seconds)
  done (took 95.122788188 seconds)
done (took 352.720167954 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.710278171 seconds)
  done (took 3.878285778 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.540293845 seconds)
  done (took 3.710608992 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.635557087 seconds)
  done (took 22.049541811 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.372891092 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.371696795 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.294907435 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.286732207 seconds)
  done (took 10.494924512 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.53472716 seconds)
  done (took 3.703318672 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.299828588 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.299459897 seconds)
  done (took 5.770472581 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.426673527 seconds)
  done (took 3.597231955 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.502410438 seconds)
  done (took 3.671734126 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.321307825 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.296928945 seconds)
  done (took 5.794868679 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.256384839 seconds)
  done (took 3.427224852 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.198879945 seconds)
  done (took 20.369421404 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.303853922 seconds)
  done (took 3.474452041 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.317398153 seconds)
  done (took 3.487290856 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.657174699 seconds)
  done (took 5.826653827 seconds)
done (took 100.423886601 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.280328794 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.289992419 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.287724856 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.287678152 seconds)
  done (took 10.316202656 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.361201856 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.367615143 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.368368116 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.356056767 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.35508036 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.362889236 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.325084185 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.322493147 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.351528072 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.349016825 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.365803271 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.349343067 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.364660618 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.32382081 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.34958011 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.364951787 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.354733434 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.370435818 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.325403584 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.355932338 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.29952233 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.354190546 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.351569463 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.299951541 seconds)
  done (took 33.52179732 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.808391147 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.360179981 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.442945006 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.34172437 seconds)
  done (took 7.125715195 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.402885179 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.402153994 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.42121536 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.456970411 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.486116699 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.416712587 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.325768244 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.317163629 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.305973132 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.402924891 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.482025329 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.402824447 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.617779028 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.299453885 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.615793076 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.299064832 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.298212313 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40349009 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.451368497 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.480608334 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.299668988 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.402139474 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.405751245 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.402707399 seconds)
  done (took 34.971174375 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.308230217 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.316102023 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.300801857 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.315358857 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.30018523 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.301549335 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.301506068 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.30751169 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.299755501 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.302000423 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.301225331 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.316203919 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.300078492 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.300653902 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.30859734 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.302113366 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.302061603 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.306533474 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.310592991 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.301783356 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.302452527 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.309598953 seconds)
  done (took 29.889537958 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.286146958 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.285001118 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.637619659 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.542088593 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.285891895 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.285990653 seconds)
  done (took 13.496400058 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.357655982 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.489030417 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.292418322 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.617827056 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.70290632 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.292569388 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.2934591 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.525452335 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.804384797 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.79739402 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.353271941 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.362754043 seconds)
  done (took 19.067633461 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.301965664 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.293967519 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.305274387 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.309419008 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.344383453 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.298373642 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.301359998 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.288012014 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.350363156 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.353749013 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.306010043 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.345359793 seconds)
  done (took 20.974363707 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379083306 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29686441 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311633396 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30319444 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304272222 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299978799 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314454858 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00028487 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.309711834 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576633809 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305892858 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380802374 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544785525 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308039143 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304917827 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.239694925 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529290694 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756397376 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299583315 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298210145 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331882075 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308647741 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316046731 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.495448555 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305465508 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298855456 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.562154219 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298805253 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559664963 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540768443 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54298682 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306385002 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576595346 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927011167 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410551134 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492543667 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313892952 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307593303 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.278887853 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.307313253 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321720191 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308510854 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535500512 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30955801 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302326822 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304694391 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009690319 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.315481826 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.302109762 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303437319 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535110962 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392297064 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.307565786 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.301595274 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348351953 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308613323 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.306429768 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419368072 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939179231 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310969899 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312836854 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.309544552 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297425484 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315631142 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924701269 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.3167569 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.307434777 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.30941141 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303869435 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311995531 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325347239 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302827916 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.322313104 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303495748 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031978228 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318489304 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305595189 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811936727 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314575409 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.311191691 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527189467 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304341164 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303926869 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.303144681 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.303236374 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993035359 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312052439 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.283659344 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343830653 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.001359807 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.504301621 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330196735 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33513052 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526665916 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.270047201 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304574499 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.306200337 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305761648 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325468952 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010971536 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311915753 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.310504129 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550918574 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.516253803 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304339429 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.241462211 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765255449 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320640978 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.333068166 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317959606 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.507374156 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.898062345 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554736104 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315913043 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347514292 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30950676 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055555872 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314591821 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.317645586 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314960237 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574191825 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.074162225 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307459552 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380609617 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308169825 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307474319 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318328041 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307553906 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307189023 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.476806172 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313906894 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569700078 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.315828796 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307730287 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.312881602 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328950529 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.310060435 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52922186 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31510887 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588527949 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310419187 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308174927 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309630427 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.526166764 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.31699001 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.322358512 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649618373 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318338351 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328539057 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553181181 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347313247 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422889609 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341843847 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.323019191 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.56298744 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.31516807 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.317767977 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315017912 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315905745 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314970422 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.31956967 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309799417 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903639488 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29243872 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315262542 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311365792 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.326500851 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384206 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318240973 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.505695587 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.317483215 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308010253 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.323335017 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.310142725 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531413093 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54728877 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.319136725 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492658229 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.764441553 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.90406675 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333013798 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.313094868 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.309575643 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.310750414 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311238202 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30992486 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31055792 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504888625 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560976298 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311247147 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.90617264 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319243374 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.310782879 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.325470578 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548303822 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.329140942 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3152276 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.324294753 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312729566 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328299599 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.556423247 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541115983 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.328304115 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313375267 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.830762615 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321538354 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313654534 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312647018 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341150431 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311897201 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175600357 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657920507 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308029766 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566839911 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321446865 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.333494819 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.311321048 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312839284 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314499197 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.33136671 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32735089 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.510466316 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333630012 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316268447 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951176896 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053640098 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856621572 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328594563 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.320916609 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322580139 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022716814 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322020399 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314677177 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551332549 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023172269 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321493958 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769496397 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.325926604 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051193215 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554565596 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547639393 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322106892 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.323918894 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578181398 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534962503 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341124732 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316876432 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324290441 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.282760166 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852835397 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333039976 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501446672 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027611271 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332649744 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323031921 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.367758049 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325749335 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696228109 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32257017 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317182381 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323535378 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322724693 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209195414 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327666322 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319010045 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940252822 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334197143 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.782272192 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324428445 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.515032737 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.55994776 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.535877016 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.324749762 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.32288708 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.567485447 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556297004 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325456078 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321792381 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864900712 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.1784073 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.325446552 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319333369 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065503326 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333255929 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586016624 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.335507177 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.324800569 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327122565 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320359737 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319463394 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.319388605 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326249477 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294855672 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77796034 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.336542886 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315060968 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338078192 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325204047 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.564281724 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.335534577 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.912628042 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.55364384 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322151051 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352886826 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.324778039 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323678394 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.290497397 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319202519 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318759928 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35077945 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.544446699 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318909306 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.292986308 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382516438 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537032755 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319986799 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328773772 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529055999 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.327523522 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.341532254 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072031303 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35739379 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328380638 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322381043 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330454939 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3575795 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393950049 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516649466 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.565863187 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568343564 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703390384 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334856513 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324405783 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.335129542 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402758675 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320097112 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.331218844 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.325088269 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913763576 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07015655 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928566407 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569348244 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329539116 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333101332 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322833968 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565098826 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323458215 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599329893 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322494768 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.321635644 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350805601 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330746987 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331185134 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539162398 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.59587341 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322679977 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32318422 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329199678 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.322377126 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570206373 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.541462515 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785427023 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890411981 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326395776 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332703918 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042860058 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605486508 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323918943 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325310185 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324065859 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.329981699 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353633584 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.337306742 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322662885 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564313461 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562204024 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965732012 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.568087248 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.511319738 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.32544618 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325479312 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572277266 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156922401 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52254622 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933168493 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.018502177 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584428284 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399041391 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.522219343 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.334343819 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562879457 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.336711554 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331948641 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328471187 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326117738 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.325286818 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564093982 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932995327 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58556971 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.334184861 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.338113905 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36160886 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.525109065 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.555665322 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02960174 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.545466808 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571828854 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34003909 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326197901 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930455034 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57337237 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334808022 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.333581239 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533500858 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333455767 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365415432 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.203401391 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.326926026 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841182536 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.539697443 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349528909 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339381203 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027896157 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937033719 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.334326444 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798373174 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330057167 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329859177 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610891001 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.334568719 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330007159 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615307991 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.334062274 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331105348 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534489036 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.929207241 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061402622 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.354554834 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345168278 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.330560208 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33031121 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330887157 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332906419 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330205935 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.706967347 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334016637 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330276621 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342392326 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.331434361 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34050432 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.335680957 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330233057 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.338706134 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.328302327 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.315277446 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333239704 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455551609 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859632564 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330815937 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.943026622 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.66639389 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.575815167 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335888993 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.303209465 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.337097167 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333060268 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331365728 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33177983 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.335336977 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847182152 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.33700145 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.578935207 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.345467606 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.541312476 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541822388 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331905648 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548897837 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339061039 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358384248 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.300160912 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333067311 seconds)
  done (took 951.993907628 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.359634745 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.346504754 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.324187574 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.377393703 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.323088273 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.441316642 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.323784227 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.383227062 seconds)
  done (took 20.085265711 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.321332718 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.331274113 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.321816293 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.337380156 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.327043577 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.856231575 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.338102669 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.331939876 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.346804678 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.33670705 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.334873598 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.976370217 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.338798671 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.328739698 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.334760709 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.335871116 seconds)
  done (took 31.705443934 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.976651109 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.330651008 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.762314053 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.33836725 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.340451422 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.325033556 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.442252239 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.332468527 seconds)
  done (took 25.057925731 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.339636489 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.33776042 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.337993778 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.337357282 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.338626409 seconds)
  done (took 7.901164829 seconds)
done (took 1207.279714448 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.339713394 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.34021679 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.34028131 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.339344762 seconds)
  done (took 6.569196088 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.302839063 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.303293979 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.30569633 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.315541051 seconds)
  done (took 9.436727224 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.977587786 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.836072698 seconds)
  done (took 5.022845219 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.906691437 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.900731126 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.899916696 seconds)
  done (took 6.919408019 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.616858157 seconds)
  done (took 2.827017138 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.327020469 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.330675338 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.090961341 seconds)
  done (took 7.96060649 seconds)
done (took 39.944858264 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.330554438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.086242571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.480397832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.331260782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.48678532 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.48095002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.577245111 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.328166418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.329661617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.327289253 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.330827949 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.486718559 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.566227621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.089042141 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.565537441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.084721055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.52843499 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341239966 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.327651426 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.32871097 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.578451154 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.330073132 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.328508776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.329730597 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.530292162 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.472608378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.328878298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.086947066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.328990431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.328556355 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.473222675 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.328099542 seconds)
  done (took 81.062290214 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.331905597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.334551097 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.338671432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.328958807 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.344751503 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.354246468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.330411124 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.328937787 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.329405428 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.349883299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.330210603 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.344854651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.343671889 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.329212767 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.348804163 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.328935398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.348869018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.342746497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.329938845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.345207423 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.329697528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.329350832 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.336715978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.329494581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.328326792 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.331265157 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.348058802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.330431888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.332321245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.332099864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.332989699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.350182134 seconds)
  done (took 75.987342503 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.330965899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.344666073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.330172105 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.331005905 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.332580491 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.330852872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.332588857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.35265936 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.339297198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.339548279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.330440037 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.332658033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.333883191 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.332091437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.332358694 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.330797574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.33318303 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.331061714 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.334531384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.330997005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.332097682 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.358666209 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.330531293 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.343443269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.332220663 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.342609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.334147928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.331245578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.34554885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.336448188 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.340838991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.331013407 seconds)
  done (took 75.958521835 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.573881332 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.348402205 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.350553044 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.342211848 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.350414082 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.348815775 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.3417597 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.578542264 seconds)
  done (took 14.449701266 seconds)
done (took 248.670017975 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.338745732 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.806849462 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.368660959 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.340190577 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.359195546 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.367560527 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.550512568 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.369133395 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.55657248 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.365906479 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.359504208 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.345100053 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.105868017 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.484590699 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.133268358 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.248972673 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.188617529 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.336438318 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.892279082 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.611648251 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.374252259 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.335470832 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.123387498 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.196232565 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.313283045 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.434552942 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.433894466 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.557652317 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.498056432 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.415308815 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.823854225 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.343599369 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.343160367 seconds)
  done (took 62.538259054 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.341123307 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.350233464 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.350094402 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.351089979 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.350801839 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.350731274 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.343102408 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.351624892 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.350125655 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.352462295 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.350766238 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.351928893 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.351489588 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.351329859 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.353105453 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.324044386 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.344076216 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.35185134 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.341693192 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.322256502 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.350851601 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.353781174 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.35243462 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.351868714 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.353159928 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.353803676 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.352821179 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.352722019 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.350825879 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.352117727 seconds)
  done (took 41.677435443 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.353688971 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.89637661 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.057385938 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.357014687 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.34462658 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.350107249 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.618237999 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.360509107 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.34907077 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.347804911 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.792785755 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.362105613 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376764178 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.067514502 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.353996376 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.355543701 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.353980079 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.347209818 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.9107761 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.354790585 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.618805729 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.363622876 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.618726238 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.358740922 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.349551264 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.347161631 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.350106809 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.15685532 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.371447932 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.791713038 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.087087301 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.618658804 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.065823361 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.105016931 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.077607979 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.364021755 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.357506189 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.795221317 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.354441578 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.347827371 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.617455342 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.355365929 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.066542893 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.021140318 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.363893125 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.356570452 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.178072123 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.798797431 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.583068828 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.360045972 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.102261178 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.356566525 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.358498772 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.349825758 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.577179304 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.355422538 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.350128357 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.168742332 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.352972594 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.619976384 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.363995074 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.348588845 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.902209228 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.357001793 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.901684701 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.357015295 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.358572491 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.350749987 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.072498144 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.359692797 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.042360696 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.371232677 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.358417159 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.797397952 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.908952051 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.236380392 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.359243969 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.909654262 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.109973984 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.64161876 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.361075139 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.132345288 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.645509962 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.362686291 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.361051252 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.361737669 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.359613622 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.418883132 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.617792224 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.9748689 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.0412041 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.191518153 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.630892065 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.365117315 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.35020284 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.188011167 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.365324541 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.359725339 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.06973259 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.055497616 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.372560802 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.361311537 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.041779918 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.37091207 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.624559418 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.365075821 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.104741955 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.360202319 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.423167678 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.360479691 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.357313359 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.354559749 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.626119542 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.360635428 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.362934361 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.029286546 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.829421996 seconds)
  done (took 188.952331511 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.348140749 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.347044746 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.346258969 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.346508711 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.346189821 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.352072444 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.346380098 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.345206162 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.351268924 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.347748766 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.348015296 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.355769399 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.354512873 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.349346232 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.347604523 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.347532492 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.347051423 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.356359943 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.347897108 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.347713113 seconds)
  done (took 44.208579575 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.363953569 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.892661207 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.859906988 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.369401525 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.362103841 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.355859741 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.408646115 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.363311238 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.36296054 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.642460257 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.522933939 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.372386221 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.362492165 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.364550938 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.855847267 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.343510131 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.641142562 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.897082462 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.370038575 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.892310256 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.342601197 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.363397144 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.35469734 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.891925351 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.658766675 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.631829319 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.418556882 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.895484439 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.374012819 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.365279132 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.893403672 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.372908514 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.357384105 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.876584749 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.373226058 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.379175976 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.366393767 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.410048885 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.412119826 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.64385841 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.904644102 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.643396992 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.383928301 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.519445437 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.368455277 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.33477698 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.905064428 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.373679975 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.335752926 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.368121127 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.372444581 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.869950668 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.364550311 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.872358816 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.374477798 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.368076683 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.889885746 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.871816281 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.869205208 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.526606329 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.359002742 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.629572229 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.37456675 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.901472876 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.372324883 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.367569571 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.367133486 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.522033005 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.896816293 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.636738878 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.656232514 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.654065491 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.374148688 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.423117251 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.37033704 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.646867144 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.42996476 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.752386707 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.656273169 seconds)
  done (took 123.123138583 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.633243924 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.467200187 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.728261268 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.928296909 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.851446604 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.49847103 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.470462697 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.597862901 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.367782224 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.472195595 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.999890699 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.454191187 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.106753747 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.421811481 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.46490387 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.480201856 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.74975207 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.296477565 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.99991613 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.976589263 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.383540875 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.466466448 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.861816369 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.547625828 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.360588575 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.945363471 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.263773174 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.873680888 seconds)
  done (took 51.903720079 seconds)
done (took 513.618975114 seconds)
SAVING RESULT...
DONE!
