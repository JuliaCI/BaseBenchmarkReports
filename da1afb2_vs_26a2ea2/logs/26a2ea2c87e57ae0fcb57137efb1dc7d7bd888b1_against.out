cset: moving following pidspec: 4606
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.182495834 seconds)
loading group "string"... done (took 0.577164477 seconds)
loading group "linalg"... done (took 9.722328199 seconds)
loading group "parallel"... done (took 0.171611661 seconds)
loading group "find"... done (took 2.505935918 seconds)
loading group "tuple"... done (took 2.284389642 seconds)
loading group "dates"... done (took 1.427412494 seconds)
loading group "micro"... done (took 0.581716064 seconds)
loading group "io"... done (took 0.556079003 seconds)
loading group "scalar"... done (took 53.975960222 seconds)
loading group "sparse"... done (took 13.537940965 seconds)
loading group "broadcast"... done (took 1.31802787 seconds)
loading group "union"... done (took 2.562454049 seconds)
loading group "simd"... done (took 3.586315578 seconds)
loading group "random"... done (took 13.813885734 seconds)
loading group "problem"... done (took 2.262998704 seconds)
loading group "array"... done (took 23.305854289 seconds)
loading group "misc"... done (took 1.105392906 seconds)
loading group "sort"... done (took 3.741064834 seconds)
loading group "collection"... done (took 20.684494461 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.790785418 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.162672341 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.241718091 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.889536828 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.296486379 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.206756909 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.200675604 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.176304657 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.618158297 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.227172465 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.190494571 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.403055683 seconds)
done (took 7.22422586 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.284659508 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.093762865 seconds)
    (2/2) benchmarking "String"...
    done (took 0.21061779 seconds)
  done (took 0.957560464 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.096696423 seconds)
    (2/2) benchmarking "String"...
    done (took 0.140848946 seconds)
  done (took 0.893144629 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.131315491 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.165873321 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.144279145 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.127779037 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.144415225 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.1267598 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.145095317 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.127069978 seconds)
  done (took 1.637180236 seconds)
done (took 4.562899405 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.524323413 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.904212276 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.535545567 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.203271695 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.351001011 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.355530419 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.31551937 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.26825507 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.129832786 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.097634071 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.224315632 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.45450383 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.4671671 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.942953576 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098397895 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.14830943 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.168906253 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.80054203 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.119616557 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.154099633 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.533799371 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.240909827 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.155377245 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.135150787 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.241502075 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.165309484 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.168319693 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.19036848 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.723758329 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.171996592 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.237865147 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.123563868 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16788898 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.206058993 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.281574102 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.147912685 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.731073976 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.240171665 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124678578 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.138483219 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.717575645 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.15695872 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.235254479 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.143843722 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.111311779 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179462575 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.142343395 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116930908 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.148396415 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.140593101 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.19773581 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.562379697 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.144972514 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.226902877 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.148514205 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.730409858 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.137165623 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.321433887 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.1634985 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.147540688 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.130968595 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.128149611 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.213671119 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.138833205 seconds)
  done (took 22.561634377 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.208785094 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.223342453 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.134206036 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.183335789 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.186547021 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.137549007 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.128248202 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.132957375 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.154928438 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.236038305 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.180657556 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.230282634 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.11737808 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.14636628 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.1776985 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.293668486 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.164362772 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.148508553 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.145710951 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.136428519 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.182420729 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.137778903 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.15161163 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.13480948 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.213684079 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.260347953 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.148061271 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.164339261 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.146336649 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.137205415 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.182229221 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.203399705 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.116564797 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.144366528 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.215029356 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.163526123 seconds)
  done (took 6.852976539 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.261840231 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.143370681 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.269962961 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.229809263 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.186496538 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.219217268 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.207457222 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.331766676 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.316020868 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.224084068 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.224111053 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.170620063 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.137329224 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.132789562 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.122409952 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.116992787 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.882624715 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.216257735 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201457809 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.212565992 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.150370372 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.123451158 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.791686496 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.125894461 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.140358898 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.133471389 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109850761 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.247401836 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.133381036 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.523527874 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.141159931 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.135666246 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171111008 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.236337172 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.160718546 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.160065387 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.181156984 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.153597248 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.125723738 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.251874187 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.158163828 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.11757239 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.136626149 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170936023 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.156680796 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.147723072 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160082501 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173704568 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.125929453 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164377045 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.943660377 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.125392955 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.234859965 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.191247008 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.141840839 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.319410081 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.145436605 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.156023907 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.128977889 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.208507486 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282663492 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.159043852 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.137293513 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.118626212 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.151164244 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.11952149 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15802661 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.695531008 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.122855788 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.200991912 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.149208 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.14232132 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.390775767 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141206959 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.125841936 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.161376985 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.126113171 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135840719 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.126617323 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.136875655 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.129348138 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.135974444 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.125621253 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.13763836 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188028183 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.137161744 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.159482587 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162565397 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.128905811 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.140425418 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153393832 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136744069 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.127197242 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.215575412 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154202858 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120485372 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153117117 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.184997064 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.143196372 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.254565352 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.136706968 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.146383243 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.141855169 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.169228084 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.154188504 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.120929302 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.142448434 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.118984439 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.137911636 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.187856711 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.140139039 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.120696081 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.143704618 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1240164 seconds)
  done (took 27.752048092 seconds)
done (took 57.823039021 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.40660003 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.111180331 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107225339 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.129343706 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108911655 seconds)
  done (took 1.606791188 seconds)
done (took 2.324186727 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.243638611 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.334067476 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.245673506 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.14285678 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.20928111 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.191394388 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213920766 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.206842984 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.19536165 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.231033719 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.140446223 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.233410244 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.201817889 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.212087808 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.141174225 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.248795157 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.187651685 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.213549638 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.250531062 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149153038 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.145956316 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.164811185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.146730696 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.148505377 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.145098021 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163221893 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.145161524 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163931533 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.138847374 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.147621753 seconds)
  done (took 2.38938698 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.169043 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.147415776 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.145603479 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.154673884 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.144495667 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.147189355 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.144139103 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162839178 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.147715117 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1623958 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.141268087 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.149722699 seconds)
  done (took 2.379934202 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.118688553 seconds)
done (took 9.847315023 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.086898107 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.604461023 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191275314 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.267343173 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.388591093 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.295083148 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.587982007 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.227612784 seconds)
  done (took 14.498708476 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.160004716 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.207765862 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.137292814 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.15417066 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.136202328 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.154521303 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.132044107 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.14824778 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.13430178 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.151047951 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.137173108 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.147344557 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.133398718 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.133361628 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.153962028 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.133035244 seconds)
  done (took 3.139440296 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.176694757 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.176221568 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.139492712 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.159866437 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.136075856 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.15954286 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.142888568 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.15846454 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.135832357 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.153599129 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.146152244 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.156030798 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.139613269 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.151617256 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.139731867 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.174797606 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.135333584 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.156177013 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.157666894 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.157939335 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.139492274 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.154506769 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.139571727 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.157760255 seconds)
  done (took 4.449511957 seconds)
done (took 22.822183859 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.193914521 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.144800023 seconds)
  done (took 1.083155413 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.198136266 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.216788944 seconds)
  done (took 1.160374803 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.159084241 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.148317475 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.16211821 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.16192031 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.1346941 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.14961561 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.157444596 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.151866099 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.133062605 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.150756459 seconds)
  done (took 2.261744748 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.139466805 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.138157414 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.164038412 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.202917308 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.14076726 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.154734113 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.138345476 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.15437484 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.137682417 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.150145147 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.139335505 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.167694296 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.137796554 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.171506728 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.138528044 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.154940922 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.141686432 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.154840517 seconds)
  done (took 3.478217598 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.140012797 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.134953429 seconds)
  done (took 1.028149806 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.142233389 seconds)
    (2/7) benchmarking "second"...
    done (took 0.133187275 seconds)
    (3/7) benchmarking "month"...
    done (took 0.151505705 seconds)
    (4/7) benchmarking "year"...
    done (took 0.134163227 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.150372797 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.132923201 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.151119198 seconds)
  done (took 1.749709725 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.619446307 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271015317 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.423758423 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104909911 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.155210584 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.369158309 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.156236802 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.10445058 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104768222 seconds)
  done (took 3.088767529 seconds)
done (took 14.598346306 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.13852541 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22305484 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.678633743 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.15837693 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.152625574 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.193688739 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.343757602 seconds)
done (took 2.651705633 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.373475355 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.183821201 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.118723313 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.141271119 seconds)
  done (took 1.575506938 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.131129957 seconds)
    (2/2) benchmarking "read"...
    done (took 0.140291012 seconds)
  done (took 1.035560935 seconds)
done (took 3.37564053 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.154656667 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.151105102 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.138166402 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.152656115 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.136205496 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.152753057 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.135403137 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.149288789 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.137510428 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.132078086 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153462181 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.135394438 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.152359335 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.135054456 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.152148328 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.135042989 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.153696325 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.133241019 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.151571045 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.136094761 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.153545265 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.134296958 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.154242154 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135341931 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.154459227 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.136016736 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.150969504 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.135246093 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.153540039 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.136652 seconds)
  done (took 5.081382998 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.142051861 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.128406638 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.150144072 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.140953719 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.146268569 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.133352058 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.14722636 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.131289647 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.152050039 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.132905514 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.151282732 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.132768421 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.129183982 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.151907921 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.133953002 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.154874271 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.142510497 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.148968776 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.129466217 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.153232594 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.135962067 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.147861129 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.132873063 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.149933383 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.133420341 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.129287285 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.151770814 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.131485074 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.151874784 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.131947357 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.153739312 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.135791224 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.150100436 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.261015284 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.152795505 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.134430337 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.15621793 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.130139757 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.13321894 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.1478063 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.12889423 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.15109931 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.131207152 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.156689027 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.133179185 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.150606969 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.13061262 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.151491331 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.134317963 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.134600343 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.146537816 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.130941471 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.15243883 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.133980068 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.15491377 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.130154867 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.150613006 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.129860166 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.151107099 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.133682761 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.129230557 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.147967384 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.140341842 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.15351324 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.149402383 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.157313905 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.129704277 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.153202598 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.135471 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.157880738 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.136122217 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.162019502 seconds)
  done (took 11.12351472 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.137367305 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132303855 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.153071147 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.133338537 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.151507628 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133525352 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.151849698 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133820509 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151164414 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135009331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.132274133 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.151353613 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.133385153 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.152032792 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134005616 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.149724862 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.134213634 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152099813 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.134574638 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.134533324 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.152633515 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.133486657 seconds)
  done (took 3.888698945 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.280769294 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.14092997 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.202555926 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.14760185 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.17312372 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.165724478 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.141644212 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.159050847 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138134325 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.162940053 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143765559 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158507463 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.153670925 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163086254 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.14224592 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.166567083 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.139534717 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.16438572 seconds)
  done (took 3.728058587 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.139118515 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.133349037 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15429539 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.1346272 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.153630714 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.134741363 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153711536 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134934095 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.153059566 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.134703611 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.133706764 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155322193 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.134599331 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153657931 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.134876243 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.152930843 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.13489482 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15409386 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.136413326 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.133544251 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.153473305 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.134120784 seconds)
  done (took 3.923644494 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152501429 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.154723112 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.155541221 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.160033304 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136914369 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.135327289 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.161717979 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.137940387 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.161979922 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.136067476 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.156230407 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.136129577 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.171850924 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.13777728 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.162512848 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.137311628 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.157532352 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.13701469 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.157268296 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.136846206 seconds)
  done (took 3.774342141 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.230595487 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.173206389 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.152337762 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181347141 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.171882775 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.152772698 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.179027535 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.152163337 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173800647 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.164956994 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.173009889 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.152325761 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.181878203 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.156749501 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.172747581 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1802925 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.160000432 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.180426935 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.153182501 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.173738463 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163629065 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.173210952 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.180184508 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.153624467 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.172575908 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.155306128 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.172382588 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.158680648 seconds)
  done (took 5.542326853 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.153012729 seconds)
    (2/2) benchmarking "in"...
    done (took 0.166204502 seconds)
  done (took 1.116722286 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.141425604 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138033674 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.158490057 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.137969396 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.159507949 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.137705726 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.159204 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138278416 seconds)
  done (took 1.960183086 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.205127218 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.225699072 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.162923101 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.148584204 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.226376384 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.215939784 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175495347 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.166709198 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.136584917 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.151839993 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.219651654 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.129971256 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.157881165 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.13462612 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.159040325 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.14400552 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.157549511 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.147862319 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.164079822 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.139771571 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.161923523 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.143424311 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.160491263 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.146689879 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.153577545 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.140596257 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.162094285 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.147432825 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.155561587 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.138798891 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.156103328 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.139510495 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.160000499 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.143094324 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.137449302 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.225528449 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167128214 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.134057747 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.163082159 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.14168771 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.190495359 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.137298395 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.161324431 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.137406785 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.162248105 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.141189945 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.163957054 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.137412232 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.151720761 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.134853357 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.157632531 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.133766587 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.156516502 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139637003 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.158900101 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14512364 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.15896953 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.134895166 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.155404069 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.134953259 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.145032843 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.155776303 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.141376993 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.162289954 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.13828476 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.159895412 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.137839265 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.160350952 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.140186645 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.159707726 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.138324365 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.176878494 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.141497034 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.163900929 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.143033788 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.162615988 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136292084 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.165008698 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.138187363 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.160119377 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.142767393 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.185678554 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.140635765 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.156077468 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.135314308 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.167033815 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.139558765 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.16219948 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.131934133 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.168037488 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.141447171 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.160643093 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.131925381 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.158265016 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.135360928 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.142270121 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.153603754 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.139194811 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.158518127 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.14426089 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165534861 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.136971405 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.161863504 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.144690114 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.16616429 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.139271938 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.206173925 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.15606169 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.134844162 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.139508751 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.165029608 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.133203671 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.159997322 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.138667905 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.157803536 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.135415104 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.164356703 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.140331678 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.161628604 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.143456462 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.162024288 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.141019765 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.162179682 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.138825624 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.156747064 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.143437945 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.167127632 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.140817521 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.161930618 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.140290256 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.160422351 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.140489259 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.143340933 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.158905252 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.143939186 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.157186368 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.138790242 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.161638422 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.144044786 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.161488136 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.135602768 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.160185733 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.141993666 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.160612789 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.141943067 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.163279205 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.135116852 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.15409364 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.142445548 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.155943828 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.140455094 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.167731685 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.136270255 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.16277039 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.136672204 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168499488 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.136647334 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.166195204 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.142566926 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.165286994 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154958179 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.130960563 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.158618431 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.141837525 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.163156437 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.137981609 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.161307835 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.139161103 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.167587982 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.133831359 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.165954669 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.134493439 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.158940892 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.144328629 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.162107174 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.142147298 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.156644005 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.177509678 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17155043 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.145543548 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.16028018 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.139746742 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.163822328 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.140733187 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.164134065 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.145284203 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.144082673 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.158857056 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.138475815 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.165794636 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.136360655 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.163680667 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.138776762 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.162588218 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.132708594 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.163611292 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.132847074 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.166426243 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.145364929 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.166454422 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.14642224 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.16364555 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.140494846 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.169183883 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.137295511 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.164285582 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.134630985 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.165300461 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.149980462 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.145234938 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.167527197 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.142543092 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.158617601 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.141359391 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.169751542 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.141969721 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.161975247 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.141604484 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.154728121 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.134382436 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.166379614 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.143855107 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.15738509 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.14010759 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16301675 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143827874 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.160429285 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.133878052 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.164119915 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.145661697 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.15653729 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.142724048 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.157660136 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.142173692 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.168680888 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.135448588 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.158883496 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.144972282 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.144149892 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.162382052 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.142478712 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.165309275 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.146527807 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.166226477 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.143030807 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.159468097 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.148620255 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.160433155 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.141158262 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.157904823 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.144625659 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.154802369 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.143827303 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.162703869 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.13996559 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.15726783 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.145944288 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.165779871 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.147023375 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.138964297 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.167198777 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.1454529 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.170023491 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.139138771 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.168037502 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.136716776 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.156192551 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.138216908 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.154290029 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.143966812 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.159279388 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.145682671 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.161522252 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.141158408 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.165964997 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.145328759 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.160819481 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.148352387 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.174328427 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.135926015 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.155554307 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140428327 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.162622116 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.139352607 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.160195118 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.144862938 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.163578031 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.14681017 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.163445162 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.139166726 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.14062544 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.170284274 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.138996389 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.168899648 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.146709385 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.170458302 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.138641497 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.167706896 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.140527928 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.168324761 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.136632928 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.163566615 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.142032876 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.164287262 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.13856428 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.162714586 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.139762132 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.157597714 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.139868006 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.169692681 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.141903559 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.166566561 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.143374558 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.16121187 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.140011593 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.158402065 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.150169358 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.160002235 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.151729913 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.14064945 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.15588484 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.13502367 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.16714045 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.142753506 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.168742582 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.1374847 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.168041195 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.146581178 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.167372855 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.142689386 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.171075304 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.150543024 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.167286246 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.149012072 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.157120676 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.140000714 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.167733029 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.141965126 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.164201717 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.143766247 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.135836333 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.167408006 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1460376 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.16540474 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.14075484 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.15715132 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.142566386 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.16873791 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.144585238 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.165072954 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.144238629 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.16568561 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.139185504 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.165603721 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.147905564 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.164020859 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.148555295 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.162892685 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.146949377 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.159795145 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.148348681 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.143249743 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.158925304 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.135693883 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.162422599 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.149646293 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.158365785 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.147266081 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.170202481 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.140782915 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.16318262 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.147667963 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.161228736 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.145245076 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.168533411 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.141337899 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.172370344 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.144568981 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.161818517 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.148203457 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.147863018 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.159151077 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.142313695 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.163275045 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.149022034 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.164889032 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.148450491 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.166294523 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.148486466 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.168519831 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.149269336 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.169822213 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.147690305 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.15880754 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.150504963 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.168037678 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.144915711 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.16137736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.142005777 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.158881109 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.142906311 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.170666925 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.141926979 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.170971888 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.148032065 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.140459063 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.163144091 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.149341661 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.164161932 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.149161337 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.162946961 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.145906614 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.159502044 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.14634327 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.165619278 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.149216468 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.163716061 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.138926925 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.170039793 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.149446146 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.169300628 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.147611801 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.171188174 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.138431944 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.158990416 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.149143723 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.163421485 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.154563859 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.167873137 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.143681817 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.163792215 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.147234474 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.145003552 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.172499145 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.13791788 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.164166558 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.145072595 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.169615678 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.143038814 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.16147591 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.14819904 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.165262503 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.146342575 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.167529006 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.13989809 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.165908614 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.150895647 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.165413996 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.139857201 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.16463789 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.151615479 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.166977359 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.143074572 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.160446032 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.151653753 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.169691197 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.150816095 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.163361968 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.146672152 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.163482394 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.148743415 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.151370699 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.165072776 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.145378138 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.164625723 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150118549 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.172092349 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.136241454 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.16605111 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153136696 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.171371493 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.147301868 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.168590378 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.144449325 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.173574657 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.151256067 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.169463541 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.139600013 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.161641819 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.144551581 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.159425654 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.147772212 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.171026368 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.145832012 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.164759367 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.150450769 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.148548061 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.168539603 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.146164028 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.162626872 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.150936386 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.164411781 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.148290075 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.162224868 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.140131803 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.170230846 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.150667239 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166244295 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.145628457 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.166996729 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.14800888 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.160588039 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.144011388 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.169338437 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.149459585 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.14849095 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.166848856 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.143028676 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.168813779 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15454996 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.168487114 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.146392105 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.174323743 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.149981055 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168287913 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.145457687 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.17084527 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.151217703 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.170348214 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.150892289 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.16560664 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.143910176 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.173933973 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.153410322 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.176889786 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.143570453 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.160185699 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.149587736 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.164938673 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.140402544 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.171988099 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.152201772 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.17218679 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.146358243 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.16331259 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.154202062 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.171644775 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.147245118 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.164763683 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.143777094 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.149331616 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.166374343 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.147346368 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.164675446 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.152842084 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.174477816 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.149987884 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.174654503 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.139242049 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.173843596 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.148937938 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.175310727 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.145249331 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.161274633 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.140038821 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.169537238 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.153856069 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.17114491 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.149029572 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.148771886 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.17106689 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.147460193 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.168037959 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.143155073 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.174099212 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.150310265 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.167229119 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.14763635 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.167275078 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.146594408 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.168543357 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.152408151 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.174238314 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.14737382 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.177917717 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.15236103 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.165667104 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.14461015 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.168127714 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.149052279 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.166690241 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.152003597 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.14206148 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.163226743 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152230548 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.176001692 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.146292304 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.176110488 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.153649165 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.167814506 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.148112347 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.177054495 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.150214872 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.169065897 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.149162259 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.171154222 seconds)
  done (took 92.838513506 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.200367397 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177314891 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.147911357 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.169921994 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.165717644 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.172293671 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.148017628 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.17036764 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.149244975 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.179564228 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.14896292 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167951704 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.163867183 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191171329 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.163870915 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.181235898 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.147370408 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.171429134 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.148124288 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.170948682 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.162819414 seconds)
  done (took 4.390060837 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.154274208 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.148327609 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.171337606 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149121361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.170358993 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.149441966 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.170491094 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149068684 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.170073251 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.149791008 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.14910208 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.172461332 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.14907123 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.170495039 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.148472698 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.170773132 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.15078021 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.169705441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.150301459 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.148646124 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.172505018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.149397863 seconds)
  done (took 4.382224223 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.184185916 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.150975217 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.171531212 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.148275859 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.175738439 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.14984458 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.1751881 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.149492813 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.180379133 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.146158393 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.162876064 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.14573604 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.170065609 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.15034366 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.143616224 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.173999395 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.157134465 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.176830921 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.152976989 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.175739344 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.141568119 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.172056333 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.150965335 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.162999643 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.155969538 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.175184551 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.154574547 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.152518658 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.163629042 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.152654049 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.172026599 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.143801275 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.163486972 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.140652155 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.163346733 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.152393892 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.174830888 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.150525422 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.149882161 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.164527386 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.151087416 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.177905724 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.140961855 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.17428024 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.149960698 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.167251142 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.152431128 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.173092469 seconds)
  done (took 8.586797997 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.183080997 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.210586505 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.152322041 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.204347198 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.162590821 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.185714569 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.177017477 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.180428274 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.176831461 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.155187841 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.190437964 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.163828404 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.179772613 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.156532878 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.180188298 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.15399585 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.178665799 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.153507102 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.180324005 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.153474561 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.180431198 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.155141592 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.185831655 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.163153912 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.18094578 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.154384029 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.176775732 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.156054293 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.186241465 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.15877646 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.180856598 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.158064867 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.188026901 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.17902896 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.15639525 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.155959924 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.18749715 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.177626978 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.15645871 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.174292824 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.156698836 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.178326564 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.159740209 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.188380851 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.156739943 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.178897811 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.155663943 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.174380597 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.164785772 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.178137767 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.161639711 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.187631925 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.157861336 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.17869932 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.157115001 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.188031953 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.155242444 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.176763494 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.156887138 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.18726966 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.152206732 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.180950255 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.164912218 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.178844359 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.160557354 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.187921116 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.156286796 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.181024713 seconds)
  done (took 12.637689491 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.189851101 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.182901729 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.168092856 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.189496152 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.158356848 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.183265291 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.159170038 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.181953674 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.159490363 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.187617835 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.159311471 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.288792299 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.186676567 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.163579948 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.183778528 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.158640904 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.18358806 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.159008267 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.181555353 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.158480805 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.183475896 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.190277575 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.161240779 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.188223943 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.17118518 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.178796127 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.159277912 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.18333043 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.167511606 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.184207742 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.168843307 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.18441206 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.158765904 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.190680439 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.19261235 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.160769713 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.177339055 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.16059309 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.179753809 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.160234897 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.178606206 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.169223063 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.183226096 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.156782025 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.182592463 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.159839798 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.191926827 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.170534906 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.188172763 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.163978493 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.183513175 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.188421177 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.161542535 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.182397637 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.168140828 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.197003753 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.166961667 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.193110633 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.158889429 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.192005401 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.189311773 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.175863134 seconds)
  done (took 11.906081492 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.161449869 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.155050374 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.179332505 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.155833673 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.178037888 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.155765898 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.179391649 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.155265576 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.177155181 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156023646 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.154746158 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.179711853 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154639956 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.180271603 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.154131719 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.179825357 seconds)
  done (took 3.584701507 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.178764558 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.195230891 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.26036059 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.412055896 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.155088441 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.187382668 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.154609992 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.182264865 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.152382857 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.185252203 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.158650464 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.18161877 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.170033773 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.181111064 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.154851137 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.182266749 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.154223359 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.182617101 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.154406667 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.258426738 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.181484053 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.157879752 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.154199458 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.182407447 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.154479252 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.183876839 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.161725193 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.178430357 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.156766055 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.179318734 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.154275845 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.185411937 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.15313014 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.183407055 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.155208499 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.179290994 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.154931461 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.178116631 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.158409321 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.179346628 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.157233059 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.180315053 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.155624996 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.178626022 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.155758014 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.178134638 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.155426907 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.158797921 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.182155352 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.157036982 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.179212434 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.160309101 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.184054225 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.163077458 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.1867105 seconds)
  done (took 10.679693732 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.171539224 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.15594258 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.192853712 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.15233605 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.180292278 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.156013083 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.182988693 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.15660855 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.181325366 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.153252628 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.181661944 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.157272965 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.180276615 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.156315537 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.180438482 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.158335953 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.178369292 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.157977587 seconds)
  done (took 3.971856648 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.160818242 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.152609266 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.178816188 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154660078 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.178611201 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.155276446 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.177873321 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.155673199 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.177553007 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.154980352 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153668073 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.179949537 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154585701 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.178812766 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.155834262 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.178065694 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.156302926 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.17819766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.155996059 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.15340025 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.179462963 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.154512086 seconds)
  done (took 4.567354262 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.172437475 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.257632543 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.16027075 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.266543412 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.18010545 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.151755626 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.186785216 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.153126875 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.194793339 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.151992432 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.176870092 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.150679766 seconds)
  done (took 3.147167731 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190648526 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.215465156 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.158528549 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.180201544 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165531518 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1843422 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161681801 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.182721951 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167011251 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195855401 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.160877868 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192301156 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.167454977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.192350552 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.18791056 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167046212 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.184395271 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161051078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18052869 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175931997 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185073959 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169132363 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.186095903 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161638799 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187769664 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169564992 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193087937 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195642456 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.163231302 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192852207 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165986064 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185204317 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.169992904 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197313396 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158834686 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.193948912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.161438236 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199412081 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18861767 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170895831 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.182822686 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.166991108 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191611515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.166494451 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193930041 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16193882 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192583638 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162342151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188079273 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.204542453 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168373686 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193290239 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166583131 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193666658 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169298168 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.205868144 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196696955 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171771219 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191605584 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173281028 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194069891 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165896007 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194372113 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19691679 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167213122 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195317163 seconds)
  done (took 12.87424061 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201560802 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.182442796 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163338633 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198449721 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171193583 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.18886013 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.164246338 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186532446 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163612659 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.184363883 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.226758784 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16280597 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194827157 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171777556 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18788331 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.164301991 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187243491 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.171214605 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.185538137 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182848324 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.18872277 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.192996866 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17150855 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195010735 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175824702 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19280414 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162612273 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188373343 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.163203833 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187330365 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167261576 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.187847896 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.169670325 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.184476373 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171764191 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189466972 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162085602 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19413401 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.187147077 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169186479 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195642861 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.179418938 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188620324 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.163835407 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199368195 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.163366185 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189210651 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.159851878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.188144813 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159599941 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.19962041 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198546547 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176445978 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195393777 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164090341 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.189180703 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16446447 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187579804 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164379565 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.192821047 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170270528 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.18939491 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.208072368 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164887469 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186699561 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.172181481 seconds)
  done (took 12.913269374 seconds)
done (took 227.382935687 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.311900313 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.339596076 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.150938593 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.544989395 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.150222853 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.852036386 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.900704674 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.245344949 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.173699075 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.15303814 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.149263114 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.194728383 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.516708315 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.151031036 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.148816503 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.192023259 seconds)
  done (took 32.13267838 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.3482102 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.391815322 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.165103476 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.180099898 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.156468797 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.18131093 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.154243228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.181396615 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.156691951 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.183098231 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.155745387 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.174353119 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.161378179 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.17495681 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.15655235 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.178032797 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.162416957 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.177825957 seconds)
  done (took 4.412004623 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.180559182 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.250511344 seconds)
  done (took 1.403296192 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.191844353 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.27722767 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.378160803 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.231157557 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.17714566 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.19696294 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.205392086 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.192897061 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.269593706 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.167947134 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.19281511 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.153931808 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.208378262 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.158741268 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.197040415 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.152603801 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.208262754 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.17023088 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.193333069 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.157468836 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.207056782 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.180340248 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.162570433 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.194990689 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.235991508 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.193432414 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.157349203 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.182404667 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.157400751 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.196628319 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.163670662 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.196950847 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.192529847 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.21415042 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.183725177 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.233368229 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.160725698 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.181271637 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.169471162 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.181307852 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.157684575 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.182928925 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.166855562 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.178983973 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.154521971 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.184328952 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.154261145 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.182147766 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.162902929 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.184608214 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.163256891 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.188205154 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.233504646 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.158630052 seconds)
  done (took 11.250269691 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.997362628 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.204126254 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.181447689 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.116791056 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.176399745 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.194839664 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.012714704 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.185496927 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.314103999 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.074638682 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.174554978 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.188472998 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.305215645 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.340522046 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.33531516 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.445241339 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.847537865 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.170012141 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.211992691 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.200179947 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187209457 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173577642 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.198306908 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.51491894 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.157514293 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.181850982 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.161354302 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.18959909 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.238300716 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.157089359 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.184942876 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.270649208 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.355612942 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.274381153 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.155324211 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.182398004 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.155169361 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.24678772 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.352617886 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.279383436 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.249428395 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15499181 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.15527865 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.185899047 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.195250916 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.155869614 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.242422774 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.25490013 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.253265827 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.16047043 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.191463714 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.163533093 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.184899479 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.240625376 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.155556343 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.446706752 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.427236232 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.180939315 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1624028 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.193066824 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.334716276 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.158150289 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.323980521 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.177819665 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.273395906 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.182121137 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.866120824 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.249352142 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.179621364 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.16373349 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1851601 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.164105815 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.185233479 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.218155771 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.491336367 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.187525308 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.161356233 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.180664526 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.289376838 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.157865071 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.179974 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.239729773 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.160092768 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.185868901 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.16721349 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187177438 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.25201328 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.310154752 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.190665227 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.187183007 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.163516388 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.191149295 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.160594013 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.292382551 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.290364247 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.237533076 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.293458409 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.185315707 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.243793766 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.247242875 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.162809119 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.253191619 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.185908089 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.170759861 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.185534907 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.28973976 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.219566989 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159590295 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.186798632 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.166048092 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.223862243 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.16046323 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.189904773 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.253048395 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555021623 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.24722124 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.155396271 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.188436408 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.164639862 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.241768718 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189607278 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324762444 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163974542 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.247133472 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.189115052 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.156164473 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.188322384 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.244390561 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.166394632 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.190593537 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16195219 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.191942511 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.342925445 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.283482528 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.190412004 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.308506041 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.253622015 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.16450386 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.256939389 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.187789026 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.221620809 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193288489 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161437922 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.204731043 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.874938203 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.195071966 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.163897338 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.189557978 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.265954816 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.160642462 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.160540469 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.183830646 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.155536 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.882743864 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.16298242 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.156975027 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.188007094 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.162056198 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.189860952 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162905461 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.190031632 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.24507577 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310503305 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.192847598 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.161970197 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.184859498 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.242216379 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.160259114 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.185517707 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15897658 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.184865208 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.166972536 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.187156692 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.163172287 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.252976783 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.242847922 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.292936331 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.65181621 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.159836538 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.158550371 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.331722475 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.157417228 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.411434214 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165024077 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.298399761 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.246113318 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.182924042 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.418692538 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.248676091 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.265701448 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.161174514 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.252575332 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.18290367 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.164168915 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.241662957 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.183739031 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.165104791 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.239455976 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.19215075 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.16651272 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.347269478 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.16077418 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.309495938 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.15571814 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.253471104 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.187135082 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163640144 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.415239053 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159126845 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.196156957 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.242098327 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164611311 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.183760746 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.032366296 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.16048449 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.19157168 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.165185972 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.32143005 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.221083756 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.192502764 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164191304 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.19638045 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.247217031 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.289813644 seconds)
  done (took 61.232051306 seconds)
done (took 111.399467581 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32456605 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230245362 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.420092158 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233006885 seconds)
  done (took 2.282632152 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.348639887 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.201968589 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.302948987 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.154665346 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.308647708 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.184618576 seconds)
  done (took 2.52344504 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.234138002 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229503902 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225346424 seconds)
  done (took 1.716213812 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270561506 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.270733697 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.408292537 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.322484405 seconds)
  done (took 2.359205315 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.337939474 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.175973341 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.214576678 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.287756941 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.302707724 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.2658394 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.182335056 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.234272963 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.214296186 seconds)
  done (took 3.277643378 seconds)
done (took 13.180406323 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.207841933 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.216636843 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.181869625 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.197598179 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.193534834 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.22010243 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.188443623 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.216155259 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.188272358 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.199292696 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.186781378 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.196682165 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.251982475 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.21856261 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.168748954 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.214426447 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.170043562 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.226620865 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.18985333 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.195385906 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.19203857 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.197471576 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.168436066 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.205919455 seconds)
  done (took 5.814476456 seconds)
done (took 6.841046324 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.271126017 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.179618073 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.168377602 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.195955879 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.276070666 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.177418345 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.209960016 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.170545034 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.20374303 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.171083651 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.158066069 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.209802262 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.168174759 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.267665043 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.201539728 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.161165822 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.187358566 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.18055451 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.211937861 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.186389574 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.27693872 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.190620488 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.181093723 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.158833191 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.27599012 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192373745 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.16822385 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.197770799 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.182188274 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.198123225 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.170043414 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.185865251 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.185250723 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.212632191 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.160362912 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.196541841 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.161852701 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.133446117 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.197531922 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.17025324 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.209122863 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.170819302 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.197345407 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.16095173 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.197650742 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.170272428 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.208459527 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.173847678 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.185133682 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.170164937 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.188620906 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.186726224 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.196796674 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.159662779 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.184087869 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.163322819 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.204114994 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.163355626 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.183467393 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1880189 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.160535374 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.188789026 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.172221441 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.189110559 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.169701744 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.187299909 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.170714818 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.199328892 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.170050061 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.191012534 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.161850252 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.195037103 seconds)
done (took 14.609832459 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.171717674 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.234232628 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.246165249 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.278036403 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.221373251 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.176306802 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.204182386 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.184947253 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.204066028 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.179618394 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.224739507 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.221783372 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.256592532 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.207998448 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.205270575 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.175863711 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.172956141 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.196669133 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.282973021 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.186088466 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.214150495 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.176412342 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.215558836 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.204606384 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.16726181 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.219855215 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.170702812 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.200432016 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.166142752 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.209085086 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.188343195 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.191160124 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.169491173 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.21058579 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.18394597 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.201480824 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.180255687 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.200672383 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.167123092 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.191415263 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.172607425 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.208497435 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.166225522 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.205656825 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.173848814 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.207321322 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.173198859 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.203936413 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.168557039 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.199689465 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.16829787 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.216326061 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.17967365 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.209716743 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.179073518 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.204182438 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.179737846 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.204893942 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.170260883 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.206745999 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.167023117 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.191500643 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.168347974 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.213408052 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.170422638 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.206616396 seconds)
  done (took 14.017423053 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.189731933 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.224502469 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.177688302 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.204773753 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.171466838 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.187552481 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.160229107 seconds)
  done (took 2.37145069 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.167790872 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.289693978 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.287560276 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.287775927 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.253153215 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.293396559 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.216415607 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.16323844 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.227841528 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.171314049 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.287332817 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.322277029 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.20314611 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.17784881 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.288630564 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.191636294 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.290883525 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.240179975 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.207021549 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.291517486 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.179247723 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.224414702 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.174517503 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.192220247 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.283035536 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.164474844 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.334946983 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.211957652 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.172617559 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.205242118 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.178049579 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.273663108 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.284057468 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.176880503 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.199465338 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.286632042 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.281170868 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.177898578 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.295972643 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.195007979 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.256176072 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.206857454 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.178213719 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.207326614 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.179119602 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.271988131 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.213386092 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.179036224 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.205977171 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.292506084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.175014637 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.286651728 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.174335478 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.208377062 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.17372288 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.207917564 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.185338186 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.206863977 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.296318406 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179988443 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.285517841 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.297822294 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.288069205 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.289368766 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188487871 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.286878613 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.276038744 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.175065132 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.286183803 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.209253991 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.289435578 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.176466227 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.204248372 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.276311998 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182268341 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.29168144 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.291343242 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.174315696 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.207220178 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.167640715 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.206738512 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.162272392 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.289595136 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.207746437 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.177238682 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.211404987 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.176580224 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.206936516 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.28088729 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.186715439 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.206577713 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.176741677 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.211676638 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.177703624 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.20858373 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.292826737 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.17382838 seconds)
  done (took 23.09856578 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.17048324 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.163735785 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.195993031 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.164022792 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.192265566 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.163843819 seconds)
  done (took 2.148031773 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.207961104 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.207331652 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.188257994 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.204681557 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.231013448 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.292504176 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.298942148 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.20140918 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.196670581 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.215474117 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.296138116 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.301218294 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.296180584 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.184612908 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.302396117 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.180918519 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.30232594 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.208189339 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.188006278 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.205751331 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.178353437 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.213630172 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.176225036 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.286738977 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.211069326 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.182070665 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.201712287 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.189335578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.217457983 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.174023197 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.212075935 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.179867595 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.199839512 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.174310441 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.301415007 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.204104311 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178303074 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.210801693 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.181203634 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.209730998 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.300457825 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.176919919 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.213378921 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.183758657 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.20451273 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.17281836 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.210417417 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.172969675 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.30199542 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.211156449 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.182907069 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.208343536 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.181167205 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.213160597 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.173370816 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.203436387 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.181784879 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.302618263 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.212872644 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.172933299 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.209122396 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.182423982 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.203630157 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.184804543 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.209275262 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.182708348 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.202827615 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.183492632 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.207990305 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.18108917 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.21130768 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.18132916 seconds)
  done (took 16.411161757 seconds)
done (took 59.090243053 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.626156182 seconds)
  done (took 2.722272467 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.212264491 seconds)
  done (took 2.3149025 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.25803177 seconds)
  done (took 19.388153264 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.485724653 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.412932031 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.097887764 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.210806682 seconds)
  done (took 3.306553068 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.148248804 seconds)
  done (took 2.27077699 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.485051028 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.346859977 seconds)
  done (took 1.93909092 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.827681713 seconds)
  done (took 1.944591629 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.81126038 seconds)
  done (took 2.916178836 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333423013 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.308848532 seconds)
  done (took 1.761781378 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.687998716 seconds)
  done (took 1.808411337 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.303548098 seconds)
  done (took 14.42250592 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.318199269 seconds)
  done (took 1.445609444 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.362730398 seconds)
  done (took 1.492850395 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.688354159 seconds)
  done (took 4.818320601 seconds)
done (took 63.665767403 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.186969885 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.207521402 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.185296742 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.179924683 seconds)
  done (took 1.875849373 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.18972207 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.178122325 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.21286892 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.176853718 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.214379748 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.17788703 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.207358255 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.180403505 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.208955221 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.180391234 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.209097832 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.177759952 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.211808366 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.179419613 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.205511731 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.182035956 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.211218532 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.17952163 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.208940093 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.181403057 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.208138284 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.182364587 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.210214885 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.185415429 seconds)
  done (took 5.791710963 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.183743505 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.169954867 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.202772795 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.169969293 seconds)
  done (took 1.859723239 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.196713408 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.221510135 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.193873526 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.216079382 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.196067497 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.222071547 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.1805682 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.20426038 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.179940086 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.217906233 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.19862436 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.224875371 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.193943555 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.213773133 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.19381551 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.202653986 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.18592859 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.221385851 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.191993447 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.219679382 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.184367254 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.215684763 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.181038854 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.219406482 seconds)
  done (took 6.011924644 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.263777901 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.221097968 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.207566529 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.239403713 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.177332182 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.236723488 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.253492057 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.188292364 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.217331608 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.186211386 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.207665227 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.182398711 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.254000956 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.18578904 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.210363344 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.181639856 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.217140071 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.184232257 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.252306655 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.182379529 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.215226943 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.189887252 seconds)
  done (took 5.786319853 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.275406411 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.203162097 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.169183254 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.199448656 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.182665618 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.20378362 seconds)
  done (took 2.372899269 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.177544566 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.164122765 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.194861673 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.164047324 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.198615796 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.16436933 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.193663323 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.165972819 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.192500346 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.166922891 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.163921949 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.194008717 seconds)
  done (took 3.28320751 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266722632 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213707699 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.347487029 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.464411845 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257447319 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224834661 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.37588884 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.253762313 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.27377642 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19881571 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275666354 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254614023 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217162881 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281281677 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235935438 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.214010877 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265170677 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306796256 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234012266 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306872755 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2217427 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270738713 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.285585715 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211376073 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233464107 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254286704 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.183965127 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219384815 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227082744 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257310173 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265842866 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243613802 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204798754 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278308928 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32178789 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266031729 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.362778496 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.224692557 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.228040997 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.283924982 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.324027858 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235303891 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286626255 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215083311 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22370496 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287698326 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210561799 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.278960712 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.227052592 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206829673 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273540269 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273773275 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.265135436 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198648748 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394234039 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226745438 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.232732715 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243641432 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284592476 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296084012 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274119345 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.185694541 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.266918254 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285136513 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309260592 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.233819572 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.226978183 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219949198 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258598286 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27164121 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275252861 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253423494 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.281045291 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193696887 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266156654 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261997709 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24558836 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269669362 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265008288 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.212900037 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213631733 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227880226 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188044209 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.288040185 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183974442 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.311739804 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226158653 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.270119178 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240554034 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247510369 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.253927712 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222242038 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258955891 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242010525 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.155446105 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235190887 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.223962872 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251761811 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190894168 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246145647 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231361154 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.189520693 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243841185 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.185472966 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26213193 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.188887623 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252286304 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265184704 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.194770838 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275162057 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24199476 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.226325766 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261750318 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292329831 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224004044 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196876179 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315476789 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263890567 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.200700496 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265469794 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.294543332 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.204964718 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228984627 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259218646 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288310915 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207199509 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296006315 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230787789 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198408915 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.222692747 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266118346 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224085943 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.256901967 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190674378 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.261560548 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28296052 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.188474721 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234193278 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277872539 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195307113 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218595066 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198238204 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231415205 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.234899441 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.216630221 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.233047204 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216297108 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261700081 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260619154 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218886978 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231088332 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267946832 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193336659 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.264442641 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243047169 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.183057509 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.269561452 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294724779 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191678166 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276460111 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.255692023 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274037447 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238595939 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225483337 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27884441 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191268858 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.216631005 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223634381 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265414424 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.25730998 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.285053682 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269988952 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.228657317 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.260672558 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244035538 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260721109 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.249548906 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251346821 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.236507052 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.237395218 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262885825 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.214251517 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.188846449 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.220184834 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201433096 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224458528 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199865364 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270983044 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258491657 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.26776173 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23431477 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232608125 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.292471454 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.187655522 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25437795 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.273083869 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201813277 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.285145114 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287292642 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275517815 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204864027 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257623634 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.213512925 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191053501 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.226717295 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224208092 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235701851 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198380935 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237140436 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.290003981 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263046279 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213171887 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283035306 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260048839 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.302294639 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.184578135 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.261624343 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259933502 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234420483 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.283636588 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200014287 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.252662743 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29131547 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204050481 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287227978 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264984418 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278080036 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287100851 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.232636367 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226480663 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208395755 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254919389 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23404614 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225330327 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.240063681 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193585331 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242777216 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.232332124 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204741295 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27978076 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240561075 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26890169 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.218751406 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263018045 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188685152 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238215185 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272506472 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209099404 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.191670627 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229004554 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287333123 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245693558 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248609304 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234641324 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.226179494 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.442400644 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245515201 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267789496 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230888012 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202215763 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270450077 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.253760441 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22248288 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.282418778 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238515675 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304618443 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.235402337 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.236511325 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194484072 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244679546 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247364514 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.195454378 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.247199664 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.257301853 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.209753149 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281580923 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231356962 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240708869 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273583605 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.244596846 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.213633051 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233578067 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.325593638 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232880366 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268878577 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.263984539 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.257397322 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248713807 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221814106 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190542143 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.229567339 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.282097767 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196620928 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277215691 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.257965568 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275559087 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242879528 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259096895 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239086329 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.193374505 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.265806164 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212147211 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278868324 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23101644 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.233356013 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250398286 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.216502787 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195013056 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258558598 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386433008 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212955872 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265704854 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.192181116 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.349674947 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225081894 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197168605 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.255322283 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265516057 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.196819282 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.282392926 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272572166 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207790801 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.256951529 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200400859 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274812966 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278939969 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263950074 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269639555 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.210059817 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26047708 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253330672 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237270474 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244529728 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.243322333 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225853688 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294667894 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.271927344 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.197223356 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269580424 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266420204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23826996 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267184234 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236571744 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251182295 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226405806 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260504438 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204616413 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223808466 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224643448 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.264460235 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228530543 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269830161 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240201492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231653001 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193974761 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246286657 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263065981 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207011579 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.227078556 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282084684 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.19643628 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28170029 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309214452 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195083186 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.266919947 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206685184 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227412286 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23658081 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210541953 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228775849 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.243450045 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275055292 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.195988079 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273181677 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264303026 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261513311 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220293033 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241080254 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.363707935 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.195914268 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29504732 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216951468 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297037841 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.248851148 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273891526 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238136724 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247856512 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261687452 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213715228 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.325246926 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263358902 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.234605975 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.230532403 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207737239 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235950336 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.231853674 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219311886 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269185 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208556453 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.235771165 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.266393683 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210097359 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.245651952 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208709106 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29946572 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.250626515 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286822569 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255417664 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236924412 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276374014 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270847803 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196110989 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.261922899 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268753958 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211127188 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252248265 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.201512445 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.23623565 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312559729 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.192520678 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257804113 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271727008 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239598913 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274179087 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.200861232 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280271819 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240407607 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275059409 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195903531 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.249269464 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238112543 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233958573 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.192715872 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272415082 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257071014 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.232795767 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241488325 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.275667804 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26495464 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.224283469 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199605546 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386652595 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259864301 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.295514795 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.191983591 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236371733 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21229984 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257506275 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.264283734 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238674777 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.228750551 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196455326 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.244595383 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.246041066 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.199188783 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.272449133 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251560083 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256476009 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286824821 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.206582016 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.359534271 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.242232179 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240243971 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.206793574 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.197076926 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241054551 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201939589 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241870758 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.277768536 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318194404 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.231652919 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.24902314 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232703593 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.194419834 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227703546 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229454088 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250409323 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266498683 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216810118 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.160294205 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242671766 seconds)
  done (took 119.542138969 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271375404 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.226498126 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.242789949 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.29637781 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268448976 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.3661282 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.304195152 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.320761379 seconds)
  done (took 3.561224577 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.188032835 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.234267477 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.240429454 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.186803151 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.210036732 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.545424053 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.233356881 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.188391857 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.262385158 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.222950743 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.178843109 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.642537726 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.218652462 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.215563465 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.218096192 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.178498993 seconds)
  done (took 5.420889689 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.194238924 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.625368897 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.157046914 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.365564659 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.337110877 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.285600579 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.884633483 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.26708806 seconds)
  done (took 13.378835979 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.241164709 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.275884728 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.451798942 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.380145944 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.288100797 seconds)
  done (took 2.90263571 seconds)
done (took 172.905649545 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.192959912 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.192669333 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.223358111 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.194936379 seconds)
  done (took 2.055042539 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.23679817 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.150362201 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.184273098 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.14958009 seconds)
  done (took 1.989533311 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.47815775 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.150732651 seconds)
  done (took 1.918206491 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.213935627 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.235298808 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.204452924 seconds)
  done (took 1.933288676 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.203741199 seconds)
  done (took 1.477641716 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.188841418 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.187499041 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.313968708 seconds)
  done (took 1.965110254 seconds)
done (took 12.608166704 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.212087623 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.040350026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.652573028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.203070918 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.821331997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.465992013 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.526168258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.248071236 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.274760101 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.211661553 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.212429333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.791780673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.478682399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.975267302 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.461999593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.973832715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.762312009 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.211620593 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.186773222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.214248325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.472595096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.210237993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.180342322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.210741682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.759835905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.518609477 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.179729393 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.985615668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.177882276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.220657577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.468616917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.210932176 seconds)
  done (took 23.776972045 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.185047045 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.268640292 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.23365161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.215484587 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188030694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.213749816 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.190621496 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.227010088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.31739226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.181158331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.233066263 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.180267062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.184953401 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.213479212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.204333953 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.213119292 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.181613129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.213141546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.187957082 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.214654098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.201290279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.212165776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.182948961 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.215011128 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.180254814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.232485851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.180318111 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.226634701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.1806377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.222478891 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.184678755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.213412424 seconds)
  done (took 7.961487835 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.225406661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.281244371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.235411174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.253933437 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.269466028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.183587849 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.302452599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.221440864 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.324993997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.213140528 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.20327424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.211919935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222152059 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.214509462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.206725111 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.21259495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.183913236 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.21320359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.188508376 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.214920053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.202954145 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.212179167 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.183781227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.213685524 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.182137466 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.23526049 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.18179755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.226953737 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.180128853 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.222638983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.186531943 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.215811942 seconds)
  done (took 8.311123518 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.195771819 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.195623405 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.237539246 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.204286355 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.224049395 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.194495407 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.229433522 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.190740079 seconds)
  done (took 2.959709186 seconds)
done (took 44.284294271 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.209134194 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.201451041 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.238773104 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.201423887 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.306509124 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.226951833 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.203519295 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.225997082 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.200596226 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.241406057 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.180517501 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.22607331 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.205742043 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.228907656 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.277588724 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.237090334 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.317161655 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.311794954 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.195551629 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.234621234 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.194198392 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.316726206 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.197937638 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.228622244 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.260229943 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.221867764 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.301649798 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.196889305 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.231570198 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.181403445 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.312780962 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.196330985 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.230445822 seconds)
  done (took 9.020621665 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.292053028 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.225972557 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.189483379 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.223796985 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.19109994 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.240419224 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.329486244 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.189882112 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.225484374 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.190541635 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.188667507 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.315597608 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.23203997 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.186940886 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.226353741 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.170065826 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.331845554 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.18988862 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.215477264 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.153830138 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.185717195 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.22513477 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.344351486 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.186697726 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.223642779 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.191038447 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.22579051 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.197371401 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.192594927 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.225537822 seconds)
  done (took 8.012738812 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.196811005 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.204285798 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.244590216 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.292921488 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.221437888 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.235753808 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.208655266 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.235975092 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.213589256 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.218675672 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.201739167 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.254692993 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.200910895 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.229071486 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.184846601 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.232963708 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.201180763 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.218171386 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.195006258 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.202370203 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.206116101 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.201382499 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.240744563 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.195975335 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.217969801 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.192675178 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.230883973 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.195597764 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.226307311 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.1999594 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.219785806 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.186695541 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.220697053 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.221816193 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.220818667 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.198655804 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.23927048 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.198957944 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.234232657 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.218938069 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.222040454 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.18779871 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.247337143 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.243042641 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.222911649 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.196761129 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.222587768 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.200377772 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.216893211 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.20328819 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.261306297 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.187742005 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.240295788 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.184111819 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.21591599 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.193589809 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.21833656 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.189071336 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.233985344 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.186969582 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.238750557 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.194578032 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.196709993 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.220328164 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.197068618 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.218594359 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.184417863 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.223287366 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.212531417 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.227700726 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.2232541 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.218485079 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.197651396 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.234606274 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.198408225 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.230909175 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.185097045 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.232003182 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.197861624 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.755980111 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.203114921 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.221840742 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.187160626 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.235752341 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.206865752 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.233138002 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.199060232 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.229223732 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.188488831 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.187051535 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.238451729 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.187606834 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.223117982 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.199491732 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.220908013 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.19025773 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.231407287 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.195635689 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.216857446 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.213597572 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.223117342 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.18675913 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.24692267 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.189048303 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.223300316 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.195432208 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.261241272 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.185863317 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.228406234 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.197601556 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.185191185 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.228793673 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.188278448 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.220725323 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.202907173 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.236486821 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.195712046 seconds)
  done (took 26.873214441 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.413807482 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.403529478 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.291663328 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.452319491 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.235655919 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.289154555 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.435486805 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.405817562 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.187202144 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.255600866 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.277289494 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.367268357 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.188779063 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.249727959 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.407669027 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.452440911 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.254572358 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.258461615 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.223923015 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.236547195 seconds)
  done (took 7.620424811 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.195729988 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.255827189 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.211881964 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.240001739 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.199623449 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.199780663 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.222090022 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.208513513 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.233637679 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.195850784 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.224634255 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.194632733 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.233563709 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.20192078 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.237648318 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.210922993 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.229140322 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.193427835 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.243519986 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.191637147 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.240081749 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.213728895 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.22862961 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.243776255 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.207442402 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.197465996 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.221919733 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.192353688 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.22909323 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.197391357 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.225874631 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.19550638 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.228420216 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.168160916 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.233494235 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.203908652 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.193493696 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.224953496 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.19348686 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.22472953 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.202396904 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.234293332 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.196940351 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.198758632 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.241022979 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.17299168 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.236677176 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.199238431 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.202140428 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.208028081 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.199460441 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.237230475 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.195235926 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.243912604 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.194289564 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.239163421 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.198280882 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.237306997 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.193082767 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.220534274 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.185872639 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.223844247 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.196924697 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.235628738 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.200321198 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.23057307 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.196742326 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.221856718 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.19325843 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.189771006 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.226385274 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.201174168 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.243646958 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.19740089 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.230930462 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.198914206 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.230816344 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.158747114 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.230245819 seconds)
  done (took 18.172851136 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.214846291 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.236724287 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.206899186 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.254848092 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.205125639 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.194059335 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.236676277 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.207522204 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.24294737 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.210470119 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.243549154 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.202812772 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.245900994 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.199925164 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.237253334 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.204718721 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.239450422 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.226111832 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.237589824 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.215265861 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.243785298 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.193102665 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.237139965 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.199209517 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.252081222 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.199750796 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.250424465 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.204619414 seconds)
  done (took 7.584844349 seconds)
done (took 78.57919736 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.556703669 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.670617021 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.440529434 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.44672784 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.472862808 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.456415475 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.441064243 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.441582978 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.069128592 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.416553475 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.444131967 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.441378816 seconds)
done (took 31.690792576 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.749092657 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.112799929 seconds)
    (2/2) benchmarking "String"...
    done (took 2.147765557 seconds)
  done (took 5.604003709 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.110078532 seconds)
    (2/2) benchmarking "String"...
    done (took 2.117749937 seconds)
  done (took 5.558146569 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.43052241 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.42593048 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.819399412 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.433002143 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.426502077 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.429012374 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.432859645 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.447638772 seconds)
  done (took 17.74893859 seconds)
done (took 35.425366666 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.519541516 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.640787496 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.681231754 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.425002929 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.429678311 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.440963597 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.430096349 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.461105014 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.436661586 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.434364938 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.860144795 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.703347398 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.449393686 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.837420039 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.428441532 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.434314723 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.443786006 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.758690634 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.439209425 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.491995252 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.426331275 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.430039135 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.441458493 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.453728849 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.446899382 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.445504711 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.498943505 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.43625132 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.741222838 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.471801315 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.498044265 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.444156449 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.497843357 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.456192002 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.443083983 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.443309441 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.7046767 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.450742788 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.430948308 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.455877807 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.70447728 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.460507208 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.438457126 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.453581679 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.444245856 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.481819355 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.436332865 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.563933003 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.46561868 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.448735977 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.526584597 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.869777536 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.453975846 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.46441555 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.449958625 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.802575859 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.465307234 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.556696606 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.472866441 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.454841266 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.438365834 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.439786625 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.493301494 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.463098858 seconds)
  done (took 159.946837162 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.439721325 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.441871908 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.438559227 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.442858015 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.445516909 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.440296852 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.440875647 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.445168585 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.44149717 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.447017691 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.445725283 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.441399644 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.444117527 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.392276524 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.452219131 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.461458522 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.439701517 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.440264394 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.450195682 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.44559672 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.464438244 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.440937141 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.441805816 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.441001879 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.443741064 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.534962182 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.483120228 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.447187441 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.453225874 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.444294505 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.452009536 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.446726384 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.129678397 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.31524163 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.460626533 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.473576179 seconds)
  done (took 89.054026026 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.441992201 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.444650442 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.444048952 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.483032997 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.44354531 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.080105822 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.077648547 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.520955493 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.742020065 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.847726976 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.960113679 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.7482921 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.442630111 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.542246201 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.456171631 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.44724963 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.541498581 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.465098603 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.447578685 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.447102555 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.077705051 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.459053527 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.603718345 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.625106532 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.441117483 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.482517869 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.853568597 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.441863587 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.485015155 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.78511431 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.480862409 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.442765097 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.807675527 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.701772778 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.450847117 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.562117191 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.442431343 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.484708211 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.444365365 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.736273027 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.446442468 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.449028471 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.44906311 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.095740603 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.444604538 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.083101474 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.451967857 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.456516517 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.44372727 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.447719328 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.982023411 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.450631184 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.193506607 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.44217785 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.44785927 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.447277285 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.450228674 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.445874513 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.477615061 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.448002991 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.117085676 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.360877044 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.446596519 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.452301373 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.482275994 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.444047501 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.449757776 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.571310044 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.510106967 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.592988146 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.08212323 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.450077086 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.529017948 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.542015515 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.566126861 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.448401802 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.451874272 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.452328368 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.44954482 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.561387552 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.446162271 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.908083944 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.631895486 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.450032683 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.997041584 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.550048723 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.442528947 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.862070498 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.448214562 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.449238968 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.215528252 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.542862949 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.446002517 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.448151112 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.443434174 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.91075146 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.085186186 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.793459738 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.453303805 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.002415265 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.450150346 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.912551333 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.05271713 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.168394729 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.453834601 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.560917981 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.63319414 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.44947931 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.454049427 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.996922042 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.451260728 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.510831025 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.456689388 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.448885716 seconds)
  done (took 399.226329457 seconds)
done (took 649.5612829 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.445372479 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.449702442 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.447188648 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.465076771 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.446195649 seconds)
  done (took 13.605488909 seconds)
done (took 14.955333992 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.456534099 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.452961626 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.456288874 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.198699713 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.459786968 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.455155385 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.453503739 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.45792753 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.459499673 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.460078205 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.17631857 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.459151085 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.459228061 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 2.370305682 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 2.196784006 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.461109279 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 2.292333254 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.459678353 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.460288135 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.765444721 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.820338893 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.526148955 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.785772711 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.498052952 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.760762776 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.821478915 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.680243919 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.647241472 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.483838155 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.479132908 seconds)
  done (took 19.625432364 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.282389933 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.770899587 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.815976918 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.528141658 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.770188399 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.49989203 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.766834714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.827276469 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.681903454 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.62404682 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.485028359 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.475909243 seconds)
  done (took 19.605499416 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.174909458 seconds)
done (took 90.691199907 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.496112922 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.566119162 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.477798328 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.476087278 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.475730031 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.475928284 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.477833382 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.476813125 seconds)
  done (took 13.279049099 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.474689635 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.473374682 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.472885029 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.472623267 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.473723723 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.473676676 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.469888835 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.472745675 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.471196359 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.468631985 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.474185668 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.472933988 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.473620555 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.474162037 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.471876063 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.47413056 seconds)
  done (took 24.923376214 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.4797067 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.471764593 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.470957478 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.472679682 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.472143485 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.473469738 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.473656841 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.473538789 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.475071411 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.47441967 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.475563993 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.4729501 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.474824306 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.476471879 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.475527207 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.475962036 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.473993548 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.475104854 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.476517322 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.475537319 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.4751348 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.476224741 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.47470007 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.473680677 seconds)
  done (took 36.748875449 seconds)
done (took 76.308348729 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.457252139 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.477919332 seconds)
  done (took 6.294990254 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.533996632 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.532530139 seconds)
  done (took 4.422504916 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.474895874 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.476309129 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.475483926 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.478665964 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.474559919 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.477007696 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.476788375 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.475723271 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.478502085 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.471785822 seconds)
  done (took 16.121367603 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.479564538 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.479679477 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.478424989 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.475422179 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.475855169 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.473648235 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.476304463 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.477668991 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.477351929 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.476271927 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.475664529 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.475275224 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.477185373 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.476940653 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.474967718 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.476107235 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.474253903 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.478413057 seconds)
  done (took 27.942517014 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.489468362 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.495398157 seconds)
  done (took 4.347640192 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.605261741 seconds)
    (2/7) benchmarking "second"...
    done (took 1.518782486 seconds)
    (3/7) benchmarking "month"...
    done (took 1.581834087 seconds)
    (4/7) benchmarking "year"...
    done (took 1.57333231 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.520532208 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.498512459 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.514106799 seconds)
  done (took 12.174415656 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.479600907 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.784506759 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.975479659 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.649912984 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.471846595 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.492450185 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.471326675 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.491247076 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.495011832 seconds)
  done (took 16.674530637 seconds)
done (took 89.339555465 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.463407164 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.49586376 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.47879023 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.488138546 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.817545226 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.517628532 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.468265546 seconds)
done (took 18.09521501 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.458530083 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.476350886 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.475622039 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.489118042 seconds)
  done (took 11.262038992 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.466858763 seconds)
    (2/2) benchmarking "read"...
    done (took 1.793244262 seconds)
  done (took 5.623531474 seconds)
done (took 18.253262977 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.482888186 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.480541799 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.48342242 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.481306192 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.482648556 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.48009572 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.478952603 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.478516949 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.480714399 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.482127134 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.481676133 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.48178729 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.482092553 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.479768011 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.481818611 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.480950738 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.482789976 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.48232016 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.485048452 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.481641123 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.482917962 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.484219692 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.481475577 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.479621951 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.480444956 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.477935786 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.479666704 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.479112234 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.482587344 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.481777564 seconds)
  done (took 45.805402545 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.484999335 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.48718376 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.481652733 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.484828365 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.477864722 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.484696794 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.483363697 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.48333652 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.484483066 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.483397111 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.482268293 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.482929907 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.481229121 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.483954929 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.480893235 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.48164271 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.483771534 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.482246354 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.483515015 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.48472765 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.484037804 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.485119096 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.485144819 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.487735531 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.482974125 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.483131887 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.484652625 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.483309022 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.48444961 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.486671962 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.48119011 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.486727156 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.482836624 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.484897959 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.482354263 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.483262982 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.490392815 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.48854161 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.478704125 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.481835844 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.487011723 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.48735586 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.483898711 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.487000494 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.488876654 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.486351052 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.486252124 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.48935363 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.486788078 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.491005264 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.489294297 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.487741165 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.486889657 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.489357292 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.48837047 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.490117073 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.491315211 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.486871795 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.48808051 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.488176279 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.487379367 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.487767374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.48955287 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.490113864 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.489348105 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.489675017 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.487999082 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.489180744 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.491479928 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.488835765 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.489996206 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.492859667 seconds)
  done (took 108.35472473 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.488395003 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.489493304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.491245556 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.489280002 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.491942603 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.490353362 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.48925246 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.490891866 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.491439757 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.491690183 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.492493504 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.491193957 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.490305472 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.492110666 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.489340578 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.493173705 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.491547558 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.491307454 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.487928623 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.490017902 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.488973817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.490547763 seconds)
  done (took 34.167333681 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.492190955 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.48964525 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.488755706 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.492141978 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.496676732 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.490562758 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.490976512 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.49241626 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.491486036 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.489726615 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.490452905 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.49094715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.493649165 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.489325522 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.489764522 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.493449828 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.49264806 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.494137491 seconds)
  done (took 28.224702561 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.493980087 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.495001825 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.494308817 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.492859767 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.495522913 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.494555086 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.493426855 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.49627412 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.493308354 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.490245261 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.493592141 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.493281223 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.495461572 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.492248929 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.496508763 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.497421942 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.494728991 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.495413194 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.495260722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.494856712 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.496831563 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.493172403 seconds)
  done (took 34.25577834 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.492593042 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.494132505 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.495043836 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.495144876 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.492005354 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.491040294 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.494540566 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.494658601 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.496577327 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.494718794 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.491421041 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.491355553 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.492667197 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.493300821 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.497082578 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.489620384 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.490973016 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.494763459 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.496895728 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.493597414 seconds)
  done (took 31.245084893 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.496282352 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.494969615 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.494701644 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.496280253 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.495082867 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.496808791 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.495412722 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.495021563 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.494692774 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.496331842 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.500368203 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.497666364 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.498471866 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.497548185 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.4964459 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.495209228 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.49630877 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.496734406 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.496565102 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.496906494 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.497229762 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.493818797 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.495867686 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.497226468 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.494102402 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.496867021 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.495962556 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.497004473 seconds)
  done (took 43.270478468 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.513075574 seconds)
    (2/2) benchmarking "in"...
    done (took 1.515444221 seconds)
  done (took 4.405930792 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.495630933 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.497798008 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.495005738 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.497760022 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.498778909 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.499404245 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.498107551 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.498464045 seconds)
  done (took 13.363077395 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.493399167 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.498875374 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.497679077 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.496996391 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.499276025 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.497740826 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.499801633 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.502485149 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.497579465 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.492183669 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.495891153 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.497403282 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.4901339 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.490127567 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.490828512 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.498457115 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.497043525 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.500425392 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.497175657 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.497640899 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.502469745 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.494111299 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.497138055 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.499057508 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.492626707 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.507763885 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.49717435 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.501273786 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.494118411 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.497214653 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.492693629 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.500291668 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.500560596 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.498950005 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.499117007 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.501327243 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.502587839 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.498978476 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.502021924 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.504023544 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.503427207 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.501851714 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.495395697 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.499662824 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.501123123 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.508337782 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.503712659 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.504138673 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.496446083 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.501634719 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.505445768 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.495959992 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.505204707 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.497693131 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.501117241 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.507669346 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.506707667 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.501229211 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.504867414 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.510212517 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.516424434 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.509580608 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.505460498 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.507127053 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.502781877 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.509918729 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.510083495 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.508201442 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.503410374 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.505513749 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.504632212 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.520930767 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.514136302 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.506884462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.505266102 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.503759348 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.498711608 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.51227732 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.509040236 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.510684763 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.509227136 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.508060126 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.507861905 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.507947106 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.499187474 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.508979739 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.503999687 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.507922029 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.500450388 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.51327839 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.513571043 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.508412344 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.500936882 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.502569472 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.507714475 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.510892414 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.499921317 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.502246266 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.512364534 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.510717382 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.510231533 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.501666283 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.51145163 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.508789771 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.50774311 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.510885555 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.512720845 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.502450547 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.513288032 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.511047213 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.509939461 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.503213439 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.510085322 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.511153467 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.502850997 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.509427235 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.511717012 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.505123267 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.511564149 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.50620117 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.505923807 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.516346845 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.510904605 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.510773085 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.504732494 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.51424077 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.511231881 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.511245512 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.513007314 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.511023749 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.50954377 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.507712114 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.514147355 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.50295327 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.515095154 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.501869196 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.513821594 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.508862538 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.505799777 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.501422684 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.506679376 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.506333939 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.504109727 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.502680478 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.510369666 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.503795123 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.513472921 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.506805393 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.506115142 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.508439317 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.509326484 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.504595596 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.502862422 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.506119573 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.495481297 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.50974692 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.50394212 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.511652822 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.502463111 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.510233086 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.504866618 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.499233335 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.500659619 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.511497063 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.508820935 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.50736054 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.511216346 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.505049635 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.502759593 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.50087726 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.508954423 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.499128891 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.499863612 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.506779864 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.504015693 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.506572456 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.503492291 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.512176724 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.50583257 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.505534424 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.501475089 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.509673518 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.512331567 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.504825622 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.514120114 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.507754079 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.507588934 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.505877696 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.50153552 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.505725017 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.503352124 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.51405652 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.518032233 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.522607124 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.50575256 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.506226147 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.501790409 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.511044138 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.507684338 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.515319357 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.508628679 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.507728815 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.503168126 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.511276878 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.506244015 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.514110765 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.502699416 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.511799316 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.515220253 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.511540624 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.508498274 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.504432883 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.509736255 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.516569461 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.510137566 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.513780657 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.504731071 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.51461888 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.503708731 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.508003298 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.514924081 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.510609445 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.512262459 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.517094625 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.510356232 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.5103495 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.512937931 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.509741902 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.511748653 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.510192827 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.511161825 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.520386581 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.517233487 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.509865144 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.517927404 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.514555263 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.508969557 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.513748922 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.518552124 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.51452567 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.506814237 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.518110063 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.512682645 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.517866951 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.516770926 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.510235056 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.519952713 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.518320614 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.524680585 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.513083461 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.523425075 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.513085392 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.521571447 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.515078984 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.517717656 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.519549849 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.51999899 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.524258124 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.518729705 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.514186957 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.523293842 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.519122925 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.518988871 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.518443361 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.529759402 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.519400361 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.516326237 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.519944833 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.519597265 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.522264847 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.512965219 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.516963637 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.517273757 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.536168894 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.536581015 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.525267668 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.522463573 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.524448278 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.524369586 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.523068407 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.514977639 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.51496061 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.516896667 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.517462573 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.518231346 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.52223361 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.516773774 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.525537903 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.522090747 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.522142958 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.525393808 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.519917263 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.514794259 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.525371092 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.521107442 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.52433032 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.514787492 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.527176472 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.518657115 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.524733222 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.520728973 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.518323423 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.529898246 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.528380628 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.524972708 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.521471761 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.519180164 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.518942096 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.520325828 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.526776878 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.516935807 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.528765453 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.519887402 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.527625779 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.519851595 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.530015741 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.531253336 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.518213823 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.530629055 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.523898271 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.515054035 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.519691997 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.526766556 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.528784841 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.535221421 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.51894745 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.52908564 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.52561951 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.526558052 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.523537605 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.524199025 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.525890843 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.525777256 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.531585486 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.528598816 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.522535994 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.528115139 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.532647187 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.521774523 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.527068011 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.514433327 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.529206281 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.530257259 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.52453459 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.522645735 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.522923326 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.530454939 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.525035784 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.526153629 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.523717047 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.523827903 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.528829694 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.528379423 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.529149456 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.525372143 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.528315601 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.530116173 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.52932583 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.537438585 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.521836415 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.532705131 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.52512515 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.519472397 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.525709515 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.525057902 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.530899864 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.521913666 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.5250439 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.527674175 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.52025663 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.526814644 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.536565072 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.521182627 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.527294285 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.537570081 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.514775365 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.525419388 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.526769052 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.515418827 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.53253168 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.522868065 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.519001593 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.521927617 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.527711701 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.528827584 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.517689935 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.530598549 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.524112624 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.532284551 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.528615323 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.521358667 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.52764576 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.5300171 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.524360854 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.528283607 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.530904443 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.540503467 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.526580572 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.530293579 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.525111498 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.534259637 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.534187587 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.527185069 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.534333667 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.533337739 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.527317763 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.525485535 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.530236637 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.523877281 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.532020917 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.525238629 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.522341742 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.529207463 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.529667235 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.533845071 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.531921373 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.523658401 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.525215237 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.533523842 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.526303336 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.529852394 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.5298795 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.535003435 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.521305214 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.517290717 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.528970098 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.523160316 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.532364717 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.51977549 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.52505464 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.523156589 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.529944298 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.525554195 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.528411732 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.521420529 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.523779724 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.535317117 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.532916271 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.528547644 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.526386668 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.529644435 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.519516665 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.524455831 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.529584035 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.523989094 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.526155139 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.532817235 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.527923198 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.524592616 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.526971876 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.532234124 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.529892419 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.530412625 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.523929957 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.534939685 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.535129287 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.534500797 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.522595794 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.527864678 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.525158597 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.52825942 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.531689352 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.521828666 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.536514589 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.534843916 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.527602899 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.529967825 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.527247331 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.519845978 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.534902909 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.529692805 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.528104545 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.537041275 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.526686878 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.53624023 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.530126621 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.530690785 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.521490532 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.524065879 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.524740894 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.527675572 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.532286335 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.528908728 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.533623716 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.529542047 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.537051145 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.53217223 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.53024077 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.531636671 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.522909616 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.533262638 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.526085126 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.531677769 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.531167999 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.528151348 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.528267026 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.532254714 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.528020168 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.52975511 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.537526533 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.530919839 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.524680656 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.532304358 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.537151257 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.537392123 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.533841803 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.526232744 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.52636746 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.534866122 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.533470732 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.533323873 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.530044268 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.544400692 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.54419897 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.530043525 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.530519583 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.538498743 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.541846049 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.534362534 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.536081219 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.5323817 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.536570821 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.540536423 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.532352607 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.542219539 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.539400192 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.528351243 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.538934254 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.528973857 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.534690341 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.537211608 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.54253107 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.537229633 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.531582697 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.545810031 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.542759842 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.535731533 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.549679777 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.539758566 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.537163529 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.542596852 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.532124089 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.540899233 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.530064877 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.543850963 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.535403683 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.536968319 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.534907545 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.531626055 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.537844876 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.541789243 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.552031469 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.539200026 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.532832011 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.534432491 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.537145079 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.536899183 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.536343315 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.536098836 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.540354115 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.537188068 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.531111262 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.552294085 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.551640571 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.543803075 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.538552658 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.538312975 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.537043647 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.542055686 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.536633756 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.542498924 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.535418317 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.534328276 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.53699903 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.547487028 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.541548478 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.53296219 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.536618186 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.536092208 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.542133046 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.548295513 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.5578915 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.54180264 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.54259445 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.543774644 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.543151304 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.538377937 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.54305705 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.54168897 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.537290278 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.536654247 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.543394414 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.540837752 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.537147056 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.534583544 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.545768613 seconds)
  done (took 907.214200227 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.540868471 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.537956426 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.542230405 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.539615363 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.541604907 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.538898311 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.541509896 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.539432724 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.539423162 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.541578796 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.542332757 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.542069556 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.540378751 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.54050603 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.541633238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.540779071 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.543409273 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.539069649 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.541251191 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.539769576 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.540414988 seconds)
  done (took 33.771399835 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.539611854 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.542867625 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.542053342 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.546754951 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.54169879 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.538793299 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.543087363 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.542225869 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.541572799 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.540488315 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.544249372 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.545521033 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.541954508 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.541270546 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.5467673 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.547920589 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.545308394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.547588946 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.546716324 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.539504534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.546149225 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.545123547 seconds)
  done (took 35.375658481 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.54334382 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.546210417 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.540187906 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.550316355 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.544496036 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.546500288 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.540475459 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.544152906 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.546613218 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.540082909 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.541231921 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.539482038 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.543395084 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.549950903 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.540627311 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.549929081 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.545382497 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.549437987 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.544582931 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.544656762 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.542930837 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.554928946 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.54779122 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.54133635 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.553842193 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.547500939 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.548278945 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.54732759 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.541083758 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.556359663 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.550170421 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.545550719 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.55303133 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.549109371 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.546354128 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.553630279 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.550951885 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.551533525 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.549952709 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.55034103 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.56041091 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.55145083 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.556678836 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.558950182 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.549148171 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.547654334 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.55544962 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.552566641 seconds)
  done (took 75.724123559 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.549942608 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.553809365 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.555292516 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.554342468 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.555198527 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.549468641 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.55081108 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.551367999 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.555444483 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.551103337 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.554526184 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.550118954 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.549474953 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.555154708 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.551930755 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.551330664 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.550859133 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.55553191 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.551255293 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.554412975 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.553846291 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.556300118 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.55081398 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.549789058 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.556977689 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.556362215 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.55513701 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.553808387 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.554708867 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.557170854 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.556837965 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.556010151 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.552956333 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.556756877 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.557745735 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.557312665 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.558109328 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.552878134 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.556313068 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.556619351 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.555542445 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.556569479 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.556922186 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.555648345 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.557249376 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.557515932 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.554807054 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.556361656 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.558118473 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.558243612 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.5561523 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.558626182 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.557012468 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.554355579 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.557821318 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.55596159 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.554377495 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.556430958 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.559798752 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.554709039 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.558131706 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.556690396 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.558800209 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.561047676 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.560278942 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.556639501 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.554637975 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.55866322 seconds)
  done (took 107.184497703 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.559552844 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.560278046 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.559493662 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.558330046 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.555427609 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.557507831 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.55641459 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.556186499 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.559362048 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.558881374 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.55988133 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.555746927 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.551541931 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.556105041 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.556593828 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.560833081 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.562031712 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.553200511 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.558030854 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.562371298 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.561407533 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.5582298 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.560761581 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.561594465 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.560491047 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.563092124 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.563476124 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.560732399 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.563986396 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.564059915 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.565253128 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.56226826 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.561328281 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.561232103 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.561480973 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.561205581 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.56456876 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.561734301 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.56391143 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.563729854 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.562088117 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.561501283 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.56216694 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.563298888 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.562053545 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.561005881 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.562393701 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.558691236 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.562371773 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.562917953 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.563001933 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.564105066 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.562660227 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.563337816 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.564254713 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.562760652 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.563377357 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.562927963 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.563175004 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.567253538 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.56481139 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.562270661 seconds)
  done (took 98.217986881 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.564666011 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.565102307 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.562858368 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.564088823 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.565256348 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.563532769 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.564142621 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.563184917 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.560460346 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.565781365 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.568182821 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.567643249 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.562545283 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.564294082 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.566239276 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.567389387 seconds)
  done (took 26.471605612 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.565052911 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.562808929 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.563652328 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.566197927 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.56531442 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.564852198 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.564894539 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.56114544 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.563285811 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.565773363 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.56207517 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.563243752 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.561799305 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.562608192 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.564012106 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.563393848 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.565467753 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.565550609 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.56590623 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.562529343 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.564095613 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.562879208 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.566466494 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.56638792 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.565483033 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.565352535 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.566903859 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.561612967 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.563263112 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.564831131 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.567973064 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.562146885 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.564750782 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.567012401 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.563108121 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.560008548 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.566002201 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.567636408 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.56932093 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.562139631 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.562994821 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.563208231 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.567179786 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.568569927 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.563373348 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.56337961 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.563187413 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.566249589 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.565467866 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.566323174 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.565010024 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.565985318 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.562827515 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.570708769 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.569506281 seconds)
  done (took 87.500861471 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.568234834 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.570846649 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.569766949 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.570750388 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.565152804 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.56566231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.569521334 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.571045513 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.566541767 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.567712288 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.569562976 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.567828322 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.569515558 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.567545016 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.567361921 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.567984625 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.569374523 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.566783373 seconds)
  done (took 29.669292127 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.566395961 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.562553257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.565574813 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.569855836 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.567591112 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.566195682 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.57109074 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.56840789 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.571637322 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.569364418 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.565043948 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.568670753 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.570021032 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.567007894 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.568428869 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.571297709 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.571340865 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.572127393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.570293109 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.568618731 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.573488423 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.572585608 seconds)
  done (took 35.962159142 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.563096667 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.562648881 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.562568568 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.573650836 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.56874491 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.561204341 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.563363805 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.562705519 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.579323977 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.587796437 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.579360452 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.567975947 seconds)
  done (took 20.277997404 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570770608 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.569515614 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.570262178 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571683925 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573342776 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.57180344 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570160596 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571039188 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57354836 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.576837061 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.571720249 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572602369 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572648183 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.568158678 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568996378 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.577212843 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575504743 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575092346 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570511628 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.571249625 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.567439994 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.570762531 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572623855 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.571481654 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.574154369 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574237762 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.56953263 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.574715394 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.574076358 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569611429 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571852415 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.573078651 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.57529179 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.571118177 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57175021 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.568526492 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.576477353 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571659393 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.572097395 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.569172648 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.56752561 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.571402652 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.572808013 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.570133694 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.569633902 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.571509673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.567674262 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.570293563 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573438924 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.606055251 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573727894 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.57062815 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.577785013 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.576112949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.574406181 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.571887414 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.568257008 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.569200533 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574652744 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572749444 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575463945 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571333337 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.570819975 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.574555279 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573801053 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.572565311 seconds)
  done (took 105.236682632 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.573635385 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.570724814 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.572191864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.568847046 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.568761703 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572143933 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.573894075 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.57236685 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574486037 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57199782 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575955098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572267706 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.573124205 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.574607451 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.572095166 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.575106236 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.574433348 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575043369 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.575056806 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.573546384 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.573175632 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.57638803 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573230621 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.576089006 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.57460112 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571871838 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573679512 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575476772 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.571755476 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.574377578 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57365139 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.571755839 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.575277865 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.57239988 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.57452331 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.57405489 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.574705794 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572861979 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574409 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.573414363 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.574626445 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.574902184 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573726077 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.573529123 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.575687699 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.573638406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575594375 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.575845171 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.574557823 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575492392 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.577222871 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.575689909 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.577021723 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.572402859 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.576378 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.576243913 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575776814 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.573882589 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575979352 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.576805334 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.576450977 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.575781828 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.576373014 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.573634724 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.576846809 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.575064121 seconds)
  done (took 105.345346056 seconds)
done (took 2012.409809318 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.561172766 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.562762291 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.567847765 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.89595105 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.567010591 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.226886366 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.23315255 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.566364611 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.569183007 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.568300174 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.569465153 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.560982927 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.894758497 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.567667508 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.568019611 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.564703462 seconds)
  done (took 58.491401202 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.599504966 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.576651037 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.70880464 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.57571464 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.599735742 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.792330974 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.639253471 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.576290755 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.777986805 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.577760592 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.576159769 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.598189717 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.572543215 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.571000069 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.594820148 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.793250213 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.884730885 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.583560896 seconds)
  done (took 34.046958386 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.107984478 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.577935937 seconds)
  done (took 6.133472497 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.603466945 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.582160993 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.587637678 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.581250301 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.571070564 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.572013788 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.578501657 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.572576669 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.580602842 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.727919415 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.585091296 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.593048929 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.580998646 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.578488752 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.589185845 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.632635073 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.717048964 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.587230582 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.58531565 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.581214497 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.576924294 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.779574253 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.6249077 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.590135422 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.728078246 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.58430796 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.588130949 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.594445997 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.731066406 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.590986946 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.576922315 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.579342607 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.577938913 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.573922426 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.165054206 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.574106507 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.612083149 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.586749878 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.585645662 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.733025894 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.578429966 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.583165464 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.569296134 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.165581059 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.702404145 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.809922705 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.577601443 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.586205635 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.580971082 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.73312035 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.579535992 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.580017539 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.640149336 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.571954121 seconds)
  done (took 99.662806232 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.603467897 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.568966576 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.758026671 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.59608987 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.569546873 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.573830333 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.591135222 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915442006 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.639802009 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.56949772 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.936402101 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.262353444 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.571438395 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.643131176 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.619237031 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.62549312 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.569861649 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.572455023 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.568167043 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.57100502 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.174831209 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.571400245 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.593584573 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.768920391 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.616780482 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.172184353 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.571123767 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.576117764 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.573798483 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.570156644 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.22578117 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.581174655 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.632761672 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.570911934 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.88474267 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.02319773 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.979774177 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.572715116 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.592329229 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.575297225 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.572436408 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.173380215 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.000590259 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.569508782 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.571842494 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.174014592 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.570982595 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.571600234 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.575284826 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.848868314 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.573764741 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.57643228 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.577251134 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.578828363 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.572304783 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.634281864 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.63763141 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.174389785 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.572548878 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.578172292 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.57921829 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.574234494 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.57372947 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.573138507 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.576267808 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.003723639 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.761165295 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.573926384 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.003620712 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.221494273 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.573929342 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.319830295 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.576414223 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.598765673 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.684917274 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.57364522 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.579547088 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.16736386 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.582860166 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.574007956 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982251644 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.576474052 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.91109339 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.593388109 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.572223269 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.222392833 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.590348371 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.64198483 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.575187788 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.579941592 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.573637228 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.580697437 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.899160568 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.599081704 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.575169682 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.573927548 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.609379264 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.576207499 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.574724047 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.580616615 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.30931839 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.584768723 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.57532463 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.58143085 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.575560759 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.580942731 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.578553434 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.576061281 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.865004236 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.579936667 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.583008175 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.578549705 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.575626903 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.583937569 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.77577813 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.582685258 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.940696267 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.577445355 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.588310164 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.582427271 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.576507368 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.645094273 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.576413281 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.577199868 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.538077243 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.901342706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.611916958 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.577318934 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.578657134 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.576651087 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.578673636 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.581159912 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.614548237 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.581362316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.448591529 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.60494976 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.607715248 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.577494912 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.584560358 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.578275892 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.583888669 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.580256168 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912122024 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.897099306 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.822751589 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.584535367 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.580007754 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.433836638 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.612761402 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.766704113 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.60066458 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.580626574 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.88812642 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.802984658 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.582885434 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.580715833 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.580739398 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.870519106 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.580750308 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913770046 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.251164984 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.581215593 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.580439937 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.430093014 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.346937 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.585975194 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.581870998 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.915214387 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.599833658 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.581454525 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.58056842 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.582180469 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.580804589 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.584274609 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.585495395 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.580116171 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.579988134 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.6545626 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.781756703 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.600664101 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.583456712 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.178856914 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.591013813 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.581896492 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.58779631 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.583404518 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.582497096 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.634661813 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.587866544 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.608113936 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.585157446 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.592426058 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.212665253 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.584165421 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.583701876 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.783681736 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.390709827 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.583312718 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.583329178 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.583700721 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.619389863 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.207471828 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.645545607 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.94883929 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.58383285 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.62791128 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.583163836 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.608124968 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.212288923 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.591859323 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.583384523 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.37957212 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.584255461 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.359972427 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.585335722 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.582157495 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.315716305 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.583613303 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.58606149 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.58408442 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.585578647 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.897959461 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.585980694 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.616661185 seconds)
  done (took 555.659990069 seconds)
done (took 755.441901636 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.584721492 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.590096761 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.591210973 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.591489524 seconds)
  done (took 11.825061345 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.602283115 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.591098177 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.600968903 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.59153206 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.60125631 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.591464742 seconds)
  done (took 11.044818776 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.585906009 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.59103671 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.590002051 seconds)
  done (took 9.234554515 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.829536163 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.58810588 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.00313939 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.587755071 seconds)
  done (took 10.477332839 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.60302193 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.60314089 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.602565141 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.601541301 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.604590648 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.603476781 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.60159665 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.603288798 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.603891641 seconds)
  done (took 15.89064953 seconds)
done (took 59.940177948 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.68056989 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.669305738 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.587582183 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.655483273 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.732737805 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.679165299 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.676053503 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.678233382 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.67628689 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.628413819 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.672115941 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.620135202 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.675442683 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.798096095 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.632361438 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.673983463 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.620361719 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.767142843 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.68008599 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.630296041 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.700577384 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.627278392 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.631729811 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.594924043 seconds)
  done (took 43.457803189 seconds)
done (took 44.927564758 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.624491497 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.694224345 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.600087725 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.601266737 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.603694444 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.598545989 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.623037788 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.603963833 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.615330559 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.616061576 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.597916921 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.610161256 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.618895841 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.613278031 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.636396289 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.603312382 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.603458613 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.612622746 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.6180486 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.619237042 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.60662872 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.604912412 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.630596233 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.603139073 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.611210239 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.611668246 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.60865537 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.609948906 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.611494191 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.619876727 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.595155105 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.609879966 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.618992114 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.61461691 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.60714045 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.613637491 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.604821697 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.69544618 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.623743479 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.615019803 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.610513179 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.618226546 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.609446684 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.608413391 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.616427904 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.633375852 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.613401832 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.619023619 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.594480027 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.595932559 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.626079951 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.618276652 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.614250645 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.595734936 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.59417819 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.620925641 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.615499475 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.625948552 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.613066755 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.607450038 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.640041066 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.625438508 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.617718579 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.613968766 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.612605857 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.621437703 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.616402328 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.622375715 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.612617262 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.609576452 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.60922003 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.613544513 seconds)
done (took 125.774122338 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.725091529 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.598095283 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.753220978 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.609501767 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.770602385 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.722768436 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.609798224 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.612348803 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.608432441 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.40366799 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.609892743 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.612088084 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.601261411 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.609094289 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.722804285 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.61253636 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.610528491 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.303392555 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.611599456 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.739846468 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.603453604 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.612084563 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.612138901 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.406499891 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.60007621 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.598052094 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.737066682 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.611448735 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.304958972 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.596355608 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.600406831 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.304063838 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.735550364 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.631522241 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.622640324 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.621054265 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.770276376 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.616302441 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.72416471 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.729627758 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.762383566 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.651790812 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.597960794 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.602072609 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.614261693 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.615861437 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.612239713 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.642357171 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.603079717 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.614348055 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.306173974 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.636104679 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.613301961 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.614097739 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.61400048 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.643697972 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.616185265 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.615487595 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.742757323 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.615467003 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.727470726 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.409269925 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.408063372 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.615174485 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.602485007 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.614932443 seconds)
  done (took 126.673574455 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.677499537 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.681404981 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.729075733 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.60919124 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.656465167 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.730345633 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.608955946 seconds)
  done (took 13.171700896 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.613859922 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.614908266 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.655944805 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.657167608 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.61440678 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.780898014 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.614642649 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.619088284 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.615029478 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.657588446 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.615100933 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.616713971 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.624736647 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.607905818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.654248955 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.620323635 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.725421968 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.610070386 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.616392232 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.765277373 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.616671112 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.625999087 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.660551692 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.621535095 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.618128701 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.614810759 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.369556072 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.617414322 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.618026405 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.617780761 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.617657313 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.67498733 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.617461171 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.607925163 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.618591541 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.72714312 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.619255927 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.617219373 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.617345076 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.611665638 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.61874048 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.618946952 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.618945642 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.617511304 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.61860191 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.635570185 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.619395831 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.617049947 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.618053449 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.619152388 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.660261324 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.618337919 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.617684417 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.618611123 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.665320821 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.627507666 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.619001215 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.617708269 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.617968872 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.620215045 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.767962285 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.658930966 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.620561039 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.65949099 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.620634755 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.620234724 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.619206991 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.619870132 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.703141048 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.620359037 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.659033234 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.620603814 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.793524391 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.636902264 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.621927231 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.615214522 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.615173105 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.622357156 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.609915176 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.618358003 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.620265446 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.615482137 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.620361862 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.620448406 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.62066453 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.773397036 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.722781127 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.621262925 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.629945183 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.621107993 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.622823286 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.664885522 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.62191293 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.622454145 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.663968636 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.729218752 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.666835486 seconds)
  done (took 165.160173937 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.626321132 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.626904289 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.616736446 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.640544824 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.616487287 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.614722248 seconds)
  done (took 11.22851026 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.615732828 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.625714376 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.622728043 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.623461606 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.625185254 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.625460263 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.622275368 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.616662844 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.627280551 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.623585784 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.623613001 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.62552626 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.624366072 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.622901661 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.62281486 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.624378389 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.624402716 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.624204316 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.62433381 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.6288714 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.61378042 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.624131697 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.624925138 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.618159239 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.62796581 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.624829936 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.639338189 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.624343764 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.624366255 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.625366739 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.627845682 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.625631179 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.617859167 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.622357112 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.628253633 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.6191541 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.627880079 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.627144519 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.62494556 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.625765146 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.628159072 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.627375662 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.626329269 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.627509514 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.620356988 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.622359483 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.630887293 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.643749314 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.626200487 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.628511538 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.628430933 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.626370815 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.627633784 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.628034071 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.622763056 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.623197447 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.631608224 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.627806123 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.627348637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.620665885 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.630375755 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.629245228 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.621953163 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.632527815 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.627864143 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.628691128 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.621346208 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.63231519 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.62931579 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.628449494 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.630080427 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.627007276 seconds)
  done (took 119.542336437 seconds)
done (took 437.252325691 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.99016146 seconds)
  done (took 4.482209008 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.821986907 seconds)
  done (took 4.315423011 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.569653852 seconds)
  done (took 26.068322434 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.63337841 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.618373731 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.62971622 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.620508299 seconds)
  done (took 11.992753942 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.199790519 seconds)
  done (took 4.69793805 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.625174624 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.629477607 seconds)
  done (took 6.75112807 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.033452353 seconds)
  done (took 4.527902819 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.356969308 seconds)
  done (took 4.856381211 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.642816134 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.635914404 seconds)
  done (took 6.783834284 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.611432112 seconds)
  done (took 4.105994359 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.824661513 seconds)
  done (took 16.319083634 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.637488465 seconds)
  done (took 4.133532907 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.713488308 seconds)
  done (took 4.209015265 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.632711663 seconds)
  done (took 7.124560179 seconds)
done (took 111.860706639 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.615431502 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.621458893 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.623530377 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.621217797 seconds)
  done (took 11.972406937 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.699582295 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.697011016 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.70172001 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.691847401 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.689874874 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.699936807 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.660093247 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.657175561 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.686864444 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.684064026 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.702367436 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.682527688 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.69991841 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.65747241 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.684551693 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.700604894 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.686656523 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.707226424 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.659397795 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.689904862 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.633811487 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.689619972 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.684439892 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.633934243 seconds)
  done (took 41.879768499 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.118678246 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.695196143 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.778815674 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.674475446 seconds)
  done (took 8.762356154 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.735797938 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.737208714 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.756634347 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.793036249 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.839127662 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.75331925 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.658222806 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.653984093 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.640904954 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.737953341 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.812013566 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.738378197 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.953006077 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.633359679 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.954749248 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.63341126 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.633284672 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.738541991 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.787319331 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.817274844 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.634170837 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.738008374 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.740530545 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.738288954 seconds)
  done (took 43.356438637 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.642538891 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.651390037 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.635300319 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.636647619 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.635706766 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.636086867 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.650541153 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.63649265 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.643548105 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.63528401 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.634584268 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.635909954 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.649585579 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.635749777 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.636287092 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.642522517 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.638804564 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.642413565 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.643259619 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.636383493 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.636856743 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.64298992 seconds)
  done (took 37.578754363 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.621071444 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.62204181 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.972509452 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.878808505 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.622031427 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.627002398 seconds)
  done (took 15.841658301 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.711639973 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.856956941 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.62853038 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.048302215 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.133896657 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.63225112 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.631454401 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.905103563 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.266522477 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.289921035 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.679682078 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.711112799 seconds)
  done (took 23.9967883 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713929912 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.632717829 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.638267474 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688644203 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638911132 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.633526873 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.681936634 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.186867795 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.646784837 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91024512 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645926984 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72198784 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.883895062 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648083819 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.633367615 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.618952875 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869929086 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241050811 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641802982 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643593417 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.670808163 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.650901024 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649974314 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885748971 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.641565987 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.635726842 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.896585099 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.635408026 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975164927 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955101549 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953574188 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642658841 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910595788 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130539951 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748441059 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878791176 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635991401 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.640845189 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.624229186 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.650197607 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66188915 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.643171257 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946106374 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642673005 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.636042315 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.634047226 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195463811 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.652560694 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.636632663 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.638618338 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950226579 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727764459 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.644666834 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.639053159 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.637235765 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642544573 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.64238641 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756282213 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277888115 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.63612639 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664162638 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.640802847 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.647773189 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.644082047 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389984854 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.652081224 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.644989718 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642956545 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638145122 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.656583191 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667141823 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639616106 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.659669764 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.638338752 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523011702 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.660101152 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645041568 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298915692 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654437612 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.645514232 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867905766 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639488176 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639651703 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.637486241 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.640124235 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.549586229 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656186989 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.622898679 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683443818 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.191068538 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.890307572 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668556635 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669708696 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.864173421 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.623517308 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640039086 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.651972668 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647926967 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.662412424 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.194731957 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647590968 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.648369977 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89143247 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.853932733 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652972491 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.639610704 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196014636 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654550958 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.673046504 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.653545992 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.883654316 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.336293235 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952638991 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645916412 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.677693893 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.640815322 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.600374105 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650407393 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.651796895 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644801964 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9531499 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.62372377 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643698554 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714020397 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651107098 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.642429313 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642615147 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663416093 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.644587177 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.873255457 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658697948 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953277833 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.645821272 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641993861 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.64262492 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65193715 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.643480068 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866883348 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650493617 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926151596 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645912257 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645155671 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643988561 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.864887042 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.648893621 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.653760983 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989068851 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660323275 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.667677107 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948816459 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.680042478 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759987654 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.679995594 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.664111555 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893452042 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.654452405 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.654146334 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650938698 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.648181967 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646613893 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.651257563 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666060891 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342874552 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619389136 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.653729171 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.649206258 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.66141628 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72353961 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656911906 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885493385 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.644743269 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658669588 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.653419578 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.647629419 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871721308 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956575208 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.666494288 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823830996 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.203922227 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36515758 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670753238 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.649563719 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.648455782 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.645821898 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648913927 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647463318 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.650972008 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894511479 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971950265 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.666165081 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374327317 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656062059 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.666451862 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.658059769 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960310221 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.672925998 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660027495 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.663272767 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661552844 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651693778 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.96302685 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878647209 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.669927454 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.655993643 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.176814072 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659760382 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.655036751 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.657388832 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68229559 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.655822363 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279232417 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995212152 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652318588 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964643678 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.6763819 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.67735139 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.658472319 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673596626 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656782037 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.663915265 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.669992066 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.900705325 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.65952524 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654729655 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293915403 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52508021 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300145976 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654871277 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.666275317 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.656672286 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205344623 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65788624 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659420478 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934758859 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.215149103 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.662991252 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213906059 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.665694507 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.541249164 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965615395 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890663159 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65811405 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.664063934 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971203997 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872695022 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.678770526 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.669742402 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661962388 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.640403065 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262370641 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663055134 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.837331007 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184284481 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66365334 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.660936205 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.731513829 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.663663568 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136465357 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.662225198 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659047503 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.668769913 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.665034797 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258020414 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.66522258 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659275466 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393232187 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.670353341 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.19061953 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657916866 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.905988659 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.978133807 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.961311762 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.660691642 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.665311704 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.906403162 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971225485 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666800837 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.671166742 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.329135685 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.532632775 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.669775954 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662058554 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.636393888 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.665834295 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000933619 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.67578506 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.672697417 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669529641 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.66543929 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66310729 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.663523973 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.673178835 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636083817 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242584184 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.675875342 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665752327 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662895103 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671408474 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.91692484 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.675848827 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381787534 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899100541 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659848713 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700548107 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.671363772 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678801446 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.652434992 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.665428958 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.66725913 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681206534 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.892624074 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.685202429 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.651179586 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.69913272 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.880750886 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662632459 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.678016921 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926073633 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.669067581 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.684693187 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.574238713 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700529527 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.674187914 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.669667888 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.676830946 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.704254121 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741788311 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918286286 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.982025699 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.984653346 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151232379 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680293421 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67179478 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.685771953 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749796259 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682864541 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.683644719 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.672240555 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385244562 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571008167 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399769119 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984631162 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671865697 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676650091 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668105566 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904690453 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669482874 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94331483 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670786056 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.66688806 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.694717148 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681473962 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673991894 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883273405 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939670036 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667762564 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.687149759 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673581716 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.668786204 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986536026 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.885606986 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253027507 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303268297 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66832942 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.668689674 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.241538409 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950986612 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669339324 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670550778 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669326702 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.698962152 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674455996 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.68188644 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683297521 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897446377 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987119192 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18287714 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987679366 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.70220737 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.552052354 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674409098 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.921170508 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510417137 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.921379697 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399240357 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.513086748 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929534786 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746503797 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9209848 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.674561633 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910011989 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.669918789 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.675575765 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.676744034 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675003818 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.67134541 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987440093 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40190265 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930609213 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.681511702 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.674987774 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7045343 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.924574131 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.90261171 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.607412011 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.897447358 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990309396 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.685106744 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.67517133 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405228229 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993295489 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676569193 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.676662231 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932425063 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.676479734 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712553668 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.548808503 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.673708 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316362263 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.884961902 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695607668 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680242743 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524171569 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408222044 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.68587315 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261737724 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.676121822 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.696509356 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951501202 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.681802347 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.685943631 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965857474 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.682218678 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.681155037 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930267454 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.394891948 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.574369529 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.672553427 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.696524656 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.68426824 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671697746 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.742674626 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677106944 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.685066361 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.154184391 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.678429017 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678806318 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685624731 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.692512496 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672525288 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.6805472 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680185568 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.677535826 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.684330261 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.682669934 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.678121359 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796873731 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289973781 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672318756 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.288503652 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.016816186 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93062047 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.677820353 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.664082017 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.686380068 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679900701 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674236768 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673296086 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.670994075 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315336191 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.684275449 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.994250781 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683543637 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.891143165 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893349172 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.678467382 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925899306 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.6871997 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702309368 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.66085752 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680659972 seconds)
  done (took 1123.484710266 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.670427257 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.728096536 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.709643458 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.713306995 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.689383136 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.723486559 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.732658696 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.721244081 seconds)
  done (took 23.227929572 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.682767311 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.680721259 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.674739801 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.681078635 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.679706829 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.211329398 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.671657839 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.675170835 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.691684689 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.687962331 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.675198235 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.379836367 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.677503589 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.680737486 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.672840385 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.676681861 seconds)
  done (took 37.644684841 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.891835959 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.846694906 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.141924843 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.737017031 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.687262451 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.668485717 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.038522021 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.688220062 seconds)
  done (took 30.234100676 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.684423199 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.68013794 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.682664033 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.68359764 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.684031963 seconds)
  done (took 9.953256929 seconds)
done (took 1409.431666087 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.682199819 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.682675281 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.679360516 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.68299802 seconds)
  done (took 8.268905944 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.6609974 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.663614536 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.663887069 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.680548748 seconds)
  done (took 11.208444491 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.127597337 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.342072234 seconds)
  done (took 6.007068159 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.677765516 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.444555914 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.427357429 seconds)
  done (took 9.094474696 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.999326069 seconds)
  done (took 3.54201509 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.069406244 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.167307737 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.670724662 seconds)
  done (took 8.447789575 seconds)
done (took 48.106468564 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.677046146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.431257371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.835932194 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.671394281 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.835459612 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.828306723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.946263368 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.673060576 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.6717851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.675775029 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.671334522 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.839267247 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.933427167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.437041346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.934182012 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.430346577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.839380968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.679206612 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.685704591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.66817621 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.946710572 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.670865457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.676167687 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.678791266 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.839598153 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.824928723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.671699926 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.438006899 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.677358182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.686440882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.823207462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.691551901 seconds)
  done (took 92.53134268 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.675432595 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.671065368 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.675190107 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.668479519 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.695551627 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.674741012 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.674645417 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.673849197 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.673049404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.696518688 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.672413995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.697545645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.671982826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.671514103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.695481367 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.689545026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.673254453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.673190912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.688358898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.677723976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.675278134 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.670971313 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.708170535 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.689727645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.67452464 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.6997629 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.67653087 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.674572642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.674586431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.693610106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.675849124 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.673438235 seconds)
  done (took 87.319216451 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.687129409 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.676638824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.677606857 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.702880629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.682319965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.675323474 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.693794189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.675020976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.676043377 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.692318019 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.678915003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.676977167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.6789479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.674517803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.675921454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.675894909 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.674373491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.675609082 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.686378599 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.676337737 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.678451415 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.684530218 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.675569539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.688347378 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.67822704 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.678563265 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.686988401 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.680571601 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.676818544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.677363221 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.681944366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.679637952 seconds)
  done (took 87.326378625 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.919554444 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.694657552 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.698106432 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.687742438 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.696290333 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.69452359 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.687178076 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.921680808 seconds)
  done (took 17.548176833 seconds)
done (took 286.270850562 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.707272074 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.708675533 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.717675297 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.68929737 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.708530976 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.718848777 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.916875734 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.717880362 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.910969326 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.690237222 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.706253449 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.697716376 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.623945295 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.837250395 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.686806847 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.687492445 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.7086791 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.680779658 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.695143855 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.945218815 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.71820282 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.686651411 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.709022545 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.700109236 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.671693501 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.762175536 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.765389618 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.857179014 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.822728388 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.759958154 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.684327065 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.709360636 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.693459794 seconds)
  done (took 76.846891823 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.693151158 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.696101688 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.699522942 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.699285666 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.69796282 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.705965469 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.692641177 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.700761376 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.696477565 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.698578576 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.700602989 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.703017379 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.705724763 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.697268776 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.698691333 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.688503247 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.689564577 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.697882777 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.695450579 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.68860067 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.69972993 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.700846561 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.700952188 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.699957357 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.696520036 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.69851183 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.70060976 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.701663567 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.700449836 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.69878407 seconds)
  done (took 52.498397673 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.700910876 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.685180876 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.685785334 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.698572503 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.691308618 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.695033902 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.053094401 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.703124812 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.697449683 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.698990567 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.690707851 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.7002808 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.750358791 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.688867195 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.697365527 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.704087182 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.703150507 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.692408714 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.693812722 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.710690727 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.060743105 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.70834677 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.056331965 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.714206845 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.695602756 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.699416982 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.704305999 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.688692926 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.717575754 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.689412991 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.657453298 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.048902097 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.692823748 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.687441278 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.652876798 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.7111395 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.707589684 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.700454777 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.706045094 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.699424138 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.055374552 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.701326235 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.690007278 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.690657889 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.701013637 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.708064981 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.693912666 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.700334442 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.994480504 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.704608862 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.693063342 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.700537382 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.71025703 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.699728769 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.996024437 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.701778926 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.701731675 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.693033995 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.703597964 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.045905457 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.704305297 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.701778314 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.69225794 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.699075603 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.692377286 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.706693071 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.715342062 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.700428575 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.693036742 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.70177555 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.691317169 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.701490563 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.712729363 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.700791345 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.69199154 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.703362364 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.705116112 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.697356837 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.693175104 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.047355901 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.709912316 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.703617835 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.067816051 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.709846204 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.714485602 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.714970223 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.71241955 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.771835023 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.052817531 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.654595311 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.712358347 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.689779242 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.061794385 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.713409784 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.704005313 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.698298535 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.709288686 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.711037343 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.695695214 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.691603629 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.700217535 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.718885168 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.697373587 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.708009362 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.049648654 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.70773275 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.695095159 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.701989186 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.77677438 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.709422019 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.717528779 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.705534454 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.070945033 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.71039537 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.710288382 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.697746437 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.698827548 seconds)
  done (took 243.512530966 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.700450747 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.711408719 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.698452141 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.711898028 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.696997336 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.704738921 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.700023892 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.70514636 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.706224297 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.695973085 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.700227523 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.710186246 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.705693199 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.695053497 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.721562172 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.696799998 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.69919811 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.703219719 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.717028797 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.700450563 seconds)
  done (took 51.646095765 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.710887731 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.402553374 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.361432953 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.714447221 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.711871322 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.70706098 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.770602167 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.712207952 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.713961247 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.064614204 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.913071554 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.71332686 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.712390985 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.713752026 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.362219716 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.714634264 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.084024636 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.380901331 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.713960155 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.373562597 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.715532212 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.716817197 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.704611432 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.385513988 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.08655702 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.058452902 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.781216009 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.375562502 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.715621392 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.711677246 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.374494356 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.711771493 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.705656769 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.373184598 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.716920383 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.726463609 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.71393794 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.774800334 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.779863068 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.066679692 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.376722322 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.062798871 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.727256012 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.895706918 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.71863598 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.703651254 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.387810471 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.716301307 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.702891814 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.717371888 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.722685727 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.381287156 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.712408945 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.37702894 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.719009458 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.716874229 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.379018875 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.377576214 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.376646124 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.913612082 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.70852564 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.070670176 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.71735509 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.389779502 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.719664752 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.715321016 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.714528874 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.920614028 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.37709622 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.056602552 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.067956175 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.066319395 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.717893336 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.789714 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.718130087 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.068454798 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.786299044 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.136608616 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.069656229 seconds)
  done (took 154.80764139 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.029756777 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.822256975 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.150131485 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.326444358 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.272583817 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.866691933 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.839253426 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.984938551 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.738313224 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.818413065 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.469759127 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.81973387 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.504269613 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.78812279 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.831328006 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.844929897 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.174694574 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.712369729 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.454511811 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.448507465 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.717809123 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.822980423 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.506823254 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.144864883 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.729552039 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.540595174 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.707651719 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.292452227 seconds)
  done (took 63.928855107 seconds)
done (took 644.790344912 seconds)
SAVING RESULT...
DONE!
