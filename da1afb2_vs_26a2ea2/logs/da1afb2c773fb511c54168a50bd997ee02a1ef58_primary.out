cset: moving following pidspec: 11781
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.416208746 seconds)
loading group "string"... done (took 0.597401207 seconds)
loading group "linalg"... done (took 11.640047475 seconds)
loading group "parallel"... done (took 0.186353528 seconds)
loading group "find"... done (took 3.121658388 seconds)
loading group "tuple"... done (took 2.552045581 seconds)
loading group "dates"... done (took 1.583331312 seconds)
loading group "micro"... done (took 0.762532091 seconds)
loading group "io"... done (took 0.654355211 seconds)
loading group "scalar"... done (took 64.837815287 seconds)
loading group "sparse"... done (took 16.24019691 seconds)
loading group "broadcast"... done (took 1.439863571 seconds)
loading group "union"... done (took 3.022768716 seconds)
loading group "simd"... done (took 4.334494107 seconds)
loading group "random"... done (took 16.932996602 seconds)
loading group "problem"... done (took 2.782450008 seconds)
loading group "array"... done (took 26.713559663 seconds)
loading group "misc"... done (took 1.297919371 seconds)
loading group "sort"... done (took 4.062092594 seconds)
loading group "collection"... done (took 24.350613964 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 1.047183016 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.214670604 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.299969892 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.212867468 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.383575887 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.243120062 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.243347836 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.282551618 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.768880133 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.270911251 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.236022563 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.515505927 seconds)
done (took 8.560817146 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.383463836 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.105598593 seconds)
    (2/2) benchmarking "String"...
    done (took 0.278088607 seconds)
  done (took 1.050771385 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.120865144 seconds)
    (2/2) benchmarking "String"...
    done (took 0.203524348 seconds)
  done (took 0.989999547 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.163545596 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.345219112 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.185244 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.247616049 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.221817282 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.206716835 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.181861745 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.179978642 seconds)
  done (took 2.230100338 seconds)
done (took 5.483317794 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.642552892 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 1.081694097 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.617956632 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.240333655 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.48922834 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.493611293 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.407441745 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.325411703 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.170933121 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.131670715 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.297940958 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.550500747 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.642373638 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.148023691 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.116719638 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.248884187 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.255606338 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.946268956 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.172748655 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.157039558 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.731885063 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.295608324 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.194681238 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.167639671 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.28143481 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.213139126 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.206250565 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.168018804 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.84245106 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.224264434 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.281838418 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.17841288 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.204587958 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.259931271 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.368395404 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184837349 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.812503724 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.281678547 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.184460925 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.185431025 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.824660555 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.382344553 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.318760827 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.201698571 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.116434772 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.231002208 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.185191758 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.17258781 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.189650388 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.180754742 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.257856623 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.557973087 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.182610581 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.295810687 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.183039317 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.826942459 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.176951897 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.388360985 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.202271269 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.188716853 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.166440255 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.183501957 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.256939021 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.189545675 seconds)
  done (took 26.96420066 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.298084887 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.309773248 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.169882898 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.23862351 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.234512478 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.170770273 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.163960823 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.167688753 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.217656799 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.306199781 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.229484108 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.317272575 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.14935596 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.182330704 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.246161736 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.362688809 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.208558339 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.20896575 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.181041513 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.173542402 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.220582659 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.198137977 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.187405801 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.188642101 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.275891329 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.28209024 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.203391643 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.201701777 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.169855679 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.19591173 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.233792545 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.247151951 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.156019599 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.181450683 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.297694855 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.216041372 seconds)
  done (took 8.68553939 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.343161332 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.206673428 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.382277163 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.311675976 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.239618409 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.303106848 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.276277508 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.392574024 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.308658348 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 2.608512827 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.328571364 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.258203088 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.212379084 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.180040319 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.17507985 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.176015583 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.173102843 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.124303956 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.24862343 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.261236466 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.302526126 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.205968988 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.178338149 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.79647737 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.181714248 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.188572563 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.201756528 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.110652528 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.350024235 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.19942068 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.683002331 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.182766122 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.179430852 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.200928847 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.210558599 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.298552941 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.233111687 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.228805636 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.199424566 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.18645326 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.322357175 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.222060682 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.153866118 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.171441541 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.211442708 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.211106438 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.208849055 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.214758236 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.216925756 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.182268353 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.217857875 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.157234179 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.282128607 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.257022973 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.183816506 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.427273018 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.208735101 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.20739384 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.194128277 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.326288382 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.223974504 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.16408057 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.175003424 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.20247278 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.174457205 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.216790366 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.556623315 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.177943778 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.301293169 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.197456875 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.205742543 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.782944571 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.181145303 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.178808839 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.178151204 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.205884578 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.183580727 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154839514 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.182655055 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.173731679 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.191144019 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.178032579 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.154650612 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.177067896 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.158434745 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.241834863 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.198060155 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.205704287 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.204025703 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.187033633 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.183042091 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.208496647 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.174059291 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.186697431 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.276644312 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.220090233 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.140852794 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.215972732 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.21826547 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.172657393 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.363987057 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.165332439 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.207519103 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.194464848 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.205444816 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.20012626 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.157200926 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.181747109 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.170830418 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.17492458 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.236890269 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.169887258 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.178106597 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.186221338 seconds)
  done (took 35.714454972 seconds)
done (took 72.027370116 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.499803352 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.150977224 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.134599935 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.154204803 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.153408858 seconds)
  done (took 1.848162469 seconds)
done (took 2.5773686 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.318281554 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.422055503 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.304555565 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.198457209 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.263375321 seconds)
  (6/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#6\"))}", "10-90")...
  done (took 0.28748221 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.261477733 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.272660614 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.259879525 seconds)
  (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.261478485 seconds)
  (11/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.311220682 seconds)
  (12/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.172735135 seconds)
  (13/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#6\"))}", "50-50")...
  done (took 0.260003557 seconds)
  (14/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.273709476 seconds)
  (15/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.300633773 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.347172342 seconds)
  (17/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.2669678 seconds)
  (18/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#6\"))}", "90-10")...
  done (took 0.156973072 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.334568945 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.184056353 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200279434 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.201504574 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196665825 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.18177595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177513479 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.194935783 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214318579 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194424789 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.189848156 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.161628584 seconds)
  done (took 2.834226678 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.238902938 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.184211679 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203172827 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.190359384 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194851856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.178325866 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.178192275 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.193605807 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200229307 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19721809 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.1906316 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.163677221 seconds)
  done (took 2.81200963 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.183451981 seconds)
done (took 12.104555371 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.537647933 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 16.807093201 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.263980785 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.367620027 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.492609593 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.401950922 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.948538791 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.301225456 seconds)
  done (took 22.01754061 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.285523905 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.189483498 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.19451496 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.173417909 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.191603211 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.190702727 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.187532517 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.191733858 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.175409863 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.19062428 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.190830087 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.189067279 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.189460989 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.171172549 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.187092915 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.188446133 seconds)
  done (took 3.879106981 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.239495478 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.219132794 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.180224267 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.200751433 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.194464592 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.197827084 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.202939554 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.20359466 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.198598951 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.185253712 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.208763938 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.205129393 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.204972714 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.197719903 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.202793149 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.217128341 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.192642823 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.181180849 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.215704141 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.201120293 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.200453968 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.196253632 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.197806644 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.199629016 seconds)
  done (took 5.657894355 seconds)
done (took 32.292706106 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.272937143 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182501714 seconds)
  done (took 1.196753834 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.275359647 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.273983844 seconds)
  done (took 1.307394421 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.221485287 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.172512783 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.249397632 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.20533235 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.174308199 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.191257703 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.225295311 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.193695891 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.190844284 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.18935309 seconds)
  done (took 2.775284092 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.17885631 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.193230869 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.205395509 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.257767326 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.198579417 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.191416113 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.192678731 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.190588962 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.192918043 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.185980067 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.176415753 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.210334485 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.192611065 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.211985523 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.191759432 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.194544306 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.200352656 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.197618468 seconds)
  done (took 4.323150182 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.174725315 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.193076746 seconds)
  done (took 1.132482429 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.177712276 seconds)
    (2/7) benchmarking "second"...
    done (took 0.190460595 seconds)
    (3/7) benchmarking "month"...
    done (took 0.195447534 seconds)
    (4/7) benchmarking "year"...
    done (took 0.194794297 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.191820426 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.174849312 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.19281527 seconds)
  done (took 2.082390321 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.831671948 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.288877298 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.533621497 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.142941923 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.200469421 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.451895163 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.194979574 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.14373734 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.126300514 seconds)
  done (took 3.718841282 seconds)
done (took 17.282327155 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.176163662 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.301058234 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.912002213 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.213067148 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.17006063 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.254524061 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.630112001 seconds)
done (took 3.429947384 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.429949773 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.243422343 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.134765783 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.178167 seconds)
  done (took 1.754724003 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.16449917 seconds)
    (2/2) benchmarking "read"...
    done (took 0.205122212 seconds)
  done (took 1.147287038 seconds)
done (took 3.683179987 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.214989574 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.176696431 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.197533215 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.196105871 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.200559893 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.198798125 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.197515559 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.177127497 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.197490744 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.193534765 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.196707103 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.196896341 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.193786591 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.199899514 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.176502425 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.197647864 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.197813888 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.195759126 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.197532101 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.199410542 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.179424251 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.195297328 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.198498642 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.197212934 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.199204792 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.197715615 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.177822447 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.194710334 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.197951432 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.199249145 seconds)
  done (took 6.609055306 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.184134148 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.190517034 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.19342413 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.205596149 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.192317219 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.176185471 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.190499052 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.191256135 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.195763333 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.173811619 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.322714992 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.19124157 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.192891443 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.193900965 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.177566082 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.199673045 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.207497056 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.193815491 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.193547941 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.176651721 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.197761017 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.191584589 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.195695165 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.175519943 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.193361261 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.193123948 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.196177073 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.193620939 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.175325453 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.193268554 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.198923144 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.201087876 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.193073877 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.191226486 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.196716054 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.193914518 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.202230406 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.192029244 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.176340654 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.191577742 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.190568042 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.192427137 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.173038567 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.201603939 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.195870554 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.192810827 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.19372951 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.176133285 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.193813456 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.196736607 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.193128934 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.191792718 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.178697728 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.193975545 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.197421706 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.191703287 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.17645776 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.19222156 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.19413688 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.193499717 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.19206409 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.173253338 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.201058741 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.19519047 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.216972529 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.203318872 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.19198828 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.1769613 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.195229527 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.20033592 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.196179144 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.206380794 seconds)
  done (took 14.728279289 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.17679718 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.195035298 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.194439658 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.194308957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.175987983 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.194046217 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.195057237 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.194572825 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.175598419 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.195158784 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.195753109 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.195986616 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.195954659 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.176438224 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.193988071 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.194344108 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.196217554 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.17609425 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.19428541 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.195568362 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.195472845 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.176327642 seconds)
  done (took 4.964783057 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.38624168 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.203918953 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.26129054 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.213713818 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.22197399 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.214140332 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.202917633 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.203992728 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.183640279 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.210621888 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.208256405 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.203706121 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.224065516 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.209634777 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.209426101 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.21002363 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.20334642 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.210461122 seconds)
  done (took 4.777033498 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.176138015 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.196801839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.19595142 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.195519802 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.178024162 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.196695384 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.193795549 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.196428335 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.178137585 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.195222605 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.197718817 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.196739159 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.194618218 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.176189578 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.195892111 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.194931157 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.196539443 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.177766209 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.19568317 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.196306557 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.197325937 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.177107758 seconds)
  done (took 4.993865567 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.19600834 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.199605878 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.221933084 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.203713956 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.198309205 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.19882959 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.202964585 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.180529988 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.207950788 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.199912151 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.199935335 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.195516912 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.194949016 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.200191595 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.207333 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.199402515 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.199738682 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.199256079 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.180337234 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.198260354 seconds)
  done (took 4.786389065 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.325883806 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.220315532 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.219035357 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.227672425 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.219650569 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.219061085 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.229937723 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.217527909 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.199046553 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.255431216 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.194697438 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.211880702 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.220108219 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.218116862 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.210701267 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.224019417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.225662576 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.225211542 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.213481117 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.210915523 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.229822253 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.210135918 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.221003018 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.21016708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.21073197 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.211453102 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.195526136 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.219157646 seconds)
  done (took 7.001350419 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.197600552 seconds)
    (2/2) benchmarking "in"...
    done (took 0.216933602 seconds)
  done (took 1.219968395 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.181079775 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.202648694 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.193853504 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.19445856 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.174502815 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.198753147 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.194410536 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.191509012 seconds)
  done (took 2.337612323 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.284411704 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.285823651 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.199397687 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.207561107 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.280865068 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.292236343 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.242110854 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.198047652 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.177644123 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.192349844 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.302811063 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.16720707 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.199989076 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.200018262 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.20030025 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.207081977 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.195932097 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.184280367 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.200347846 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.19550134 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.198619722 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.203297323 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.199073067 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.207186666 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.173484201 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.207845274 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.209346327 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.214486938 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.200821542 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.203865888 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.199363644 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.180791856 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.206202323 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.205485966 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.204620923 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.292336263 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.214062275 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.197733565 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.202253236 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.204039853 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.218735683 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.201722842 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.207871137 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.204508767 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.210966341 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.206170999 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.186045077 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.213553067 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.197176013 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.198871246 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.200857063 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.179209042 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.201196858 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.207626175 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.208244548 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.213278886 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.206326696 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.201385666 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.182319192 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.200609762 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.204230001 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.201829755 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.208871261 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.205005514 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.184595125 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.207260885 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.204130939 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.202713093 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.201529449 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.183910446 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.205093771 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.226810924 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.210617956 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.209109942 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.205584076 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.199705676 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.178824739 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.20842048 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.204887645 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.206293854 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.207356554 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.233784943 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.18818698 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.20044053 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.200399155 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.210668161 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.203080818 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.200112289 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.17009612 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.216941775 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.20702059 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.196949105 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.190914792 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.194872656 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.173618804 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.200915791 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.189365624 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.197561718 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.196539432 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.184536554 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.210647647 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.205566264 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.204523992 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.202518803 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.202557029 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.17912154 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.278416639 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.176220522 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.198155767 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.202321754 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.206040456 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.195624312 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.181879302 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.198525935 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.194995941 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.192107228 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.202610264 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.20605156 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.182177896 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.209657565 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.21022252 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.209803815 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.20685571 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.200685133 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.17846251 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.209415834 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.213652742 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.205681883 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.197388033 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.176881626 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.19599052 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.198966543 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.198999599 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.194810892 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.203377296 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.177455804 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.201694729 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.207083183 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.206948332 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.207866081 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.193699566 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.17861067 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.205172583 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.200703918 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.197473702 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.204714573 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.196854369 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.16943046 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.203734829 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.19440102 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.196683622 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.222120278 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.196942169 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.180278992 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.195200954 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.209081723 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.201452737 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.209397828 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.185220408 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.211546182 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.213392258 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.197898502 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.205252838 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.206383972 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.188929053 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.203225627 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.205697319 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.204720762 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.215475592 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.178517959 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.21021567 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.199400307 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.197859162 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.205609818 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.178292825 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.201748653 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.196902625 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.246158018 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.216367658 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.20654737 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.202546306 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.17968626 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.207328122 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.205955485 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.199074388 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.207369059 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.190132117 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.203033247 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.207471911 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.212256727 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.199667995 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.197754166 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.180625033 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.206504829 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.196791701 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.203597902 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.192378734 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.183306858 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.207071231 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.210041877 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.209864325 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.206283348 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.204662559 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.188669818 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.204978591 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.210179037 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.193495644 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.206446943 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.194596543 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.214724881 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.213400901 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.213597376 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.204061296 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.205613589 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.193049549 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.206128246 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.205315094 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.202523833 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.19961921 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.178056851 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.210845487 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.202903314 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.19858259 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.20057757 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.204449766 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.188102599 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.205454762 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.200173375 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.210127261 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.215905017 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.203456975 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.188795887 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.203788658 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.208147191 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.218846641 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.192767685 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.194090738 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.183397226 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.201476685 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.197606561 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.202801753 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.198945597 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.203063385 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.180114033 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.19962299 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.20014436 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.209451812 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.200979005 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.181241444 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.206818857 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.209877824 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.200130058 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.199801162 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.188575987 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.206339685 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.20252031 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.209345669 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.2076304 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.204110154 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.181849464 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.212055827 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.210910053 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.212991358 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.205087735 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.207701753 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.180494163 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.201768218 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.205288257 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.20058278 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.208314034 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.182522162 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.212706779 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.209359286 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.206327203 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.20692797 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.210597918 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.180444088 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.212573422 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.230011561 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.202959676 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.19847424 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.207922781 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.208945147 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.178326488 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.200336681 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.205758869 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.203722254 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.205287685 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.204275935 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.178097056 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.19752195 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.205619016 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.201141172 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.210484578 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.188497693 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.210577568 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.199719533 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.205378245 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.200516908 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.209041007 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.176182005 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.2106644 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.208327144 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.202265921 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.198245749 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.198358615 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.174728836 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.193656206 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.197014879 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.205146329 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.201896284 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.202367762 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.181705465 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.201365576 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.196420599 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.194313686 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.209697889 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.180219292 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.204847198 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.202158702 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.192909078 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.193551217 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.1847368 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.203062215 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.207155455 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.193756201 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.207200133 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.211910245 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.189342412 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.209803278 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.216486788 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.211277367 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.208448764 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.209760106 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.175174573 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.198787139 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.206764518 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.198629395 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.203534713 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.181399678 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.195551959 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.211974223 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.209319583 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.213908544 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.206913369 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.179564484 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.207120014 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.211564882 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.205531993 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.199434926 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.184031062 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.211844762 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.19985959 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.205513292 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.205023409 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.182825746 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.209206665 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.210506148 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.209807599 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.208667678 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.211608322 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.185921659 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.20515339 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.201449489 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.200100928 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.206688722 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.173456348 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.204747104 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.206099139 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.201015444 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.201559716 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.182954902 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.199149064 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.207480547 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.204352793 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.201183127 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.210159145 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.179722349 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.199824108 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.202583492 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.202308212 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.19445414 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.179785522 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.202005346 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.211649341 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.206186979 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.208240066 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.205561426 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.19121025 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.212386647 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.212179115 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.20690133 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.206676468 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.177323406 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.214283755 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.211847212 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.201325865 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.200079276 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.205599027 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.178495411 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.201674928 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.210713729 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.19774707 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.213084011 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.203647541 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.179420205 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.202209215 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.20756906 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.202169989 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.209334048 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.178233778 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.205810675 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.195362145 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.208023988 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.200628211 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.20690453 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.176729687 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.195396826 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.205119467 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.20504849 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.20437908 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.206485835 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.186394805 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.195510424 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.194490595 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.201086139 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.20106675 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1919917 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.209185237 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.200923701 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.201778365 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.201870395 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.200340356 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.18673697 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.196699678 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.199835289 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.205070539 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.20418863 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.201765157 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.176683001 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.205972472 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.202111786 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.204807015 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.204599933 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.17551425 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.202601656 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.209742955 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.200802719 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.198480773 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.200322642 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.187328695 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.202476671 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.200056909 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.195307784 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.211679281 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.206825199 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.186689275 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.19842255 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.205673297 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.199373897 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.203247668 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.208185619 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.18272991 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.206556992 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.201377993 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.207660767 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.210127379 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.192366101 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.179781592 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.212489927 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.206641653 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.206663359 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.202902642 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.205306261 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.188375743 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.208310991 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.203065264 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.19708978 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.197728889 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.18313154 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.198585844 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.203152574 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.210882364 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.20556568 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.200165217 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.184993004 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.206012375 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.203503753 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.202183061 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.174475889 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.207200556 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.199459315 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.208638431 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.196128449 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.195244508 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.184700549 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.209302508 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.204760979 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.203459078 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.202601437 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.183452285 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.197156995 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.202253741 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.209505851 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.20728288 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.205955705 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.182081194 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.202750352 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.204405752 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.215102661 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.204724873 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.184936485 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.214201043 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.21277444 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.203914856 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.205497949 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.210441344 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.212878225 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.182190305 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.208740696 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.202054978 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.203540884 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.210954433 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.191283641 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.216498241 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.204547631 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.195690646 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.207956616 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.203414562 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.176176212 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.211205125 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.212313384 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.208453891 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.206760371 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.204620696 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.197710286 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.213700257 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.212238716 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.202774046 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.203035095 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.207437088 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.181687324 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.207798997 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.204389863 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.215246502 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.211303789 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.209155751 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.191526762 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.202123458 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.212370214 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.209416166 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.212781551 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.204699738 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.182872268 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.206217267 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.209717466 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.215292115 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.191719833 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.210412958 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.210770657 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.209246049 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.21730116 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.214656304 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.184287543 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.217830882 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.211501178 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.210435183 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.211395431 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.186141555 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.208299853 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.206550719 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.21190623 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.214421326 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.20902541 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.193263297 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.212367053 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.207725022 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.205563897 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.208847214 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.186070728 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.211814758 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.218868254 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.21473469 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.203376087 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.212730992 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.195064197 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.209265064 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.214674847 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.213944561 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.211245179 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.2098524 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.196549196 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.211766773 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.207891416 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.21038526 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.212101595 seconds)
  done (took 121.40988903 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.278654067 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.221017438 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.190263073 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.212335023 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.233604406 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.209896795 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.206514477 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.215682333 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.209973991 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.203006483 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.207834162 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.210433427 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.232982325 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.239531405 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.234304235 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.224216621 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.210072687 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.213876312 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.212853421 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.191058549 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.233337107 seconds)
  done (took 5.492103276 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.195673374 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.215923376 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.209758493 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.21159071 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.186696926 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.210981857 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.207478396 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.212864375 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.191550235 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.215281589 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.211632799 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.213443939 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.210365472 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.188965728 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.217645654 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.210339455 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.214782962 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1884328 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.212105092 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.209697753 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.208979268 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.1872197 seconds)
  done (took 5.436221777 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.227511833 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.223535631 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.210636714 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.210568533 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.193640997 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.215171251 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.221561797 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.209406128 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.221988768 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.182237036 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.201090509 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.213056803 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.218216747 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.207646304 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.18195099 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.209747606 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.227643156 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.214778286 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.220333543 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.186920786 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.203298527 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.210366311 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.210040315 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.201517082 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.195292045 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.217876811 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.213812004 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.216316365 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.178482036 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.211768407 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.209223095 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.208448301 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.205903296 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.179085613 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.202075394 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.214630742 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.216696904 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.208468563 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.189873218 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.208859391 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.213111558 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.218583579 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.179798958 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.214367679 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.219425939 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.208959438 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.214927037 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.188325511 seconds)
  done (took 10.867876182 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.252904586 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.256360989 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.218031021 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.246379093 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.231948396 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.221809672 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.192081468 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.221592824 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.213117106 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.214240723 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.23306721 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.228399271 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.21400241 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.222059824 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.219890758 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.217915139 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.216796756 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.191014061 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.228503192 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.218155257 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.219533754 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.216863948 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.23182559 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.233945371 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.22534053 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.217783641 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.194485206 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.220851563 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.225924473 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.224383727 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.220294758 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.217565441 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.232760058 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.219554192 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.219481023 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.218772206 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.235584101 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.196473338 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.218505264 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.216964053 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.217993472 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.223399184 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.218050993 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.231106305 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.215094551 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.197747902 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.214907322 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.213367263 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.230427058 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.216207565 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.224048834 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.232436238 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.220199894 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.21855325 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.216762094 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.229049787 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.194393117 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.215383915 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.216659414 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.229837867 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.217006537 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.221121688 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.229521261 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.216947613 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.22432899 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.227198244 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.19530187 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.21625445 seconds)
  done (took 16.037025122 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.256920521 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.199067841 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.230172754 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.230549486 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.220335294 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.221148618 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.220022618 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.222732103 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.222800315 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.229940991 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.220357637 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.365640762 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.222145196 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.228948182 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.220292478 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.220265508 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.2196105 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.221183033 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.219614915 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.196944895 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.218844767 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.232053038 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.22067494 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.230069251 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.235706553 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.216400021 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.221557136 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.221496204 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.231284846 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.219894294 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.23973844 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.219462609 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.218274293 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.229567358 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.23739337 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.220173459 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.193582767 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.223048305 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.230634394 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.221738001 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.217425536 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.23301937 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.221409257 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.219752474 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.224552502 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.197756117 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.488028334 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.239686504 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.223923367 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.228994478 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.222971456 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.228951219 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.222773585 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.22432272 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.23890405 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.246027436 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.231845675 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.230471432 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.22578202 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.238152088 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.239965188 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.245821987 seconds)
  done (took 15.290349879 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.196913802 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.219818565 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.218057535 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.218245403 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.193275449 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.217476827 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.216432418 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.21439763 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.214846755 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.193311978 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.216829172 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.216203629 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.218107419 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.19133931 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.215872835 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.215367234 seconds)
  done (took 4.312238918 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.240275231 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.236772471 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.3213407 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.219781312 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.215314507 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.200009448 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.213693286 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.21830514 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.213052824 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.217417191 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.19535974 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.216429128 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.235783947 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.214973522 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.21303128 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.217642677 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.213806172 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.195901294 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.217065865 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.343818164 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.220914346 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.195803355 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.217711975 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.220131383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.215911293 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.221954132 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.221004049 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.193250502 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.218821143 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.217608113 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.219873275 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.223837004 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.214588581 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.197190991 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.216097616 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.219272228 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.218496619 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.21466136 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.196316269 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.215300815 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.218984566 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.216456654 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.215716458 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.216747868 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.190256889 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.215314995 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.211884372 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.222306785 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.21563647 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.194648895 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.21438702 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.225417177 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.220289913 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.224548881 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.223396072 seconds)
  done (took 13.006566352 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209668571 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.217524068 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.231147869 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.21344289 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.215768657 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.216275979 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.196543556 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.218668446 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.217139729 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.212799235 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.215971717 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1958534 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.217597495 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.218184636 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.218919388 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.218048398 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.192207802 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.218012455 seconds)
  done (took 4.788560175 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.195107931 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.213173367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.213138898 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.212497491 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.189791562 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.213758372 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.211953411 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.212132309 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.190457007 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.213309212 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.214593025 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.214056194 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.212693072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.190295658 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.213430188 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.212325664 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.212452378 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.190176711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.213174005 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.211714506 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.214121515 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.190278578 seconds)
  done (took 5.506553063 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.217283563 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.350398946 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.2360091 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.339254361 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.21126671 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.212135264 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.231833213 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.21044534 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.222131296 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.210151297 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.209978961 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.210984836 seconds)
  done (took 3.817015946 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.228517592 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.282119107 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.194187483 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.21856632 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.227113622 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.220401774 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.222347 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.222139751 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.231480624 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.24134015 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.220288388 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.233287776 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.233095525 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.235700371 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.226992951 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.203501122 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.221127543 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.223417464 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.218786788 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.241228716 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.223600927 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.232066741 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.22133663 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.227419039 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.222027006 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.233065973 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.230682494 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.240919082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.221219066 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.231662618 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.227410354 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197794142 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.231356818 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.240249932 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.219796415 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.233721309 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.224763148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.242949519 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.229302924 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.237703708 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.217541412 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.227089834 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.233111839 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.23223516 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.232113671 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.224934109 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.229284992 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.222431598 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201430544 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.275814262 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.227349418 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.232409935 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.228027281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.232080642 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.232693289 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.253732963 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.241153005 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.235596066 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.228817165 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.240606679 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.234395548 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.229465615 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.23488739 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.240701838 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.227098679 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.234259859 seconds)
  done (took 16.124155607 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.269049651 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.193922478 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.223697501 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.241759309 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.232024283 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.223892044 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.226147067 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.22227696 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.223624862 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.218450437 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.277365124 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.225764584 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.237244753 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.233329117 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.223149889 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.22441121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.221830812 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.233784323 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196768092 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.276803858 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.223554241 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.235060414 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.23665531 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.235143942 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.24029338 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.229935558 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200712422 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.224971335 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.224066437 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.225049463 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.233657928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.226002606 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.235013648 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.217928253 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.234627972 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.225218111 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.201757545 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.229954823 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.225468292 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.233174115 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.233671477 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.243538413 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.223895655 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.22496732 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.242719706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.224461134 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.225436408 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.220249824 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.224703675 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196335195 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.266380301 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.244492071 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.245204729 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.236036818 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.227095021 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.224600136 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.203387055 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.225385248 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.225818762 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.230867022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.23599322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.225568587 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.254806913 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.225262889 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.225885067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.23441247 seconds)
  done (took 16.124893755 seconds)
done (took 290.406651279 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.374185887 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.431703959 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.217834561 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.772399329 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.184912139 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 5.142484867 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.941835752 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.324047132 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.187458239 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.213688043 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.209002677 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.225406252 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.057482709 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.18403639 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.207284102 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.224868218 seconds)
  done (took 33.865919551 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.418487312 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.507498634 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.232814939 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.218202697 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.217722266 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.214625838 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.191781092 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.220695 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.215499137 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.223428961 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.219805238 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.20974394 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.20055897 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.211728482 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.214726343 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.215122177 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.225167448 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.21568262 seconds)
  done (took 5.354277895 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.230602987 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.283041439 seconds)
  done (took 1.493199103 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.232937784 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.357294669 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.476477723 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.282668693 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.236147884 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.242970824 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.287157673 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.234297618 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.310745644 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.239727306 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.239123464 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.214484813 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.248010591 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.226539444 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.23693379 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.211263264 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.225079509 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.232603606 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.23277541 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.222439173 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.250128968 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.220225783 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.228220877 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.234198238 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.303984876 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.236293381 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.221030996 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.215014492 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.194576526 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.232098307 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.229524284 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.247119863 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.235256048 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.330946414 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.219957941 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.299139362 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.224066368 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.220343896 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.233772372 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.217779523 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.225010559 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.221488455 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.205010654 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.214883845 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.214814587 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.226082313 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.217623275 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.219149711 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.207177752 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.220907887 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.237652441 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.228304155 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.322937349 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.227300243 seconds)
  done (took 14.159556196 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.335354157 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.278329683 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.215069096 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.470253554 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.243580461 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.235754682 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.291318271 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.221917135 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.473030274 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.356953029 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.242789432 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.224380769 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.434550368 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.508238474 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.250549009 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.671594837 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.050960286 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.229538382 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.252605211 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.277792572 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.223467325 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.23787412 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.242437214 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.643582598 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.219923978 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.215379034 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.224234167 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.224027381 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.306385069 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.216821986 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.221093508 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.359526458 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.501205953 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.381175975 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.219664162 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.215754815 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.215405426 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.320155041 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.545845893 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.400053288 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.31602021 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.213555068 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.215264589 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.224624718 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.234462101 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.190229194 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.331690172 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.350698142 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.32582798 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.22322632 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.226611497 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.226110977 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.22000376 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.304217074 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.213584686 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.66351079 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.628278453 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.214831511 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.223971714 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.231048172 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.514418422 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.218982691 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.429019524 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.244562678 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.395063741 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.216265307 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.739265252 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.343255803 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.215480598 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.220103052 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.199221627 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.225559515 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.221308346 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.306362695 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.641541179 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.223196662 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.199162473 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.217015747 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.394205303 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.217844109 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.215854368 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.311348322 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.220237303 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.223922175 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.226381521 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.223154458 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.326746027 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.500850377 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.224918752 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.224344833 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.224678199 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.231470485 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.19818889 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.452627768 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.414893238 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.326826918 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.451994736 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.221945421 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.309941269 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.341760126 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.221927311 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.326923925 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.222544408 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.231807449 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.220957619 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.408523725 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.294368029 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.198577351 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.221831298 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.227205172 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.27359085 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.222828973 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.227319792 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.34724795 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.732323806 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.321487856 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.215486517 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.224697418 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.227529493 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.310088995 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.22748356 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.511605318 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.225077055 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.343193575 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.223289301 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.190393883 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.224594565 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.333836446 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.22698465 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.225420265 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.220998198 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.207209028 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.509302593 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.42129268 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.225976722 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.429008179 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.34249005 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.198581045 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.354854614 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.225690855 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.343107254 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.207038244 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.220610981 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.22197819 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.746708864 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.238126301 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.22575737 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.224067008 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.322675186 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.21642557 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.222467889 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.219080002 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.192061869 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.72123847 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.197580931 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.217970551 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.222742527 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.224522516 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.22676267 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.228405165 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.198703118 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.333865699 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.4640424 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.201806747 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.223332587 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.218540643 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.333574999 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.199997813 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.219898577 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.218753387 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.22294719 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.225776678 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.224725016 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.201045793 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.346541694 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.328841137 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.419798646 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.872468411 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.218411727 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.219232831 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.434092432 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.217402296 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.591554276 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.228813155 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.45267186 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.316803456 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.215329762 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.647097808 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.316088084 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.320771463 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.223131806 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.34961253 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.215807918 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.231014662 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.306147654 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.219275144 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.226696174 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.304734262 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.229658723 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.226172449 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.277834103 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.196074892 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.471633752 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.216088381 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.325903348 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.222538185 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.224389976 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.615765582 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.193438674 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.232871534 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.33116809 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.223617003 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.221637163 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.893421313 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.218802568 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.23625988 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.227262297 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.422152731 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.339398507 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.227699177 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.229085189 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.231277957 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.31034078 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.452920777 seconds)
  done (took 83.325889737 seconds)
done (took 139.176313691 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.406190044 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.330400551 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.550570964 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.308435487 seconds)
  done (took 2.692659754 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.424302954 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.273813435 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.38708821 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.219563982 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.37495154 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.219558791 seconds)
  done (took 2.92980675 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322785233 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281597194 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.276403661 seconds)
  done (took 1.917040051 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.361235586 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.329625254 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.515897168 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.397263087 seconds)
  done (took 2.720176821 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.41721562 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.242900346 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.257273693 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.369320871 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.369465499 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.366664901 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.251175368 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.291154167 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.260724049 seconds)
  done (took 3.90333772 seconds)
done (took 15.20543081 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.248642373 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.255644753 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.244563738 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.24062282 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.257681176 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.260242779 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.250738542 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.253638921 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.225668656 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.23965868 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.249083832 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.235928043 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.339668609 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.253940451 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.23904053 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.250841375 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.236304756 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.262569676 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.254311203 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.2127618 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.256095321 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.236674727 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.236651546 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.244247018 seconds)
  done (took 7.015921105 seconds)
done (took 8.058181598 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.373399659 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.16554636 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.233372217 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.232116558 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.361569517 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.214486771 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.249196054 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.237369649 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.2422166 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.232082829 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.224932322 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.222643689 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.23394872 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.346661541 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.238130892 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.196800766 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.222801288 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.242768983 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.246167987 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.247399969 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.336657037 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.226040851 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.242300936 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.221535475 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.34067417 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.225615843 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.235762796 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.208495547 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.247036645 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.231944287 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.231758384 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.224099691 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.246554303 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.220718629 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.219694254 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.233879069 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.221101706 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.150230364 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.253126486 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.233203822 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.24567075 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.231521672 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.209412845 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.222656736 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.233482838 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.232038907 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.219964937 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.237560669 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.196569453 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.234263598 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.223468095 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.246334201 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.230887346 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.194820527 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.21922941 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.223742007 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.243484994 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.221024653 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.245745661 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.194702349 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.223744057 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.222443645 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.238183725 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.221353166 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.208043843 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.223008214 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.234590395 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.235332412 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.230072058 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.198820838 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.223661068 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.233135888 seconds)
done (took 17.962457198 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.205411729 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.277455554 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.35935361 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.339589264 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.26319257 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.245888231 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.237567861 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.251133809 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.235648378 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.243968888 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.266008154 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.262141228 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.34174664 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.24755228 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.246715933 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.23348332 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.234599101 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.208007509 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.363805388 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.255313383 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.252072715 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.243992985 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.253342121 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.220931347 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.226576495 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.263277757 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.237022097 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.235312118 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.228156328 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.248608814 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.25452502 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.202987865 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.234616724 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.249630113 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.247683735 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.239141035 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.248948095 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.235534179 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.201681342 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.227245607 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.237913687 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.245760572 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.227350587 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.249686355 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.23693655 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.245247076 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.211623808 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.244134659 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.23226587 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.236340478 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.229911881 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.257449453 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.218556144 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.245481509 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.244665036 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.243255576 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.241707551 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.240939674 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.23583169 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.218834446 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.229442469 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.227663809 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.229778765 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.254479006 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.234912439 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.241029425 seconds)
  done (took 17.282905851 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.234942227 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.296455816 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.215148412 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.240969286 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.239759278 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.221673066 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.219948763 seconds)
  done (took 2.736488017 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.200805038 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.375286488 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.348441378 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.374741654 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.345258929 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.385222931 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.25315724 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.198683103 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.269762615 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.239178184 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.373326262 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.390809672 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.236050216 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.244575799 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.378077106 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.198660979 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.382766726 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.325700071 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.243587156 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.377652075 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.244392364 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.236554485 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.24287041 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.232059983 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.363837282 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.200773821 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.438121777 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.249343838 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.235081192 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.23949851 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.240142876 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.331526643 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.34186481 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.242991065 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.234698579 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.371165951 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.340072443 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.244132429 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.359429997 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.233418629 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.368397294 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.21939256 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.243924652 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.243633231 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.244404422 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.32867619 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.252131376 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.245282793 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.241733786 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.352683888 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.241290796 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.370994424 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.238855906 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.214963092 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.241602935 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.243953982 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.251664548 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.242548337 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.355804848 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.247634139 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.372655876 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.348442049 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.343290125 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.380242645 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.258420271 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.347363408 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.358356218 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.241325405 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.34596176 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.246104007 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.353224885 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.243822833 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.243874454 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.332526623 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.251019221 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.378718765 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.348591219 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.2402317 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.244908252 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.233415134 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.241113789 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.19923514 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.376812759 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.243744618 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.213942583 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.253843733 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.241543943 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.243029762 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.367883917 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.259028659 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.217129342 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.243049238 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.252354217 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.243597993 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.252133854 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.381638789 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.215252713 seconds)
  done (took 28.782992864 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.207299626 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.226746581 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.236522451 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.228564335 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.226980929 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.201261953 seconds)
  done (took 2.435946804 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.279106224 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.217789799 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.253382605 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.246331453 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.306547488 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.38242577 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.360499892 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.241807795 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.267017148 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.254511912 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.352872049 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.387939899 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.360005477 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.254688306 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.389389199 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.24976218 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.363067891 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.242005903 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.255339233 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.241246403 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.247917539 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.221634425 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.24001277 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.376642513 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.245766566 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.247354923 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.212266232 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.25661169 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.254283487 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.241934985 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.249502517 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.24293624 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.239709836 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.239665505 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.363339411 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.239982566 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.239945961 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.246122129 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.247513141 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.21814114 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.386639072 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.242075572 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.254712953 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.246099758 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.243268225 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.212778136 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.246794617 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.23791778 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.388709602 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.246649427 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.220243723 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.247463079 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.244771694 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.253065402 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.238118798 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.239157389 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.246289783 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.362808861 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.251451327 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.241720844 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.245003916 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.247187405 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.241071766 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.222169 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.246673441 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.247597247 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.239329648 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.24660386 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.240980599 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.246886787 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.245720149 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.2210594 seconds)
  done (took 20.229105571 seconds)
done (took 72.5276191 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 10.087704958 seconds)
  done (took 11.196683506 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.430328551 seconds)
  done (took 2.53856311 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.452100917 seconds)
  done (took 19.598751678 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.680685349 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.528682449 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.420649037 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.277702742 seconds)
  done (took 4.019206841 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.307234618 seconds)
  done (took 2.439597103 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.588282132 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.391403539 seconds)
  done (took 2.098095395 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.905104062 seconds)
  done (took 2.036629019 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.729470184 seconds)
  done (took 3.850744782 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.439231225 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.396695293 seconds)
  done (took 1.970228152 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.810532628 seconds)
  done (took 1.934558713 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 41.740864997 seconds)
  done (took 42.874338938 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.395775548 seconds)
  done (took 1.532157339 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.451397326 seconds)
  done (took 1.58541074 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.910503932 seconds)
  done (took 5.048929968 seconds)
done (took 103.84908312 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.221356659 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.247774633 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.248110388 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.244897531 seconds)
  done (took 2.090021133 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.236292437 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.250144232 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.256653898 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.243237484 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.260376163 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.246977132 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.217623845 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.253559174 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.244793217 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.249643389 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.24635243 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.221177564 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.253338418 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.243677644 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.244676968 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.254468182 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.250435228 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.218618791 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.249212035 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.246471551 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.249118125 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.248306936 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.250787906 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.249806009 seconds)
  done (took 7.026605356 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.21879247 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.235507737 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.236686701 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.234616174 seconds)
  done (took 2.063826463 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.245732432 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.278859514 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.276138464 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.268455601 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.27267013 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.277073258 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.245788949 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.212431999 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.243945124 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.268393497 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.28118996 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.278612732 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.270797106 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.258870054 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.271240429 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.210305095 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.259216151 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.280293856 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.267863585 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.267839161 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.251107061 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.248807426 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.245808113 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.270564864 seconds)
  done (took 7.394182395 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.360570898 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.260149073 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.275721789 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.277474632 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.214321428 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.274553873 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.313972284 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.258150884 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.253460307 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.253026376 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.246038275 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.245944722 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.326790801 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.247368604 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.250438468 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.223712957 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.259734638 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.250238325 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.300873073 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.25333239 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.248758602 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.258951646 seconds)
  done (took 7.003442162 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.363899305 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.238271941 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.237662942 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.205302923 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.243928879 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.238323358 seconds)
  done (took 2.681037294 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.211184747 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.229901531 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.229729077 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.227507377 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.206580317 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.229625282 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.226446461 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.228932003 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.201037687 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.228729389 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.230867041 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.227008601 seconds)
  done (took 3.832105445 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.359786955 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.252547285 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.452391802 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.515969802 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.303904526 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.304582763 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.452134022 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.305323972 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.335392334 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269690325 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.362918584 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29278643 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.293140405 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.338397341 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279139748 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.274750717 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.315827657 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.399489353 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276028101 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382409191 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.299889229 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.354393358 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.355798453 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.286884979 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270837047 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.321551527 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.252003509 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.263963394 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314908721 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.310334089 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.356442409 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288237095 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.279097491 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.34051734 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.455064624 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.356302443 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.451103705 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.278099788 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.253531252 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.380485755 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.43091597 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277243044 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.35088311 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28875435 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268693289 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.34489144 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.317569314 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.345245328 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.263356762 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27818479 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.338811598 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316951769 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.353603825 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.285514466 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.445923889 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271967823 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.277746131 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319018393 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.370560512 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369341702 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.359547518 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.222030735 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.339938519 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.351246776 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.407575594 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.275233324 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.314309805 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257503068 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308824024 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.409261219 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.342112939 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299526885 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.397315925 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274920147 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32581212 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311996631 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291232045 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.383432306 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321571961 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.248825082 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28715523 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271739698 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25721314 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.329760119 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.249980933 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.394245715 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26129139 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.31870596 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32271124 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.32264034 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.306601809 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.302325116 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30562468 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.284367067 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.17535064 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277851774 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.329043872 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297106084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25980895 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.292949679 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268670597 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.256803004 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28908658 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.220567246 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347400421 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.216099259 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302931328 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.350598604 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.27275365 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.329954569 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.286971024 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.312978648 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31391241 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.389833369 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263658136 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.267498289 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.392789601 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31472568 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.264551451 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.349007392 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.370507394 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.271589129 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273730473 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317484735 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.371753917 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.279333231 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.36824329 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290823344 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275832823 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.255233209 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.322467087 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.304521883 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.300215656 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260834753 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.350312295 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.340911392 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.260906382 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273473265 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.338163921 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.259937936 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259457751 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267041698 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274012854 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.27640143 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.288669642 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.268787085 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293256532 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314715535 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.313322448 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299750974 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283651251 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.387293197 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263856379 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.316743811 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.287074176 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.247992334 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.327333737 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.391592278 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234792933 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.354444707 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.308359793 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318668365 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35714907 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228590248 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.35904136 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267381683 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.220355506 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.336444507 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.331263199 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.310617001 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.387404318 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315773051 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.314409617 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.322707041 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288173758 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.350351565 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.343310489 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304871109 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.278973698 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.32785623 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.346134216 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.251337772 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.224178884 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.260973843 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269979327 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267614808 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272287714 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.330802248 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.340901378 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.315088982 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.320217776 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269249361 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.383794089 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.227919665 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.335512309 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.334597064 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26883326 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.360195437 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.378064511 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.331900191 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.281098499 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311817858 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.251735041 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256631839 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.269303538 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.307496377 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.272025952 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274215299 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286232866 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.357938643 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.345840237 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288582699 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.333585828 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.311751205 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.401550553 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.256915908 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.301137417 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309029085 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.316127561 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.328138064 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261901857 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.305197513 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.355666187 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294863253 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.375571085 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.321975523 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.341432761 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.385928287 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.31141963 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268148165 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28529875 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300939711 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279628552 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.306369447 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280498742 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27551653 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287559422 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.275556146 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.280374391 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.376573317 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280724461 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330240949 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.296789125 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.322319082 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255414956 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285671459 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.355982623 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284635918 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.177909827 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310341572 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.375597535 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288774297 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292855735 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316857913 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.267489852 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.498371227 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.365002194 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.321028205 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.285696498 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280494687 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.324095028 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.300802668 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.305022465 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.363633214 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284012029 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.370341917 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.318264744 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.276442877 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275834953 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.287391793 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.291544905 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.257103047 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.296485288 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.316810492 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.280734179 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379260578 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272656434 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.321571361 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.338308183 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.281452754 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.284118212 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271415687 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.43694287 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321942046 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321992033 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.312695837 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.339329815 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.329065919 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256996148 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228932411 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.259949523 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.365696973 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229339473 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.360015759 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.302816133 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.320812489 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.355336682 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303971981 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.278722007 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.260371321 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.318212368 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287901743 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.326058279 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287466384 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.274261577 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368409594 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.208309653 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.26930446 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.305977377 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.433702186 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.28476987 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.348054377 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.179831963 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.426294649 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258287787 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.271557889 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.302149777 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.347790366 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.240694255 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.326415188 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.35979285 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279477905 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.304900605 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276001978 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.322003063 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326632019 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321612925 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.357984408 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.285538631 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.308876401 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300769192 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.321381382 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282370217 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.287402694 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306246797 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391676248 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.32461388 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.268449787 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.323795887 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324637418 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.32589399 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.364734542 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.276383488 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.329409054 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262787905 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313701009 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279536269 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.257890523 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.303793226 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.307412504 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26498033 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348460474 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321320133 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263365799 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230173944 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.335742619 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31736933 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298412034 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.268703187 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347304182 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.261774856 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.334008142 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.395042154 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26570472 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.315798293 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.283226426 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269054174 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279702394 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284298945 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247697285 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.312700598 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.357364483 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.26553604 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324872327 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316503308 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31086894 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297519792 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.284038435 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.730656945 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.262723668 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.384006289 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.290531268 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.35824114 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.291917202 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.335215793 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.354513952 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293003304 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312194643 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291070901 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.371475919 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314292909 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.32211927 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.272040582 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283296415 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274425976 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.273620217 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.296801665 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.32257485 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281019742 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.271422434 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.3510789 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281884534 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.287982299 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248461022 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.401084632 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29293902 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347872242 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.373375168 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.290497894 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.335221067 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.331467314 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263335544 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.31464326 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.349650705 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281988778 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.316909059 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.266843819 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.243373105 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.396158831 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.259772075 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.306372611 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330490473 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.325504175 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329490494 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.275990111 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.363444535 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.284976569 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328895782 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.262017241 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.296908103 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.321885689 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.272587954 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.26391897 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.325697749 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305594362 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.320408206 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2832591 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.313178888 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360154352 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.260872478 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273464091 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.430968899 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335156201 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.350342409 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.215230343 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27552137 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284130433 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304855478 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.353917023 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.323068217 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.267326638 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265987087 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.288715792 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.240199174 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.252804512 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.323774827 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.33038835 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335656557 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.334458906 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.270494206 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.409277724 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.280759826 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.32618741 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.232951172 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.236714416 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276312385 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274901248 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299489544 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.354536798 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.366086118 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.313579015 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.291367703 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.269990366 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.261842281 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264022871 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.311555604 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294474719 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.320556663 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299638853 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.208775237 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286003382 seconds)
  done (took 150.88757687 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286511953 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.279399863 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.312252545 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.38490911 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.344388297 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.476157981 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.390129422 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.400048897 seconds)
  done (took 4.148602751 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.412148543 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.27819799 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.437253192 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.2526078 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.245285695 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.694249765 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.436464071 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.255362277 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.311529012 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.446930166 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.394920832 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.809687228 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.257835159 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.692742975 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.431765257 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.210644791 seconds)
  done (took 7.838181201 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.454889654 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.169011282 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.630593647 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.579315914 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.493284341 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393744959 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 1.595837443 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.368337875 seconds)
  done (took 22.964904854 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.315719932 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.314461542 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.57452928 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.48081858 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.341831474 seconds)
  done (took 3.296071758 seconds)
done (took 222.356037511 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.231790477 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.264741998 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.260966981 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.266851742 seconds)
  done (took 2.291889772 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.269881049 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.198441579 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.167889866 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.163625138 seconds)
  done (took 2.079028118 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.620113448 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.165538104 seconds)
  done (took 2.092489176 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.291987333 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.243519604 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.274396231 seconds)
  done (took 2.107775312 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.246573561 seconds)
  done (took 1.538922825 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.228288267 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.255926784 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.402851219 seconds)
  done (took 2.17965392 seconds)
done (took 13.570276635 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.305800631 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.127349032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.715800598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.272807452 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.863533089 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.535279664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.578278668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.309880846 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.338512839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.24883866 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.281875252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.827110698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.560314893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.984866558 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.531053266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.017464863 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.831225191 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.246079007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.253098123 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.217480836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.539888275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.245543842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.24714121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.245958294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.795663691 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.557889187 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.246609986 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.034424408 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.24527184 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.256436429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.502865871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.24632674 seconds)
  done (took 25.487701426 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.243173391 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.386000941 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.3000303 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.219008089 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.260189498 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.248547375 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.263350652 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.266949496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.34903247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.246823261 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.270807767 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.214759211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.256624412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.250019032 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.273217016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.246571571 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.249348224 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.217089483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.256791861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.251274655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.270179647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.247915933 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.21979645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.247245411 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.248780881 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.271596277 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.246334354 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.262425161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.217276511 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.25750643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.251753852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.249025362 seconds)
  done (took 9.559688787 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.286865524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.399093837 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.300332274 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.288263628 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.319939536 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.219271138 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.391322123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.310939021 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.355678522 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.24824806 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.239876591 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.249592949 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.305576356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.249093923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.274483182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.247666224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.25024363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.217932564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.258108723 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.252079945 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.27362613 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.249512686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.250350187 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.218501768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.248445121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.274747165 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.249348594 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.264903995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.248068889 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.226332254 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.25490316 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.247987094 seconds)
  done (took 9.976569864 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.241028012 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.277129565 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.281532625 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.282719773 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.260162022 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.268499022 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.242419022 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.259531198 seconds)
  done (took 3.422716671 seconds)
done (took 49.735819964 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.248177506 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.269451169 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.275609227 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.26657116 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.367803047 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.256048903 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.284253591 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.257100503 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.234023724 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.273007857 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.249446536 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.256413504 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.272183799 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.229957006 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.39930382 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.269680241 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.375159101 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.36762007 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.257934211 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.2689548 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.257538752 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.373390231 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.264434033 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.260000361 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.327161988 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.222214076 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.388827208 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.261930054 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.228501654 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.251059236 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.366131196 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.261837507 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.259446829 seconds)
  done (took 10.698333128 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.400384803 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.347193714 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.261470381 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.225370264 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.351826336 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.261208665 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.43607775 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.226781345 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.260018439 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.260288735 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.2565554 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.401432895 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.444864868 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.375434334 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.381658655 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.36853356 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.398798064 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.35149325 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.394272679 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.371869729 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.348433188 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.260788944 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.449635867 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.352208425 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.225115571 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.259798201 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.382474257 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.448320367 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.383548476 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.348851015 seconds)
  done (took 11.556778261 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.238753765 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.275437052 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.283986198 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.327397562 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.290310764 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.272062394 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.270726589 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.826848517 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.253124555 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.250300784 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.272609587 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.29494776 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.274003122 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.263649943 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.219921963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.27463187 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.274677581 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.252486846 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.261404375 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.245206173 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.276946036 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.27642177 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.267143888 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.264357819 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.251738264 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.233461451 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.259437175 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.26214447 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.26181565 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.264775004 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.256891284 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.225292274 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.257233284 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.288405706 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.256824713 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.269757092 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.284464916 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.232751885 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.268613758 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.285207774 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.256101579 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.257183572 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.281521942 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.32015552 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.221865658 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.267505577 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.256076541 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.264983329 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.253358342 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.243411437 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.296402113 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.254628237 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.282313463 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.251958605 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.249171978 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.259679438 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.220680334 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.255763092 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.265361716 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.254444525 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.2831539 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.228153695 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.261685447 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.256026288 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.263659221 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.252261988 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.219799025 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.260995358 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.285029052 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.260816442 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.29385961 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.253302339 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.236200438 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.266457248 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.262588395 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.265656011 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.252157212 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.229969491 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.264219456 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.258392539 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.264208592 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.258325294 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.22224009 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.278210272 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.283334639 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.273799484 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.268613192 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.267114333 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.255769373 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.222447645 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.271072027 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.257895986 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.257202026 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.266336123 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.221892368 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.258451555 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.268718501 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.265659387 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.25196792 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.243375308 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.258256201 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.254699501 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.278905103 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.256683124 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.224087034 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.26798932 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.29751616 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.257171843 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.267118389 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.268435759 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.221289917 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.261601612 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.256540061 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.254611719 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.275777047 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.236453209 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.259849991 seconds)
  done (took 32.428389203 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.545360081 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.478754912 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.376814054 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.581210081 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.282710053 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.419933116 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.478348941 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.534365038 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.257180843 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.301611445 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.322361429 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.473041999 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.259820873 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.298377462 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.518725836 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.58108257 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.300816339 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.305124432 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.30240516 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.280550262 seconds)
  done (took 9.253057585 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.235393857 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.30745117 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.29508674 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.276373198 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.267659684 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.27379963 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.224130205 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.281636451 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.267358674 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.266924966 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.258407169 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.262954162 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.233642638 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.272004041 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.276150129 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.286058393 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.26330931 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.265861171 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.283346352 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.263960268 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.28056863 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.288814044 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.233503264 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.330552597 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.24366191 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.275592142 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.259077166 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.26533581 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.26140134 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.231268463 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.263813931 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.264608806 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.26632772 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.186851593 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.271657006 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.273023239 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.263462961 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.225468956 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.263566856 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.261255751 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.274276042 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.270035136 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.23026642 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.247300711 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.278614801 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.187978395 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.274435089 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.271246251 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.188677575 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.280307654 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.270371876 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.273386387 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.233296768 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.287101267 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.264163135 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.277821523 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.271777561 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.275775972 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.264841839 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.221010728 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.255873962 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.262398426 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.267511661 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.240804131 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.271741591 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.267342407 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.266204332 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.256987038 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.231844733 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.26016424 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.260404431 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.274631696 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.285025837 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.265940095 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.230022196 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.273412468 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.266281661 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.172406657 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.267264369 seconds)
  done (took 21.958073174 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.268879534 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.268248075 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.280820974 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.299304946 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.276333365 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.266024059 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.234780359 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.281606734 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.279896678 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.279448617 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.276831046 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.276277229 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.256172595 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.270990575 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.270126534 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.278762017 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.272122104 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.309170451 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.240363063 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.30214518 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.27867338 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.265550519 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.27556581 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.274924028 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.298244212 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.238918888 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.297403257 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.273340254 seconds)
  done (took 9.06978066 seconds)
done (took 96.273524767 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.595801242 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.720041322 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.481116075 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.483548941 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.476743054 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.540680928 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.477705933 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.491667388 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.031200036 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.451826044 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.484896146 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.484202021 seconds)
done (took 32.162743783 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.598956491 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.167251342 seconds)
    (2/2) benchmarking "String"...
    done (took 2.181990564 seconds)
  done (took 5.728222193 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.172147806 seconds)
    (2/2) benchmarking "String"...
    done (took 2.180720757 seconds)
  done (took 5.713741112 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.478940619 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.497443155 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.469171331 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.512793253 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.489562474 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.511042642 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.491377657 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.478073937 seconds)
  done (took 18.811300555 seconds)
done (took 36.692025901 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.517962603 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.756338588 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.731002075 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.458347204 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.47935714 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.469005926 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.472877383 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.536988132 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.475731372 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.467666501 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.931965011 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.748893552 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.479044505 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.885075213 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.451568913 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.470710377 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.494157231 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.818059662 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.47116201 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.469192315 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.450566172 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.452190601 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.481118421 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.460520254 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.503691589 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.479619254 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.515706617 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.493476921 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 3.095103291 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.504755021 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.504034737 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.475014189 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.513061599 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.476283178 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.484483942 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.485549323 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 3.113791138 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.492131934 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.45560298 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.473990552 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 3.109807867 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.932079642 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.47177862 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.473302775 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.474146073 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.470070796 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.453859034 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.599656923 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.503045269 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.484886001 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.552740505 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.908468164 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.478458563 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.474914759 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.473947976 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.878981937 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.485621245 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.555645209 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.526688455 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.481425993 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.472775512 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.488355791 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.518692326 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.472378902 seconds)
  done (took 163.60180554 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.48126633 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.47332548 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.474080426 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.485206099 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.480757678 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.472238529 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.479345451 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.480805531 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.475086603 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.485104856 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.481110609 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.473771398 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.48171003 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.43010769 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.492244444 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.50245285 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.483789386 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.475885555 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.485364046 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.478885569 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.510751767 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.482468017 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.476184335 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.476033859 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.495344617 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.573338822 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.48843385 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.513917625 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.49152842 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.48313022 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.491442298 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.50038916 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.201765907 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.354354811 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.5088683 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.494136476 seconds)
  done (took 90.48486579 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.481654772 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.4820744 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.484297699 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.519644457 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.47759251 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.150628766 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.15466295 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.64831109 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.479069921 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.025378983 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.899825378 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.282937056 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.087079089 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.484590994 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.59402218 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.49061677 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.477444497 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.580090702 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.502371352 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.482158712 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.48422179 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.153950905 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.497187297 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.673894445 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.679804653 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.494032574 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.519332128 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.880204427 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.47812795 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.522657105 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.85255465 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.496144623 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.523863155 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.479875123 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.154255735 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 14.755975565 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.616113015 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.481553826 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.522047076 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.479633065 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.779243766 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.477562845 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.48620994 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.488937669 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.444945492 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.485050839 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.154397017 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.48700054 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.629972743 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.477732305 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.483996088 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.576545042 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.852901677 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.486185367 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.483745519 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.488525804 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.485483191 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.487071377 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.524480779 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.561481832 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.790033958 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.47985852 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.491430882 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.523754365 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.483122444 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.488309214 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.818992602 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.540857048 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 4.414832571 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.12559415 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.483065356 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.575343565 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.594768919 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.621705728 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.481332771 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.487043348 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.487550072 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.488081363 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.487435483 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.604696816 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.482851084 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.487607585 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.179921356 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.676333134 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.500912708 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.195261726 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.591803457 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.481622115 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.213290794 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.48861481 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.488587799 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.537232346 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.598390841 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.481743065 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.489156013 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.489515179 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.179966841 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.129244124 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.891857203 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.4907316 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.020824436 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.485169475 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.161291596 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.159349644 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.477025188 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.490590468 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.61947023 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.679863839 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.501934178 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.49067973 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.429728679 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.48408502 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.552516957 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.484649923 seconds)
  done (took 411.828599102 seconds)
done (took 667.278695672 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.469298702 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.464405603 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.465523383 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.463698452 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.488088571 seconds)
  done (took 13.727292407 seconds)
done (took 15.103607758 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.492320751 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 2.512373797 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 2.492483916 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 2.233386415 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.524050013 seconds)
  (6/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#6\"))}", "10-90")...
  done (took 2.362973261 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.491043916 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.503569214 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.487269729 seconds)
  (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.489653361 seconds)
  (11/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 2.519203052 seconds)
  (12/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 2.224397597 seconds)
  (13/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#6\"))}", "50-50")...
  done (took 2.488450206 seconds)
  (14/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 2.4906574 seconds)
  (15/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 2.495087188 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 2.489925353 seconds)
  (17/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 2.488386791 seconds)
  (18/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##1#6\"))}", "90-10")...
  done (took 2.527288098 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 2.488574615 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.817406941 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.863761385 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.552507943 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.793714718 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.534886702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.828239342 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.876825563 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.712748412 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.657168229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.520986057 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.51713544 seconds)
  done (took 20.051997734 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 2.394590715 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.800045548 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.858336704 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.559613352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.804199856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.536337879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.807106959 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.826791285 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.715248588 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.66760794 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.523322099 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.518035561 seconds)
  done (took 19.99524933 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 2.20971866 seconds)
done (took 92.830892489 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.533560888 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.605357534 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.530292046 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.513498402 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.511152204 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.512113155 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.513493784 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.510901647 seconds)
  done (took 13.609633621 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.510742801 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.510080172 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.510887804 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.51179112 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.509584273 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.510898894 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.512645251 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.512025763 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.511883127 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.511247134 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.51160662 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.511636138 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.512389334 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.512943273 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.511703181 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.512621642 seconds)
  done (took 25.565585915 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.515860148 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.512049608 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.511896988 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.51150949 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.512606492 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.513948858 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.514548356 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.512439571 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.512860757 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.511846929 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.514582409 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.51198357 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.513870231 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.512283077 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.512816866 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.516655295 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.513388575 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.513515735 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.522109009 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.51309527 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.513586926 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.513554381 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.514537961 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.514473921 seconds)
  done (took 37.712028907 seconds)
done (took 78.267098489 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.510544966 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.498041165 seconds)
  done (took 6.389977196 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.574115554 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.573443415 seconds)
  done (took 4.528675739 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.514832171 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.514469148 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.513452467 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.515264795 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.514837813 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.514461376 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.513795615 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.515274526 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.515127635 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.514867698 seconds)
  done (took 16.530424741 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.515127177 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.514696965 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.515721452 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.515311102 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.516521427 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.515044625 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.515197465 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.514819928 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.512956791 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.51550563 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.515308376 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.515140221 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.515165535 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.516270281 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.517579512 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.515180267 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.515985349 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.514874428 seconds)
  done (took 28.661078054 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.533401915 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.538254882 seconds)
  done (took 4.456150338 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.658462388 seconds)
    (2/7) benchmarking "second"...
    done (took 1.56481649 seconds)
    (3/7) benchmarking "month"...
    done (took 1.636359034 seconds)
    (4/7) benchmarking "year"...
    done (took 1.621820076 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.562791227 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.54456345 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.565560028 seconds)
  done (took 12.539225763 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.506219164 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.776239611 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.913401947 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.667915886 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.48843489 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.515953521 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.483169261 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.511644423 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.520911021 seconds)
  done (took 16.768545697 seconds)
done (took 91.255967735 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.504105082 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.522714791 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.543068226 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.512448358 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.802318607 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.56036878 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.522758408 seconds)
done (took 18.359010774 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.485050068 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.495360993 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.485346727 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.526144061 seconds)
  done (took 11.376799522 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.511045973 seconds)
    (2/2) benchmarking "read"...
    done (took 1.828974533 seconds)
  done (took 5.725866377 seconds)
done (took 18.492459158 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.517031431 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.519871983 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.521161608 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.51896607 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.519559674 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.519085029 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.522331496 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.519034957 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.521869433 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.519360559 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.520570689 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.519899087 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.518883498 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.518534091 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.518359331 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.516508031 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.517366814 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.520373067 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.517360543 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.520384258 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.519227193 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.519497069 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.518809561 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.520312275 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.520631397 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.519621267 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.520949615 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.520115315 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.52071273 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.521381072 seconds)
  done (took 46.975193151 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.52635976 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.528185273 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.520071337 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.519935992 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.521251454 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.52196431 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.524528539 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.521085142 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.521948476 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.520196716 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.524042879 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.523063315 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.521508253 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.527369735 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.527998359 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.528747841 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.529621623 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.52882958 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.531958848 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.526658152 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.527546895 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.532418862 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.533203308 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.531037358 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.527151273 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.527168819 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.527454769 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.529150954 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.524267576 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.525423411 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.523771275 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.524090934 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.523107481 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.521465296 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.521157396 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.522141333 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.525288767 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.529741498 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.521296244 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.52043331 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.522891781 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.523516893 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.523185838 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.52638909 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.527765286 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.525520212 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.525038772 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.525102977 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.527008999 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.527343902 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.52507995 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.524280271 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.525629928 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.527306972 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.525205314 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.525959892 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.526274822 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.525055519 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.526335321 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.52655151 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.527314988 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.528278748 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.525927084 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.526838103 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.526397786 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.527259723 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.526200773 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.525215415 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.524767815 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.526706664 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.527444822 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.526424101 seconds)
  done (took 111.236445783 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.525103446 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.526896994 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.526798413 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.526595441 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.527205013 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.526912115 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.528019111 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.527088429 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.526694455 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.52792069 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.530308018 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.52992473 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.528273744 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.528100074 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.5260918 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.530665681 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.532883255 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.533136379 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.533188028 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.530178965 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.53116041 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.528111844 seconds)
  done (took 35.025819214 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.527428746 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.529174993 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.526368001 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.526798201 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.525101572 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.524179529 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.52465121 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.524006168 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.524596614 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.524073963 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.523035118 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.524333105 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.526832189 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.524614604 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.525729214 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.527219611 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.524611362 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.527639649 seconds)
  done (took 28.855204238 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.527393096 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.521682609 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.524018719 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.528503358 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.523793526 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.525149148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.528209972 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.529724855 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.530007211 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.532078652 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.531877335 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.530724527 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.5305621 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.529232694 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.529812564 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.531722029 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.531865053 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.531227834 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.531340339 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.529436806 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.531772471 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.532441072 seconds)
  done (took 35.036869404 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.532390473 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.532194151 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.532582386 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.531410062 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.532560963 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.532370471 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.532785837 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.532591742 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.536082585 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.532463573 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.530638452 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.533364988 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.533646559 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.532676121 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.53331375 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.533444957 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.534359575 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.53331708 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.533546524 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.534462379 seconds)
  done (took 32.057973868 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.533275835 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.534233998 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.53364365 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.535458265 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.535474152 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.533815428 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.533472712 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.534380825 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.533459283 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.535116635 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.536523521 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.53356525 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.535995671 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.536504591 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.533327021 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.532390294 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.533022156 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.533978566 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.534710683 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.535760671 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.535668755 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.534571028 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.534734779 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.536143877 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.536269582 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.535822177 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.534868647 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.535147324 seconds)
  done (took 44.37132866 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.683989346 seconds)
    (2/2) benchmarking "in"...
    done (took 2.528934289 seconds)
  done (took 6.613720166 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.53520977 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.536211393 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.53564243 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.536490645 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.537502599 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.536131222 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.538036333 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.537552531 seconds)
  done (took 13.692479682 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.531959898 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.534445555 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.536709924 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.537516623 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.537246795 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.530876144 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.539004908 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.536397704 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.530017286 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.526698537 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.537288931 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.534310308 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.53338119 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.525615888 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.526892107 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.530272651 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.533633296 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.533848352 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.534703126 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.534194672 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.5334437 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.528985799 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.529443988 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.536458042 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.524170184 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.538303232 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.537434428 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.536516236 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.526427152 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.532763091 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.52748347 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.53491075 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.534311728 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.533198589 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.536477298 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.532330874 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.537328894 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.531522226 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.535751033 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.537996313 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.539365594 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.540932116 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.533660644 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.530028144 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.532089424 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.536774934 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.540679892 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.539822702 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.532523707 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.535177666 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.546342024 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.531444774 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.539473007 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.539939355 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.532851318 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.538390832 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.543662755 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.533533113 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.540924336 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.543816251 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.547508462 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.543521413 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.536800717 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.539219201 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.540228803 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.546828472 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.541252965 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.542498094 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.541110906 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.541626521 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.54189936 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.552893058 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.547931883 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.538121408 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.543100705 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.542557988 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.536502197 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.541827062 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.54474137 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.540848076 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.539622169 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.543038562 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.540786044 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.546086233 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.538226155 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.543793358 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.542984759 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.546434342 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.536053143 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.549264726 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.548529809 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.54127503 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.538442028 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.53837911 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.538603912 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.54230379 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.537219802 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.540908614 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.546722914 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.544950997 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.545156419 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.540128367 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.547535806 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.54649702 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.544188799 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.549243834 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.548636656 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.538105319 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.551073182 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.55019405 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.546681078 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.540561158 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.546532545 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.550269903 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.539266819 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.548676075 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.55032809 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.542343817 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.547307654 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.547099814 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.54609479 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.555730216 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.548330371 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.547119382 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.544074017 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.556182806 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.548070622 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.545416173 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.551032113 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.545097687 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.547405024 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.544769136 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.549651371 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.543892205 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.550850794 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.541835128 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.550825196 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.547409027 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.54948772 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.54278511 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.543887064 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.543467849 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.546174891 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.547461043 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.548539535 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.544550249 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.555781946 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.544620866 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.546628504 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.54851501 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.554134669 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.549205673 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.544960399 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.553977388 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.543431585 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.552409612 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.541929413 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.554193154 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.55065333 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.552677104 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.552089649 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.54352374 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.547507392 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.553626968 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.550402492 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.548385008 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.55097938 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.554152156 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.5534662 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.543873317 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.552208503 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.543020135 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.547748193 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.558709853 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.551085579 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.551681289 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.54912552 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.553973163 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.551752731 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.55231917 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.547094803 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.553803392 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.555577104 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.555382678 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.558136277 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.551747907 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.552577855 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.546723009 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.548420069 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.553392585 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.546782071 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.561859504 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.565106069 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.563540345 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.545371971 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.556403674 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.547391575 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.555268459 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.552640975 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.560054878 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.554475289 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.553267742 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.546974909 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.557940511 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.549327069 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.558357156 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.545311703 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.556654127 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.556831628 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.555005327 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.555689613 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.54959324 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.554298124 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.558528713 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.559925272 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.559206148 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.550515968 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.564657489 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.549451555 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.55561186 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.566200711 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.563599984 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.564653928 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.572722942 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.561101367 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.56668286 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.566873848 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.558900685 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.565845388 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.562374126 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.564857952 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.570487699 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.566487555 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.559373444 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.568964345 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.566608474 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.554611557 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.562362008 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.573634316 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.562876179 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.556755176 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.572681317 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.565708688 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.565137085 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.565418104 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.558609029 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.570721893 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.567034351 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.573728387 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.55761374 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.568479593 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.558361729 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.569396871 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.56081337 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.563012375 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.564718437 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.563560617 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.568563024 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.560817329 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.556747998 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.562835267 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.562560131 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.56009923 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.555900179 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.569339235 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.560867153 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.563039909 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.55867355 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.559470179 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.564621327 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.554091028 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.563119799 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.55735487 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.57821958 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.584017621 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.568937867 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.566285726 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.566165581 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.564489574 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.564095747 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.558989329 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.557680128 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.558852229 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.55831237 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.55744688 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.56672112 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.556236347 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.566109137 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.559658975 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.563201694 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.565768443 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.563280706 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.556553746 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.567198754 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.564165404 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.564588881 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.554135793 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.564584216 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.559182949 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.565739362 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.565444198 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.559990583 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.572268663 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.569148375 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.562896356 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.56288905 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.560870998 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.558074503 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.562442045 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.569848989 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.560042739 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.573620278 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.558584803 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.566707558 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.562030002 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.569021329 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.57568952 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.558891363 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.572206299 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.566531132 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.556785949 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.559965353 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.565275297 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.569452238 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.577774212 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.558890345 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.572591148 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.568432422 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.567587478 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.566499423 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.568370008 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.567393871 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.56778712 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.573868694 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.57327164 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.564423996 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.569363167 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.57454456 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.569567485 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.56645958 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.559778158 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.570660035 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.578828717 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.564490119 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.568188253 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.564292493 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.570622495 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.568733183 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.567708076 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.567983347 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.56835912 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.571617778 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.574909427 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.570589034 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.568730986 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.571790676 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.578935524 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.573014982 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.578874626 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.564920611 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.572820706 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.56844484 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.562822428 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.565378861 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.565239217 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.570679758 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.562833758 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.574708162 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.570483414 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.568381605 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.569370651 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.577410841 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.563577681 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.570827505 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.581891715 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.563473091 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.573400401 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.570620197 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.564394339 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.574316847 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.57111655 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.562918012 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.566043387 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.573047908 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.577731861 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.56460543 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.574199632 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.564794562 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.575701215 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.573627651 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.57102892 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.574014697 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.570945901 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.564330227 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.574388389 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.573266575 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.579814594 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.568014555 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.572495427 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.568765985 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.578359876 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.581582234 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.568506806 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.578721266 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.574781661 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.566649198 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.570521993 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.578861115 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.568312525 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.576459667 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.566656628 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.570709396 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.573996158 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.576360311 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.578019714 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.578708911 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.567243639 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.570641318 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.577177445 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.57362046 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.577431878 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.57264841 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.582916236 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.56880184 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.568217206 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.575515831 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.568863482 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.581406679 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.568101396 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.573091367 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.571326335 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.578985084 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.576570738 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.577851109 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.567641129 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.572000875 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.582791935 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.580475872 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.577101747 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.574438766 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.579227272 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.570264939 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.574652765 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.578931502 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.571870737 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.571072272 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.580121574 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.57297353 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.570752485 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.570787995 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.578288665 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.576622615 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.576162746 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.570896208 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.581051582 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.582925471 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.580725099 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.568092391 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.572399828 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.573511013 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.577122283 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.574203405 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.569016333 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.583388782 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.583817894 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.580808926 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.575038154 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.575768554 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.569817837 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.581083255 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.577554157 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.574424415 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.584535927 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.572372192 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.583873209 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.577399126 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.5776309 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.568932891 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.573267438 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.574785275 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.576416522 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.580289323 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.577134121 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.581891301 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.575614787 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.583875602 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.577657923 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.578038127 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.580251137 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.570316865 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.580626646 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.572284655 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.583876127 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.577926584 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.572821658 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.582248478 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.579280657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.573115238 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.580132384 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.586262042 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.579528642 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.572001309 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.577753896 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.582822508 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.587658681 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.57997487 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.572423545 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.578576202 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.584326449 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.579963712 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.579518814 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.574393908 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.595741005 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.591549267 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.576659343 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.578648516 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.584784926 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.58830126 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.579802708 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.580110676 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.576172412 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.582633139 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.587105632 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.583227685 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.585687291 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.58759776 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.578083018 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.584505891 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.577274144 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.582627626 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.58352392 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.590047626 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.580555369 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.578411559 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.591534613 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.590829628 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.580357889 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.598087206 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.587475502 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.583761851 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.588657448 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.575735603 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.58345678 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.578457178 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.589633415 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.583859681 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.58401321 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.582104874 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.575445204 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.585982429 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.588677661 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.593894976 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.583399447 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.577445287 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.579968369 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.58474345 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.583344065 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.584653035 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.583469405 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.585722231 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.585061282 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.579467046 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.601073211 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.602459089 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.590862486 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.585931559 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.584760563 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.585123902 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.589554994 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.587555753 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.591342322 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.584915219 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.58566656 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.583620285 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.593941683 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.586854214 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.581280425 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.581246464 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.579212466 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.592644627 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.596321331 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.606659519 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.588826124 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.588691228 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.589203567 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.58899891 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.58324463 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.591619618 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.587341752 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.584233843 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.582956611 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.592248878 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.588959593 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.587489896 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.582275083 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.600237027 seconds)
  done (took 932.971309753 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.587150702 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.588799881 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.589001643 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.589577612 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.587843645 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.58778527 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.590224215 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.588340367 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.587907214 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.588616319 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.588353975 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.590379507 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.58859191 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.588922692 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.588495723 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.589224501 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.589059631 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.588756731 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.587328494 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.588525534 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.589062588 seconds)
  done (took 34.805813198 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.58978787 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.5890431 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.590772785 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.588720407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.589495692 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.590596118 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.590252785 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.59008855 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.590771058 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.590275228 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.590695335 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.589285119 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.589154423 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.590296592 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.590278487 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.592551343 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.590626815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.592103069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.590589829 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.590567445 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.591097197 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.591874557 seconds)
  done (took 36.433762769 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.592524504 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.593392915 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.585851201 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.593705768 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.592177089 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.59041771 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.590274675 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.592297585 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.594021039 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.585306288 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.587023873 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.588246091 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.591743992 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.596419198 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.589311747 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.596801448 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.593734662 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.594639845 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.593747347 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.594106211 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.595527764 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.60354641 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.594237276 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.585496681 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.59427287 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.59349924 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.594177382 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.593587349 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.584690731 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.597321906 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.59343732 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.587723473 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.59532213 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.594326504 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.586855151 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.596938653 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.593585314 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.594659814 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.593124307 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.594700322 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.61110332 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.596350277 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.601150919 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.60869292 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.595364917 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.591890714 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.603039605 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.594601188 seconds)
  done (took 77.951212552 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.594133996 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.595638979 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.597575184 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.595650106 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.596335015 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.596662564 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.596906594 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.596646743 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.596934908 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.594648414 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.596348527 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.598279036 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.597362346 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.59843481 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.598392783 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.598134782 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.598628432 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.598183784 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.599369491 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.598316384 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.597750188 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.598248392 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.59740425 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.598137536 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.597370887 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.598673594 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.600475157 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.598394705 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.59859167 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.598968363 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.598873011 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.598569028 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.597158119 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.599142938 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.599642126 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.599326054 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.598975196 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.602350944 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.599574692 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.598511777 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.601357329 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.600949662 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.600526541 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.600483981 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.602225852 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.600810907 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.601348004 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.599956976 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.599307616 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.600450246 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.601319351 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.601282265 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.602174682 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.6008152 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.601564418 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.600934188 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.601054417 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.601020203 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.600003198 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.599414283 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.600910987 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.602163015 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.603443822 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.602017473 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.601831953 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.600414055 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.602535306 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.601516977 seconds)
  done (took 110.203236403 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.602196389 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.602783025 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.603442544 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.602449402 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.602255712 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.601613979 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.60081642 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.603502442 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.603391664 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.603370549 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.60235595 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.603559442 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.603095683 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.604954793 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.604450777 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.606309898 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.605648313 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.603540885 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.604552532 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.604825548 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.60379526 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.602926352 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.604002227 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.604701646 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.6053186 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.603550058 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.604234525 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.605508361 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.605397871 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.60305076 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.605164843 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.606509098 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.605011807 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.605549343 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.605417541 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.606571193 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.605212 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.607502865 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.604799118 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.606065889 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.606002871 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.607710441 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.607020997 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.607949545 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.605404347 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.606070724 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.607653272 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.606079548 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.608677377 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.60729061 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.608325537 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.607045742 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.606695653 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.607476089 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.605723782 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.607249849 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.606385235 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.608123191 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.606970916 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.607167498 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.60771587 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.607726168 seconds)
  done (took 100.98418249 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.60688809 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.606569878 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.60863679 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.607901431 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.606479865 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.606862124 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.607052606 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.606604056 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.607199979 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.60863876 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.607878283 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.607422734 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.607887123 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.608829653 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.608643844 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.607754194 seconds)
  done (took 27.179193427 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.607834716 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.607621402 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.607755606 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.607456375 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.608716324 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.610119899 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.609382778 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.608849512 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.607414699 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.608384826 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.606892767 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.608723403 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.608413812 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.611446231 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.608212533 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.609716283 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.608544481 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.608742648 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.60920948 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.609170136 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.608896549 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.610308336 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.609582864 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.611478271 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.609516934 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.610750723 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.610378948 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.607436988 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.610512921 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.609696261 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.609628181 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.61136658 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.610527585 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.609982625 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.610061191 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.610024327 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.610811885 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.612265905 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.611115289 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.610244316 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.612890789 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.610801227 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.609969528 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.612689154 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.612569586 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.61227287 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.612452261 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.612031048 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.612307774 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.613422756 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.611568698 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.612754534 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.61211688 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.612635714 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.613512591 seconds)
  done (took 90.02319254 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.613985829 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.614373839 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.610502808 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.611465383 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.612382455 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.612005429 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.613096283 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.615757779 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.61529328 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.612369202 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.613054144 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.615704502 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.613419246 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.614175418 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.615879672 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.614461501 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.613058534 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.614704141 seconds)
  done (took 30.510891086 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.613901377 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.615967596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.61478408 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.613708788 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.615035192 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.616226336 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.613589158 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.614282723 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.61447839 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.615208651 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.615034487 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.614993906 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.615722018 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.61558368 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.613695887 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.616048846 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.614773549 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.615040568 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.615247378 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.61556894 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.616394327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.614202738 seconds)
  done (took 36.99394673 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.605853911 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.607960025 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.606451316 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.622197478 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.61985706 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.605563025 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.608890636 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.606965773 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.626091418 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.635665781 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.633761433 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.617915336 seconds)
  done (took 20.863548392 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616048401 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617845354 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.616657029 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617123388 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.616574172 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.615950079 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.617477016 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.617788678 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.618967211 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.618962573 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.657694422 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.617386177 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.619541126 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.616150179 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.617146851 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.617278571 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.616551241 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.616332581 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.618349862 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.617704169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.619128461 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.618571387 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.619443311 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.618666299 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.618889883 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.619937582 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.620230541 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.620265345 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.61934493 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.62063312 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.619983555 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.619032172 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.619380554 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.618577919 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.618333918 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.620363449 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.618491911 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.617403138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.617680756 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.619701175 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.618771409 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.619818604 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.619804507 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.620571025 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.620650732 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.622367606 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.619778322 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.619675526 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.62084537 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.619927642 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.620389618 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.620709983 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.620754875 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.621163782 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622555731 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.621230661 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.620489417 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.621098233 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.620876337 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.620765266 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.621646692 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.622118718 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.621878688 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.621321531 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.622867101 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.622606113 seconds)
  done (took 108.387505617 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.621777791 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.622167388 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.621251627 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.621719084 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.621310012 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.621947859 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.622895504 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.622126236 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.623152359 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.622367355 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.621771527 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.622831309 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.624443239 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.622501573 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622535524 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.622488264 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.622051012 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.622440731 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.624612301 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.624413911 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.62295031 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623462119 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.624894774 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.623849047 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.623103748 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623745313 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.625430203 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.623251603 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.624520711 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623533783 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.623240091 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.625966843 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.623021608 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.625340084 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.621885206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.62590947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.623978245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.625143953 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.625190245 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.624039018 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.624443147 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.624366469 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.625192987 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.625598978 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.626585437 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.625530192 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.623856605 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.625263428 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.623467137 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.626028534 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.626302648 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.627264424 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.625647256 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.625633737 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.625822647 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.624972563 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.625077271 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.625136578 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.626232351 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.62598858 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.625808615 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.626148764 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.626707591 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.626658827 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.6263499 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.627298788 seconds)
  done (took 108.674647684 seconds)
done (took 2071.234699067 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.615220485 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.612637434 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.621527121 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 11.071386956 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.611933286 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.537724534 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.328937861 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.607862153 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.615863317 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.617164479 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.618365985 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.614716805 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 11.456050731 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.611419441 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.616429335 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.615082857 seconds)
  done (took 60.247181339 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.655031306 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.631015737 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.780615614 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.639171606 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.656965252 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.865484383 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.691970396 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.623835923 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.842015672 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.637827681 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.626565805 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.649046365 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.625080914 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.632640264 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.639343681 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.86567079 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.966883802 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.619879551 seconds)
  done (took 35.124179681 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.22114657 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.646052087 seconds)
  done (took 6.343976749 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.650236904 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.62889784 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.632388513 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.628225188 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.617549221 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.613078717 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.627528688 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.643011618 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.616630256 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.781075333 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.624293008 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.643513427 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.626479996 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.62783174 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.63506133 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.693449108 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.791473365 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.637253698 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.632856967 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.632983573 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.629433883 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.89508478 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.669706388 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.633243797 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.783354861 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.621558184 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.632801903 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.648924929 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.795154975 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.634310837 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.628574301 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.629750764 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.629965861 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.632059694 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.35894169 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.615668571 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.682741695 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.634049776 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.636035115 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.799135978 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.628831008 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.635743093 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.63225829 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.36719117 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.78675082 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.946036707 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.624630425 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.629740297 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.630386375 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.857946371 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.618561127 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.630198915 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.697764827 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.638091357 seconds)
  done (took 102.991817638 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.67796958 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.619445431 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.891418238 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.655690475 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.621454393 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.620080033 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.621848621 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.988153113 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.763972566 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.624285607 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.071504656 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.451826583 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.618467977 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.740354296 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.448588143 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.763447615 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.620598683 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.62018178 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.617235701 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.618157335 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.406920973 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.623576284 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.621174328 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.753171154 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.678626194 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.33608962 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.608849305 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.615154394 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.618628593 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.613514574 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.421498756 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.616848881 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.806784057 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.616762877 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.059716315 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.143908121 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.091755436 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.615854635 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.629129145 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.623164261 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.655582574 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.354074398 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.110953022 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.615887964 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.642530118 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.363146188 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.619157046 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.643689689 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.632495558 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.097450073 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.623480166 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.632874566 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.621046257 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.633752392 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.621686369 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.783983397 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.685079737 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.326087782 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.617517784 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.62713926 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.654339879 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.625733851 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.64955804 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.62903511 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.632755747 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.132710652 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.969673578 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.636112976 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.125655968 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.410133425 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.616445048 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.614300556 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.613570402 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.663182222 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.696755224 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.626981338 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.620075315 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.321095017 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.648384633 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.619637549 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.103510016 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.624245899 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.089461378 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.64502659 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.629781988 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.423179621 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.632986658 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.680908251 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.627275732 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.621736092 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.618799841 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.635211534 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.073534207 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.713545928 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.628985403 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.629334487 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.64074193 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.629777347 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.623132638 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.641923097 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.623688343 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.639061301 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.629595363 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.635667651 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.629878063 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.622748399 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.632347256 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.632310092 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.114596188 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.621065614 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.633015196 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.63081824 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.630956043 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.639339469 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.759853147 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.639246582 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.025254881 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.627737193 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.620693307 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.633450958 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.632097971 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.630802926 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.620493122 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.622614527 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.630414529 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.073471953 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.650088634 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.621979951 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.63254581 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.631419032 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.631271632 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.625543695 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.740867479 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.636294148 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.631046756 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.638970757 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.641153551 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.631346307 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.650701424 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.644272916 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.63184211 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.636738776 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.154006067 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.064906556 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.016270854 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.632743711 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.634837694 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.634223066 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.646927812 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.900523281 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.653068621 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.633579342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.054724048 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.978544784 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.635643519 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.624161762 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.636677154 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.117526127 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.62604942 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.145419185 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.44731364 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.622227524 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.65221317 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.64688784 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.541507195 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.63629879 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.63223288 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.093238435 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.652561605 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.634441517 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.634615306 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.641757888 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.624490486 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.642363382 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.639500471 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.635404874 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.63763568 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 3.114135132 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.898099916 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.654438286 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.647944898 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.344849703 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.725077856 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.622288541 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.638188848 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.642472843 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.63530572 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.690238515 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.643063525 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.692563974 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.638924399 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.637208731 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.407892494 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.625843599 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.645714352 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.899148072 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.654614833 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.631021833 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.648057167 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.625390825 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.473896295 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.362801218 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.76875938 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.031953673 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.650481541 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.694194142 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.637683348 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.719605251 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.365690914 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.628605639 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.640253226 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.638282454 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.628864956 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.201900857 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.635419345 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.641754 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.627867718 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.631038779 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.644538259 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.642453184 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.624751091 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.134749022 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.635022236 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.639174551 seconds)
  done (took 577.551100133 seconds)
done (took 783.734440357 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.637479715 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.626648838 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.641587681 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.641770519 seconds)
  done (took 12.047503886 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.656772557 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.645982938 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.654571255 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.642988003 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.654868995 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.642992049 seconds)
  done (took 11.400429727 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.636649922 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.624486621 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.642296975 seconds)
  done (took 9.401125248 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.923666509 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.670147291 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.055343694 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.640088437 seconds)
  done (took 10.791142641 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.653617382 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.656302242 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.656619878 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.654772313 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.657687034 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.655951094 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.655283932 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.655820992 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.658317585 seconds)
  done (took 16.403070808 seconds)
done (took 61.545364788 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.732358593 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.735868776 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.651087715 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 2.649790248 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.806497576 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.741645024 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.730993606 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.764584276 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.724690311 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 2.672586384 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.735683675 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.656049894 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.708063483 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.850126337 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 2.653211968 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.740450732 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.665758788 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.806713682 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.739005444 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 2.665382388 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.759546666 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 2.649688324 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 2.663521013 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.63158304 seconds)
  done (took 52.634140412 seconds)
done (took 54.134411083 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.681659551 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.749639469 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.654918125 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.653249451 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.655376027 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.658921636 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.661243169 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.654459438 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.666051279 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.664744636 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.65986593 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.64928155 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.667398045 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.663980155 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.688058736 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.654980379 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.653309486 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.674286571 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.665894757 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.670024044 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.657210922 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.65720097 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.71104973 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.656257816 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.663138574 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.664658691 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.662329651 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.650478405 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.652738335 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.670034394 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.657840633 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.65046916 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.670689802 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.665968378 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.65690019 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.662647138 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.659298028 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.75420114 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.676423555 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.665357506 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.662467579 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.669589506 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.658886316 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.661980373 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.664670477 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.684743565 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.665394403 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.671068033 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.657991914 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.64760446 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.666884091 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.667572753 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.662807267 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.65644722 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.649859164 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.659491863 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.664428399 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.679019809 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.664511885 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.662310021 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.692114681 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.679898575 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.668510802 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.669220193 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.664320469 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.675137263 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.669533627 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.674916584 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.663231349 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.661705846 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.661687047 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.66425412 seconds)
done (took 129.552607572 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.786035264 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.652430134 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.818354663 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.66428279 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.845006357 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.790432851 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.664264944 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.666760712 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.664176051 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.468520718 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.665622297 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.66346807 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.654256982 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.664844425 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.788034707 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.66579616 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.664816186 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.362617212 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.665376005 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.806231707 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.652140789 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.665605453 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.666762064 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.461992228 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.654332161 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.654406408 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.804092053 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.666238993 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.361482615 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.651205872 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.657483327 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.360825932 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.80978367 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.685334255 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.676366952 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.672962188 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.845362238 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.668578274 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.789787786 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.787936266 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.823094413 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.707258047 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.654244321 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.651734176 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.66977158 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.667525561 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.667809007 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.698169926 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.654479012 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.667490989 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.368568016 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.678979633 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.668702527 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.669704011 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.668364227 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.695743035 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.672436649 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.667553517 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.812463318 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.668354332 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.790914025 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.461040738 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.472665826 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.669714939 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.657808565 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.669708415 seconds)
  done (took 130.479254967 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.738455387 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.742452628 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.793801753 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.651872183 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.711092296 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.789805502 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.650949095 seconds)
  done (took 13.589820105 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.664695183 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.66956518 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.713720361 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.71296605 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.669642493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.841236682 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.670205862 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.672353833 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.668150622 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.723447309 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.667567895 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.671336487 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.679102137 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.661977043 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.711586004 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.674237499 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.789336843 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.663868692 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.670761712 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.821906129 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.670615088 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.68370615 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.722183038 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.676402682 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.671225794 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.670739373 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.43609742 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.671394404 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.673308681 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.674075633 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.670247043 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.737110045 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.673404454 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.663720305 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.670274739 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.788552005 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.675030488 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.672079977 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.673217361 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.665883376 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.67297209 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.669817932 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.67372662 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.674051394 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.672949433 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.690152716 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.673126146 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.670615755 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.672367534 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.675691105 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.725077533 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.672285655 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.673526789 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.670884824 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.731730534 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.683702303 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.671617022 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.670078676 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.673537854 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.674876848 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.828113163 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.718742746 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.67375196 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.713735808 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.674526732 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.673700954 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.671854601 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.673228049 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.760592912 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.672237128 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.715278048 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.672218894 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.858267328 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.690639231 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.675174243 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.667854182 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.672896676 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.671433966 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.666231047 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.672670488 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.675228252 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.669579763 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.673378635 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.672832024 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.674905246 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.842989325 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.785572342 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.675477935 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.690130035 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.686444421 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.676554081 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.726339636 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.67959348 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.678204783 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.726837654 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.798139649 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.728480074 seconds)
  done (took 170.651334138 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.680623289 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.684433512 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.673683687 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.699615647 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.670465449 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.668740642 seconds)
  done (took 11.597599614 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.672156645 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.679796661 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.679819984 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.678777741 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.68054149 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.677926688 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.676876265 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.672402878 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.681676356 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.678167144 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.679110499 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.677668636 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.679633731 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.679727372 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.680420376 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.680089348 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.677199193 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.678632123 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.67917324 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.680371599 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.670717588 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.682839922 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.68025164 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.673018458 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.684093631 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.682095579 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.698415683 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.679849669 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.680614638 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.678081628 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.683710213 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.681008929 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.672954096 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.675129957 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.68264994 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.673388673 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.686955683 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.685675318 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.683416309 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.68394122 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.685107913 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.685957283 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.68273636 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.685011666 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.675723401 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.677136344 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.684390553 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.702782159 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.683368168 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.68534591 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.684968114 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.683652669 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.681828301 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.682314168 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.679304476 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.678596709 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.688855733 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.68566328 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.681926296 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.675045913 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.685556736 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.686609482 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.676284414 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.687787508 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.684044376 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.686850657 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.677646177 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.687572033 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.684846748 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.684970322 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.686572896 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.684276629 seconds)
  done (took 123.59419691 seconds)
done (took 451.418880246 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 12.22149138 seconds)
  done (took 13.744892645 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 3.001792211 seconds)
  done (took 4.525516818 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.063739675 seconds)
  done (took 26.597734039 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.822081334 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.67270238 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.700009105 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.66678586 seconds)
  done (took 12.383562286 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.423341374 seconds)
  done (took 4.944437914 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.67534501 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.692536074 seconds)
  done (took 6.890320862 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.199729538 seconds)
  done (took 4.719454844 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.150388751 seconds)
  done (took 4.679187794 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.687744676 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.68672605 seconds)
  done (took 6.901207911 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.6500189 seconds)
  done (took 4.172493967 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 44.744858335 seconds)
  done (took 46.269522419 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.692761474 seconds)
  done (took 4.219164289 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.719300833 seconds)
  done (took 4.240354005 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.897499416 seconds)
  done (took 7.423722126 seconds)
done (took 153.237580379 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.666599946 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.660500614 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.66349682 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.662693319 seconds)
  done (took 12.178596238 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.901741096 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.815972532 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.898685743 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.788402688 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.891119907 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.841568542 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.775542567 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.850793007 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.790988813 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.804566173 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.817448567 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.816717498 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.897637724 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.771452194 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.816638817 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.902401398 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.874101287 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.818634742 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.852304424 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.808398677 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.691487603 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.867070463 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.891243768 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.686752805 seconds)
  done (took 45.391949385 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.248690017 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.821034215 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.885425203 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.807741537 seconds)
  done (took 9.291084722 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.681775422 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.682864596 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.5753787 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.587364373 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.680766727 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.685049962 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.715870324 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.711807649 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.69783014 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.686035694 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.681519047 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.589684516 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.683845215 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.69063372 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.685011334 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.690364722 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.690556273 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.684246586 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.650451783 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.618668398 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.691095885 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.687181509 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.558719415 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.598956043 seconds)
  done (took 58.434544693 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.709054709 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.709248818 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.693963386 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.691349886 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.692493409 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.694112262 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.722825584 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.696588883 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.704278605 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.692293599 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.695959062 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.694749221 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.7026075 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.704263564 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.693622344 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.70741329 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.694810511 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.702347005 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.704744865 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.69217287 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.703783429 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.701267348 seconds)
  done (took 38.934418488 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.678228564 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.674881904 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.676630551 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.677684035 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.679392457 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.667776551 seconds)
  done (took 17.588545389 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.767859771 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.920756889 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.674621505 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.146316859 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.259971205 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.68526359 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.687389925 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.972533367 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.340498811 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.37939458 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.744736511 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.774227656 seconds)
  done (took 24.882181384 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772414867 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.688330677 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.68943479 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.754452432 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.677473534 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.686793816 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.743005851 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.23476916 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.682100715 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966401285 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.687994563 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770172779 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.938198292 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.699632187 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.693426117 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.658350721 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914828995 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37272163 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.685092847 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689762285 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717874908 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.686319605 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.6815204 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.944338642 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.692185887 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.688710577 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.689113335 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.689165337 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049901563 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011739268 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016219736 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.697873273 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.99353766 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211252623 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862621312 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952347535 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690884734 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.688928671 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.677726591 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.693883631 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.687010968 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.692732082 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012330792 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684587443 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.690450692 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.702744552 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246548295 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.696839613 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.693404971 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.691028949 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021848603 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782133292 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.696282436 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.692515907 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685860567 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67812835 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.698602847 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821001808 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332951096 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.703396626 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683779547 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.68101061 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.681367396 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684173453 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.586846755 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.698955501 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.701081615 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698359398 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695710607 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.687907331 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722283525 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69392874 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.776000125 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691558949 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693790131 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.686148934 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686031815 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.454354814 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694492738 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.697339603 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92566442 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.692061672 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.696268105 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.695664393 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.697074112 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.676879046 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728404563 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.662584757 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736953149 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257295328 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.949371401 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.724128894 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727455891 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.923243995 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.663725881 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.695650877 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.698651502 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693271066 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716522729 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257285854 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.689846075 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.679641703 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944815558 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.692941475 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699343608 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.676393064 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250663661 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.70926788 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.735240562 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.716109097 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.943441152 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.54467604 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013908532 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.702742429 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755237688 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.699819558 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.709042708 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712538503 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.706326023 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705414156 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190279889 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.656441732 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726233954 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821085814 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.701111858 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.702452466 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712471033 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.695859339 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.697633 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.939755062 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.701997111 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.012569717 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.701741857 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69937491 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.706480392 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696733671 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.701264518 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92385894 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701011827 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984035783 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700950796 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.702326569 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690157961 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.921923764 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.714661917 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.696065764 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043899806 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696820427 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.726902686 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024892864 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742451652 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890752708 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743684311 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.700414342 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.944298632 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.703281394 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.707519704 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.720248888 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.703880383 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707801539 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.709329137 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.698984884 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58639574 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704690686 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.695782848 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.702570623 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.715635775 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842233163 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710759254 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.96724533 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.701988341 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686525248 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.694549336 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.716921439 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913773056 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022057652 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.705778331 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885704495 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.296008573 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.58932572 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721315424 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.70398973 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.704051182 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.703452836 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706506857 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704040249 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.700879596 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962992528 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030578006 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.700347222 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.57563863 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709499104 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.717615767 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.708733763 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02709131 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.715694875 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707401031 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.709471379 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.695432854 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.724419373 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018453489 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943392455 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.725181504 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.703160514 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.260304484 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71526146 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.706341577 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.70753499 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75824675 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.711420652 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336097653 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035877847 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712059881 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024302117 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.709861601 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.711987097 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.70798202 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711020108 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697308733 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.733339253 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.729183761 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.969906337 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.708765737 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.729471735 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348168633 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709009427 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.532866698 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.711221559 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.722937398 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.709500066 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282961159 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.696554343 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.710343717 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.098285803 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278472418 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69635222 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269379988 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.706585988 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.70555481 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032480865 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933236485 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.721975508 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.704226192 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020950617 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.694530529 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.762218576 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.7055074 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712104852 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.665047612 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331668772 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.700841936 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891315064 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27436673 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.698045289 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.701017318 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.75697126 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.701576917 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220928651 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.707429387 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705122116 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.688886492 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.712118878 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326712943 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.702456964 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.703763434 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.609575423 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.699829816 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.294833181 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69292269 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.97172161 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.035211127 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.014228503 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.70975689 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.69966265 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.941252238 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032367273 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706464302 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.715757533 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.474156446 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.588496003 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.711327053 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.704805191 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.709487063 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711256351 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060172852 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.697872248 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.693195241 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697441378 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.706653719 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708280048 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.702202579 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.711212114 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.707384716 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.406677179 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.711037753 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.709138296 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.700031737 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.702563341 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959032531 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.728882309 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.560723826 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920750551 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.703720943 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.746734599 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.716918589 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.719254247 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.666381568 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.708277412 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.707266325 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.785348387 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.9213992 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.702503455 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.675827394 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.769628533 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.694185116 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.708128171 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.710426779 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960085402 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.694455808 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.710984131 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.694436145 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.727666634 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.707490406 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.69935786 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.693309867 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735354864 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831346157 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959201275 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.023368381 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022088255 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20174157 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708248921 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.701947976 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.727808766 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795516001 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.717539836 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.702589654 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.248831735 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.576832825 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.700156141 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.566613479 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026105773 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.704948877 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.71440144 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.705242192 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976348893 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.706973896 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984946817 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712010025 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.708942129 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735556974 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.722789415 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710711492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.701068864 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994068822 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.714288056 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.732897101 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715509518 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.711022187 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045992028 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.706912375 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417654754 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.450074257 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.702100397 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.711466561 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265691257 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973454749 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.714131072 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.713789388 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713489603 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.719703352 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.714262874 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.727167742 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.726370173 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935451828 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036280772 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25494928 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.037038171 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 3.164708579 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.712038289 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.715000896 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950705335 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543756686 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.978361233 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.576066265 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.682390404 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955641354 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847210966 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981998193 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.718378387 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980525057 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.72096327 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.7058679 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.717459368 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709681548 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.7098703 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.038192117 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567344818 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96065497 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.718456032 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.712662047 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735602305 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.974990989 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936804419 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.686749708 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937882873 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038782755 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.722566437 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.7057804 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.590378151 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037831162 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716479143 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.712243619 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98893346 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.715599224 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.789193975 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.709610942 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.705991104 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475787401 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.715362531 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731017735 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.729288586 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.713553834 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583482035 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.706185864 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40109755 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.704908971 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731010255 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992824711 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.71379237 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.711858083 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.003567711 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.707199625 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.710252322 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962765491 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.546469191 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.731124262 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.721685779 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709766349 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.70630109 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.708857281 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.753054834 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.708095169 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.716271316 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.203834964 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.707873173 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.718789261 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715942118 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.727914031 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.706236354 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.726254312 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.720347607 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.715127356 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.73423552 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.696946194 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.709293567 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831619983 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342560207 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.712667511 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.384108334 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.052823679 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.964740968 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.713660129 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.678360061 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.717194165 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.713352187 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.711423839 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.710423288 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.714965769 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44259488 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.725356123 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.030575656 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717132103 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.711830873 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711883128 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.727454152 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971072044 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.722979512 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752869657 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.684804708 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716902728 seconds)
  done (took 1163.476018483 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.741361375 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.742988216 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.740590375 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.779757606 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.80163469 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 3.060643029 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.850150349 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.917084108 seconds)
  done (took 24.192201504 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 3.08051016 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.872649883 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 3.049300281 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.875983127 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.716467609 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.434134488 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 3.053684064 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.878019741 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.89388871 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.730062086 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 3.060962511 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.625716896 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.896600873 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 3.052394363 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.737868736 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.727543621 seconds)
  done (took 41.264782391 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.838804613 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.529448862 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.433738687 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.878556228 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.772089662 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.713869687 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.060191531 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.712515634 seconds)
  done (took 38.510810304 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.736492634 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.738580313 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.743095025 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.740034676 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.738559518 seconds)
  done (took 10.266428904 seconds)
done (took 1485.937627938 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.748711633 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.749983643 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.749018609 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.7448434 seconds)
  done (took 8.561134134 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.704301826 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.705877687 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.707653064 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.719922828 seconds)
  done (took 11.409390657 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.198949094 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.410925202 seconds)
  done (took 6.180555723 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.735433106 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.598017418 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.486109384 seconds)
  done (took 9.38870397 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.05144937 seconds)
  done (took 3.623869793 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.142238596 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.250350669 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.732082788 seconds)
  done (took 8.694177186 seconds)
done (took 49.430576936 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.725631758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.484647822 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.886489925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.738532126 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.877496466 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.885231119 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.98609958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.733335625 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.710693636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.714885748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.721130944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.875945361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.986763163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.496416881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.982693994 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.497127457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.888391927 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.741935791 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.729387935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.714258498 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.986912008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.726905301 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.731742046 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.733506108 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.87078561 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.895685394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.734853929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.481305959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.729156726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.711956045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.858251148 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.730068096 seconds)
  done (took 94.139601135 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.726623676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.715260165 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.710896979 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.730251273 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.725393075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.713452108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.736163958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.714787568 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.719645177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.712139617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.72137626 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.711717391 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.718364271 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.748939061 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.714146222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.722874753 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.716092831 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.712131485 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.712641821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.71250508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.716121655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.710883645 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.709539749 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.710950267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.720605955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.711109802 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.712904178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.708926828 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.714018746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.723374418 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.710837866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.711662742 seconds)
  done (took 88.529327787 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.723800141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.737493248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.714432612 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.732201079 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.723018881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.712971293 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.73673292 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.716413129 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.712054372 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.724091994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.734732005 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.717253836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.718395535 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.711607537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.735467167 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.712985036 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.729086906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.714878463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.712217369 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.726881873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.717371678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.714202751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.712853668 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.715990507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.723600923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.715847582 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.712965649 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.733294723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.73252158 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.71660768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.713866889 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.715220723 seconds)
  done (took 88.641854935 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.466266693 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.739228095 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.74889519 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.737604335 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.745741704 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.741610547 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.730462683 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.46760182 seconds)
  done (took 18.949015086 seconds)
done (took 291.831318667 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.736451933 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.741730425 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.75539486 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.745332699 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.757549845 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.765085359 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.426915748 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.762972203 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.962124207 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.723486333 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.754694365 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.731263511 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.721794264 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.29773949 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.737879165 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.746542095 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.735529652 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.722035108 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.750867384 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.725690388 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.764363224 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.728617309 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.736994655 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.744209381 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.698723442 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.804456077 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.809141266 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.755457195 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.867764054 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.808917337 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.7208564 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.772923605 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.728995215 seconds)
  done (took 80.823420162 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.736370511 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.80608448 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.742172665 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.738062059 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.800081819 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.74101576 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.733299747 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.740391364 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.743969627 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.742537397 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.740915165 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.744044585 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.749093001 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.751006242 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.800733355 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.723760201 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.735072958 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.797465669 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.734880449 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.721126629 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.741603443 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.739520828 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.748222889 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.758631642 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.745667365 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.747188403 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.805800693 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.745409764 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.73216855 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.804289256 seconds)
  done (took 54.170439175 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.753451082 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.741542005 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.741979812 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.741012151 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.736992064 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.740778981 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.091756048 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.738213604 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.740609173 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.739030548 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.736587749 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.737412054 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.790568191 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.72796411 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.7330486 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.740551371 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.747347469 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.738832271 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.744551773 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.745225258 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.110271563 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.740706504 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.118547049 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.766738753 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.751683945 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.746730403 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.746127583 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.735093729 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.735127922 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.752561396 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.732521112 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.117109344 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.738277742 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.748476557 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.730826673 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.75403116 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.748320333 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.735628848 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.735268001 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.742562176 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.117481646 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.735056959 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.730251782 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.735142748 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.735200174 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.749847535 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.739191505 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.731553054 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.08032092 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.753637244 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.736042943 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.760906055 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.754682425 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.74803703 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.061963915 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.739467032 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.746936018 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.735991831 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.765122216 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.106390217 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.7504667 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.754048742 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.760097081 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.737826907 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.753105615 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.738660482 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.760989376 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.753274244 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.738844939 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.744040189 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.761155638 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.741585945 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.755404192 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.75732941 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.743028429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.735420701 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.742684582 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.745440384 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.749487176 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.100477891 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.745905187 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.74227624 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.115953765 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.743599678 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.762723133 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.759549948 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.761663166 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.838058671 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.104322914 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.730848014 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.751782271 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.733648598 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.129422112 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.753422999 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.753463679 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.74347688 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.768859845 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.759646109 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.740651932 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.753839325 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.739014693 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.760635334 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.750827236 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.742570299 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.122222593 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.745160058 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.747943677 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.742497477 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.839098281 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.759910363 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.76423286 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.757097854 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.130618151 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.746281061 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.756172202 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.742914287 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.73984475 seconds)
  done (took 249.142365958 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.745306505 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.733763335 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.741582604 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.733411119 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.742978921 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.751539445 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.745471298 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.746748069 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.753423474 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.743479658 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.750372736 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.756360486 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.751697278 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.745548806 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.750389176 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.740758916 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.74634543 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.738088563 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.737777714 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.742598065 seconds)
  done (took 52.487400514 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.764980914 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.453695217 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.438489671 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.748765966 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.760923597 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.750671703 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.818861267 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.755194987 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.762113741 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.130876776 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.967801674 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.75873338 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.761642143 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.766678768 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.428769518 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.75982336 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.130697761 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.446216596 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.755296777 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.457242437 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.752814135 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.765084671 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.75565857 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.45516806 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.132368441 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.112598738 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.822925512 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.452294717 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.754892202 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.7647493 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.457831675 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.756551891 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.757813684 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.447443281 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.758187198 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.13355037 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.752340881 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.828274594 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.821442119 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.128453267 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.452726188 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.119569585 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.18699008 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.722971678 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.754523969 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.741334406 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.467530943 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.755958408 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.740699664 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.764682333 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.775293877 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.443058435 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.752008808 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.445085541 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.760990777 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.767134149 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.458652203 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.436137299 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.425887081 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.971214125 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.748804217 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.12427181 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.755101039 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.468866841 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.758450942 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.768577547 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.768836739 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.982367145 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.456576797 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.114871819 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.130447409 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.131058195 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.761696299 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.845201026 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.763066186 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.139620817 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.834868107 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.727793821 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.129310658 seconds)
  done (took 161.177004876 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.073499863 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.885679698 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.219335338 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.746613781 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.751800723 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.764284075 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.866300462 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.510129561 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.800488596 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.884076881 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.766695799 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.766942353 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.753195499 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.866711098 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.872503747 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.366662602 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.752526106 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.745645011 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.747562114 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.515834758 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.753888108 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.88268652 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.789670497 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.154544554 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.761676343 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.745009866 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.78076713 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.752023401 seconds)
  done (took 70.875439084 seconds)
done (took 670.255434205 seconds)
SAVING RESULT...
DONE!
