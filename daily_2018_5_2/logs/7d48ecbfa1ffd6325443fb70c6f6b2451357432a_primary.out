cset: moving following pidspec: 32446
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.404299415 seconds)
loading group "string"... done (took 0.503162155 seconds)
loading group "linalg"... done (took 8.720294091 seconds)
loading group "parallel"... done (took 0.171963821 seconds)
loading group "find"... done (took 1.223162546 seconds)
loading group "tuple"... done (took 1.967633832 seconds)
loading group "dates"... done (took 1.456508056 seconds)
loading group "micro"... done (took 0.201501387 seconds)
loading group "io"... done (took 0.523826895 seconds)
loading group "scalar"... done (took 49.588407338 seconds)
loading group "sparse"... done (took 13.376158614 seconds)
loading group "broadcast"... done (took 1.249678739 seconds)
loading group "union"... done (took 8.997726643 seconds)
loading group "simd"... done (took 3.121484602 seconds)
loading group "random"... done (took 11.468322984 seconds)
loading group "problem"... done (took 2.166487465 seconds)
loading group "array"... done (took 24.454052727 seconds)
loading group "misc"... done (took 1.092817808 seconds)
loading group "sort"... done (took 3.680696748 seconds)
loading group "collection"... done (took 18.967993504 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.597286638 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129073275 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202829446 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.341143152 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.228868523 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16620471 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143734027 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.243565479 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.51522209 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.198438829 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138536669 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.499165011 seconds)
done (took 6.13116196 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.250744638 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.238696871 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162864853 seconds)
  done (took 1.074094883 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078860009 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157593522 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108087733 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094814047 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093296847 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110574803 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09346864 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108484027 seconds)
  done (took 1.440479784 seconds)
done (took 3.518557727 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492937498 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.858267206 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.492624262 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.157664522 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.292882547 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290669172 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.27115518 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.198551676 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092445695 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.105564349 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173116323 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.386491198 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.370468431 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.956076919 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092471343 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093954374 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130291601 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.752225787 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080610603 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121506949 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.48552133 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.179808905 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.100794256 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120687467 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18581191 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133278907 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159959261 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102136575 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664132721 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131908339 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.175946608 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097257587 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158462227 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.184892877 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193467444 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111156872 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676338988 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198125007 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08836255 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100605817 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669302244 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.115679051 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.182070693 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103631402 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087986059 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178652202 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091799245 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078867448 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109585516 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086977129 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16180138 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.46102201 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104655164 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171967648 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093036513 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.687598768 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09769157 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273397395 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124176181 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092773389 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.08968618 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089415319 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161390093 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093918622 seconds)
  done (took 19.778179082 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145954672 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165430449 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078915582 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156124487 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121995721 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080781417 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102169085 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07923251 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125599489 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179417279 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138374364 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1533057 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092455906 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092156438 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.129157945 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248784412 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108497574 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121667442 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091029673 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090022571 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140340569 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.098043899 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10954585 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093663749 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17008735 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203577893 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10991 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123553957 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090274948 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097072685 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143049452 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143419827 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091849663 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.09003314 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189621788 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106318933 seconds)
  done (took 5.192157253 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.197025359 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121798575 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.205089128 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159916853 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146273564 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166117162 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125408973 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268377115 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.195686579 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179765742 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113014155 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120662367 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080640074 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082168035 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095895686 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.450708019 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14801344 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163236694 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.126189036 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103739605 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082309219 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.169403101 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102150295 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079893349 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083478406 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.138379109 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305380482 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.199352169 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083504091 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.12160424 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083533271 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105527603 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11694061 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210320868 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087364735 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122084689 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141946523 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082654173 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078674743 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.222154622 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.101782864 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089463939 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079097177 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132561695 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117817678 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130527995 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.080864434 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.102123444 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.2201009 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08072516 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100790892 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.078889926 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193960257 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122638503 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078190989 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290520081 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118696455 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081022448 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07851541 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.826790117 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.1115081 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081955924 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09701231 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082641398 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083473788 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098094069 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.434718321 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082537581 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.492059668 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08490532 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154942357 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08030909 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098335973 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086804326 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086565135 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11995157 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081395078 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079756315 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097385144 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081946771 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081892929 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.12758743 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087329849 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080031495 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162249877 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098606532 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100699686 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127667652 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083092919 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09466249 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113635448 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096885709 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082075803 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.167602694 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081771039 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112379768 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099841895 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142209472 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083504748 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.238356233 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097163175 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123253744 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098751371 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113457877 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115320651 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081676639 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084829268 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09664161 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081251051 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14696871 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094303144 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081913247 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080759335 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110715702 seconds)
  done (took 28.10583298 seconds)
done (took 53.750411385 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.432614554 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079442333 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080378939 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097171335 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081191649 seconds)
  done (took 1.521093641 seconds)
done (took 2.247189372 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318299309 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190815781 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10222923 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188183957 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085873727 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191996869 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18067883 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095060671 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.20314605 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084520995 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183899813 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084376809 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104099724 seconds)
  done (took 2.766439111 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103678862 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111255975 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.118798436 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103170817 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085735492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10284578 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118323025 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111556582 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101795031 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111662729 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08618436 seconds)
  done (took 1.883364315 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10016201 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106879006 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099434179 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117242447 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085858493 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098736139 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115358535 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109090786 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098825189 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113009535 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087970735 seconds)
  done (took 1.861419458 seconds)
done (took 7.237822097 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.075140796 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.35706369 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165118138 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.209792159 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346309788 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.235213553 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.561160809 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152707164 seconds)
  done (took 13.976055272 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.168718256 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108101307 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093657229 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091654119 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094402967 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.110024146 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092206555 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09163485 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.110932088 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095647607 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090572205 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.109996268 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09657689 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094958203 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.110619562 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097231998 seconds)
  done (took 2.447463808 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.14264215 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140991201 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09969225 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100747357 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112297477 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099201311 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101578641 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.1152626 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094460799 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096552658 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119054821 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098569641 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098258161 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.109691146 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098380387 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117946327 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.108977506 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099209612 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116705989 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114992951 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101655148 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097509397 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113934679 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101449057 seconds)
  done (took 3.411796748 seconds)
done (took 20.566969954 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.14781473 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100945056 seconds)
  done (took 0.981052253 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139276797 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156154035 seconds)
  done (took 1.032270648 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112474999 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090899398 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136459504 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103522021 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091921546 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106914996 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116773731 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106601974 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092363525 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092760842 seconds)
  done (took 1.790331357 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095364323 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09661027 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121033241 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.13580798 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115632648 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094292898 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096317113 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09342568 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114051984 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093003061 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096220291 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124851133 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097307998 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126014883 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096168698 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098052518 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116103049 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095476859 seconds)
  done (took 2.64712403 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091599359 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093672484 seconds)
  done (took 0.927707225 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096326457 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090453048 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092719911 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109877677 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.0910584 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091072098 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107553293 seconds)
  done (took 1.422321072 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.484094212 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.260108652 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.355313016 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109323082 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146380751 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.34726566 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145885023 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.222832537 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102815653 seconds)
  done (took 2.95253113 seconds)
done (took 12.493449694 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092093427 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220179729 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.621711447 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113192665 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090713681 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159757886 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.281688876 seconds)
done (took 2.329449917 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336595128 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141222754 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080871272 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092007554 seconds)
  done (took 1.390722124 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083092757 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101224316 seconds)
  done (took 0.935127326 seconds)
done (took 3.074119358 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.124512273 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090005959 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.105830856 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090839877 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090121881 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088417775 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.106256903 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089575514 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090860952 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108210191 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.090424709 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089576038 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090030248 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.105760056 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090533112 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08915898 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104466065 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.09017552 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088195185 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08839797 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105066215 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089177327 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088916702 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105701507 seconds)
  done (took 3.081570013 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107810296 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091816947 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109319627 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093718997 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094920952 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109116664 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093056232 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090391015 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109577435 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091253463 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093646199 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109083408 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091718792 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094589777 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105655412 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094718444 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093953157 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08968069 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107366814 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094897377 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092991141 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106689 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094453756 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093023767 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110470037 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093937105 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091526303 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107447644 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093373201 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093619591 seconds)
  done (took 3.691945321 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098391572 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086170418 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088891177 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114960379 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086736786 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089603937 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102406668 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088734198 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092404867 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089529857 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109572355 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091407533 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086134023 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107192281 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092861936 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09348278 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114153346 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.088004274 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087476492 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089912408 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109407994 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08734512 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090060248 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106883325 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09100054 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087467653 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089341647 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107628372 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091395825 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090030577 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.109419261 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093812492 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090685952 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117502758 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09364404 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089698816 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094469369 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104518819 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092808169 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086754455 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103460729 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090685378 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087257584 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.112958235 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090930981 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090837368 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088844366 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108481719 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092468193 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092901697 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.102197613 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.089264465 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09175136 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090230322 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109729522 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089029602 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090584118 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.103638006 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092001391 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090393287 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.103033602 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087256204 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094085564 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.090181376 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120591239 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09755774 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086831663 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109054792 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092825891 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094842906 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108479051 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101602939 seconds)
  done (took 7.67067545 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103325399 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099776293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090841898 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107733019 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090761683 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091055024 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112021254 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090243263 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091972648 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112824772 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091372771 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092115058 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107367144 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093381624 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090462691 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091905752 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11240048 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09142397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091144 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108970233 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090820677 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095777979 seconds)
  done (took 2.903970352 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.23457259 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097801026 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140758295 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122467489 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108259346 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122126774 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096528553 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09649616 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112201862 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101305434 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101103329 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113059959 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109936825 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117362841 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100022905 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100959325 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112281199 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103572936 seconds)
  done (took 2.849519091 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105594591 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095994553 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12958081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093499999 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092845337 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091643008 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116861032 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113116168 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109369028 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093285764 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10046538 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113234821 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095183649 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094234052 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092274862 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109532953 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093731012 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092396602 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116466362 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098750085 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11475687 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10063098 seconds)
  done (took 3.02460333 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106973804 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093567946 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126963225 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096733631 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092286972 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109137935 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098506545 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09349299 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116358389 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094599532 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09277185 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091606631 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125102077 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093355528 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096085324 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110189086 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093831523 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092535742 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109829335 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093288255 seconds)
  done (took 2.789295787 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168559968 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125046695 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108595663 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114685456 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126156951 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109224731 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114944403 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124933914 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108085869 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136162435 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10823618 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107859326 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13336215 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114438947 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123769283 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11799858 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114583009 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132110433 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107621612 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124084305 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11998319 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10927012 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134175411 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109339119 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124275575 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109566173 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109581471 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130142689 seconds)
  done (took 4.131355564 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093490654 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092369815 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090519464 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108071091 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092226908 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090758523 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090584055 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109099576 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091942977 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09063474 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109625496 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091984357 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092310521 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090621341 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108485462 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091903272 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09218867 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108259987 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091450869 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090956593 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090266648 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108755401 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093191127 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092179044 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109075246 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092547966 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092060745 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090487341 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109336678 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092259253 seconds)
  done (took 3.651931659 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103624833 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101228364 seconds)
  done (took 0.973158106 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099129021 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105699397 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091350035 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109827282 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099976427 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091799316 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117556273 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097942259 seconds)
  done (took 1.58312521 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141050373 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159018461 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097651111 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101965774 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160786714 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150756866 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132707282 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095380123 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108237401 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085165214 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.153550491 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083905034 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092356882 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089600207 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.110134317 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099023221 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110451524 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102569652 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098995157 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.093568668 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114504557 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097220917 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112971256 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102475999 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087342783 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112436729 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09746595 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103614178 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106290925 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0955419 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090528117 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092121954 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.114474624 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096853228 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092060341 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160862706 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099653541 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107785256 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093029054 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09568254 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.143183064 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092564218 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09342543 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108431809 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096355565 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.097223814 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115176269 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093457017 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086576225 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.105181898 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093112996 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087649508 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091901881 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111551507 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093743077 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115773978 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095483072 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089659496 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105687665 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088277659 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091190069 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088618487 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115010181 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095791912 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109952476 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094624938 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092336367 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092564385 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111950597 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094443153 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090912952 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124923967 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093274515 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095593647 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116121283 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094304682 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088315887 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115478659 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091863698 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092292668 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115000928 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122988753 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094200554 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107674655 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089878924 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099798364 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113938367 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09624159 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085253086 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118779128 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094406654 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094228996 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104327195 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091780671 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089622923 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.112658734 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.0879178 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094032865 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092086258 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115466355 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099539453 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090317171 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113355252 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099968977 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099823729 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110510357 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.139420826 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108733994 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090263799 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093823781 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114525233 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087143288 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092138501 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092001285 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109484312 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088064925 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096448144 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110745268 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09473199 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097090509 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113160576 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095852019 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09425091 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110273763 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090537497 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095980261 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118425128 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095930695 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094907703 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112350412 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.09522477 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093000209 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.114054248 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091801638 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098362787 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106887938 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093885159 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093986742 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098271622 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11294446 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088769355 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.090718433 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113631256 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091809624 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095347266 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11360868 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08977377 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084886023 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.11144648 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088855096 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093643976 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11917637 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090371336 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.094558439 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107754577 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10112131 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09084797 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.116320668 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095281363 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098162889 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115695594 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086209471 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090508711 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09640863 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114239473 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090425496 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094449096 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.111305321 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100015752 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085954342 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.11498254 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086521673 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089582456 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.117910467 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098031661 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096018134 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106028003 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1315731 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105168569 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115583381 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093203051 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092275454 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115489977 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096566207 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097560712 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116378666 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100216989 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091156819 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090939029 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118047348 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089914249 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095278704 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1100096 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095595414 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085104215 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113600876 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086416131 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097849343 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112721593 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098951396 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098284006 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112878668 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093428497 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101969473 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107840332 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098846705 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085645153 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097278108 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.123500825 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099545639 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098284942 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113316683 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091253043 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093320091 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120567621 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095567268 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092563068 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113310464 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088115102 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086780291 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.116178176 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098944022 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089539458 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092889284 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114121359 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095304868 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.108428554 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087302985 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098701946 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096469825 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.108551687 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094171767 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089303625 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110393908 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102401538 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088179307 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109923262 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095574682 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097380695 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.11242406 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095183922 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095682757 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.11878793 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097494782 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096118332 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1094138 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102877941 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091440263 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111826181 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091638529 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096963115 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087356024 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.114118428 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095829425 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091192847 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108086701 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097117293 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099324103 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.119138809 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092326206 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097172656 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.116055813 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100606535 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092023976 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.118091677 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089950309 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087975439 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109050606 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08863212 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097421561 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090181664 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.118913308 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093124121 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091870111 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116637254 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09618802 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.090888081 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.118502357 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103516978 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105521027 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087387296 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091371474 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11195128 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091924366 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090436315 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094897771 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113639833 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098675564 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095758303 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.108962728 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09443536 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098683273 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108168261 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100532415 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099426377 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.117262273 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090327242 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098358301 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108211184 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108215933 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087886191 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110675117 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095046009 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094828894 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108584361 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094126951 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089709242 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087162584 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110302543 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100849716 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091850243 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.115995401 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093739396 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.100481233 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.110659034 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090268672 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099407209 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111738292 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10012152 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094507039 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104963469 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08863236 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099759007 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112524026 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10027503 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090862336 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097185207 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118861985 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098123653 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095360048 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.121295993 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103208142 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098791777 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118996176 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088015721 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092002334 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117663533 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095973034 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098812094 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.114416229 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090186177 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096760316 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.117844993 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09688218 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094075239 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105444595 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096096157 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100645794 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098023185 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.117790219 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09767453 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095151494 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108180173 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098750641 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100216009 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.1128539 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101964934 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093706613 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.117541315 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092885374 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100006414 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.114320177 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089503197 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08921135 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091511102 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.11900093 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090406181 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097790671 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.118299788 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091868894 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092776906 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.116004688 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091802081 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096951597 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116450521 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093860836 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103312208 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.113276265 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094049327 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101338715 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.098287959 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.107742479 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093905338 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092207227 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120694324 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094096661 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098712789 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115244804 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101013543 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096920647 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.118227129 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100577295 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099306047 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106564404 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102528486 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098342973 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09619116 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.110865367 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094947274 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088422536 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114210128 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101297093 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090515423 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122791848 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100947287 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093000975 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11092886 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101373189 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092963253 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120814409 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092570093 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096524843 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108089576 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098464661 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09521165 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.120134381 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092698294 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089704565 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119460324 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.10019751 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098782976 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097620366 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.122561974 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089582439 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088875049 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117038173 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091987467 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103512266 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11714887 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094331102 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092880537 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.115572892 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098226429 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101502553 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108028724 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.095538126 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096247253 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114754501 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094416052 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090744259 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097836937 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113910043 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097428353 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092487022 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.110223431 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094659336 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101453266 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113370703 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092519763 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091292143 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122836886 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094823965 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091166811 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108264939 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103143701 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095922128 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120245122 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092424036 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094473258 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111005252 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099320217 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101883843 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111770829 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097365424 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093179383 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118072204 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10015154 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091339663 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.11015774 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104830132 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099605798 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115545774 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100020506 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094056721 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100061115 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121567232 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098191253 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088701971 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109647396 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094786543 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089489251 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.116785718 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102285576 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094402958 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111209598 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099644031 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099256064 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.115989329 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099391387 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089732511 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101594209 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.112356034 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100264163 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08924547 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109061003 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098603779 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100726483 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114441829 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097324962 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097054356 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117719806 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092119095 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093638041 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.117840125 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100067239 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101315246 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093861753 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113702856 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098590571 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104175578 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.116646305 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094913872 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102825505 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.121454841 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097687084 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094942769 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118715625 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102739448 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098199021 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.121092526 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094692538 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094737541 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121586064 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103212059 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105592262 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113379807 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09145223 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099784644 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112388527 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091877952 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099768729 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122241056 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103238969 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096099568 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110583188 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105824162 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10015136 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113963874 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095272327 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093203245 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099773966 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114097496 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100460741 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.09362881 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.122851296 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102562592 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099981932 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124372274 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091370532 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100500462 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116200513 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104927351 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096613054 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109008838 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092240318 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098498539 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101274151 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.1229032 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100073054 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09981789 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119101519 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097175006 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095440093 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112583632 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104298152 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100499038 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.115941897 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099426156 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094702465 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115003075 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.09890676 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102835372 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102008805 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116913293 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10559492 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101575747 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115007109 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093766257 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096889331 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.118924855 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09821943 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100196893 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.113178267 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091414935 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101566248 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122166981 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097242976 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103120789 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12228868 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096623467 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098788391 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122044182 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103559912 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09778138 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095785255 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.118350374 seconds)
  done (took 61.680569959 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144308821 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105499011 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117339995 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099493532 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11465195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119562053 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0988229 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099335479 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119860211 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107822458 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098166255 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117095915 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114465943 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137429597 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115839941 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107917864 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119058299 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101187564 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09941794 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11817045 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114372352 seconds)
  done (took 3.187969799 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116359396 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111923777 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128675671 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112771447 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104459837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131152537 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110577346 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129903654 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114158187 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105252126 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133274678 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110520126 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126575212 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108659093 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106745031 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126773711 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113857493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125273158 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111712776 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109774188 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126507694 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11091973 seconds)
  done (took 3.397281906 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128954551 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101001263 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095307295 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118617632 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101994749 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099270469 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121554337 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099355994 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105890095 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.111225092 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091111248 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094760064 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096509847 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117684689 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094272379 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098046135 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125388968 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102102736 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102717095 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.116828903 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090773592 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099488142 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099019191 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109018639 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105245399 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102979526 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119969548 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104482615 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091217563 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120327224 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101987141 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093589821 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089597798 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110336292 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090308859 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101259529 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.119247727 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100418561 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10007884 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089744798 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120438553 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103438361 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089757331 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.119035437 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099979604 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091782308 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.121515656 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100412107 seconds)
  done (took 5.832061857 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127880986 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162570589 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10287996 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136743695 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133926409 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110159664 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.12357102 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137529978 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100425994 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123786725 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116073025 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.132404199 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105051419 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106076386 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125390841 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104110729 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10503906 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122961087 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107970571 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103202974 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127427727 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105193969 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111130195 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.13365534 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.342495628 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102257328 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124846474 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106506665 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130581479 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108960703 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106090711 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127232704 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.114285131 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104685417 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123215586 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104088156 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112581778 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124525176 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105011901 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100233499 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124452495 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106927502 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102438841 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134618399 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104068843 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.123860598 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104511385 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100505506 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.131988767 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105119506 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108399238 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133118314 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105870043 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102504908 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126185986 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112304761 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.124296472 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103106551 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104379639 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130199933 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102007483 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108505646 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.132781155 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104028239 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106647374 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.131640019 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106148459 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104526654 seconds)
  done (took 9.031298116 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13413019 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104800503 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133867802 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115469092 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104323755 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128425316 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105896183 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126766163 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1076783 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111564204 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125361185 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.196578311 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123863019 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109477894 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104754264 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127767634 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10600891 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105408757 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127803975 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106406482 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125091696 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.114847855 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104633653 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133870842 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116274524 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123878394 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107597122 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106724878 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135572949 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106464909 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116405349 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126779746 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106922487 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132756142 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118913508 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104915975 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122624077 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1085805 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105112992 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126882747 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104811086 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11251783 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126870324 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103809126 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105517966 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127016561 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113961574 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137871926 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112173478 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111142816 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127507311 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11602917 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127993763 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108514661 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11381794 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142468649 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11509362 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133916943 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108034021 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114234301 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135852325 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120373325 seconds)
  done (took 8.205491932 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100643407 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10075401 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098769634 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121490495 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101518661 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10034524 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120144557 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101922993 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100895462 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09963139 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121697537 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102455278 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099388528 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119331446 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101898407 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100486545 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098309029 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119263842 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100081924 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099361278 seconds)
  done (took 2.946368919 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110301927 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.1161208 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122650416 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108115987 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100801162 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128433297 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10227747 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102058164 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121491632 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103339836 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10991526 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129648149 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102150176 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107072567 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131280512 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107917349 seconds)
  done (took 2.643151184 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120357063 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117709802 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.186206622 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103807293 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12195825 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110059635 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101813309 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124464773 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102623055 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106589005 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105603777 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127748598 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102112586 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102828135 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123027998 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104799915 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10153429 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126733866 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103718184 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185268265 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105802568 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103422693 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124990964 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106453141 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103022576 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128095409 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109234748 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102430539 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124694128 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103832445 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104313671 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130054517 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103316904 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10638268 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.124192133 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104656371 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104049889 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101749357 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126996478 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104479012 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104978255 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125367544 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102758842 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103087056 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123047835 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103841111 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101307168 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128361422 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104323054 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104682546 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.124511629 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111127554 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107666237 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.13011244 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11003944 seconds)
  done (took 7.128405875 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114089322 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10355705 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134026127 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101144158 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102625872 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102845263 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124659286 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104491622 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103194358 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123000543 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103673216 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104417061 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124191499 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103490308 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103186876 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123020259 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101308899 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103190531 seconds)
  done (took 2.825110288 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107855825 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102656257 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106245624 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124800714 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102042089 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102523056 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122687985 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10267873 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101474358 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123922898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102420092 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103040747 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100285918 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124217246 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103747433 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102195659 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123599137 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102055403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102553758 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122104509 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102922039 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10145938 seconds)
  done (took 3.233419001 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113811578 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.183188611 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107779848 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189003841 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099374536 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096542897 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129682762 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099803636 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114367238 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120166505 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099099791 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096845376 seconds)
  done (took 2.298479897 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129812395 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139187089 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125254985 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105064139 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111682827 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129082607 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107783351 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106980741 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13618567 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118992091 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127512148 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117023868 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114547654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136383436 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111755195 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13281236 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109092755 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106141572 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124558759 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123793075 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107654543 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135764528 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107425216 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127755709 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109405175 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114734967 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135662743 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118125295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127793198 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115577864 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110697334 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127739246 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116548464 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13834816 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105579173 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114195796 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128562023 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122747444 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111693798 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136597727 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104743631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131812434 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115943386 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111116559 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137574026 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107998594 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132863409 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108669004 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106626749 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149500457 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112779101 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136233551 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11203237 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114597101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135903128 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126856287 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14051913 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11633454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132814599 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119705063 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11466494 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132909336 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114658157 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139051886 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112248549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134665746 seconds)
  done (took 8.880883293 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143402368 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103492868 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130147229 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119948851 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136964686 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10862579 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110189283 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12836885 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109009719 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10553858 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172711384 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108109481 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138146925 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116192895 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107571311 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129758644 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108199138 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114331975 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126212279 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129442914 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129781957 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117542469 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115197254 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13780409 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118791256 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13382006 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10992372 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107655262 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129870722 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109618104 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135107598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110005101 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115426725 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125355215 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117769481 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107487591 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131190862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11447872 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107920804 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133655658 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116503596 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142933002 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10868208 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109296494 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141067802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108526917 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130829212 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1058824 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108186828 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126567603 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119797641 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117463865 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141202355 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115511044 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130884598 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109391566 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108541262 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131578128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108508195 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112785638 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138275585 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108344298 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150185561 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109061387 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10788514 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13826791 seconds)
  done (took 8.852701953 seconds)
done (took 167.244540434 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147287496 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.185597388 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.14393939 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177186651 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094800384 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12908959 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146990591 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146281315 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092538423 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116441558 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096059897 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095307191 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184105171 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094823604 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094172935 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11795651 seconds)
  done (took 2.912044496 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192456112 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305089214 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109071196 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119613398 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100814922 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098154202 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118906136 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10207814 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098509353 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128117682 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100879303 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095082339 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127509377 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09536994 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099362332 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119308123 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107192995 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099678965 seconds)
  done (took 3.077882806 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118808864 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143369448 seconds)
  done (took 1.12708399 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128036192 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211568617 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279833678 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169148796 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121202559 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139583273 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147218785 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133540353 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190989239 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133535544 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113518496 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096795516 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147033376 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103460597 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.136554058 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097967085 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126174281 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135791068 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113465835 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100102859 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143416329 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104594448 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104776718 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136584407 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.177934009 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133589853 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.1025556 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101740263 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123695243 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11284273 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127010348 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117203869 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110709058 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177153504 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124325432 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.151948528 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128419324 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100144691 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112603762 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121238104 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104896982 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102923518 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134642572 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097114583 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102337717 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129544974 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103638706 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.1236373 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107883039 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106310483 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128524776 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107046112 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.172662213 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107611655 seconds)
  done (took 7.829861823 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.859563163 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.14042033 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100817468 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.003855564 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150249666 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114690571 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.826082602 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146536797 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25279699 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.851652542 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11756118 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.112538609 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255908307 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257398032 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281280251 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356922852 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.72347673 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114420968 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12816814 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16239881 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107781371 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14797725 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120594677 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519682327 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101898294 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121833896 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110101622 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112296793 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175721126 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099661055 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126819325 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197168142 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268793804 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204263015 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123761569 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100386911 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100274374 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185318995 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268735284 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215040147 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195983675 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097861626 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099408669 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131874734 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1192837 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118303993 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157585581 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190677847 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190197273 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104243231 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135775734 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110435452 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129727022 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15424786 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12113659 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359331586 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359849823 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100398025 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131491514 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117358619 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264460415 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123970426 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233029856 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128587694 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211701233 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121481233 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842171433 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16178878 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122790423 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109037942 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106625483 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128822206 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107458938 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190576165 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.480508225 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134941762 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104672301 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122846988 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210230622 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123848436 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101363609 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182027904 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101083969 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129192699 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116351408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113254696 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18759573 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268223545 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112428489 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131782241 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106255017 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134412139 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101997656 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231842403 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227054268 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174749959 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207936532 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133566676 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180430939 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.159330843 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129994101 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165504794 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131493281 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117289286 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132394547 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219895866 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.132406839 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126395075 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106527404 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130490889 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137454742 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103735474 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131951589 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.187364531 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.534084729 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18274688 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097896273 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129610956 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109674474 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178468574 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107560622 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260615532 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132771327 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161765892 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132756335 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098249951 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129267135 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159569487 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133181295 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110073686 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130487663 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11019534 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279038931 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218992689 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114267587 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247062711 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.199706729 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108299316 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194239388 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108027088 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187394506 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133412653 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110682583 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101201332 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831531463 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137219786 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110749302 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128485948 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186559511 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100623414 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126498273 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102973624 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097842358 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817869243 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126518945 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101136628 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104475029 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131009674 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111324331 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108943234 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129053252 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17650139 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241783301 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115540193 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12988726 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1019695 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17630232 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103149515 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101052167 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125097266 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103832952 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109578781 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127613698 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105192028 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192013005 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152218169 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.250007182 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.6358464 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102837001 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101597654 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259262982 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103297073 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321798335 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109552507 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.252383381 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162012563 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122192356 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360987886 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183104635 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185638809 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105097957 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189220445 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120117852 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111639495 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178134041 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102714633 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108781268 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175416862 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138212569 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116246302 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.271784965 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123078783 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230115038 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.122424203 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16442746 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124887082 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109162285 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.323023703 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123257072 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121246869 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178119177 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10634251 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101463722 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.671685381 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125564384 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11490629 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108133271 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.253393243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159070934 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133388594 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110028384 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137601755 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183643191 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209470531 seconds)
  done (took 47.671447542 seconds)
done (took 63.477813059 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.296494473 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258301045 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.302700852 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210303435 seconds)
  done (took 2.025788589 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.255569336 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163923301 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.228518923 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09933006 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.238158899 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097306732 seconds)
  done (took 1.97566275 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.484328464 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.364129367 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.302359623 seconds)
  done (took 2.045693849 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251928743 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237161972 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.327584951 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.407810898 seconds)
  done (took 2.234415045 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.261029769 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.123656719 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123504219 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.203876059 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.226861191 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.21150487 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128564371 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177244017 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128955011 seconds)
  done (took 2.526822032 seconds)
done (took 11.700029414 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.254578949 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.265528589 seconds)
    (3/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.208387938 seconds)
    (4/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.209954342 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.228579694 seconds)
    (6/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.167957185 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.218141009 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.219129758 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.223684847 seconds)
    (10/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127466683 seconds)
    (11/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.204265754 seconds)
    (12/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.19310613 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108260783 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.128084644 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113160023 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.157994753 seconds)
    (17/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.285756803 seconds)
    (18/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.307385945 seconds)
    (19/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.232262828 seconds)
    (20/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.188851987 seconds)
    (21/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.169423936 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105514302 seconds)
    (23/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.301545979 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.190013794 seconds)
    (25/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.214751419 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.129846764 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.156133546 seconds)
    (28/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.217874295 seconds)
    (29/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.194248769 seconds)
    (30/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.167294651 seconds)
    (31/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.09816053 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.237706807 seconds)
    (33/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108962492 seconds)
    (34/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.24797894 seconds)
    (35/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127887264 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199458465 seconds)
    (37/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185865381 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.184803053 seconds)
    (39/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.269825942 seconds)
    (40/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.111395269 seconds)
    (41/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.270618866 seconds)
    (42/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.074904169 seconds)
    (43/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.187471413 seconds)
    (44/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.147458582 seconds)
    (45/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.146202155 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10106696 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.134790912 seconds)
    (48/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.106657036 seconds)
    (49/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127529849 seconds)
    (50/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.169441847 seconds)
    (51/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076817276 seconds)
    (52/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192461492 seconds)
    (53/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108587065 seconds)
    (54/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.213748509 seconds)
    (55/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.169802127 seconds)
    (56/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.192196321 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105270986 seconds)
    (58/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.218072526 seconds)
    (59/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133365771 seconds)
    (60/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.13094735 seconds)
    (61/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.123720347 seconds)
    (62/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.135883174 seconds)
    (63/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.134262413 seconds)
    (64/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.133942757 seconds)
    (65/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076178191 seconds)
    (66/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190744231 seconds)
    (67/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108041516 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.126281056 seconds)
    (69/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14189622 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.154405485 seconds)
    (71/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.134832562 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10179831 seconds)
    (73/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074406142 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.197003002 seconds)
    (75/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.185462155 seconds)
    (76/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.099803572 seconds)
    (77/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.159355729 seconds)
    (78/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076667613 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.1456471 seconds)
    (80/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107108013 seconds)
    (81/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075104636 seconds)
    (82/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.132442342 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.098461425 seconds)
    (84/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116762744 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.102164095 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.137045624 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102924244 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100905422 seconds)
    (89/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.10927203 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.098991784 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103798105 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121516927 seconds)
    (93/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194216896 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103558385 seconds)
    (95/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.242329869 seconds)
    (96/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08559673 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103044483 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129388149 seconds)
    (99/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124377585 seconds)
    (100/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.075314936 seconds)
    (101/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074939696 seconds)
    (102/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.192027264 seconds)
    (103/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.157246521 seconds)
    (104/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110695786 seconds)
    (105/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.100914245 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101277556 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109778524 seconds)
    (108/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.086999586 seconds)
    (109/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.131470582 seconds)
    (110/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.103081761 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126483697 seconds)
    (112/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.193959352 seconds)
    (113/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077047117 seconds)
    (114/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077273965 seconds)
    (115/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075303322 seconds)
    (116/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.133916457 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17106689 seconds)
    (118/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.0771814 seconds)
    (119/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074771266 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.127108219 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110032279 seconds)
    (122/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084304572 seconds)
    (123/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.075213086 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.125743998 seconds)
    (125/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.076194044 seconds)
    (126/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.170082745 seconds)
    (127/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.100507176 seconds)
    (128/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079100069 seconds)
    (129/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085859186 seconds)
    (130/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.082931171 seconds)
    (131/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084130662 seconds)
    (132/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074328134 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147415695 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12408877 seconds)
    (135/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.190793312 seconds)
    (136/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118557442 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076144286 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102304052 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136373553 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.078568165 seconds)
    (141/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077900432 seconds)
    (142/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083970569 seconds)
    (143/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075871261 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.100358624 seconds)
    (145/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.11149012 seconds)
    (146/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.075299272 seconds)
    (147/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106241578 seconds)
    (148/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.099911003 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103828252 seconds)
    (150/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110340769 seconds)
    (151/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076613186 seconds)
    (152/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.164260812 seconds)
    (153/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075492886 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099928321 seconds)
    (155/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07730638 seconds)
    (156/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.108855429 seconds)
    (157/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.083755996 seconds)
    (158/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110200671 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109340811 seconds)
    (160/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096763227 seconds)
    (161/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111364041 seconds)
    (162/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075639148 seconds)
    (163/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099890351 seconds)
    (164/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.074679518 seconds)
    (165/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107226101 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124406495 seconds)
    (167/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077621347 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102216698 seconds)
    (169/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.100705832 seconds)
    (170/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083578868 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075577108 seconds)
    (172/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078471349 seconds)
    (173/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075205153 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.128088077 seconds)
    (175/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.083265195 seconds)
    (176/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.075286791 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102349097 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.127179872 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12312139 seconds)
    (180/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07782112 seconds)
    (181/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.07717399 seconds)
    (182/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.098555866 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103229325 seconds)
    (184/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109131684 seconds)
    (185/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134510599 seconds)
    (186/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.076656974 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077890203 seconds)
    (188/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083103852 seconds)
    (189/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099726112 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.099562205 seconds)
    (191/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075883938 seconds)
    (192/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077253196 seconds)
  done (took 26.161020624 seconds)
done (took 27.068368389 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.211249695 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126084457 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110025915 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10912684 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197943502 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117257 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148555372 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111325152 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119784374 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133938174 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101081989 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123196186 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134635669 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.178138675 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.136393615 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104340913 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103037043 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120392955 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149480783 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125490529 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.200238243 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103220157 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119594254 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127361916 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.174811963 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128380733 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110496618 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109870569 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147111775 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111216942 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110315006 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127448383 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126309063 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125855025 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124574136 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112377669 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10092095 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083376482 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134430297 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112056475 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122404959 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135600839 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110963228 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.10199359 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135683234 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111524601 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101359765 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138376692 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100756175 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111711323 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128567106 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126717412 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109945842 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124264866 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101167246 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102976422 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144368259 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10318187 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123402369 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101227943 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.128053425 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102138201 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112404277 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126642757 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110541647 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101543917 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.135721701 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114267147 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109527357 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127097749 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103437292 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110321676 seconds)
done (took 9.813059276 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108567685 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146468043 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.198758314 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.208939345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129266227 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141241242 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117975227 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126723355 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.13937036 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122146841 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139221461 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159373644 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.181249085 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143146297 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116200911 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114215855 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138680044 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11183958 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.209737317 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126135134 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152679672 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119529862 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128950586 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143758207 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107182703 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12649696 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13496007 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114299625 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105384037 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.150355086 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127555056 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106707229 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.135574375 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125175882 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147820286 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118131281 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117233474 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138416957 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107835162 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105875446 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139520236 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121978777 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105925516 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142446442 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115188999 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121945329 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138979511 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11956067 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107446011 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137829787 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108753666 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131795761 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144200448 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124154186 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117810873 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.145947868 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119245212 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119712891 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.13387568 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119134933 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106933517 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131259095 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108437795 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152904783 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109912464 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120162336 seconds)
  done (took 9.574402376 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126031657 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135704431 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142248265 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117699514 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110940162 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125785729 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100134622 seconds)
  done (took 1.810466795 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102571161 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184138464 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.207639827 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206674649 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179529591 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217928227 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150123679 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101776132 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136319904 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137153789 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183868414 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236541782 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111499944 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143639304 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184655493 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126993403 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.18510609 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129047515 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115948385 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210250389 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119622603 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157482547 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116859617 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102057525 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205577582 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104439293 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261824905 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119237449 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137165953 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116056025 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117244566 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204314817 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.205057349 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116379706 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.110100679 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208069209 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.202470554 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117594791 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.217820729 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106812638 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.203547561 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116527553 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116697987 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.143560923 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118818827 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.193688846 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120919385 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117375646 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141557808 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188459632 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138908287 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18182498 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.139807845 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11709751 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111982553 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144571765 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125565949 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11799105 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214366732 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118069054 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210187086 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210816109 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180414413 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209408404 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124900602 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211174443 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.200571431 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11667609 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110079874 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145788737 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185862835 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143266133 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117443264 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.198725689 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119716056 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.212231755 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184418972 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141195155 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116082703 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105699847 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.142232624 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104008478 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.200946452 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11723205 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113887405 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147677197 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116235577 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116071179 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.135320206 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125737262 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.142514859 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116083211 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121531834 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142685782 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118692579 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.215355748 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114204795 seconds)
  done (took 15.660102963 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105942574 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104641201 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108522137 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129315258 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105323966 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103576715 seconds)
  done (took 1.628028674 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140270832 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117790052 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152254888 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119064453 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.186540051 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.191528232 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.219511809 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111220448 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158512281 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126767669 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.214336627 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191595974 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.215112118 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119194939 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.221518124 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118517222 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.222534702 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11578929 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151883258 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11723388 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117299771 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146428826 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115795962 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.207175445 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118567651 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144563172 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113009354 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127389539 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.15068507 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113962951 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119283135 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144600704 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111127125 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111458166 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.221524143 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108534496 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141072113 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121547227 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119160805 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146127172 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.2196208 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116614624 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123522077 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146438007 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11345881 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109849522 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.148918408 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112170396 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222314811 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121582576 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120502828 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146017524 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120288969 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120305446 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137884686 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112877689 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.147064592 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.198993186 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146893955 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111203272 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117701095 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145892566 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113927403 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121852962 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.145437592 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120666793 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108806528 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144861714 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115647775 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119095288 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147665289 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119065229 seconds)
  done (took 11.199556261 seconds)
done (took 40.81995073 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.506397634 seconds)
  done (took 2.471587817 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.904268297 seconds)
  done (took 1.868320937 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.994941486 seconds)
  done (took 18.993257854 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.519855496 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.592625993 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.023067478 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150239908 seconds)
  done (took 3.252782541 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.053069445 seconds)
  done (took 2.036036027 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.29290286 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265860717 seconds)
  done (took 1.529078534 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.713477628 seconds)
  done (took 1.695020799 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.497241105 seconds)
  done (took 2.468919432 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.350229594 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178311676 seconds)
  done (took 1.518909463 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.619755665 seconds)
  done (took 1.608913945 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.510323256 seconds)
  done (took 20.502579579 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249141447 seconds)
  done (took 1.240597945 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285415628 seconds)
  done (took 1.278883864 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.588245362 seconds)
  done (took 4.580445193 seconds)
done (took 66.023054539 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11505563 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117189858 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117408613 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14059581 seconds)
  done (took 1.472212538 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122867406 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118182344 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.164680599 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119139919 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12433212 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117559076 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14314888 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120673454 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117806122 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145480302 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118756342 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117228726 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144810641 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116329055 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115992036 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145305959 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121655128 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118266731 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143316061 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118859142 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118739994 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145359882 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121840555 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120794703 seconds)
  done (took 4.056614463 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114852642 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107569322 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110945266 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132733481 seconds)
  done (took 1.466049443 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125451328 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12934932 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151814277 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125057521 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128109348 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153935385 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115642914 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114233547 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142945159 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125643936 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132146228 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155784549 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127498192 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.145285849 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129092243 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113316024 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11799486 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153525772 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123823313 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.150272652 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119353512 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123804375 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146535791 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127690496 seconds)
  done (took 4.171050825 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191915757 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128611875 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17428547 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161390964 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176062574 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115876133 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143174421 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.14844757 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125401526 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.143144853 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.120094139 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161146775 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150030787 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120202435 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115978277 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148755464 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129147317 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123788489 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189391865 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12183812 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149726436 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129561836 seconds)
  done (took 4.167381654 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120189501 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108722579 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129117184 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110105154 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120174919 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.13613031 seconds)
  done (took 1.728605575 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107758814 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102761743 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.1032835 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127128396 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106862938 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101360273 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127229524 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105296534 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102946045 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102598781 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127497745 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102866509 seconds)
  done (took 2.314319224 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.330908514 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107655829 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135051747 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110904859 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113529201 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105933622 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147226745 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108260525 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271610627 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103800394 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14581761 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.197880149 seconds)
  done (took 2.882603327 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198766293 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145933445 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314021649 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365645789 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15892099 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187130952 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268294548 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188485042 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200865024 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13678851 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213077951 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158983497 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177735409 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183662029 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164987453 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156562344 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196359084 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230902278 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141140733 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239080412 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156356093 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199002132 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213742725 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147686526 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135980593 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187649208 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11848283 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152055913 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165599074 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18808874 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195275789 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149153572 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164035795 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188861806 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249999432 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197492409 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269334593 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132120078 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.193635314 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190044628 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255648422 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167563143 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211837439 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151956407 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126660341 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212764373 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176721428 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.180226409 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.158072206 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144036598 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203628421 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175351795 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200038598 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133213773 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30653367 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157873471 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143386364 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190135605 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186913518 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226350253 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200818603 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122165098 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201328731 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188757261 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236248872 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166353516 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162714839 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149790743 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164642881 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231095408 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202816925 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158488171 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.227187557 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128764154 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19744087 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192862701 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152721176 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227307015 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16958252 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.145191111 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149201436 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157471924 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126038385 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.186537393 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147262726 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211768622 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156027885 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.337751789 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18064797 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18173856 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181734904 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15930833 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18774919 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147519481 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.099670464 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168000756 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160563363 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180912173 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127011126 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179010905 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139371433 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123486615 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177631402 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12188803 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193329163 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131828023 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188702323 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168415111 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159107179 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174399156 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172763058 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161377069 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193294384 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216706778 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129167065 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130714954 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242613983 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193338171 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135725217 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2015798 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195395418 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173331968 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133634484 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187162707 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216778095 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142913389 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225352277 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136126149 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158114609 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134818754 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194331711 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157672826 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.177310852 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126773044 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161099296 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216549005 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.15441396 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138628779 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204876348 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132164806 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123567682 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161988637 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134558252 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.167174046 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148078493 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137871393 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179514273 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162589582 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191275213 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181518007 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13317821 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193024574 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131250678 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.16465655 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173745071 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117901931 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197869249 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219972826 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12860118 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204964573 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161589446 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211448416 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197253611 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129136471 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180861876 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155330384 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120227787 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187842753 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166431091 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187892103 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187351888 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207641577 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191125034 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186638276 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147985366 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192564565 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182026074 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181897184 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14313598 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197424881 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165900274 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.148845703 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124620112 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125901388 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162322184 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130087196 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135713979 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198280028 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18965132 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206247867 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166072901 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162585507 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192130181 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.148707143 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158004691 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199075669 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137426536 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214633568 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188054715 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203642582 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137707398 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185997838 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119455787 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153241736 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132473534 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185891729 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137105458 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132657579 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166591542 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216110269 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168541281 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174055887 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217249911 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163468868 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.227754274 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118940136 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.185903027 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168046575 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192009043 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182820463 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131806173 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184770297 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216595771 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139548155 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216715322 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165219981 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201833701 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218124962 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.16437654 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127637993 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174277414 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160568231 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164357083 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161616652 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172892828 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128541721 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178320188 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136622652 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16525127 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181260728 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170598251 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175427403 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185356596 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194440139 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125688811 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139668645 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201681801 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142273979 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.130401844 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167243427 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221806417 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147863284 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181386259 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17172808 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157314844 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31529182 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212172234 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201795308 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13450034 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163359843 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170603067 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187714583 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161077309 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209274182 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139513021 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231449945 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165000636 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170116637 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12984595 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175227769 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148481454 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162841169 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149072742 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.187784316 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142778874 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207794018 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134526566 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195857975 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172047729 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.172261107 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148621763 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164177845 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221159573 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193747538 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197489721 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161420047 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.192584507 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180291629 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150285892 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126382763 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130652788 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21237167 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127118746 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203034987 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197870835 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208562103 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17214273 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188837987 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138905561 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124710038 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19224259 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145762321 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213305899 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161279848 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13528745 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215548932 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125189422 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128271454 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187949093 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294969966 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146834852 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198994793 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104866661 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.291306576 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129353084 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130477207 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190548709 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165506142 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160502368 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182584068 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198514433 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137801157 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190759017 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133528017 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208020899 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212310133 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163248861 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19816976 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141929677 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189115546 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155435143 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202185735 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145269966 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1740302 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157129811 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221811325 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207313826 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132641964 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164794856 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195384959 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196247338 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170797742 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164039221 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180287956 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12530189 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188465826 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138127278 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152163452 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156569062 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.201589798 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127797885 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204123966 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195731513 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131206377 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12591841 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173574543 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1626583 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165985014 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129109104 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208053164 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126616998 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207736606 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230049465 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130498354 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163811633 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173654092 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12832993 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162776967 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141444166 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129877096 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.199487455 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179019539 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.158092004 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175773887 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189093967 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160993418 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182955834 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140324491 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.362228747 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126534871 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218296752 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147323783 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223185278 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148228731 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202392708 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193043489 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150555486 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188074006 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145986997 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245940292 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162308126 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.192014473 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132249014 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140713821 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165010216 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.13309797 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17962612 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165214177 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166209351 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13503347 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192411451 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145350729 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.141728116 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168522051 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224622105 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150741061 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20809236 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185773426 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164449225 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172371575 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198613398 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125848572 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189484481 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167450283 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173322925 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147884712 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.162388193 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13638756 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237102702 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124666706 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184479341 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172715563 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193791387 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169378317 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.160902433 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174924178 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168760148 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174252629 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153044088 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152358714 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195813524 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134601135 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124825204 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198038123 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154406327 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193265318 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140998091 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.201294746 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195203725 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150134117 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133775304 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291781136 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15756822 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221297457 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134652449 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163425273 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145016416 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183197029 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162931505 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197261143 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131387039 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128716884 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172391693 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.155391714 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167458636 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168032546 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197832727 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158021441 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212229618 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.13444924 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284385262 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141503702 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197841018 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114272004 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127296167 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167268485 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133588927 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167288744 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183690201 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236633373 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190416207 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145889818 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161464706 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127789198 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130227966 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193992518 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14868978 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194261164 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145080664 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101397308 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167251325 seconds)
  done (took 85.331108411 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161587939 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152490488 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166392899 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221544089 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191915768 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289382391 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228445157 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246488579 seconds)
  done (took 2.74290196 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118172698 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158267554 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140554077 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143631184 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110908439 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.443636572 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.155869328 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118486488 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159538923 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150313108 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135915921 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.529782211 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115361906 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142407221 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119628258 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134617151 seconds)
  done (took 3.959501285 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.017903184 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.036082111 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.797505399 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.296639841 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.248847089 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202685307 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.746329352 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.1869295 seconds)
  done (took 12.618011933 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.144912651 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135810071 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.356509674 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.254290911 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.14784212 seconds)
  done (took 2.133971054 seconds)
done (took 130.027776365 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122565772 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124247447 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121766057 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.151915401 seconds)
  done (took 1.601513676 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.17276458 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089579259 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091208234 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115890965 seconds)
  done (took 1.563167992 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.427073438 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088896322 seconds)
  done (took 1.635265609 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147001269 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135222434 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165227986 seconds)
  done (took 1.55172241 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.133259044 seconds)
  done (took 1.226258932 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125368208 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115532064 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.232115418 seconds)
  done (took 1.572670257 seconds)
done (took 10.251181615 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119747067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.922195871 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431000871 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130714307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.707511448 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423986229 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.417448156 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173267126 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172700247 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13632933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131339991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688765732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.433655197 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.872856094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.39063041 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.900959688 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694333139 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109332885 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143980331 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110799887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.402049685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135192259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110531545 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11073001 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717089128 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417834717 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10805123 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.913493215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108230155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112240861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426996831 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109259394 seconds)
  done (took 20.868418312 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117135614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164314793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146222744 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110674571 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112882562 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.13797303 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121676895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121148159 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200757102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109251937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159025465 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109806001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114424038 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138155233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134428728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108356462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139920985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112306519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117368169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139311234 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132760207 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109026712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139701562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113429783 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108364448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160338262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110544349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121194881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137796384 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114153923 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113738483 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137506675 seconds)
  done (took 5.21854539 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156777729 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175148709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146981669 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14649862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184480568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113204212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221465571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148301903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201408311 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109411288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130688971 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136995128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149744159 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109681937 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162918752 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110037059 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112689024 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139106769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119297709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137014997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132739605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109287957 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137234245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113282191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110118061 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158272031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111295992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12136132 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135929351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113942256 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114838338 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137175256 seconds)
  done (took 5.509910418 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123873304 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125260694 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132747339 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.159923883 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119406489 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122488871 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151656493 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119596503 seconds)
  done (took 2.157218466 seconds)
done (took 34.853468798 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134260849 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130393687 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130247681 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153891198 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.184807683 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.146118457 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127323934 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116407602 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.151402819 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131786304 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109864323 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.145344901 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.130618928 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120061574 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.218228428 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126076113 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.220771764 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188193498 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.147289911 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12722456 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119136176 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.221009074 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121547574 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.146876364 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.190629487 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111984027 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.210555652 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120392465 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.1501 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111963183 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.218940816 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122947017 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118690051 seconds)
  done (took 6.001201517 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.205250559 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119544288 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148271865 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118852966 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119479602 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147478847 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.208527621 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146817837 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120045571 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118388326 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117735262 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.219328159 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123320558 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144211399 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122283826 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.106954077 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.235427467 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.12021363 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.10920722 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.11996009 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116534543 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117373114 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248731361 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113286294 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117158302 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.14720634 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122830357 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122290622 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149042785 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12049138 seconds)
  done (took 5.360500834 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124302999 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130628189 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.16356304 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184702344 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145906646 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159618532 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139388331 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132980415 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169284368 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112274266 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126258041 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176348335 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128585357 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122040412 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145016764 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130156299 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133697754 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142288273 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119892705 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128175062 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162336387 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129948079 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135411848 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148894105 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111906094 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118559415 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150992696 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128030352 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120145935 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155354118 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.114865319 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116682326 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.141978559 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.147492455 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114115 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154404049 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136842144 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122549036 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15558615 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.142965024 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114994231 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144386184 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.136854948 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162829518 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143167644 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125060482 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124066034 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.156075408 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110967425 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13033872 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.183052501 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.111407531 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132270927 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.140823397 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111052341 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119775614 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.142368236 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116908565 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126004017 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.142206156 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136293411 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12013254 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151341499 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115303718 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123054977 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110963369 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140157652 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117830491 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137298198 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149012927 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148700483 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111642402 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153888443 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127833844 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122617337 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.154196242 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113103177 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123931054 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150689298 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120026261 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125194056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.143579916 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11798163 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129478022 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.161721139 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128917963 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12473651 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154621616 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116875086 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115874229 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156635126 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115884968 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118590907 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125138821 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.143175219 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117026466 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125192289 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153162005 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111444977 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137442189 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146060566 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113308084 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.136332911 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146253185 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118914112 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122914457 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.181829313 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114462802 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122688281 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.154327538 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115247646 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119436534 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.143959706 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11406184 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130653029 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127249109 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149137504 seconds)
  done (took 16.829118103 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.313367779 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.268695492 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209103736 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303174103 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124905346 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.236130369 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.299379025 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.300185935 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112990179 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180569252 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162844222 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270604968 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145033343 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140458494 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.303933272 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.355906393 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173430986 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150949334 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181452565 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127508671 seconds)
  done (took 5.487344258 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132923676 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149016478 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165536576 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140248155 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122837504 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.159719118 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11387164 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134223889 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154526465 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124176383 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115252582 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.158829397 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126797199 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129615231 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158938893 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143873551 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119951747 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147299624 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136618193 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118023318 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130303824 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138346386 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121717492 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166900854 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132677317 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.151701491 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.115092971 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119038416 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119250682 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151657945 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118530852 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130747608 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150684588 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103592493 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125309186 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156747296 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120532544 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117083385 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116769244 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147946336 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127764611 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124780037 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150411557 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096785541 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132498582 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.1074318 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157829479 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126918162 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104850863 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.161541947 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126755493 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127825606 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.15004564 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136407013 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12010085 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.158749198 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125641757 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127526593 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.147927534 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112762729 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111337083 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.14465593 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122968483 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128083896 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124125259 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.16301331 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129288902 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.141736797 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.12062091 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117851317 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116009282 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.15640816 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134250083 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.151654542 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122051709 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126030919 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122340057 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122498048 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124434093 seconds)
  done (took 11.634285236 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138919836 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124081318 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.159289154 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.149368071 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127400855 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.149320514 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126405916 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133161246 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12709839 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162031349 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129553037 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126348663 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164916739 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124761123 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.123186096 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159067465 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127762971 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.178381371 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133993559 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143861562 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.158279393 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.119939507 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.1262305 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.154565303 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14309322 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125833706 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170365663 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128767056 seconds)
  done (took 5.081185905 seconds)
done (took 51.504859116 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.273368655 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.458545904 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.242001129 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.237961644 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.271024274 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.251882357 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.238326393 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.238506459 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.603594526 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.209863988 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.239501846 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.239492562 seconds)
done (took 28.642021695 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.313021481 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.800008805 seconds)
    (2/2) benchmarking "String"...
    done (took 1.525081811 seconds)
  done (took 4.454813138 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.230378154 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.231096626 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.479223286 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.22970775 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.250553371 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.231457847 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.228690342 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.231944425 seconds)
  done (took 16.012650438 seconds)
done (took 26.142873774 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.272071962 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.417086425 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.470867621 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.231343775 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.259285607 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.231682466 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.235507261 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.254116411 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.231623831 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.233244378 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.654129438 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.494501109 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.235490384 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.599709186 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.232439675 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.248156076 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.247027449 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.45299473 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.22986189 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.261798239 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.209207687 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.209759296 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.258212662 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.232245227 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.237981807 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.232804891 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.284002763 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.235637363 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.404313059 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.257860607 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.262990557 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.234406311 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.285359814 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.234679005 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.243443938 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.239034137 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.403971199 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.238857129 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.213171195 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.255343253 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.40517895 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.253118481 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.246197148 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.236961397 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.244469748 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.27597238 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.215354209 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.364474076 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.256133404 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.2350104 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.305478467 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.603497641 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.23981566 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.249988816 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.25043725 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.447834533 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.251775996 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.274516327 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.256391856 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.234779178 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.248757215 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.240892341 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.300061067 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.240130438 seconds)
  done (took 145.675147475 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.233364859 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.236502107 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.234164112 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.261340256 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.23382082 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.238704959 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.234645701 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.235260868 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.239016216 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.26067515 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.235926223 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.235215579 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.239780191 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.188569076 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.245420615 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.253762509 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.236434751 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.252053706 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.247111033 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.234549205 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.257837811 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.237254266 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.23626449 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.234934353 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.273427848 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.304138939 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.263338087 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.258433723 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.246097043 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.235572156 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.279688149 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.241373426 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.858136485 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.106669909 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.243384787 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.249187187 seconds)
  done (took 81.437752024 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.235170208 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.236739252 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.23654468 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.269765578 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.236574154 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.811710273 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816067361 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.21286652 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.347923343 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.582433939 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.454361947 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.236766709 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327996209 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.248571469 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.238961992 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.253350516 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.263845972 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241090284 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.239039637 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811218241 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.254973973 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.240195171 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.415505687 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.254068664 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270784696 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.628628756 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.419961972 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.239226677 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271422421 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.572243813 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.28823722 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.239280184 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.564034093 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.27372002 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.240499407 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.348821987 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.240874221 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270260725 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.238887632 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.521974087 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.239141269 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.239191927 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.241654789 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.243764974 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.853607982 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.240378186 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.816304299 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.243892054 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.188764476 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.239662645 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.239454153 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.157577766 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.879829655 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.240196148 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.239529227 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.243015437 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.241520747 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.240166132 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.272681279 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.1210881 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.33471437 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.242962311 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.244439813 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.273399257 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.241407775 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.240421786 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.372162517 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241633894 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.951974142 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.305249572 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.342335653 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816537797 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.246909808 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336927792 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.357943565 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.24228211 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.242353039 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.241385874 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.241282826 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.351920618 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.240575984 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.921850349 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.418037072 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.258602365 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.585598905 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.338868764 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.24243947 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.569412283 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.241513652 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.241817806 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.944753859 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33762268 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.242225912 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.241902847 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.241710158 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.925957059 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820189491 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.490974958 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.245727675 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.826871571 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.245849646 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.098441173 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.804190708 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.868280919 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.242848185 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353680346 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.421183924 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.259674037 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.2451322 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.589433697 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.244140619 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.301730251 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.243139209 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.643567693 seconds)
  done (took 377.462516485 seconds)
done (took 605.707294218 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.109182659 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.064534138 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.211809037 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.071021443 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.057727919 seconds)
  done (took 11.655467769 seconds)
done (took 12.798737958 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.438115758 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.442086694 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308156549 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440369337 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.278529676 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.453279649 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419360435 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.264456844 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.357350164 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.328739567 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.358689342 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.296838031 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.278476689 seconds)
  done (took 18.806461858 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524228409 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.255699794 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.308818978 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50501619 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.289418387 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515819715 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.557424451 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.256168579 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396029473 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.268061431 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265098329 seconds)
  done (took 18.286342359 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.523855732 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.254591109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.314361878 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511810136 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.29178054 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.530512646 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.555558972 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.256699436 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401308343 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.269006048 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.270789239 seconds)
  done (took 18.323858086 seconds)
done (took 56.559879056 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.282732541 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.346222175 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.27925046 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.267273175 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.264914444 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.264466806 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.267723311 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.265793496 seconds)
  done (took 11.382582307 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.262572275 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.261612591 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.263453271 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.262393912 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.262817667 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.263704439 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.263291165 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.262446037 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.262008663 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.263206931 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.262199193 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.262629614 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.263619823 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.265122114 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.26331192 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.263791225 seconds)
  done (took 21.354738405 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.265677675 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.26226308 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.262272161 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.263197976 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.262239551 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.264485396 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.264905221 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.263923057 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.262743508 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.264412874 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.26535972 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.263547492 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.264880094 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.26439244 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.26387517 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.26567816 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.264423254 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.265884657 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.269595606 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.264271105 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.264921183 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.264810092 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.264948376 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.263579344 seconds)
  done (took 31.491361505 seconds)
done (took 65.373689185 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.265798762 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.260550909 seconds)
  done (took 5.672384704 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.325082544 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.322802275 seconds)
  done (took 3.795344223 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.266669961 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.265553417 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.263622565 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.26655627 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.265146437 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.267030228 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.265999029 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.264757631 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.265417899 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.265771452 seconds)
  done (took 13.804273845 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.266090537 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.266158296 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.264845387 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.266427515 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.266363939 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.265296159 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.264805695 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.267578568 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.266076292 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.265425738 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.26738384 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.265171443 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.265362412 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.265413737 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.267364117 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.267654119 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.267857352 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.266744448 seconds)
  done (took 23.940896968 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.280205442 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.284446025 seconds)
  done (took 3.712855683 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.395844701 seconds)
    (2/7) benchmarking "second"...
    done (took 1.307206507 seconds)
    (3/7) benchmarking "month"...
    done (took 1.370414589 seconds)
    (4/7) benchmarking "year"...
    done (took 1.364860622 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.309591316 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.288202779 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.309330892 seconds)
  done (took 10.494378308 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.267842667 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.468151639 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.598746648 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.834394351 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.269610894 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.271818657 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.19176815 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.273508781 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.274982512 seconds)
  done (took 14.598990354 seconds)
done (took 77.166674211 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.252948474 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.289249068 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.26665551 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.273281425 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.606841044 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.270603136 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.254248828 seconds)
done (took 16.365132429 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.232775943 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.235197479 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.267195511 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.282026761 seconds)
  done (took 10.166474188 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.253114572 seconds)
    (2/2) benchmarking "read"...
    done (took 1.578856165 seconds)
  done (took 4.979654048 seconds)
done (took 16.296856964 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.268548353 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270223074 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.267359667 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.27072491 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.270462761 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.269353285 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.270264917 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.268641558 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.26991834 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.270369802 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.272375138 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.269743691 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26928463 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.269425452 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268499615 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267621322 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268963936 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.27032753 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269807124 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269563959 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269307373 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.271633462 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.271382404 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.27155093 seconds)
  done (took 31.625816524 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.269927797 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.270306358 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.270816448 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.268780585 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.26877296 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.270221847 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.270155933 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.270235091 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.269176653 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.26977823 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.269894572 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.270774657 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.270071472 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.26966479 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271361946 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.271279553 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.271469124 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.270775066 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270952548 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.270575733 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.271038247 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27094724 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.270708038 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271085848 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.27148363 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269802191 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.270315083 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.271148014 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.273788747 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.27105342 seconds)
  done (took 39.268997759 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.27281547 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.271855668 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.270636156 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.271457065 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.27098463 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.271526685 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.272354975 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.273290952 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.271735046 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.271325906 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.271074986 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.271115147 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.271685324 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.272351828 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.271768667 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.272725615 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.272291668 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.273687913 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.274035472 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.271812397 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.272754049 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.272094269 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.270953731 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.272345859 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.271921099 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.273372223 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.271712051 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.273893245 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.273653884 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.272268393 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.272386399 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.274148742 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.273936369 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.273503515 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.271501609 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.274368956 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.274081432 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.274501173 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.274733042 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.273371379 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.275007476 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.275201346 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.275386069 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.272779599 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.274928043 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.273325392 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.274196362 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.274527979 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.273449781 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.274391796 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.274087241 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.273536377 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.272902532 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.274646332 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.275517729 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.276833931 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.275691174 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.275502809 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.274126722 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.27471454 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.274742578 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.277703653 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.275381483 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.276685229 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.274712016 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.274815786 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.276054167 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.275702169 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.276116112 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.275725297 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.276069023 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.277258992 seconds)
  done (took 92.858518135 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.275909901 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276985592 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.275911794 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.278071629 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276835414 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276447205 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275991051 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27690825 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27644478 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.275225465 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277284253 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275473988 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275112188 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.278963944 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276679071 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275904965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.277410263 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27548563 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.276324947 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276381688 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278796155 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276330874 seconds)
  done (took 29.241514265 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276946348 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277592215 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.278312844 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278953002 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.278756799 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.278583574 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.277728134 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278681879 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277197743 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.278144383 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277997353 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277447714 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.280585611 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276514653 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278544409 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.280246401 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.279112444 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278428772 seconds)
  done (took 24.168467354 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.278358148 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.280149651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.279393544 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.277499449 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.278890492 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.278104756 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278062114 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.279081311 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.280376352 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.279233476 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.279258528 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280721199 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.279019177 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277753702 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279817018 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.28116763 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.281085737 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27942625 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278631858 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279101876 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.281721274 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278899553 seconds)
  done (took 29.305520933 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281451817 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.279794115 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279091987 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.280393544 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280315242 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280270043 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.280271171 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.280290767 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.280126938 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.280714019 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280333908 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.280515425 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.283544035 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280550706 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.279782132 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28022124 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280300192 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280751112 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281675071 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.282001049 seconds)
  done (took 26.772812585 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.283063549 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281450257 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28216742 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282793556 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281924065 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.282595037 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281439541 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.282772462 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.283312407 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.282605315 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.284164898 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282724296 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282210567 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282265098 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.283922796 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282808054 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281720493 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28245985 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283024486 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283160101 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.284782801 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282898458 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.282315804 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282932417 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.284250359 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281892445 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283311536 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282616355 seconds)
  done (took 37.080129949 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284143982 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283064319 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.281721176 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.282199015 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.283318253 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.283047345 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.282093748 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.290170314 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28209927 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.283052706 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.282878755 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.283004053 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284252026 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.282178347 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282592358 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.284780832 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28388118 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.283018407 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283175058 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282427344 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.283409725 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28501106 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.282888011 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.282947211 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282993728 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.282779737 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2832323 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.283538288 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.283836069 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283946549 seconds)
  done (took 39.664777891 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.302858209 seconds)
    (2/2) benchmarking "in"...
    done (took 1.30361836 seconds)
  done (took 3.769546807 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.2853074 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28617318 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.284932056 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.285276593 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.283698574 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285451714 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.285643314 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284255276 seconds)
  done (took 11.444510844 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.277911751 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.285710543 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.284929195 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.28594497 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.285766225 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.277953978 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285613009 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.291253216 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.278441145 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.278417949 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.279469495 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.278669922 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.281769739 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281763105 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.279821871 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283539151 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.290732449 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.28934832 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.286972173 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.287452266 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288706298 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283634644 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284037578 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.29063627 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.280102744 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.288380874 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.288529514 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.291380844 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28021336 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.285781354 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.283900075 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.288459994 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.288112072 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.286438643 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.28717043 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.288088604 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289745719 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.287158908 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.290215161 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.294818965 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288672942 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.288845168 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.283467905 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.285734638 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284846605 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.294369485 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.288664731 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.289819539 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.281204491 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.284449947 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.291564854 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.280956548 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.290421494 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.287876726 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.286135087 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.292923918 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.298745355 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.282377334 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.283390386 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.290262062 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.297863171 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.293284182 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288259201 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.296526861 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286021123 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.288687505 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294440169 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.297773692 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.2908753 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.28917966 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.290524477 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.298755537 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.293903418 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.295476906 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.292448747 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.290841763 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.285693181 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294601743 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292886363 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.295388243 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.297062433 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.292353775 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288774758 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288672532 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.286743188 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.294825567 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.291248512 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.292683447 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.284145657 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29414694 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.299062117 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.291997184 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.284524517 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.285871258 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.288423129 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.293930992 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.283474352 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.28782985 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.295073158 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.292210087 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.29231876 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286759707 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.29105001 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296837759 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293030588 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.293238049 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.298667609 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28596434 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.297221948 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.300312137 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.291504544 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.284052943 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.28957169 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.296229058 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284317505 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.28984088 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.298517681 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.289943342 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.29743285 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.29298866 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290514286 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.297646519 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.299773891 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.29351367 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.287940634 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.298013787 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.294383896 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.292422303 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.299832385 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.293816754 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.291866148 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.291041793 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.300405963 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.287535255 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.297306466 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.288517006 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.297123318 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.292958024 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.294901849 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.289877968 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.294905861 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.292386395 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.294105255 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.298835143 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.301110211 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.291018131 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.303364353 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.295526269 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.293393434 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.296866008 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.300535553 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.29597238 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.289426093 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.299509338 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.287315296 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.300820502 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.28943548 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.29988374 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.297326859 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.29491436 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297013614 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.288447879 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.293068384 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.299195849 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.295519672 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.294826644 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.30036454 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.296134411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.296140569 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.288262769 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.297071834 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.288880887 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.289751948 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.299423856 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.296908735 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.296539527 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.295245769 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.304375847 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.29605378 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296228443 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.28912421 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.293957079 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.302054678 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.299025598 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.305166792 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.297339975 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.298198938 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.291659822 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.292399901 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.299435763 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.29011915 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.300478062 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.302807774 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.305485848 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.291775381 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.299319276 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.289776377 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.30006664 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.297117275 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.306728452 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.297724505 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.298610078 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289761154 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.302535781 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.294049765 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.300846095 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.291919769 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.301002619 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.299521122 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.297709554 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.299438403 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.293733908 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295731594 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.300800519 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298427958 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297939894 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.292498298 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.302443863 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.291393375 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.296459105 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.302309612 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.299094547 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.302299417 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.306402645 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.297146743 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.303496157 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.300899365 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.293723511 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.30081291 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.295969533 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.301260056 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.304397011 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.302508691 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.294921613 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.305558557 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.301598663 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.294687607 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.30035995 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.308435578 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.301526822 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.295501752 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.304391081 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.301827259 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.299985377 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.301029659 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.294277668 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307244059 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.303392272 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.310671274 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.294226845 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.3039075 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.297219986 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.306323798 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.297892224 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.303989046 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.301109439 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306192938 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.310106018 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.30152239 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296079313 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.30554833 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.302932576 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.3007351 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293857927 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.305604063 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.304885102 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.30239644 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.300342675 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.29880982 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.303217568 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.294813593 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.304799325 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.295829426 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.311186708 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.317756258 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304520521 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.306240825 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.30724839 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.304249953 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.305198663 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.297155077 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298279407 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.300039586 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.300140222 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.298289458 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.307959728 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298681493 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.305598453 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301758421 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.304457412 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.305118775 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.304471982 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.295628695 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.307956347 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.305228858 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.302224775 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.295708792 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.304525328 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.299443254 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.304904313 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.305123709 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.299922908 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.311269732 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3091511 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.302570968 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.301874045 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.299729179 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.297724261 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.301819353 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.3097807 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.298764108 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.308608708 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.298232196 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.301580455 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.29937691 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.310001191 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.315387711 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.29885734 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.308583618 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.30546179 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.298369026 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.299449155 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.311175003 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.31013351 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.318431248 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.298095814 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.307898931 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.306926668 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.306860238 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.307072989 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.305919523 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.306485551 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.306063458 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.312305012 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.312464706 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.303250558 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308096355 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.314989858 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.309283297 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.306496401 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.299375009 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309899902 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.315757338 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.302531755 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.303818199 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.304035986 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.311118944 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.307472257 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.307169118 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.307964442 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.307230479 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.311227091 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.312120701 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.310660576 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.307433492 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.31259127 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.318889415 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31453445 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.32061455 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.301754144 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.313369468 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.308511191 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.301897397 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.304095267 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.303635274 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.312303597 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.300211352 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.311522514 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.308130235 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.305838065 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.308731681 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.314809226 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.303193911 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30803841 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317322882 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.301048692 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.312095043 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.30886278 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.300618716 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.310868931 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.309946746 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.300634353 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.304909281 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305917122 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312454811 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.303742978 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.313206373 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.303239766 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.315148462 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.311207533 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.309538751 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.310018266 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.31062173 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.303341909 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.312866857 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.310315216 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.319657801 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.305379979 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.310832604 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.305021674 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.316019632 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.3211391 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.305461027 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316415802 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.31117551 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.304625696 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.30871724 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.316633125 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304270402 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.313806382 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.304088667 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307745365 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.306713376 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.314384363 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.314560349 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.314450146 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.30440341 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.305911142 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313186202 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.311530255 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.311796747 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.308509395 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.318622883 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.305897592 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.305488522 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.314306388 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.307592273 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316571308 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304548632 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.307872669 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310483173 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.31714919 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.313795522 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313570227 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.303003912 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.308216285 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.318385811 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.318298816 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.308073126 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.308742058 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.316212496 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.306836519 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310179565 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.311032289 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.307829523 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.309603805 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.316149391 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.309497682 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.307512107 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.308034534 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.31688728 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.319851419 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.31749334 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.307330232 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322218598 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.322554352 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.320020339 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.306744111 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.31139198 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.3094306 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.316106127 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.312316422 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.307388003 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.321429394 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.320184804 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318151895 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.314096364 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.315127328 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.308325533 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.316209078 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.316065169 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.310191791 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.321684641 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.31028219 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.323292548 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.314434584 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.315943899 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.308800568 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.310402387 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.310703441 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.310534307 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.317133859 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315706172 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.320049947 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.315102277 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321021903 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.317360931 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.315435781 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.317877059 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.308755913 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.319010627 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.308182095 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.318325157 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.319437756 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.311449052 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.31767499 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317346876 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.310594496 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.313822061 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.320119399 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.317112475 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.310038368 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.315304941 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.321399101 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326340334 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.318071844 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.312305408 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.316381775 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.320610855 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.317867893 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.317096645 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.311249828 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.327203963 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.331276652 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.310229889 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.314818941 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.321011068 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.328105269 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.317252166 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.316699915 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.312968589 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.315598019 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.322330767 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.320163614 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.322191665 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323923346 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.313976984 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.321328033 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.312712023 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.315592774 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.320447026 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329166372 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.318751143 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.312817005 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.325903284 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.330698056 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317547969 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.330706858 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.325233609 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.318563035 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.326161073 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311921023 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.32085151 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.315921369 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.325676353 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.319703104 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.319771638 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.320887397 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.311363692 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.320894248 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.327737633 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.330779974 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.320375032 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.312405189 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.315523012 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.321165255 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.320505007 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.322445586 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.321769525 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.322360054 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.321974878 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.316153337 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33099391 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.335516362 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.327613157 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.321529036 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.321236766 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.321381121 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.324520173 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317787389 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.326320117 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.321495399 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.322088876 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.318917427 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.330179693 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.324219365 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.315263618 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.318335966 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.317853862 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.3252189 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.330013495 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340583976 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.327334053 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.325583917 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.324350236 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.322705568 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.31682454 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327533749 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323621262 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.317015898 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.319096129 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325769967 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.326468445 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.323052956 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.315962806 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.327226105 seconds)
  done (took 778.531775274 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.324670517 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32228427 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.323695391 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.324185714 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323186887 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322784108 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322937664 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.323944363 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.323332662 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32315733 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.321913818 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325500199 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.324391505 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.325230694 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32253556 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.325361986 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.323731114 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.325520861 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.322885738 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324479739 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.324378215 seconds)
  done (took 28.998330664 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.324783779 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.324431677 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.324827477 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.323837016 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324395583 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.323612367 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.325902376 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32357786 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32557639 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326699386 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.325686238 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326361424 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.326327031 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.325455424 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325915283 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.325338005 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.327430738 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326490261 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.326612309 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.32592162 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326785989 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.326499895 seconds)
  done (took 30.360917759 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.327219506 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.329671307 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.319795748 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.32902743 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.327472754 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.326064553 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.326515251 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.325861753 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.327453204 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.319385937 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.322962372 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.320372822 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.322973387 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.330198821 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.32272924 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.332732303 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.327683278 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.329067965 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.328036375 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.326948036 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.33194834 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.340508562 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.328930917 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.320296573 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.329117677 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.329551499 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.327554259 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.328471356 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.319547265 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.331432858 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.328003821 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.322259067 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.332313971 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.330704546 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.323478272 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.330113538 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.3282388 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.329567505 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.328887752 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.326366379 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.336547069 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.32996282 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.333453866 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.341804258 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.329398783 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.322703195 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.334636145 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.329166819 seconds)
  done (took 64.947260302 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.329668111 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.330758414 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.3300928 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.328174412 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.329744669 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.330174871 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.330463119 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.33001974 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.330017504 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.330829569 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.331508488 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.330074577 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.331533856 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.332349073 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.32949029 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.330814655 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.330776715 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.331099159 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.330324674 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.33200527 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.33046544 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.329528778 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.331877045 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.331913478 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.331981461 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.331208993 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.331219247 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.33216943 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.331004767 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.330119832 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.332750987 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.331366912 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.331800725 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.332081914 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.332218313 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.333445194 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.332462426 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.332632897 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.331827148 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.332100009 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.333167229 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.332740571 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.333254769 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.331744605 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.332426118 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.33447607 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.333387076 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.331756683 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.333260304 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.333539167 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.332721905 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.334178326 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.334241401 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.332276227 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.334291665 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.333186545 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.334075012 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.332410007 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.331936336 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.332232032 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.333035414 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.333391103 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.334425418 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.332104451 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.332224114 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.334405192 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.335447826 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.333267935 seconds)
  done (took 91.77753983 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334519184 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.333187732 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.334125976 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3354142 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333989255 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.334160924 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.33522217 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.337614254 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.33377302 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.334283858 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33359642 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.335424756 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.333049341 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.334807155 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.33593414 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.333594744 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.334494401 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.334179308 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.333865879 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334320902 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.335680973 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.333631811 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.336195714 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.333015082 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.331958657 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.332620768 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.333781709 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.331419655 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.332734509 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.333960414 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.332639518 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.332859627 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.334089784 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.333573771 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.334269226 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.332628333 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.332621736 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.334813895 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.332944559 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.333233644 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.333986991 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.33287142 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.334410332 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.334042536 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335835613 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.333903496 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.332799934 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.333715107 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.333719253 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.33359596 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.333696416 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.334947674 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333246543 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.334127128 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.332905687 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.333321459 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33316283 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333749717 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33420313 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.335497133 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333597866 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.332878038 seconds)
  done (took 83.910687017 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333636712 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.332893891 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.33380294 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.333533396 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.332908243 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.334180724 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.332735013 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.332877813 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.333948096 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.333552171 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334356811 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333138953 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333865992 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33468762 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.334253334 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334708418 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333692288 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.333448381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333094575 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.332828232 seconds)
  done (took 27.876421893 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.334152372 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.333314497 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.33242379 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.332155199 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.332937579 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.335606463 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.332868414 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332406779 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333587612 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333163512 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.333323736 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.333178816 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332234545 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.333424174 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.334164189 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.332564976 seconds)
  done (took 22.535446263 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.332429558 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.331671049 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.333941733 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.335164472 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.332319663 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.331316788 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.333946237 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.334022284 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.33267999 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.334685403 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.334084358 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.334424788 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.33380949 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.334159498 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.333844964 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.333652239 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.334314426 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.334002558 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.333543352 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.334145146 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.333217407 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.334130812 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.335442993 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.333047609 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.334138934 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.334158442 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.333611883 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.333800563 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.334607942 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.333772394 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.334627759 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.334354265 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.333309317 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.334461461 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.335281567 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.335029444 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.33359094 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.334825559 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.335304599 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.33511965 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.334172133 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.334739579 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.333668637 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.335109062 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.335495786 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.33482037 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.33472406 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.336730716 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.335081938 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.336184695 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.334257147 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.336537526 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.336686438 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.336477377 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.336413701 seconds)
  done (took 74.593843037 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337238367 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.336466863 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.335869975 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.336394627 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.337424806 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.338340624 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.336771573 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.338572851 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.337386152 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.336498706 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.33678661 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.338683426 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336588631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.33623852 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336199284 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337429346 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.337220836 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.336457337 seconds)
  done (took 25.272634312 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.339086656 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.337303268 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.338014274 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.337669642 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.337707398 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.338843775 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.338291925 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.337872612 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338346856 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.33959683 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338657673 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.337608894 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337483233 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.338382493 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.337696277 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337094729 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.33879264 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339775396 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.338813317 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340235361 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.338763953 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.338437339 seconds)
  done (took 30.652868112 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.330256543 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.327620971 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.328307356 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.341269386 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.33936728 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.329367353 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.3304492 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.329405783 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.34687742 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.352658902 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.349342672 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.338116092 seconds)
  done (took 17.250908911 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340767642 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340878203 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340937995 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341941868 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339918548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341380445 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341047861 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339978607 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340825422 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340476797 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340999941 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341560243 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340237558 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340102924 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340979258 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341244695 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342144132 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342960313 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341608666 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341847402 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340041834 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340671934 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339407933 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340725203 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341000566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34164139 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340313827 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34187826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341790861 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340849561 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341137755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34244166 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343347129 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342079231 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341863547 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342781469 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341240681 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342777615 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340845068 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343050954 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.342246321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342614873 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343506352 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342294104 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341972977 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34161228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342539852 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34235346 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341330326 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341087035 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343185982 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342719254 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341861786 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342936277 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342955144 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342329784 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342416158 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343114732 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343083923 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342830195 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342748268 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341889162 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343758084 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342684934 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34258923 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343327596 seconds)
  done (took 89.768478709 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342164747 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.343557951 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342600009 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343294063 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343429994 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344688488 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343801603 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343395784 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34225652 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344152142 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341057411 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343098495 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34380076 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344292901 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344023316 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34239822 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343961543 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343418465 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344278638 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344080415 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34408252 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342976244 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344353743 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342450684 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344335856 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343835098 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343461983 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342599451 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348334765 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342652497 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344627824 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342428071 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344292546 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.345159815 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343167147 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345646667 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346237558 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34612407 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34561866 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344710941 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345374602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344161047 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346273824 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345020587 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346344327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344387621 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345500261 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344291712 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344770024 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346359643 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345642094 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346156354 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344668885 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34557972 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344451363 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345361461 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346019341 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345493445 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343868058 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344461319 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345383501 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344417636 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346910528 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345486943 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34371559 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346249376 seconds)
  done (took 89.945981001 seconds)
done (took 1822.775475122 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.50559237 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.45831713 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.335342463 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.34213888 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.335062049 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.336542081 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.349402965 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.334085701 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.337250875 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.336718377 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.335384951 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.525199089 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.369130907 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.334068079 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.335273732 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.432371475 seconds)
  done (took 27.215709056 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.364599594 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.34188696 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.454601323 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.340856065 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.363945245 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.531376353 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.396871783 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.339756344 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.511079967 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.359221729 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.333895823 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.360585412 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.339747544 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.33156024 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.358950353 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.530934505 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.598081284 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.336883799 seconds)
  done (took 29.408979127 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.787373375 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.354280915 seconds)
  done (took 5.356286329 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.360546631 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.339114597 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.340743071 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.339848326 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.332948232 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.347231011 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.339630283 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.33404508 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.362244832 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.468712941 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.341439731 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.352874001 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.355845575 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.340598663 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.347891936 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.386462279 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.505510041 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.350144458 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.346066925 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.344769948 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.338784009 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.434761649 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.38142283 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.348714587 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.46384649 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.34692947 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.347323413 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.346612568 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.456456948 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.350659367 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.338897168 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.341387515 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.341245421 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.295437661 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.879559819 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.345663805 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.364411933 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.348730317 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.348076239 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.490170555 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.341783714 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.34807089 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.333491909 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.881228716 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.448448037 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.458179719 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.358883336 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.345846077 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.343770249 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.405557373 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.341790305 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.343346006 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.400907125 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.153423147 seconds)
  done (took 85.866222433 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.33324253 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.335284753 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517529404 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.359258218 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.335860624 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.369056184 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.342348842 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.62183315 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.363420678 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.336563381 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.65674744 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.971965654 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.345125031 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.400904482 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.370398836 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.39298231 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.335648785 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.362636266 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.33726665 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.336528949 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911375214 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.341116675 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.337128578 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.426827304 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.37577125 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.874498801 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.336028063 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.357879021 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.356211608 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.334948268 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.928498415 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.34501154 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.383466978 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.337596252 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.626238711 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.733227122 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.685940052 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.345052796 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.33651764 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.336756572 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.36270153 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.866065224 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.714853458 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.338550221 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.337973045 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.865977092 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.33733657 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.343661254 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.341989254 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.605769401 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.338518236 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.336862387 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.336987975 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.364008984 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.337742147 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.403566918 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.406250186 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.876644612 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.337198065 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.338293355 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.349444592 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.339628353 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.338788201 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.342991807 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.338011815 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712354568 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.608940004 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.343698922 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.707486125 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.919522858 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.343349412 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013809393 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.352491657 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.361765312 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.385339849 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337522177 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.338222633 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.871762137 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.346756802 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.337171138 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.685635663 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.339322537 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.64259474 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.360312135 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.339323762 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935354008 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.355779534 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.377722048 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.339457759 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.339378271 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.340700554 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.340533368 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.631682825 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.394605856 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.338395223 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.34089499 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.382558786 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338555195 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.354189857 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.348256008 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.996846318 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.341990061 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.339436755 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.360899651 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.338641756 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.340195854 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.342314536 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.337043152 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.625931935 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.339275676 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.343290144 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.339465107 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.33912673 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.345247987 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.431837261 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.336584531 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.644683999 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.338697972 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33721679 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.345383265 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.339261311 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.372530176 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.338424938 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.338524599 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.337521321 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.642523207 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.356037386 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.356568072 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.33835465 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.337069244 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.353868929 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.341223182 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.39525839 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.33854616 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.193760204 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.348342524 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.351224329 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.337532323 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.342432615 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.339941758 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.355930937 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.340669233 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.639356701 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.627915927 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.591894634 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.341564483 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.340655619 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.176757872 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.351587237 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52161118 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.35737462 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.338392347 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.618785842 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.575486437 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.34089582 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.339980446 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.343736359 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.618243145 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.339617483 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.67342538 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946548835 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.340584659 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.346203764 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.186092506 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.155729677 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.345162706 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.343990449 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.637548609 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.355695444 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.338827269 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.339133156 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.338818826 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.339219106 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.344007882 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.347950368 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.340878322 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.33851981 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.627667419 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.534407046 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.356088313 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.347322531 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.862285787 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.36148414 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.338241351 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.355243059 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.34212752 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.338505001 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.410425254 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.342839499 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.343436092 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.339209699 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.346064746 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.893879111 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.338516324 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.361536278 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.532870747 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101549952 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.340662887 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.34199779 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.340050952 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.397409488 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.890141708 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.38716585 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.635881839 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.3496904 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.3780276 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.338412122 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.346893735 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.890796377 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.341922764 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.353670485 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.076399736 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.343756158 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.820107193 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.338366651 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.339616441 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.998589145 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.344205092 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.336329952 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.344390743 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.338206578 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.67007345 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.342897705 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.35398245 seconds)
  done (took 500.700460459 seconds)
done (took 649.763584716 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.337629083 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.343801438 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.32189752 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.342012627 seconds)
  done (took 10.562961669 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.356066385 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.342372657 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.353036508 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34462885 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.354859206 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.342060404 seconds)
  done (took 9.30991342 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.337398019 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.337895778 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.34339502 seconds)
  done (took 8.236027295 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.553150257 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.358949954 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.680283375 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.344075559 seconds)
  done (took 9.15335111 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.355855881 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.355702853 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.354279014 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.356092355 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.355900734 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.356651274 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.356267039 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.35577159 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.356309449 seconds)
  done (took 13.419568777 seconds)
done (took 51.899579633 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.474884752 seconds)
    (2/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.318323553 seconds)
    (3/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.514171352 seconds)
    (4/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.463528147 seconds)
    (5/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.338570447 seconds)
    (6/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.336237324 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.433452737 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.34514539 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.408412682 seconds)
    (10/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.415535915 seconds)
    (11/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.316650054 seconds)
    (12/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.535509595 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.376542944 seconds)
    (14/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.340541092 seconds)
    (15/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.384682119 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.578081211 seconds)
    (17/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.434575145 seconds)
    (18/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.45206113 seconds)
    (19/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.316834442 seconds)
    (20/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.338553257 seconds)
    (21/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.412110593 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.456936765 seconds)
    (23/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.319935607 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.493729041 seconds)
    (25/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.206870414 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.444746249 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.459936654 seconds)
    (28/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.076964793 seconds)
    (29/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.590612433 seconds)
    (30/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.527755643 seconds)
    (31/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.339378478 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.317478282 seconds)
    (33/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.383234243 seconds)
    (34/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.1842406 seconds)
    (35/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.428478426 seconds)
    (36/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.31769975 seconds)
    (37/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.090199503 seconds)
    (38/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.559043401 seconds)
    (39/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.573211355 seconds)
    (40/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.426427272 seconds)
    (41/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.369639454 seconds)
    (42/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.28759933 seconds)
    (43/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.323513436 seconds)
    (44/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.438167773 seconds)
    (45/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.547660428 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.474183058 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.413188591 seconds)
    (48/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.456328633 seconds)
    (49/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.419054651 seconds)
    (50/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.504525952 seconds)
    (51/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.33171691 seconds)
    (52/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.319233833 seconds)
    (53/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.383722141 seconds)
    (54/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.501940239 seconds)
    (55/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.680324667 seconds)
    (56/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.075010616 seconds)
    (57/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.428598647 seconds)
    (58/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.191125754 seconds)
    (59/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.490948077 seconds)
    (60/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.41329082 seconds)
    (61/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.524560425 seconds)
    (62/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.419233743 seconds)
    (63/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.439445197 seconds)
    (64/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.382363962 seconds)
    (65/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.31863676 seconds)
    (66/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.031948948 seconds)
    (67/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.380015676 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.448356805 seconds)
    (69/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.323957562 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.49643173 seconds)
    (71/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.410227458 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.371211599 seconds)
    (73/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.021359298 seconds)
    (74/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.320755189 seconds)
    (75/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.432595707 seconds)
    (76/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.121110495 seconds)
    (77/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.323786415 seconds)
    (78/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.324553771 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.446520653 seconds)
    (80/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.457498919 seconds)
    (81/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.456285294 seconds)
    (82/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.370945245 seconds)
    (83/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.144471427 seconds)
    (84/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.346412273 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.475389032 seconds)
    (86/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.496921971 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.45165645 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.449979726 seconds)
    (89/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.374283078 seconds)
    (90/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.093790576 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.487967544 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.43221919 seconds)
    (93/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.339913207 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.582568571 seconds)
    (95/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.372978111 seconds)
    (96/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.32352032 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.343962386 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.462454536 seconds)
    (99/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.429953942 seconds)
    (100/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.43778228 seconds)
    (101/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.147092448 seconds)
    (102/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.487685671 seconds)
    (103/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.322112152 seconds)
    (104/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.433062362 seconds)
    (105/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.321246637 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.463489132 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.379409044 seconds)
    (108/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.460006221 seconds)
    (109/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.407285664 seconds)
    (110/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.35185866 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.436607811 seconds)
    (112/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.121984039 seconds)
    (113/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.336316992 seconds)
    (114/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.332636258 seconds)
    (115/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.606623922 seconds)
    (116/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.378886702 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.487476313 seconds)
    (118/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.322009666 seconds)
    (119/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.321132435 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.52870862 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.389766945 seconds)
    (122/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.322107664 seconds)
    (123/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.179091155 seconds)
    (124/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.458741051 seconds)
    (125/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.19507842 seconds)
    (126/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.491638395 seconds)
    (127/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.419128197 seconds)
    (128/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.474355746 seconds)
    (129/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.324662855 seconds)
    (130/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.511777964 seconds)
    (131/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.591460658 seconds)
    (132/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.165065598 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.482153507 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.437003341 seconds)
    (135/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.176980585 seconds)
    (136/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.359332377 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.328490103 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.359836958 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.450312214 seconds)
    (140/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.331995622 seconds)
    (141/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.523515891 seconds)
    (142/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.459892132 seconds)
    (143/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.325288264 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.55643776 seconds)
    (145/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.387433205 seconds)
    (146/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.324147541 seconds)
    (147/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.375992123 seconds)
    (148/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.329290978 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.512935913 seconds)
    (150/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.387177979 seconds)
    (151/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.324020508 seconds)
    (152/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.463842942 seconds)
    (153/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.492546466 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.408092646 seconds)
    (155/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.33132028 seconds)
    (156/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.329870454 seconds)
    (157/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.559229394 seconds)
    (158/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.38169312 seconds)
    (159/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.385314198 seconds)
    (160/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.537760893 seconds)
    (161/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.384574239 seconds)
    (162/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.044064849 seconds)
    (163/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.415580148 seconds)
    (164/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.445874231 seconds)
    (165/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.585100586 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.46360748 seconds)
    (167/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.326086451 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.52904341 seconds)
    (169/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.324843657 seconds)
    (170/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.465891455 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.496344702 seconds)
    (172/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.375809246 seconds)
    (173/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.048853117 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.592897122 seconds)
    (175/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.557530691 seconds)
    (176/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.240151291 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.450648272 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.452054146 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.550498551 seconds)
    (180/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.326352007 seconds)
    (181/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.414478219 seconds)
    (182/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.52412763 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.478979508 seconds)
    (184/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.385945021 seconds)
    (185/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.417971632 seconds)
    (186/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.175485452 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.331499269 seconds)
    (188/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.587453513 seconds)
    (189/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.432573312 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.327927268 seconds)
    (191/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.202258541 seconds)
    (192/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.330388365 seconds)
  done (took 342.053516493 seconds)
done (took 343.273537873 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377380716 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.450384878 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357683857 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.357120064 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358287617 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.349253923 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.378881249 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.358564318 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.374465835 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.371469198 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.350449699 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.385736259 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373255811 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.36948239 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.391955277 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.360041487 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.359012565 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.369028213 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.373884898 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.373225545 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359251093 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359443029 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.386158488 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.359738041 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366256858 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368513099 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.364411823 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.363587974 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.367632681 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.377039298 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.360138029 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.36488375 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.376556153 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.369189949 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361353856 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.369890291 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.359600004 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.454021921 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.3803509 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370358613 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.367501899 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.376296514 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364435526 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363796501 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.371615665 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.386560092 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368900062 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.374956826 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.35681149 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.339384779 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379956348 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.373023734 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.367921725 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.340483028 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.354407272 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376716079 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.370214717 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379079626 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.367088123 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36262949 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394638374 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381508042 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.37115517 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368613734 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.367551508 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374692008 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.369498207 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.376920817 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.36873129 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362754679 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36198711 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.369768876 seconds)
done (took 107.917943746 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.483804015 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.356456698 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.515571688 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.367295663 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.52414254 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.480493744 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.368907251 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.367678232 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.368175801 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.161746079 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.368873062 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.369246974 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.357457564 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.36878501 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.482040919 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.369392538 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.368708584 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.062501461 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.370247863 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.498833003 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.361857032 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.368086822 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.368876886 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.167260726 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.360543854 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.355984763 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.501192682 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.369940997 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.062918557 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.354179625 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.356899189 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.065689307 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.495944824 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.387429484 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.37906617 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.377654727 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.526671342 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.372722747 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.486816525 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.485337202 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.518214454 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.409090038 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.355689806 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.361087272 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.371027881 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370700453 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.370951314 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.400028333 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.358030379 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.369884025 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.061910069 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.380873625 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.380139301 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.368821262 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.373169207 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.39040355 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.37072381 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.373337665 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.500061778 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.370458104 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.487872179 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.168715137 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.163659253 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.371106142 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.358549952 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.373602491 seconds)
  done (took 110.425586753 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.433431053 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.436664769 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.469396336 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.364361472 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413899078 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.472384562 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.362361891 seconds)
  done (took 11.184722285 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.371314629 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.37232557 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.411951308 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.41269256 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.373974865 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.536105917 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.374113634 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.376161546 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.372352991 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.416399999 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.376245835 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.373971048 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.381968875 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.36345385 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.411021506 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.375391342 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.483672691 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.366188912 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.374468398 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.517468033 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373075042 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.38272251 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.414968481 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.376081517 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.374894641 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.371181359 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.148736401 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372288897 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373510828 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373073214 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374198984 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.431034795 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374553243 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.363392405 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373730898 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478456879 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.376106647 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373954726 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.373411095 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.366178369 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.373541553 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.374425294 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375212603 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.374314212 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.374467641 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.391339628 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374282938 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375203098 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374186449 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374549878 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.415577936 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376088234 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.373878476 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.374301377 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.419695633 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383886291 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.377133463 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.375698532 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375596507 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375488607 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519237444 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.413500904 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.376477915 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.414023206 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37605197 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374983873 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.375752413 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376496829 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.45730925 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.377585952 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.417002731 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.375502492 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.546946732 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.391622713 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378335929 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.371825621 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.371821391 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37662617 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.365829357 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.374804767 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.376182501 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.369618097 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375426562 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377965757 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.376065395 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526914756 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475790745 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.376731274 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383880879 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.375048763 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.377541518 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.420459084 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.376718647 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.377167583 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.419399624 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.486063859 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42068159 seconds)
  done (took 141.255672102 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.383106337 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.383251851 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.374243248 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.3972745 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370686727 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370648442 seconds)
  done (took 9.519054137 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.371383963 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.379506323 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.377623634 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.378710119 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.380547843 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382707836 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.380104932 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371861042 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.381960452 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.381179755 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.382014819 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.382527249 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.379711881 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.381513621 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.379493291 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.379854364 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.379164506 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.37905214 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.381639487 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378806427 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.366715235 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380469098 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.379949111 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.373314782 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385029745 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381235823 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3953599 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.380479449 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.380813941 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.377604927 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.383057187 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.385578779 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.37366916 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.37556964 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.383959696 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.374130211 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383368657 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.384253761 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381846478 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.384890434 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.383526372 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383384294 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.380867179 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383117176 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.374222294 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.375741439 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.385774835 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397615873 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382011101 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.38250414 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.383140223 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.379705184 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.385189431 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.383831731 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.375106787 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3767422 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.385675966 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.383664445 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.385014385 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375940018 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385094847 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.384914664 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.375471012 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.384572794 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.382682416 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.384850475 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37475654 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.386104863 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383579197 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.383365339 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.38539155 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.382664942 seconds)
  done (took 101.679536098 seconds)
done (took 375.295774528 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.724330029 seconds)
  done (took 3.967661404 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.635257394 seconds)
  done (took 3.879944395 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.718334439 seconds)
  done (took 22.225916282 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.462957029 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.376594675 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.399187686 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.379633436 seconds)
  done (took 10.859965673 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.740680335 seconds)
  done (took 3.983748207 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.388718328 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.393969969 seconds)
  done (took 6.029101996 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.532334732 seconds)
  done (took 3.769090214 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.66864184 seconds)
  done (took 3.90590659 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.371410199 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.361495738 seconds)
  done (took 5.978038222 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.325885579 seconds)
  done (took 3.554854578 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.330326359 seconds)
  done (took 20.560536623 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.35010551 seconds)
  done (took 3.570012219 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.358798474 seconds)
  done (took 3.571176059 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.720290365 seconds)
  done (took 5.931101216 seconds)
done (took 103.032903829 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.325133361 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.330396034 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.324842275 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.319193899 seconds)
  done (took 10.508693312 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398997668 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.399175806 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.406629319 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393237581 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.391562156 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.399231483 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.360912426 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.360597307 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.389287867 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386782384 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.403661716 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.391891425 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.400838807 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.374361091 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.386435664 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.403852581 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.389589707 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.407376436 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.360345918 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.392622045 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.336072015 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.393667242 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.388950878 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.335904535 seconds)
  done (took 34.457670789 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.822615718 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.394793522 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.476266807 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.374005244 seconds)
  done (took 7.274182786 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.43663384 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.437128869 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.452708662 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.486573224 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.534033421 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.448361788 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.356744734 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.350430464 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.335448201 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.43176196 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.514408774 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.427916612 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.645063411 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.326726127 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.643336252 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.327249554 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.321297762 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.426142793 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.47633674 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.506830192 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.323296775 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.426070407 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.43216142 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.429257806 seconds)
  done (took 35.700413085 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.329896147 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.338305264 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.325576023 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.339224076 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.3268705 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.327324235 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.328039088 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.331560511 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.322695744 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.322760446 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.325890679 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.336732958 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.323991713 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.324327235 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.330265473 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.325456878 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.325184316 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.330918762 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.332373799 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.324831161 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.324852457 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.330200026 seconds)
  done (took 30.422774975 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.308531589 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.309288344 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.659061276 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.563578345 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.310453638 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.308071031 seconds)
  done (took 13.657692142 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.383178185 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.51676913 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.315742213 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.643237481 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.734100381 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.324816897 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.319692934 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.551429804 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.833074314 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.829916183 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.371803678 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.388724182 seconds)
  done (took 19.408966785 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.316084542 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.319254545 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.319867419 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.334374546 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.369129399 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.323190833 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.325244709 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.31277384 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.376800169 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.375006581 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.32274161 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.374617656 seconds)
  done (took 21.270990494 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406843241 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.33049415 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33314913 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401277183 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330448804 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325323579 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338545638 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.022743055 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.335424148 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600281778 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338754789 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420725907 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578515701 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343672459 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338395226 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.278287614 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565265878 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800155581 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342740459 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336006406 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372536729 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338229413 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342262188 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.54835859 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343992714 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335050675 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.73563376 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338720738 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600145472 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582778918 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580897669 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341772111 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615138387 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966433871 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447864967 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530177915 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346857411 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338143557 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.315438868 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.356227141 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357101872 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346138913 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577398906 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346923856 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337162817 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342118497 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05120142 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.349748667 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.33619145 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34147827 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577866259 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429197741 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.342146158 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337263108 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37736283 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341292024 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.342038219 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461855954 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984323463 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353395679 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354282212 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.345074172 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330541399 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360973618 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96621045 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.351221948 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.34791817 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.34490336 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339888456 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340528859 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365865164 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340725626 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.359082833 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341596713 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071350163 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354178335 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345830213 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861853173 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350905285 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.348058117 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560849673 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342200421 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33970627 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.342156354 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342292103 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030467193 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352348476 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.311580011 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383879838 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046108462 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.535680547 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370050499 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372773332 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564681452 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.309742867 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346366322 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.355358642 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348063512 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359934736 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.049835418 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342927273 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.345149296 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591378616 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.552065639 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344466912 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.27324809 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801634476 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348461951 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.370868914 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339858829 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.53782592 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.93728308 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593367764 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352892099 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380098864 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340935999 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099458282 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350604902 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.352380806 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345263712 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61580852 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.125114513 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349964122 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417192041 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339500973 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343379032 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3475761 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351762695 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345935733 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.51451218 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348395063 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591576091 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.353439817 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341533977 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.350829629 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34134637 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.350208682 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.563912586 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345335198 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624362363 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348395607 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341068822 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341743608 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.559393023 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.351070679 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.34931239 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683392472 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346858174 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347975098 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591260914 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380308148 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457351119 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377454961 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.345764253 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612189722 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.351058927 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.352395133 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35430113 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348980876 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343315915 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.348671439 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33287809 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930349432 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323960274 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.34761347 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339389727 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.354996461 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416463283 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351548211 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.534139469 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.345925186 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340421694 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.34887083 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.353285468 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561170188 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583782497 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.348141383 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535838477 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.798151854 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935670034 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362939445 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.340459034 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.34086381 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.3449884 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343454414 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342704278 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342585248 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536920297 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598053762 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345166738 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940080537 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351431828 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342924046 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.354272588 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584098703 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.357139988 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342608753 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.350275807 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343726675 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359165247 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.586596623 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571240369 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.361352902 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.342204535 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.860691469 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349836518 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343782646 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343688476 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369432412 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344586268 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217862467 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688642946 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357242061 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588022901 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352679826 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.367824564 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.342368208 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355433786 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353838123 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.353115504 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352296494 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.536711022 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.357374031 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353110276 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985639447 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089949753 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888674805 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353804187 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.355180789 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351027177 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.052275163 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35118929 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345018974 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583378571 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051886027 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349634448 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80145988 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.352408033 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071321702 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596953145 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57734942 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34561766 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.354970754 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598583093 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563632386 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370967409 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358887628 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353518548 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.313978174 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885423527 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353810529 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531076273 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05632932 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349975092 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346748274 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.403956458 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351659779 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723217781 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352392724 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345401709 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348132301 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361660395 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223376163 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360206583 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347281131 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980253419 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348596973 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.811284718 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353005448 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.542371805 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.598852457 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.573885934 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.352085845 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.356104624 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.597309841 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591350642 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355394156 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350702246 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897141669 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.202648969 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.355076172 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346686911 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108028076 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366505059 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62251458 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.363098974 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.353596693 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363980901 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348092581 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348612215 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.347795155 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357632662 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322337674 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810020603 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.34722253 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37133254 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359175141 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352190129 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.591901309 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.363994418 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944614593 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572328679 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34854882 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377668101 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.35419719 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356842484 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.320831151 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.350753593 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349212724 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404311681 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571090088 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35938987 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.320789908 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347314712 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565097254 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351633151 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358277058 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552937487 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.352535622 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.362119829 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111356405 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379873479 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362309172 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350956805 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358892753 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387177976 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421641899 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543092506 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.600101719 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.59927671 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.728947656 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36078829 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35177139 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.369905494 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432501929 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352971236 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.35692232 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.35530352 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946415439 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116632955 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.961762001 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594871273 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356151521 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353106919 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353401229 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591288682 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352029571 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627466301 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352974092 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.344272956 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370847788 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364066137 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350513771 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564912248 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628269804 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354212636 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358141463 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357087857 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.354568206 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601507879 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.570773773 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819210018 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875359494 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35610329 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356490863 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07398652 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635128641 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357630809 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35389482 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352532283 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.373440208 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.350585473 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.365901148 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355413314 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58117882 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597384299 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990430081 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599286075 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.539888472 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.354740598 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356917944 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619659315 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.194798774 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547248587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959495195 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05404502 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607709196 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428010202 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552226974 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.360307793 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591450662 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.363360825 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359821917 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353368702 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357641548 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.354338018 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599126235 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964440281 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605463848 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.362317855 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.365540198 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391194776 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.553894492 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58051989 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067589762 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579209347 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604976312 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366704249 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355157496 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968022683 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.605256543 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355549157 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.363507391 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561653939 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365497985 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393057035 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.23450147 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.358487346 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882974436 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.568985789 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379963285 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364158011 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.065639926 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963723939 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.35895408 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828869106 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357372161 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366297145 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637635275 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.364822145 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361985408 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641813988 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.365779828 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363092947 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560675844 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.956970664 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093036631 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.388174455 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367647494 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.361531023 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359867086 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429260639 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359878262 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37036914 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.735758928 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.363676654 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360322935 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368191626 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.372882698 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366846709 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.362058902 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360287614 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.364370493 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.354870949 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.334139714 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365183448 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48159022 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890074538 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357673433 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.976650034 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.699658286 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608163447 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360651689 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.333181729 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.368786175 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360398933 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361229861 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357578141 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370111964 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882179845 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.369755509 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.610966721 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363675356 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.57539315 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574294119 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377111963 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555823656 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370699904 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383252075 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.333744091 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360438364 seconds)
  done (took 967.530824621 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.366570684 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.383751248 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.36573106 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.413768935 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.356251686 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.358303659 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.360478003 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420368097 seconds)
  done (took 20.254996739 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.368389806 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.361898938 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.368500071 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.36026349 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.357420468 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.82287894 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.359743698 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.361557113 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.379723857 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.366310829 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.359443546 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.967512529 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.363351492 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.358596189 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.368756613 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.361689147 seconds)
  done (took 32.118676316 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.983092208 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.700636989 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.786160168 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.373014713 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.376231373 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.36127329 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.465281987 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.369909289 seconds)
  done (took 25.648457577 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.370886532 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.372763332 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.371837753 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.370100161 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.371114318 seconds)
  done (took 8.092348561 seconds)
done (took 1227.556813053 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.371530491 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.369463112 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.374381656 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.372920874 seconds)
  done (took 6.722963692 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.335298874 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.332373367 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.335697339 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.350793293 seconds)
  done (took 9.587894742 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.01810979 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.86811751 seconds)
  done (took 5.120925871 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.91189327 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.911369115 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.904068346 seconds)
  done (took 6.962534767 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.637457803 seconds)
  done (took 2.872597761 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.337692143 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.362710766 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.088354417 seconds)
  done (took 8.024021944 seconds)
done (took 40.524153865 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.361132151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.117865947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.510254472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.361429512 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.514284936 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.51276504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.609485829 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.358206616 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.367742583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.359799339 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.359171285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.517615056 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.592217504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.12269999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.591866067 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.120630401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.520073959 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.371194236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.355781791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.35633604 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.601848638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.360577923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.356377969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.367984528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.526277933 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.506492307 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.361207823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.120136694 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.361206817 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.364824228 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.50817574 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.359665741 seconds)
  done (took 82.010251679 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.365248691 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.362314593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.369088671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.357169798 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.375012272 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.372492559 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.355410995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.357346363 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.367520385 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.36493391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.359144113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.372421378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.360096583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.354240683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.372526728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.354149318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.374943087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.368348555 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.357694557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.371912328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.356249508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.36189959 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.365866428 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.37082018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.366688823 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.359598568 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.373543085 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.358960646 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.35924503 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.359558154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.364443358 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.380826229 seconds)
  done (took 76.908895991 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.376623167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.366379323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.387102377 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.36645317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.361552226 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.383449807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.367827895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.361684445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.364045981 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.36942015 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.365102237 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.36675292 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.364329292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.373780238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.366467494 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.375469258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.3590907 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.366650683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.37748355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.380233537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.358470472 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.358546598 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.364059752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.374542036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.368284877 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.365684046 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.360628592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.37492179 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364247019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.365789915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.36531707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.372726282 seconds)
  done (took 77.03392589 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.606839909 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.378378756 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.382849029 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.374678303 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.38383196 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.381203233 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.378569958 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.609345092 seconds)
  done (took 14.734140532 seconds)
done (took 251.92418955 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.374963733 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.856959329 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.402648528 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.373343271 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.38627507 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.4042775 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.590076118 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.404338571 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.593387385 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.401000357 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.386635022 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.376608149 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.143360826 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.521222709 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.167490212 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.277260312 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.220656216 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.362034736 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.901794425 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.648143914 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.397466956 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.364191317 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.158057312 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.232938071 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.344584266 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.464807224 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.465522679 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.595441276 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.535272667 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.445088776 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.864916134 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.380821059 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.380580245 seconds)
  done (took 63.663724241 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.373691742 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.382307892 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.385896172 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.381372609 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.382623568 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.383379595 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.369934275 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.383979274 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.382574142 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.384873413 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.38123602 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.381425126 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.384705303 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.384265175 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.381005576 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.35410042 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.374143667 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.383440184 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.373573146 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.360970497 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.382055086 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.386084309 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.3850583 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.385037976 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.384135903 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.384236302 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.382632335 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.383293367 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.383010257 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.387575584 seconds)
  done (took 42.657052271 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.384299614 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.911246379 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.080022401 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.377139906 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.376679794 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.383563194 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.653513259 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.38563029 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.376330675 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.379779939 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.820663519 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.38968481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.409632957 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.093767026 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.382658124 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.383563881 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.384571651 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.378604145 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.924862736 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.383138976 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.648400303 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.390649388 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.652765953 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.390364947 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.377454475 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375793936 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.381204363 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.177655507 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.394470512 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.821236223 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.108495622 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.648966787 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.11236189 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.131649483 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.111989934 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.388695779 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.387983613 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.83281688 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.373737574 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.377980779 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.648408603 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.377760446 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.0966983 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.06779025 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.388258594 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.389860138 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.200614568 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.819006029 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.605227517 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.382496502 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.129219012 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.383997731 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.386008384 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.379584537 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.608437878 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.37613343 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.378554041 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.219641495 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.386426471 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.653820492 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.386978494 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.381113194 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.919036623 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.375653961 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.919857555 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.378513497 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.389463395 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.380860265 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.099672586 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.382681689 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.072110849 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.396829652 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.38833053 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.830880827 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.922657628 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.247576462 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.377367446 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.935532702 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.133915853 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.6644558 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.388050885 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.155861468 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.665998888 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.386942994 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.392564513 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.390555894 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.390007134 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.454203598 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.649286485 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.993746506 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.076549605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.217157618 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.653021534 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.392259627 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.385557635 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.203811845 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.387916902 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.392817734 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.102534679 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.069970851 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.400414124 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390727849 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.064081939 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.401275461 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.655842521 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.390117385 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.138250187 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.383363532 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.457387348 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.392730094 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.392353746 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.386650486 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.657827415 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.390062089 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.391928736 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.103141592 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.852110476 seconds)
  done (took 192.251214553 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.375023146 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.370161586 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.376762634 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.374673381 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.375508739 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.383146998 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.375659119 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.378768118 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.382233651 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.37908216 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.377560352 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.385984995 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.381117587 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.376993013 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.377951972 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.375371648 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.376189187 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.381161844 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.375812252 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.37517352 seconds)
  done (took 44.805327643 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.395292881 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.918971315 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.885703766 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.395018711 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.393050592 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.388292262 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.437090257 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.398080373 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.393659827 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.671023018 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.54503673 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.396857543 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.394964264 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.395366791 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.883408363 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.364243258 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.669920847 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.914192793 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.3897694 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.918976663 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.357784915 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.392333685 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.384478145 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923778999 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.687572549 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.654886342 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.444673824 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.92811081 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.396179286 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.394047007 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.921970315 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.397298163 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.389530065 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.906799141 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.394798421 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.406942498 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.398185228 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.442466173 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.442312888 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.675801345 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.93221887 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.667509745 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.407759439 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.546976513 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.394901541 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.363280766 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.927807442 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.391532323 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.366522007 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.396655317 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.403807158 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.900023827 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.391133944 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.900299835 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.399219041 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.395745245 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.918350241 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.895971623 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.889093009 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.553578107 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.390915422 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.656765816 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.398654684 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.931221044 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.396964673 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.396688135 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.400233949 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.551277125 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.927699642 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.660995713 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.680979108 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.676073654 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.398428168 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.454740102 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.401566541 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.680306632 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.454108485 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.774397862 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.676110544 seconds)
  done (took 125.293386785 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.656606218 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.497267933 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.760689407 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.951729303 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.87892164 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.525476644 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.500965217 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.628384313 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.410147252 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.50491214 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.024761613 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.47679926 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.137629876 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.450452733 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.497180889 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.516602083 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.775218561 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.316704527 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.00667154 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.998987165 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.406529308 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.489144175 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.878984416 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.582342482 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.38781546 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.958099164 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.285914027 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.890080209 seconds)
  done (took 52.652790427 seconds)
done (took 522.565041806 seconds)
SAVING RESULT...
DONE!
