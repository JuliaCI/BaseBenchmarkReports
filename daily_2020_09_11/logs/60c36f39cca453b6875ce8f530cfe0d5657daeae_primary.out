cset: moving following pidspec: 12489
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.712403519 seconds)
loading group "shootout"... done (took 1.00911753 seconds)
loading group "string"... done (took 0.405665303 seconds)
loading group "linalg"... done (took 7.671690496 seconds)
loading group "parallel"... done (took 0.157959862 seconds)
loading group "find"... done (took 1.271028768 seconds)
loading group "tuple"... done (took 1.83888324 seconds)
loading group "union"... done (took 12.525948873 seconds)
loading group "dates"... done (took 1.310856989 seconds)
loading group "micro"... done (took 0.202308878 seconds)
loading group "simd"... done (took 4.320594592 seconds)
loading group "io"... done (took 1.019385 seconds)
loading group "random"... done (took 8.624920982 seconds)
loading group "problem"... done (took 1.460459359 seconds)
loading group "array"... done (took 19.227168502 seconds)
loading group "misc"... done (took 1.480285393 seconds)
loading group "scalar"... done (took 38.980549946 seconds)
loading group "sort"... done (took 3.069225889 seconds)
loading group "sparse"... done (took 11.562721779 seconds)
loading group "collection"... done (took 16.970529337 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.488701642 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.117544145 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124236814 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115117048 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.198616633 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118654181 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119695042 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080458463 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.84674991 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.133726435 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109161961 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.401117859 seconds)
done (took 5.168379377 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.162875352 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084667657 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074977248 seconds)
  done (took 1.254446035 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060626335 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128653736 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061651166 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063865759 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06414101 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063421558 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06264341 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062504968 seconds)
  done (took 1.602309815 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067934845 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06434983 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063065594 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064536526 seconds)
  done (took 1.357461755 seconds)
done (took 5.548223492 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.228893921 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.095146535 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.275667842 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.375274717 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.44178328 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091880215 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071270645 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066843112 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.12341352 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321931574 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098645131 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.174220674 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.084594754 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.168887296 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.956787796 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.114596186 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08227722 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117740143 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089302147 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127750797 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.377081676 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073357022 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069078706 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065767187 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063815633 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.634644196 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660874398 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125642194 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079349578 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.095822929 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112694632 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.648589666 seconds)
  done (took 10.2429431 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088061875 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.08648745 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064536945 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120916102 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.087982686 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065262943 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070654813 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063514975 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.083695016 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.118552088 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087193804 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.092990386 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062545875 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064738023 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.06973064 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.191034567 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075544715 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.076478135 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.063972324 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075397812 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.100987092 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.074138576 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.0737834 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073607452 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.124550899 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164381956 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092555157 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093645932 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061514214 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07434276 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111243668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.120521754 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062217909 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.061213224 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.116720021 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095147644 seconds)
  done (took 4.356897957 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.926861627 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.0884415 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.095080987 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.594266291 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061949244 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.143071312 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230704307 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068233076 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.370491297 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.138764052 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.13384958 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.141747063 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.110944524 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068225288 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.147116264 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.109747877 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.456342645 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064543835 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.064034583 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062869234 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065218428 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064759438 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060816663 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066678606 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091618636 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.084338753 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.163047864 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.889315879 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.231366334 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06452184 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162342832 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.079952765 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.353548141 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06793171 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080119402 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.403616513 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.11789624 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.061970164 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157047032 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.111380512 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060575653 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.110543444 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073789128 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064768146 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.064908192 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079403869 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065009228 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068682407 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075795094 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101542102 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06550375 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062227514 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160035083 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062191224 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063277705 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064283046 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147249848 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0625866 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.13597763 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061743835 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.0662015 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.098516642 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065684562 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085190777 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.094493717 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.337138431 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.02931525 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063873919 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.920767502 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07572743 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063372975 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067685265 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064391891 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064720583 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061410167 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06446992 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069977223 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067514873 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066474194 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105526571 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062374824 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066213312 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062402981 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060627323 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068807882 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094766118 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061187974 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.460567566 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095428819 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061967584 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.071260022 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100262542 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062621566 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067002592 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062876075 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062493047 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061887891 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062649045 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066203361 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.092186419 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066958086 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108725361 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.135174322 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.061251017 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064278995 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062673286 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067644761 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06563332 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065517652 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063001901 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065215482 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064372986 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061174063 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.104109238 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.062611057 seconds)
  done (took 20.92188722 seconds)
done (took 37.544792352 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246965112 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075132031 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075405229 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074113438 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074386503 seconds)
  done (took 1.743207831 seconds)
done (took 2.929138488 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.102932464 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060010122 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.094040774 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.093300779 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.060361556 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060402323 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094602003 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060112449 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.092402478 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.093897615 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.095582786 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.094810556 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060317619 seconds)
  done (took 2.259736725 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065772282 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076237676 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077857658 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057760022 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067918716 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077541869 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058156107 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078128096 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081860529 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077020405 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07704263 seconds)
  done (took 1.973471423 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06665773 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076920459 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07816961 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.05819923 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068838399 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077077037 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057784903 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076305075 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.079216767 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076398333 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076694736 seconds)
  done (took 1.965984872 seconds)
done (took 7.372906483 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.062711909 seconds)
  done (took 1.218550256 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.487548869 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.158080441 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064085368 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.082718671 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182207417 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.088490535 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.196746443 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.06703346 seconds)
  done (took 7.659121032 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090684491 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063921405 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065295686 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068115804 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.062916424 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.063436125 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06451442 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06480829 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064692451 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067173841 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066175854 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065008908 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066970707 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066094324 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066360175 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065258202 seconds)
  done (took 2.330631015 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092944327 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091648818 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068597895 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.068610594 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.067143477 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.066116849 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.068786233 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.068918928 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066671598 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068375111 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070226671 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068894201 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068376707 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.059659762 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069819443 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07039388 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066786333 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069729241 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072614586 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.070834595 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07040241 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059794175 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068370876 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069319519 seconds)
  done (took 2.964713629 seconds)
done (took 15.345024758 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172245226 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071854598 seconds)
  done (took 1.409933663 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.064478011 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066475337 seconds)
  done (took 1.31179654 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.069679304 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057876918 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.076682839 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.067300751 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.05815354 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058345027 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.074916748 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058499104 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058864973 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058448765 seconds)
  done (took 1.82013536 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059276238 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.065178541 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0632668 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.065213693 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.063326922 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059252473 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062154324 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060026123 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066798992 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058565336 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063055429 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.078155859 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.062692544 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.079866051 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.062373738 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063106107 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065566417 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06225321 seconds)
  done (took 2.343148288 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057989003 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.057772192 seconds)
  done (took 1.304744004 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.060690046 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058200712 seconds)
    (3/7) benchmarking "month"...
    done (took 0.060648321 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061544251 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.057816526 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057085963 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.057735352 seconds)
  done (took 1.595349676 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.388114165 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115520818 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325475815 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066018581 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07578187 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24401962 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060609871 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065501658 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065184009 seconds)
  done (took 2.630022007 seconds)
done (took 13.608737211 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076856873 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.166204834 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.08372918 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.397427815 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.086362647 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062734858 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109209156 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.164659561 seconds)
done (took 2.352406336 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.228662406 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.264113501 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.855867397 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06523271 seconds)
  done (took 3.377492702 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.308196589 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.074023146 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074321299 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065535702 seconds)
  done (took 1.723640884 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061391102 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068048802 seconds)
  done (took 1.32745099 seconds)
done (took 7.85900593 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088105484 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060896547 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.061265941 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060452936 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.060851455 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06102157 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.060580011 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060810314 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060781583 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060445438 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061161302 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060577613 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060476075 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060711125 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060854109 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060852079 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060364471 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060748943 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060611543 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061127303 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060348216 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060746035 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060880482 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060366934 seconds)
  done (took 2.71052145 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075097124 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061755295 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064260146 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063976085 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064492826 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064027408 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0639608 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062988303 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064207287 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062434195 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066355357 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064429184 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062508021 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064121214 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062579507 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064727607 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064546814 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063110012 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062300594 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064081179 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064099922 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063190344 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064172796 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063841986 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06417171 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06448301 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062823964 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063347986 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063966578 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064739289 seconds)
  done (took 3.134203336 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06058382 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056693212 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057544525 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066636359 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057781325 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058113261 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057781458 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056808776 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.05741926 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058549744 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058016076 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057074449 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058009331 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057497939 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057338824 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057699159 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061847226 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074940481 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05733252 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057297396 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061172878 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057300363 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057193959 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057390077 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057548373 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057564536 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057294994 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058217005 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057447162 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058187586 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.05732943 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061184455 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062204924 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.066569692 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067268164 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062305345 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057690937 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061326838 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058412747 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057261713 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056837713 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05706612 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057202121 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057105201 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066406076 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057477524 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058113674 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057750878 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057558438 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056861789 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05743987 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059234559 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062046762 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058732198 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057276463 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058397872 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057002633 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057591286 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056936262 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057383734 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05710485 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060554134 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.058919862 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0577753 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075425554 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.05872874 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066335729 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059479926 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.05818865 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060553586 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05767879 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072871111 seconds)
  done (took 5.493273552 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.07875361 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082014114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.060963435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06079991 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056723256 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056489524 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063779071 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056582112 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061117416 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076215481 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057556282 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061925537 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062135648 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061409526 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057753756 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061772073 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06569057 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058096764 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058013064 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061640388 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05818727 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064813015 seconds)
  done (took 2.607428709 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.131165197 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063111488 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.097924394 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070692575 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064392585 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070414303 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062491641 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063638943 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063469179 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063483705 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063701422 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06327574 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065736542 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063784183 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063558563 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063791332 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063024232 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063379282 seconds)
  done (took 2.476666233 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07271304 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062881899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085127052 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062702613 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062991802 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06279563 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06708389 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067620951 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062639545 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063310147 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068044627 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06248724 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062331722 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062655954 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062595562 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063106116 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062184444 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062664443 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067093235 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066538701 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066295625 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067042235 seconds)
  done (took 2.658600609 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071023642 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06165938 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075139274 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063378439 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057878366 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057738547 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062651192 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062080589 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062897457 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061217883 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062585803 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058060932 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063643287 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062126278 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.063506408 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062309318 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061994846 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062145593 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061652295 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057957426 seconds)
  done (took 2.468044445 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081318551 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060207335 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0602738 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078481587 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060555352 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059908035 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078397473 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060010378 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.060611289 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080817549 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060487583 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060711241 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078479442 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078757104 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060065405 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078623125 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078672405 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078426891 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060544121 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060500828 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081670157 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.060294996 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078419173 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060031078 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060572864 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06071277 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061478435 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079048052 seconds)
  done (took 3.135933495 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060103507 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059274009 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.05986616 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059881663 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059881701 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059700021 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059934433 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059838555 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05957647 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.059472157 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060742936 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060853157 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060326862 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060385718 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060361861 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060251532 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060827146 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060535012 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060935805 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060795446 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060810992 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060118132 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060528793 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060852576 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061040194 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060222434 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061045385 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060979351 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060203987 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060551878 seconds)
  done (took 3.033577604 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069250981 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068391548 seconds)
  done (took 1.360995094 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058711975 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072419956 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057493312 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067947918 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066474448 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061446886 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066970638 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065446805 seconds)
  done (took 1.737088455 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.062790732 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086120043 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059666144 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060467756 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062692941 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116077077 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.07136887 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.071634756 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071784044 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061264876 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059550487 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070915514 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.05870687 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070789224 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061027465 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067419719 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065358805 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070614306 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070859184 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057446978 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070551021 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059897416 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058055417 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.059853853 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059040252 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06525343 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073592266 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070160262 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066668154 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056839256 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07650792 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058728478 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059246217 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066992877 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06260799 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.057903883 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092318989 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059119724 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.063935507 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057841128 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069791509 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077409555 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071147416 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075403849 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059731749 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060353075 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058093852 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060338233 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061450646 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066884213 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058085533 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064988865 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057542594 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.0597536 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06791992 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058423909 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063681315 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067175546 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070644113 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067929416 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070183361 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072398588 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066637638 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066369122 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059211421 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076784101 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060449583 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070276341 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072240034 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059486393 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07115333 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.05808689 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057043024 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058216416 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090187875 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059858116 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059359776 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058314924 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058235994 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059728756 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067252375 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063567754 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064732211 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061158239 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072917122 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066944174 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058261551 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.064970868 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074933041 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061233196 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057867547 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073821632 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061058589 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057581658 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074783471 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067009087 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059687727 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058520739 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061001507 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070553721 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059025146 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056372766 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065527981 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059543752 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060458381 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062693815 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065175974 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057438037 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067478335 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.062092693 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.058873596 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056098518 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061621018 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058417011 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056580274 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066221372 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057418395 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070726121 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063630412 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070061848 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070700487 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067298115 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07186679 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.056835277 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056478836 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.073569146 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.065685111 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.058266219 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073566997 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.056844629 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.198814521 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058885428 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061054606 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068578967 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058720212 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061001244 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059347739 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064378012 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060731138 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060924238 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062728197 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066574311 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070376494 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059710547 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066928411 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058471825 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073463927 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068434414 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063056438 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063079594 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058923299 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069688993 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064591697 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067573521 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058203052 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059868589 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058574128 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068648403 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067130749 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060604612 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066042758 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063157963 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059334981 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058855944 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059675468 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061734043 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062433656 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059746914 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065960924 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06711434 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.074095168 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067032084 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067249189 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057648594 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057875541 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.06007127 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.05810699 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062797584 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067284067 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072467043 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069611891 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077767998 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058184088 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066997001 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059631591 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074036396 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071096237 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059322578 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06306048 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057391346 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059944772 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068576928 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069092461 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071717292 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071924915 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062769053 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062411408 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058269153 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071896065 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058646557 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06615122 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067059789 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.062906477 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.05817155 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060210925 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066920092 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062532749 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.05915748 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072752496 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.0648716 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057960065 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071307444 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.059112793 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068311632 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058077014 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061627557 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063590091 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06011441 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067659673 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072834704 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057635239 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.05899097 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072772486 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.06029023 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060178443 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066125645 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07265716 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062477732 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065610404 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067994599 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067145561 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062431603 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066793536 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.0594068 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066434001 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061299832 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069148041 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057814942 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075228523 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057156042 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072305011 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.05868248 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067985411 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058769126 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066552641 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.05885285 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073743508 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.05926546 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058561992 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.068551164 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056657066 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066241296 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057222497 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061913222 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06337862 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065870521 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059189097 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065787441 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059360949 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065096022 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061552511 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065475496 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066140209 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061264953 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.056659656 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.201943839 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070073164 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067638042 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061389174 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060907792 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059709542 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068271069 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06084707 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059967737 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066377006 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062899029 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064463887 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060319248 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060721881 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060576397 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067182455 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067797472 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075553353 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066977021 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06548364 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067001847 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058303395 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073849089 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058508642 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06595594 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057318493 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.064935771 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067518556 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058738648 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076520279 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060039786 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065831484 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070291805 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066393833 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061831 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075803892 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062487155 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06667285 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067345927 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063040039 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065079314 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061088176 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06638744 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067373955 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068605367 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059354372 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065769196 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06676461 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060650264 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066219641 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060001578 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066338222 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060289051 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057241852 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062616155 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068908198 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062933978 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063774366 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.05871806 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057380302 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058936227 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065605168 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062100534 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066235869 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073269704 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057390295 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059103656 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058086094 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063801258 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075476253 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067717467 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065695433 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062437635 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057467703 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060204089 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060111464 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058608046 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061713292 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057577533 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058002001 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069851043 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060360113 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062812949 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05861438 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060332444 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067208065 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.063668229 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059028214 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064832852 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.05812437 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063342564 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.057696144 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059943594 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062764406 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057973114 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061684058 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.06830475 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073992259 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06470389 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066503872 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059360167 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065841321 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072865219 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066048936 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059246427 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067165994 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057196954 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075352599 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066951126 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065713366 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066941795 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058848454 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073511927 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062001882 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067144933 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.0723485 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058869371 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.064932681 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057270542 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071699277 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.061487089 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056882745 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064514188 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064696999 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.062788958 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068741418 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058158678 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.065180759 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06254293 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061255363 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.058667705 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059167012 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065106239 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07225407 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058028386 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.201808469 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06614466 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067526038 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064267276 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071641723 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066624395 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060453696 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060930916 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061730339 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059611138 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070297382 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059223044 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062867138 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06287689 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058092927 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065071383 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074303153 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067710959 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067643339 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058241285 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057988604 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07526216 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062339241 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.06252306 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066283011 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067320973 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070910668 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067569241 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074605447 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059085408 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063764841 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070368686 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059793191 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058386677 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062099088 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06068056 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067098484 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068301768 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066137263 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061647778 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065310139 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07201365 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060156009 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063358786 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.063798511 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059259966 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068245701 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066322485 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06704667 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.059904665 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058325659 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061086685 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066651707 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06516669 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066758876 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059389634 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065231259 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071423752 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065414746 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06150745 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058117138 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061520234 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066380041 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.06295361 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057801008 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062641443 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061715659 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065323203 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067398308 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062545872 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057911574 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07492509 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065895921 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067151859 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06037219 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.06052206 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059025571 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058069386 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069007648 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058214728 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.06006763 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062628544 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060178769 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074919309 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066288652 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073337761 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059663673 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062714282 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058185545 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067629398 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062339085 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058879788 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068354076 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057843693 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072969373 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069683237 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.066448201 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058057306 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063460628 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069135815 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072505481 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067732006 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066798863 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062052316 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067518075 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060300611 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.069033885 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058078816 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057474827 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067806446 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066418841 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.06989321 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058270265 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067687436 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059912494 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065717666 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065589027 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.05963861 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.05963997 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059542405 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066080577 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061971279 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066400346 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062307726 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072694205 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.058555116 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067679093 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065642777 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067578465 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070506828 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068600386 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06500501 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058061793 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064534094 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065021236 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.197715894 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063111059 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062463469 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078473123 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059995506 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059802557 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071537089 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.064043241 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057865142 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.064361239 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06274815 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.0685227 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059863521 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.068177851 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062965491 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059823981 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063048177 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063004146 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057501264 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058247822 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058335368 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067519649 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063060669 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058428781 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077065714 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060403248 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067124941 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069293881 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064998555 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060414287 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057557904 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059611912 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070539894 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072917408 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062044036 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066594306 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060297069 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067355471 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057756209 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06694519 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066585873 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083041993 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058719412 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059051288 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072509887 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073071733 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06328048 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067188202 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066790773 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061832122 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078867041 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066778084 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059680901 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068532974 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060792245 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057522685 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057538228 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060101171 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069250693 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058057347 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.060747281 seconds)
  done (took 40.13330405 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094938003 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058978593 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058424059 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058291963 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069850943 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059243601 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058397096 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059299823 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059212094 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060874526 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058861867 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058049688 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068812205 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071520818 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068176215 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062503267 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058550958 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059032062 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058243379 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058776153 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067892091 seconds)
  done (took 2.666221195 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.063760769 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072482496 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069671152 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074723587 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066043101 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062386485 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069634049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062324755 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0697298 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067629214 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069711745 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062546244 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06754934 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067245061 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067774694 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062455669 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069801518 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066102278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062433746 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069407471 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062745391 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068985991 seconds)
  done (took 2.793292851 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058871716 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058876405 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066846958 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057896199 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058130911 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.061724439 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057206066 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062136876 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062054049 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062006553 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066030967 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.05869734 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057380376 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062869715 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057480239 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058554873 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.097709428 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059008233 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058653755 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057637223 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063001476 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06638439 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057380974 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057719046 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062092185 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061076657 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057508141 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06025409 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058538927 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062242601 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058744249 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057733224 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066252533 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06610474 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.062201639 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061920637 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059723326 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058538734 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057946788 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058041831 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065548699 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059537808 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058195406 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059051986 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06640661 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057903012 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057742274 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066433798 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057681486 seconds)
  done (took 4.324749193 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.067824096 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107011215 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063925838 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088649599 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070737601 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064291602 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064251664 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089449707 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.058844243 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.059536145 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.071673945 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071677985 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061083523 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.062487916 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.063397611 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060907927 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061625931 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060219508 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063777634 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060412185 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06388105 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064612326 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.070570357 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.070941529 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062353533 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059911657 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060425793 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.062346542 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070687329 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064075076 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062356236 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063183562 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071506648 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065832208 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060420164 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06139601 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072165595 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06152868 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061319729 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058963802 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060291188 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062416597 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064757054 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072472441 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061410871 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065666994 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061562357 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058877155 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071527792 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060911751 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064699854 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072284965 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062156452 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.061367073 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062315772 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071355701 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061212575 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059735698 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061244463 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.070774131 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059970721 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062283645 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.071916631 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060495045 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064872999 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072324571 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065676954 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062184249 seconds)
  done (took 5.928518064 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066218478 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089091512 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069483134 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069464457 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068668457 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068855795 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068584929 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068376278 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068861072 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069265343 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068412294 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1051253 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064739823 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073118393 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.06867135 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06847247 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.068210271 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069179153 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068461232 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068433506 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068386057 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068993431 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068520466 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.06862916 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071086269 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064414921 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068111704 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068239867 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068971501 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068236707 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.071124198 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069092421 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068597874 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069924313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.071216858 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068128003 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059067536 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068193928 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068169402 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068542583 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065088538 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068899085 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068283001 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064982682 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068478317 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068248643 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069161333 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.071370719 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075771844 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069117286 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.06860286 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069344546 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068036916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06907748 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069669981 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.075622439 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068922977 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069558136 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068700313 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069034449 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068792369 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.075653727 seconds)
  done (took 5.684036519 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071392668 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064891383 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076044847 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059112111 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.056855722 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065921107 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.056666832 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057088032 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063979346 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065349349 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067188746 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067486241 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069830871 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067674069 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06720588 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069298041 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067413972 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066733749 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064908779 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066758093 seconds)
  done (took 2.664165075 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.069663339 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07434047 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063800309 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067864544 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063894846 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067128938 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062607652 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063858209 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064081164 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06366316 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068320714 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068285206 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063960417 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067292994 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068511974 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067548437 seconds)
  done (took 2.40333388 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06369505 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.064776673 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.064273098 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058706148 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062227299 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.057620715 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.057814799 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.056863489 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.057187312 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.070283502 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058061262 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070466669 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059011306 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058128042 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058947815 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064466286 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058274833 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059359558 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059164392 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.06403532 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065327115 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059988625 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062964717 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.05937055 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064188875 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065655448 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061080474 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062770399 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059216427 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059291445 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064520589 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.065769607 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058972055 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059681597 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058240275 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059180174 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059341467 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059769521 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.064800583 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059192866 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057764233 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.063800619 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059776419 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060309866 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058301341 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.059568941 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.0585467 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064554207 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059392636 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064349985 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059235413 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060827288 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060214152 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.06608134 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061410513 seconds)
  done (took 4.708746222 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071545351 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062837534 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058125166 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05801474 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063484656 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064038939 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063547641 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063439635 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064039835 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057740197 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063588216 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064458172 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063799476 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063013034 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063684119 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06292276 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058133619 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064313843 seconds)
  done (took 2.482977073 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067968403 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062097961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.065914175 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06201056 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062055051 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06168366 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058770642 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058097603 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058090685 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062352271 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062675564 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062463415 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058115723 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062233388 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063266832 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062842752 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062569583 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058576814 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062555029 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058136149 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062238225 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058028141 seconds)
  done (took 2.697887543 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083497581 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079858109 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.118368435 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075287321 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082690936 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.067392292 seconds)
  done (took 1.853943411 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086443753 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097175997 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062220331 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062073623 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069818731 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064763357 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064994358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064815826 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070057889 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068453339 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064699679 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06986833 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071455151 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067767776 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07174862 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073572843 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065907281 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065674956 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062523329 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074191833 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065729721 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07130651 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065938731 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06577723 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066053964 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067933568 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074726146 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070689399 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068092122 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071854511 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072637126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064609483 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06995648 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068610404 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061771247 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070174399 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064981924 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074226525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071313395 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066715414 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061657089 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071299993 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071910396 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068293536 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074735 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06646945 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068361616 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066667037 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066929 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076802919 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072189535 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068586248 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072430648 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074754373 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074689196 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077225087 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071008378 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068639257 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075864885 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069824134 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066465666 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070490488 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06664325 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068856046 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072342447 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066807546 seconds)
  done (took 5.951360295 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093185417 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062398576 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065736967 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068873089 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066317589 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065220944 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064772144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065708591 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066218862 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063677534 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099258078 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067033783 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067774005 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068239528 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066629647 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06642383 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066431761 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067991896 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063581834 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076852296 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066594058 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068069711 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068111546 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068347905 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07053212 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074540386 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066437641 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066418938 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066313607 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066427794 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068095802 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066610557 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068070404 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06343592 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068647875 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066530896 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066078357 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067695764 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066106487 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072047235 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068017833 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075053874 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06619678 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06634408 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070485267 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066308932 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066324693 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063491979 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066431482 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063550599 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0704335 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071080105 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070618543 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068861044 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066883404 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066681298 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067257459 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067302221 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066384828 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074380578 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067937937 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066455063 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07674736 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066433104 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06674492 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068025041 seconds)
  done (took 5.889664792 seconds)
done (took 122.201860821 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204921244 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179639464 seconds)
  done (took 1.716204642 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069795852 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094007355 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072306775 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130115008 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067357296 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100798942 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099646163 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071079576 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066640658 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066967151 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067403282 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070948688 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13465805 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067489836 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067030506 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069237345 seconds)
  done (took 2.667537763 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100618169 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173335073 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106753879 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06559789 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100802128 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071543888 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064785156 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074874969 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068511964 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069583287 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071797399 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070171805 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069802281 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07217519 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070180104 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073110487 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069736275 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073447095 seconds)
  done (took 2.819491772 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089149638 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081649044 seconds)
  done (took 1.528350226 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148800957 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101273803 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.138107766 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.30726309 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.125406072 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.122299384 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126104823 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.120657948 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106138124 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.117875438 seconds)
  done (took 2.766158574 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097364194 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.167184045 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297734204 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113621848 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071134406 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093960284 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115491511 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076777962 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075162701 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074608637 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077209903 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073887939 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093851457 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071509093 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071544069 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071623697 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.095155737 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071333217 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070462457 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.070877333 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097521143 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06743796 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.071933846 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07098783 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072989403 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072785561 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068781415 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067551979 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073540719 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072649334 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075862652 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09364176 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072994819 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.094425245 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071467486 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.094816457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069996396 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069445198 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070705596 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068852393 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.073029926 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07261333 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074679113 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073809256 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068233651 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071855608 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06814348 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066235582 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074192875 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066727482 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.073662266 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07271783 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.093311942 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066207436 seconds)
  done (took 5.853721843 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101874778 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.100164309 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066463089 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107574217 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09861158 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065679427 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.098197587 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093969939 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102558887 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065121911 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065092987 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064820417 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072159148 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.074822439 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108933994 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101048266 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067079191 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065548119 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101569609 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100670463 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064371501 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094780642 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093916106 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100465343 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06367872 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065500404 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064222147 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064838951 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069536568 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.070213058 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064469387 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072150757 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.076240416 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070834091 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064020019 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063956592 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064429141 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07126743 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072140077 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071827521 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07059399 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063606676 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064087543 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064820632 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066763543 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063457884 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070080074 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.071211433 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.070466188 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064029025 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064541753 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.063861855 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064362473 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070928318 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.069704474 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072256042 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071307284 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063875202 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063932077 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065829683 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072274457 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072335478 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071645259 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065036512 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072056726 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064064316 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072915631 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075857081 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064074118 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064458589 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064493992 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064267663 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064388065 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070407308 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.070000298 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064742363 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064330078 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063733516 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072187512 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070020607 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063934599 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069385794 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063539393 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064030753 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06453929 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064539404 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.069660917 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07177061 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064722619 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063541682 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063865901 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064016445 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063458752 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.069848094 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070539547 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.071056396 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.070115578 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064596745 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.070792539 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069557327 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063974202 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.069187587 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063007843 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063543834 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063126969 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.068872038 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.068311778 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.070826428 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062998627 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062718368 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068488455 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.071302222 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06301672 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.068572383 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.20421871 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072606245 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065197758 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07666122 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065369262 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073072129 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065693343 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073063073 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065305573 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071236632 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065203552 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064148832 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064549999 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.071384636 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064945747 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064598892 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065130648 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064860356 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073318914 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074292197 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065208306 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071129009 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.071171643 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065250298 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071502445 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064441409 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072413954 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064905582 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064853387 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063983601 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073502962 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064932538 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065531189 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065846426 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075112109 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065361801 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074116184 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07135193 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065205091 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077162155 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07305784 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.070417053 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.073032058 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065156109 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06463999 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065203976 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065659381 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070085149 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071002771 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064940744 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064939239 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070404126 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.073201038 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064003032 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.070505993 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070204416 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.070445854 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064669265 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064562779 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.074438903 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072707368 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.070538694 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070401482 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071061478 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064472835 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070387688 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07050034 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064583875 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076000448 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064602526 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.075672839 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071907321 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069727383 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071059453 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072238294 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077017475 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.072922189 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.074886344 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064343887 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06437851 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.070418576 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064110994 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064264788 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.070166612 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065026427 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065027984 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075710766 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064723681 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072661136 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063955586 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071393609 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063814461 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064736919 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075146711 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064556688 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064862497 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070601301 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064273585 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.070134078 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073405342 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070667394 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064156907 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064492729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071260944 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070734437 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063177616 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06271285 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064176055 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.06837613 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.068260266 seconds)
  done (took 17.208396177 seconds)
done (took 35.931511194 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.192312786 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150747814 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181980322 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.107532412 seconds)
  done (took 2.089127997 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.088028517 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.092028149 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.072296556 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061479077 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.07626764 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061046652 seconds)
  done (took 1.852176615 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.254552477 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179071547 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.163310815 seconds)
  done (took 1.989854619 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207102606 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185436101 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460114105 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281599281 seconds)
  done (took 2.626299204 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.123159567 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.074462708 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059187273 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.069144099 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.099843126 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.127637184 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.081477044 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.102389661 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07070216 seconds)
  done (took 2.264043971 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.122163146 seconds)
done (took 12.366173809 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.21565798 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098497558 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.236645657 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069875504 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.199718585 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066824359 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063737122 seconds)
    (8/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.177479173 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.178524195 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0834101 seconds)
    (11/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.16981827 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162483948 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.11102753 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071834605 seconds)
    (15/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160742719 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.150033517 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086992389 seconds)
    (18/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075502786 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071927132 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083161085 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069292467 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085166455 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.158224678 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.06962342 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.270547344 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068218342 seconds)
    (27/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.224804381 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.223753164 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.072143372 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146254606 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061874484 seconds)
    (32/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.172031 seconds)
    (33/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.089770943 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.145548181 seconds)
    (35/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113686463 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.221293902 seconds)
    (37/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067590892 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070674581 seconds)
    (39/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.167223602 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072070173 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060202535 seconds)
    (42/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066359445 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072833067 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.153115839 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069417692 seconds)
    (46/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.18912794 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074791768 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.141565892 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118818428 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.152243711 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.085982441 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.082799637 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.082728249 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.062507882 seconds)
    (55/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.20639487 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072580522 seconds)
    (57/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.142457632 seconds)
    (58/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062436906 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.191110526 seconds)
    (60/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.062252255 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.131838785 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06103976 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070234251 seconds)
    (64/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066179699 seconds)
    (65/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.18030872 seconds)
    (66/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.083660108 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.05981917 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086562427 seconds)
    (69/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.236496813 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.198222638 seconds)
    (71/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06865538 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06993566 seconds)
    (73/309) benchmarking ("sort", BigInt, false)...
    done (took 0.238025684 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071429017 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.063403345 seconds)
    (76/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.173128311 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.062123288 seconds)
    (78/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.067375825 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.208269573 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.250609287 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084113555 seconds)
    (82/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.195642588 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.213337416 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.062501335 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061822277 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.210387162 seconds)
    (87/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074611966 seconds)
    (88/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062253033 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088699759 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.085586336 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.068647554 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07152725 seconds)
    (93/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069899646 seconds)
    (94/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.14706056 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070257828 seconds)
    (96/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.074145551 seconds)
    (97/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.061238521 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070207653 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.083798262 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147051402 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.061365546 seconds)
    (102/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.062750502 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.062733203 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070183666 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09006545 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068325818 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149888293 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.061462796 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084699796 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.068264545 seconds)
    (111/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069574884 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09044602 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.165751358 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199083133 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062486488 seconds)
    (116/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07215396 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061356288 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06208333 seconds)
    (119/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073571204 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.179980952 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110458343 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080179508 seconds)
    (123/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151779643 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069474757 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.062753615 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068356187 seconds)
    (127/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.14557957 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062661179 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063128237 seconds)
    (130/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.061434456 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149489091 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163237775 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071641351 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069667479 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127637131 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112266474 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.138231716 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.062102879 seconds)
    (139/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.060393674 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072422407 seconds)
    (141/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060271857 seconds)
    (142/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.063889623 seconds)
    (143/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.121210144 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061492395 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072864821 seconds)
    (146/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062114561 seconds)
    (147/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.136131662 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069151893 seconds)
    (149/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.063711473 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061680786 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.076622838 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139491863 seconds)
    (153/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.061443462 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.080331011 seconds)
    (155/309) benchmarking ("sort", Int8, false)...
    done (took 0.159758774 seconds)
    (156/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.067759756 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061469961 seconds)
    (158/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061234756 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.083460947 seconds)
    (160/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172555652 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.179883847 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059763759 seconds)
    (163/309) benchmarking ("sort", Float64, false)...
    done (took 0.127824025 seconds)
    (164/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06107499 seconds)
    (165/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.068977963 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112889902 seconds)
    (167/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069327025 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.060615334 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062316435 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120907661 seconds)
    (171/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.141030667 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.0702858 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.141083811 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.068731158 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142326843 seconds)
    (176/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.139349321 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068959649 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068494026 seconds)
    (179/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.154432607 seconds)
    (180/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.060174434 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.059289402 seconds)
    (182/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061841003 seconds)
    (183/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.133884395 seconds)
    (184/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.063762711 seconds)
    (185/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.059880707 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.158922305 seconds)
    (187/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061732591 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.13650447 seconds)
    (189/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068281787 seconds)
    (190/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.134972189 seconds)
    (191/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061904445 seconds)
    (192/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061476099 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062982707 seconds)
    (194/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090896872 seconds)
    (195/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.222866117 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064766216 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.061024468 seconds)
    (198/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062958172 seconds)
    (199/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125682213 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062475461 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086601906 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.072720641 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.061942852 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069152713 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073714216 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064168824 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066119204 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070296491 seconds)
    (209/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064529016 seconds)
    (210/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.081998245 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065348271 seconds)
    (212/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062562338 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118041003 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070649608 seconds)
    (215/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.071145495 seconds)
    (216/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173167351 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 0.130863483 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.074460366 seconds)
    (219/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.062480814 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073885123 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074502396 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069878485 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062888277 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061688507 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073454254 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139432875 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062123466 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062807395 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070690407 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085995449 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085259263 seconds)
    (232/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.0646799 seconds)
    (233/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.142349806 seconds)
    (234/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092050903 seconds)
    (235/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06295544 seconds)
    (236/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.186062503 seconds)
    (237/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.063875498 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063954309 seconds)
    (239/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064383102 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07692356 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06368489 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.063796513 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169532725 seconds)
    (244/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.06749757 seconds)
    (245/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.062623507 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062189746 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063961128 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.145371665 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176787685 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06448999 seconds)
    (251/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.065894082 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062343035 seconds)
    (253/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070869144 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18328207 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.074573512 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.062894576 seconds)
    (257/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062171617 seconds)
    (258/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.062681177 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.062463524 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.062234972 seconds)
    (261/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063753156 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120207225 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124909625 seconds)
    (264/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.075546646 seconds)
    (265/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062575458 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060536243 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.108235224 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060620284 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088846103 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.062561637 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069625159 seconds)
    (272/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07430221 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062161864 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062126773 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063605611 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140301511 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064245874 seconds)
    (278/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065080775 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.061874993 seconds)
    (280/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.072612819 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086147005 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061839322 seconds)
    (283/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.067031948 seconds)
    (284/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062726613 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065480736 seconds)
    (286/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062990633 seconds)
    (287/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069084366 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.088192433 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061613779 seconds)
    (290/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06379973 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075078644 seconds)
    (292/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.062925496 seconds)
    (293/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.063967601 seconds)
    (294/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063608317 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063654694 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120468859 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07051584 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062327151 seconds)
    (299/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064355694 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063343503 seconds)
    (301/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063987305 seconds)
    (302/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063541556 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063919989 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063130637 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.171871345 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.061172877 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061418946 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.076320457 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.060715648 seconds)
  done (took 31.579589003 seconds)
done (took 32.990537671 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082494008 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086244888 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069363045 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.081039519 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.077439074 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091726945 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070299486 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076008627 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.077287036 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07783439 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077259144 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071029558 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072928336 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073814411 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070900884 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085824969 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077795695 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069624896 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070157038 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060708552 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069935287 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061898538 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060353296 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067598183 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.072741795 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068052932 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070654722 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070630468 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06160311 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061588584 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066164957 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070274515 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064022434 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073379958 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070102527 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069647903 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071365155 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074055374 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.061199659 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061685699 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072108358 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062665917 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071032931 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069403612 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068258172 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.06982069 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070122039 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074738172 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085864671 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067726631 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073921523 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073037706 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073715834 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067567859 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066973384 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069903246 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067902522 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.082966263 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070294117 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065710873 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071433153 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071072347 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068494053 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069936567 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069745546 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072498791 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073154628 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068342036 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071771618 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068868323 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061155244 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069955036 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067435053 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063361688 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075117999 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076452561 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061063167 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067291921 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070885743 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07124403 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062666999 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067101176 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061704607 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067265431 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065121267 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067518853 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06656398 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068428741 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06061512 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069643645 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068958867 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069635359 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061232818 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074526665 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062652344 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069780755 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06307341 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062398767 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062051487 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068455132 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063149874 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067980251 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071602828 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062075118 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06814382 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075946521 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063082656 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069736306 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062518893 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06258302 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07346213 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073966345 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063344016 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067155625 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061039977 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066919683 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060505835 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061159362 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061652449 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061948441 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066851448 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062027319 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065509398 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067045664 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07354782 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061744902 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06633966 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065321748 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061269256 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06820757 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061679204 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061759947 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.059764061 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.073637431 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06497937 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06155293 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.066738213 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065189837 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.068988735 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.05942763 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.068973729 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066475298 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.064628687 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.06735143 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.059366475 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.071662207 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064690521 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.205714289 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061872393 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062524312 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061017818 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061932666 seconds)
done (took 12.093535405 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063068144 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.087576516 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069731443 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.07715485 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073555257 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06266033 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065527755 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.077240332 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064555519 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.079624195 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.083330825 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081693319 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088719172 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062241392 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063830635 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064424819 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062384385 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070736749 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077834768 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085669999 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.092581431 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063439971 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.072200719 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079071305 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074615476 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.07995579 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064089306 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063325288 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064999023 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079365337 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.0859757 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061712816 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063477968 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.074764516 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075030775 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.067734147 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062934556 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.065584062 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062911547 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061893086 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063972293 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.075288994 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.06782676 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.066052279 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06494258 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064565777 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06423454 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.066529148 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074828506 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.064944705 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069180121 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.073542499 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064538248 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062479471 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06058759 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065455487 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.062262092 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062487162 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06235723 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061873787 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062640467 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06456872 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063156415 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063132777 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065166447 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064890063 seconds)
  done (took 6.053697049 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079552116 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090225908 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078444402 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078422117 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061949877 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062746425 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062877037 seconds)
  done (took 2.029158017 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063369354 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075138167 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078159968 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078305126 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070373595 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.080041706 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063086966 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091365404 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.061627342 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073651444 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.105680065 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079096347 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064895945 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073565362 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06243677 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.068961531 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062794442 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070664893 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069929598 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077948663 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066316361 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089224536 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075804426 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063111512 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.08171644 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.066282948 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062022556 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062935662 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063899206 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063334295 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063676087 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.101264974 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.065553333 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073508136 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065108171 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062778381 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068739378 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068159135 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.066745309 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073416295 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069206937 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065602191 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062603604 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065786454 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066905879 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067969384 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062410874 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064558583 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063694982 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073541728 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061662476 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.065896144 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065684294 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066815399 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068921171 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066657637 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070500473 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063991673 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.073736728 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070228606 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063558994 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070634161 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10123021 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.06707859 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.069392135 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.066316548 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.065835434 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067455524 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063488595 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064267903 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063735224 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.069457738 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061981317 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06448879 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065705327 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064450719 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066249342 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.078402519 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078649238 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074493841 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064240766 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063559549 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06589781 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.078531475 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066309505 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063433682 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065621885 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061648148 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067456141 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063451384 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068668675 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.063838587 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070795402 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064609455 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066101484 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070195799 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062798265 seconds)
  done (took 8.228602201 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065460586 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064014985 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06499446 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063562213 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063488584 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064020492 seconds)
  done (took 1.93026599 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.084378116 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.063402693 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076873411 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063224072 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.096698442 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.069067506 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.069699645 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070654618 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.07512811 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074931906 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.069444303 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.071649472 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.068976011 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064341525 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.068437033 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.063720718 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.068825468 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065829992 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074630016 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064345356 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075125281 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064315687 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064524776 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.073648426 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065260998 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06338793 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063158341 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075019352 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076490586 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.070225029 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064012467 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065274099 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070003994 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070369001 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.068837175 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069998819 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062404125 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.067830015 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064874052 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065838339 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072165341 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065574768 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066490518 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070137972 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.071270492 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070758896 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.067889662 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066555734 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.068939872 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068705316 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068151694 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063809026 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065825239 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068329098 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070797736 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072444718 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07002174 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071180361 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066258951 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072318859 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064798117 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067311068 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071558921 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066805126 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.067910938 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070129818 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072319664 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066862354 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066717015 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064940354 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070150665 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064792248 seconds)
  done (took 6.490212353 seconds)
done (took 26.236111137 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.948037432 seconds)
  done (took 2.443562577 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.547881766 seconds)
  done (took 2.078751645 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.685086286 seconds)
  done (took 8.213474433 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.277505477 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.308562786 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.694886329 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.125323073 seconds)
  done (took 2.970153239 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.71381569 seconds)
  done (took 2.255926795 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226191293 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216376727 seconds)
  done (took 1.994850984 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.338253793 seconds)
  done (took 1.870833051 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.080324179 seconds)
  done (took 2.610547964 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.212503688 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.152280261 seconds)
  done (took 1.903110572 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457824517 seconds)
  done (took 1.99256379 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.076391686 seconds)
  done (took 5.614163186 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225195124 seconds)
  done (took 1.797831745 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.227240634 seconds)
  done (took 1.768329766 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.856491293 seconds)
  done (took 3.388549587 seconds)
done (took 42.443036125 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078652982 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081417058 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081502464 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077305798 seconds)
  done (took 1.834455096 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069930381 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065590549 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.06942836 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069758469 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.06736092 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068715772 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068536362 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065446277 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067541018 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065390234 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06395917 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065608867 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.069296717 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067287686 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.06924162 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069549993 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065459126 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065465746 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068129148 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066665239 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069745837 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067610139 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06618493 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067944641 seconds)
  done (took 3.158559304 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07382373 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.067956741 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07117468 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067274018 seconds)
  done (took 1.825560738 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071280411 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.07911721 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.081267446 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.087848189 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072279741 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.071493768 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.077515167 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.079461765 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062025699 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.081036417 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064311689 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062946508 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062704273 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.08166508 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.077524351 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059442174 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.059780084 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.071193732 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071207381 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.07355954 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064417297 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061841431 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073125852 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.071155755 seconds)
  done (took 3.263888079 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075772106 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061857976 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.074118204 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087016448 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089362406 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061692261 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07455121 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089064784 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121512369 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061527748 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067274065 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061762847 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.102122134 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061780043 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07585242 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.102893333 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.105447611 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.064937322 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093142036 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061258989 seconds)
  done (took 3.146074553 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.0729172 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065597083 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066215537 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061912531 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07397678 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.068814008 seconds)
  done (took 1.965750324 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064842301 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064101582 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0641056 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063361919 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067518482 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.063376921 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062445486 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063585563 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063421474 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063307095 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062243672 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062082878 seconds)
  done (took 2.312928398 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.154158264 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06505681 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06620836 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06382258 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067761159 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062765514 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076559163 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064698402 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079581755 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062818819 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063412819 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065035916 seconds)
  done (took 2.442794268 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090096458 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088483531 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.121533978 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104045844 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085143809 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.086078114 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.137584137 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.126405255 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104190755 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.065959814 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077960999 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097091179 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094072647 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130625739 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103338324 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.068134752 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.093386827 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076102506 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097490104 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105266502 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103008706 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105411481 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08384937 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094343736 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09838806 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106040137 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.066786034 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066569693 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128732497 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.092892089 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.084414987 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.087193768 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102271875 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.064705337 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081005977 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.093593053 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078755166 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095522735 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083219947 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089935234 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072197684 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.117882379 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094085269 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100500911 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112630372 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087912452 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098501966 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093745225 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077497982 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.10904125 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089697487 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086858547 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071773814 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.14536249 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085969525 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.098382944 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103792342 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.07654881 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082475555 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.087894467 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.114640366 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.090863181 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099524584 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.244750605 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.084250385 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087318283 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.127021865 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080991433 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098175819 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119858059 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.085228129 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.071503995 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.086003971 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.065299456 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.094546068 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098340144 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090656656 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106158443 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077663841 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117271135 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103060206 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070084736 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.108306004 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089363556 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.148187643 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095376814 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099177565 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089759529 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.144802039 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08380428 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078011738 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090902239 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124600034 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085262843 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090882007 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.119394915 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084673613 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07848991 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071214337 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080686887 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089101949 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103249777 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092234336 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084496749 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078140693 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084787369 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.070399196 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075779799 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.091728495 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082838776 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112108956 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09815772 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107969444 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.07447293 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102306947 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.088141281 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123728417 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.111392503 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.080327002 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103654704 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127307608 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103111379 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080317845 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095328942 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107993874 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09859046 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.083734188 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126730919 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106159469 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080189806 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.236092014 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088020301 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.100955148 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146515029 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086463398 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.101278762 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.129494232 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.100486878 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087580019 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079180594 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086214937 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102324344 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131243999 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.087624407 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.06678174 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089754494 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12311988 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071647448 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090264747 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.084319197 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.07989106 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076314576 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.063973448 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095850751 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126901272 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108367517 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094309278 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.089627781 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065109493 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095159562 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092578859 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138892551 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110758251 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093299228 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.087000396 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095325493 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075793966 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.12403862 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.122889884 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087043779 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087494411 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118337589 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085084976 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.095910118 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10287259 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100568816 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.092869781 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.132521291 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117503191 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.110880311 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100138285 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11811952 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077156296 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10329781 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070164381 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098579727 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.073133391 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097148807 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.07381883 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106318855 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074780429 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094317028 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.064594644 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.225228302 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.101250341 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085349101 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0822531 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.126175346 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.118036701 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.077928744 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089277526 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095940402 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093222701 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.101941423 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.082784152 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087096867 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074388456 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.07806427 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086736566 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090624334 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099309324 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074345022 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071037861 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.133052155 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099382476 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085792538 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08704459 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.112011561 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079481293 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.080237259 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101980595 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.128864492 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.112847289 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.07629926 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.086819905 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.065468472 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080009608 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.071617726 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104347232 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070096841 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106734969 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064881476 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.124144496 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0828623 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097140264 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088730751 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118345092 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081420082 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.118260186 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082773913 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103670769 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09041873 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.086031294 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102644791 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.087799082 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095244533 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099226753 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081575748 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085585396 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117767532 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103190358 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110924998 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103195304 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130357368 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103494593 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069971578 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098131023 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086611181 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145567704 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093884792 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079718364 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082007965 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.251010796 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080035519 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136446159 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083213743 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.078839538 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.109567422 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.086568588 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.087023288 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074719786 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.099947561 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.084777227 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107536435 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.095869656 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.091419709 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103653625 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105297559 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08380662 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083717777 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.119667601 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.12289763 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.096460534 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082968001 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08467894 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095363132 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090932485 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107035195 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077202162 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071813484 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.064381735 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067981383 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.112301833 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099984578 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090189085 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089471737 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.097901171 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.067873327 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084921402 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086264887 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.07970951 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085315539 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.108598784 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098387831 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.123565234 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.0964799 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088155295 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.131608797 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122766146 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085515563 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088628261 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.0921439 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072542078 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.142554673 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110032352 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.073318176 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078365229 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073174112 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081846395 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067606265 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101247518 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101298746 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072625451 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095219365 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089699555 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.11300283 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088633943 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073515402 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.076629632 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.069846648 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07022019 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.092885281 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.072574944 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073217125 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.117572488 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.250086829 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102208098 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077528726 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072389539 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126842177 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065839616 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127412315 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079681221 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104255544 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.076708302 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076031903 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086665351 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100556519 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104607951 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.110454779 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068530866 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100722172 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144496239 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073175572 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071691763 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070936127 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107410569 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082911166 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139054888 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086487776 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08396209 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072498984 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118336324 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098705889 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078650535 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118979104 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.076081978 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067698844 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078274485 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103804472 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068393818 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070859726 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107501706 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.617999143 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087005388 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073136158 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080108268 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116099848 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078337461 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103731214 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.112307871 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101708846 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.175831374 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069843787 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087187868 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.10066842 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.094007463 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088068913 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077333772 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08639864 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085214313 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.07594938 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101949175 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.076704716 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082844328 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.076264391 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.099469907 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.125147374 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082192234 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.098612121 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083100029 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081908662 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09343886 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100968913 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.097353296 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.234862095 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085466255 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103632594 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.079779477 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076766914 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095472517 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073331246 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074830856 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108385733 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.080598846 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089463661 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.100060211 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.08146718 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105401844 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113934447 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110000031 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.094499998 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075070374 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081735211 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.083514564 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069923149 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075487488 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072079056 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066381692 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103298808 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081665317 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077478313 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.095774927 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.10291513 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096934289 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103516572 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085846113 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091275778 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097309067 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.121898543 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146537645 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.095578615 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.115249403 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.127031033 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074245984 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.071851721 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.076617919 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127017649 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.076856339 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087749835 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.227180802 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073610714 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077170188 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087588322 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103581206 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07879398 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077182781 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094415803 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106864374 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080491849 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077789689 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089514627 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.10080448 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.126569186 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084782946 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.071267489 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10426892 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.09810332 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.118547166 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.070228921 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078371262 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.124287225 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083042424 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096557744 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074746431 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113995905 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123685217 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070076929 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.237667858 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.067977709 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085707156 seconds)
  done (took 48.348948471 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151328155 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.151158432 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078300705 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.09367292 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.187894504 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.203572884 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.114245758 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090101898 seconds)
  done (took 2.741568757 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.063678495 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.078057247 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098060597 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079561915 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062568633 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064092904 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.188951334 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078113811 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062314494 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101278698 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.070954537 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.064550379 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.346333781 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063770076 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064781522 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072236143 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063745592 seconds)
  done (took 3.282705298 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.346950022 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612702722 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.313217329 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07143706 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.91129902 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084549117 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.133289498 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133008458 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077509664 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544584812 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.363666624 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128229418 seconds)
  done (took 18.389364631 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071652797 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071049842 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074553585 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074036941 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070276909 seconds)
  done (took 2.027331623 seconds)
done (took 96.301790388 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077840264 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.162608515 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.064230547 seconds)
  done (took 1.924760185 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078435285 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076464107 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.07680953 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074633339 seconds)
  done (took 1.979905183 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070555733 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07157194 seconds)
  done (took 1.807215993 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231096267 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.156792633 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085800056 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.077789757 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077266242 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075196081 seconds)
  done (took 1.905152397 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.06792456 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067978632 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068119858 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068513832 seconds)
  done (took 1.936729931 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063841534 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062729275 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065143081 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067974 seconds)
  done (took 1.92483663 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.07856044 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078769034 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07313405 seconds)
  done (took 1.89524134 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106286289 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094270682 seconds)
  done (took 1.864475017 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075145356 seconds)
  done (took 1.745115102 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.083491005 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.089375662 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138631169 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.103477432 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138194951 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123432035 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.072571262 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.073616696 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069747051 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.067904722 seconds)
  done (took 2.628349699 seconds)
done (took 21.827216607 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0750326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.357144212 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355384326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081742032 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.664434384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352795013 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96307348 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085737214 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.092963518 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064138944 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079810443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.643729555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.955369752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317825216 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.939469863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319968591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646629959 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065425742 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063842085 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064395227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.942590783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063442577 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064440806 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064404028 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.644110497 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368436692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064787284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320054829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06358366 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066213284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351385364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065210506 seconds)
  done (took 15.913513983 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066402779 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115459874 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068627421 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079163695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066560432 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065417522 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067047176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064322822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.103134782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064792542 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080410013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064184975 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068422634 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066163879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0836864 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065239758 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066371609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065435457 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067333586 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06569613 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081898083 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064578373 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065702068 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065450049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065548605 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07732452 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065975335 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064959844 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065614824 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067438729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067767903 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066087629 seconds)
  done (took 3.955425941 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117442237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120997554 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068959301 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10354516 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112822075 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066088861 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144947448 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085748406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108758099 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064628755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080799916 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064272907 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098928635 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0664421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084394432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064936706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066892128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065171078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064823114 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065970008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082806518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064944501 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065725075 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065512477 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066715608 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07910074 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066687118 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065232509 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065068878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068018138 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069001449 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066472886 seconds)
  done (took 4.227272295 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065894515 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068232927 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075458601 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076510795 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063396652 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065008239 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066475992 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063871168 seconds)
  done (took 2.231688158 seconds)
done (took 28.011015424 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074245936 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064976903 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067254644 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083932566 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.06933778 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066780945 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062727687 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.069885653 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067053403 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.067347851 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069226512 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062899986 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.066198479 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060812126 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068029614 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062343025 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068614396 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.06938091 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067009473 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068886388 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06452205 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.067685316 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07048391 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067368493 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067480729 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067114745 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071018736 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068401303 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062948042 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065549805 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.06483453 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073079673 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068875715 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.06913728 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063182574 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062799722 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067267247 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064705127 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068764853 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.070955932 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064988031 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071561698 seconds)
  done (took 4.495442496 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080209548 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085399721 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078329591 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077563433 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095950284 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.078322539 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082501771 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074609669 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073068818 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081212547 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069442237 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074220702 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07525672 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067873166 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07350142 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073569296 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077909328 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.071967529 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076777323 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077027909 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085148005 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071109445 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076901626 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077426323 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070065143 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075988599 seconds)
  done (took 3.696917072 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068210461 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082731386 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087660962 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149757049 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105803864 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077843977 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077249039 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091746603 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094925514 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064250087 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067411596 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.08965518 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090117427 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070237343 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102246245 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.080577287 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.074751769 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065706672 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070621735 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09566876 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085771332 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081674397 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094641157 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082679888 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063398759 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072254013 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069877329 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078239689 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071083928 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075626387 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068268145 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067167296 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.064150533 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.074623219 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.068054632 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063067157 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085817687 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075242006 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077318244 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105043448 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072983546 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065198714 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091821784 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123851677 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063571199 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.066638075 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067373185 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076045641 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065212617 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091297753 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081155558 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063825066 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.081343599 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06511344 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065202265 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078850237 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.065086226 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.065402234 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075499755 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069192803 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082545283 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068001115 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082274158 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064362619 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074273044 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065084129 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064902285 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062649033 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097397815 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070423852 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111993912 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065215337 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062042071 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075213291 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073960264 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.06982592 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063675732 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081047806 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074508883 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067520181 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074601972 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066167289 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06722796 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096885921 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062824011 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061719024 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062059232 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065737716 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066700116 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063712362 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076327928 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063029845 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067141332 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.077526516 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063523339 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064081516 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.065909745 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065216908 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.063419674 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073967442 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067379427 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065226629 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075102386 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065142881 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066826311 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077966681 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072276531 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063727299 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064865402 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065615454 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064819243 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067753407 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066897347 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065599777 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069131993 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070639825 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068646402 seconds)
  done (took 10.427090611 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.154134189 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.145755211 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065246752 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.140136957 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072062605 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068250767 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.140296117 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082286411 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064248311 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065437497 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064004235 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.090803358 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.0860412 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.09709226 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068224699 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064981186 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086171591 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.09485984 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.142189884 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.137797858 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086647925 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071142357 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066632052 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065709641 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065858079 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.072511053 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.079774939 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07182305 seconds)
  done (took 4.242330745 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072222534 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.089732443 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068785327 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075231362 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.082632486 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064742035 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066125305 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065280974 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078180003 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.071876255 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064212243 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.06878523 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067817995 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067154013 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065073941 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070354592 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.070808158 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063397011 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068201411 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068404186 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074095884 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088421508 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068552495 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064202513 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.066475364 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063770642 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071403984 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.073709671 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.063555578 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.077233295 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061538108 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068398837 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077522393 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064787167 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.063758766 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06484987 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06436637 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064767607 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064664978 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062108902 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062643876 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068928658 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063099536 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.070184493 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077981569 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071091815 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065432362 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066646381 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066352763 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061173115 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067075464 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067137289 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.066676498 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07148596 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067470517 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066591232 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067861246 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088580366 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069738374 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064171763 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063425856 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062584714 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065082639 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072203909 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08059264 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065271635 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062667136 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063905718 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068495967 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077618434 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063908722 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068934301 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.061857996 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06413507 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066323846 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066458021 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065246977 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063111498 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063780899 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064311769 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064627986 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063747124 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.063739211 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.06736217 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062472965 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062228821 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06455408 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065949321 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.071049887 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062731974 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066604156 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065141319 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063139806 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066768468 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069157951 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066742831 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077473097 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.072656163 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064787821 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062464013 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077547598 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065581974 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063340688 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069350657 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067244206 seconds)
  done (took 8.869593827 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08537841 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065819716 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084306322 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089432896 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074435464 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070428181 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078643657 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066321482 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079476057 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063699192 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073055526 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063080788 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077549044 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073237554 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06556936 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074219802 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067330108 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083102864 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078049591 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062811017 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072482407 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075358936 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075774162 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080744057 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080298426 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081043181 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076145719 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066971539 seconds)
  done (took 3.821720744 seconds)
done (took 37.232399332 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.769646151 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.931346761 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.756835149 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.960659998 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.848985676 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.932367356 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.801725608 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.755093992 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.991964352 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.816590699 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.038904255 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.180525684 seconds)
done (took 65.538395019 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.812714369 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.923700304 seconds)
    (2/2) benchmarking "String"...
    done (took 1.980790085 seconds)
  done (took 5.597075748 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.896164748 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.390608467 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.0197029 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.754384559 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.764487359 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.188175581 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.540630373 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.19815946 seconds)
  done (took 30.547745442 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.893950597 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.980080187 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.43295306 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.469817077 seconds)
  done (took 15.517602457 seconds)
done (took 63.15934708 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.798826311 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.75851404 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.796210476 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.792295045 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.767225247 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.76119523 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.763915842 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.761911935 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.769032096 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.86424228 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.759344093 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.770258649 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.760901054 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.763268609 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.427001018 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.817606401 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.762146268 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.772223984 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.764817818 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.786847052 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.763799867 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.760768512 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.222883864 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.944837227 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.365315053 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.057593661 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.190035069 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.150090966 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.769482509 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.756182844 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.837663611 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.048502355 seconds)
  done (took 203.7782428 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.75952706 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.602917919 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.696439124 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.764959745 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.050721322 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.938945371 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.855792508 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.161227848 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.764995482 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.764616861 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.896963011 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.762878881 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.927486843 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.733282986 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.794984959 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.848957089 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.896900411 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.942190484 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.801553584 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.910842039 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.784478193 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.756531294 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.70647343 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.896336597 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.775342711 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.851876211 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.781775509 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.78789352 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.946741898 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.878918214 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.807826616 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.78033167 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.930146361 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.631046276 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.787510048 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.770520981 seconds)
  done (took 168.445563933 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.954497854 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.767579018 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.762164659 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.820322929 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.881960161 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.763984791 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.397743176 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.771733518 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.099024267 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.76818702 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.760915331 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.763558653 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.764244719 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.776848609 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.836891185 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.768840342 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.776682624 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.765556961 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.789623053 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.766961883 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.762173997 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.766512514 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.766273253 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.765840885 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766765709 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.762835392 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.500944228 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.006347848 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.766471237 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.768844354 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.878244406 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.776506571 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.874729904 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.770052855 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.857462046 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.818852209 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.892950857 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.767356602 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.980525068 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.833167568 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.768710128 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.764775153 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.829161241 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.777702165 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.76747186 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.764479558 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.772492539 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.769746088 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.831685416 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.017859655 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.766268184 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.882120552 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.245457659 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.763093449 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.764588539 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.764071293 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.376783862 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.763686301 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.763491251 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.76932524 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.770963395 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766201247 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.765137499 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.149558848 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.834991953 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.924938615 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.374023887 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.770472778 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 23.009686361 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.962898367 seconds)
    (70/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.763520733 seconds)
    (71/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.76643442 seconds)
    (72/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.765078911 seconds)
    (73/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.765511718 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.761928598 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.76610116 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.766842396 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.884812397 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.77127707 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.899162207 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.846574127 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.885387479 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.769754948 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.764926811 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.774576103 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.602600146 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.836466878 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.80249279 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.595203312 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.768064401 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.139751068 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.544622667 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.767186571 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.766869383 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.779972786 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.764149295 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766583523 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.770072803 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.846864865 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.764643158 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.887734974 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.49730405 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.332770321 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.767204772 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.767451234 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.76770293 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.774063972 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.846353509 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.888014421 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.767776722 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.829901964 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.768819518 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.764965671 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.842740637 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.765202267 seconds)
  done (took 401.595353417 seconds)
done (took 777.529480155 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.349558139 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.570334755 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.442791272 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.337994911 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.310703471 seconds)
  done (took 13.712819834 seconds)
done (took 15.414693224 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.778790042 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.770853879 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.831805492 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.848728369 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.781464973 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.782781617 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.846095254 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.783853607 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.814166023 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.820125826 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.849429309 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.852213408 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.790142208 seconds)
  done (took 25.251418663 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.772696182 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.910805452 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.99111928 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.806563124 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.774424918 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.987487576 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.832790973 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.903686552 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.91118237 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.990730568 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.005311926 seconds)
  done (took 22.591056883 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.773754064 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.92193707 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.989153705 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.810895657 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.775051374 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.993491392 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.838683388 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.906503634 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.912846706 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.024056197 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.01723712 seconds)
  done (took 22.67576328 seconds)
done (took 72.220291705 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.771477409 seconds)
  done (took 3.475845106 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.78663081 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.909641996 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773607225 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.772986726 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.771556752 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.77394763 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.771751781 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.769686639 seconds)
  done (took 16.034608058 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.769130659 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.770882779 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.769624638 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.771225805 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.770016079 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.770287993 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.77005955 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.77074954 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.77199524 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.76903494 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.770112672 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.769856618 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.771082457 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.769848219 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.770093965 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.770101011 seconds)
  done (took 30.028646841 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.772457815 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.771045372 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.77153721 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.770534958 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.76955407 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.772130981 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.774079457 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.771193139 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.770971734 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.772841709 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.772752029 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.772594591 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.772325455 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.771090297 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.772370671 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.773187727 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.773696469 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.771999767 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.776296615 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.773778591 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.774322794 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.772171331 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.772495912 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.770411832 seconds)
  done (took 44.242501798 seconds)
done (took 95.494528169 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.577543055 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.556789439 seconds)
  done (took 9.83893366 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.771046746 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.772430641 seconds)
  done (took 5.252377809 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.775019866 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.774514623 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.774032042 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.77269907 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.77231251 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.772532876 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.771675019 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.773736179 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.772119638 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.773259857 seconds)
  done (took 19.439542131 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.773957165 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.773587921 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.773153417 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.772987722 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.7725673 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.773101509 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.772979251 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.772248813 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.773846659 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.773010214 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.773946631 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.774408102 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.77402095 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.772627182 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.773814161 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.774641163 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.773461873 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.773411316 seconds)
  done (took 33.62836012 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.773922188 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.774733255 seconds)
  done (took 5.255620709 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.774871961 seconds)
    (2/7) benchmarking "second"...
    done (took 1.772865177 seconds)
    (3/7) benchmarking "month"...
    done (took 1.7736186 seconds)
    (4/7) benchmarking "year"...
    done (took 1.77472916 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.77439364 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.773568426 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.774253861 seconds)
  done (took 14.124478964 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.774073554 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.918593024 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.971727592 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.587071814 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.773335041 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.7775702 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.043085626 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.776642218 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.780351803 seconds)
  done (took 20.109277934 seconds)
done (took 109.356014689 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.59986951 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.775217942 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.060236727 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.848005456 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.801008248 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.070890871 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.781756069 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.416195493 seconds)
done (took 42.061577377 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.852065738 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.773517827 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.817737163 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.816686759 seconds)
  done (took 22.116357013 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.773106978 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.087499937 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.798071916 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.605456918 seconds)
  done (took 21.985860516 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.157589736 seconds)
    (2/2) benchmarking "read"...
    done (took 2.12700908 seconds)
  done (took 5.997984401 seconds)
done (took 58.663927724 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.775445056 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777078402 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.774361506 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.774461031 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.775381046 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.775807183 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.77659378 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.773661786 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.776170873 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.776546839 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.776085731 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.778762358 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.776312782 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775728371 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776202358 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775658919 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775198454 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.775276301 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779615149 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777556274 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77711606 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.775637105 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.776835489 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.776697831 seconds)
  done (took 44.339013524 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.778677044 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.778446834 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.777635247 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.780250934 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.780533169 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.778241504 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.779003222 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.779235053 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.779065558 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.779193404 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780084299 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.778259283 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.778425305 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.781171029 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77963745 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.779311103 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.780006746 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779874536 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778307688 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.780629557 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.780059116 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779833933 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.780024241 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780464403 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.779254305 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77869585 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.777663517 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.780487877 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.778549339 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.780382207 seconds)
  done (took 55.094108365 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.779945492 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.779368781 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.780696576 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.778772106 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.780006276 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.781256149 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.782599682 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.780428356 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.779787418 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.778425215 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.778638553 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.780308903 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.781431444 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.782983939 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.781478849 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.781424795 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.780771409 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.7804505 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.780260488 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.781148154 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.781327195 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.780875049 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.780522159 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.78341061 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.779752804 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.780579236 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.781465759 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.780669003 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.781645994 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.781411012 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.780755283 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.782276799 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.782412578 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.782071029 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.783068067 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.78111622 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.781469941 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.782997793 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.782795641 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.782269481 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.781995555 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.782960862 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.78174306 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.782095569 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.782060317 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.781757846 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.781303611 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.784795254 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.783387303 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.781841223 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.782251955 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.78264405 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.781317025 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.782501929 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.783336728 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.782587368 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.785514902 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.782663083 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.784580734 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.783941347 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.784034681 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.7820244 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.78453813 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.784290135 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.783006336 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.781631324 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.781938048 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.786084019 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.784500386 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.787298223 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.7844851 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.783996574 seconds)
  done (took 130.023869927 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.787530647 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.784536016 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.782084238 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.785111041 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784821514 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786132482 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.784453601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784736527 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784789726 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.783552332 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784789037 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.784918759 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78448906 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784172719 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784191751 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.784455705 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.78564941 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789187395 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.783909099 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.785734772 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783841659 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.785897432 seconds)
  done (took 40.988722067 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784868115 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.785233886 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.784799624 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.784128647 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783690696 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784396589 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.784626503 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.785150721 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786222723 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783986856 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783715773 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786571498 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.785105811 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784425859 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787166326 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.785543843 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786152827 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.785517146 seconds)
  done (took 33.850553667 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.784736343 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.785534485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.786758778 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.786259957 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.78517825 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.78536006 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786573299 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.785730273 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.785679254 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.785329256 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.787287566 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788052615 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.785803399 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787325418 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785729244 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.78681601 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.788030105 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786578311 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787679299 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.788028411 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.786871939 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788329864 seconds)
  done (took 41.025217434 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78807324 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.787279231 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.787788694 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.78825416 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.786492807 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786026823 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.786469947 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.788146526 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.787973687 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.787407314 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789683615 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.788228626 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.789023378 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786456174 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.787626645 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785120254 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786573538 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.790916033 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787478026 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.790696275 seconds)
  done (took 37.47763291 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.790174065 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787956974 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.789647938 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788101592 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788303495 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.788275316 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788675263 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.79025303 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.790296495 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.789768737 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.789426979 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.789680174 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78869516 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.789794187 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.791071976 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791616207 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792014408 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.792516971 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.78978318 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790050852 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.792509967 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.79211467 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.791344392 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.790639306 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.791474212 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791177212 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789837622 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.792267567 seconds)
  done (took 51.850092789 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788424522 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.788805134 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.788350241 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.788924137 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.789963973 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.790601987 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.791014817 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.79104307 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.790004362 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.790152655 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.792056461 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.790926796 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.790909946 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.790286069 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.791971007 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.792524876 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79084423 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.792697276 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790618039 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79145322 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.790501573 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792837537 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.790205119 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.791034669 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791212326 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.791401223 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.791382784 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.791075507 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790214165 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.789382396 seconds)
  done (took 55.44555183 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.813159313 seconds)
    (2/2) benchmarking "in"...
    done (took 1.813050819 seconds)
  done (took 5.351169889 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.791399129 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791624846 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.791204283 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.791706284 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.791576134 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.790302808 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.790735219 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790356805 seconds)
  done (took 16.051724663 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.791036992 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.797839286 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.791815122 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.791585288 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.794338155 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803784098 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.79337016 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.796786866 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.796903067 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.792703285 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.799760964 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.799806425 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.80104959 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.8012094 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.793993848 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.793951328 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797470992 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800356932 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.797130935 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.791844319 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.800958969 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.793736652 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.792182314 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.794076578 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.795342322 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.797845121 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.803961557 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.797097894 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.798319815 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.795003701 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.80326174 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.794595726 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.793946681 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797629663 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.795623288 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.795442936 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.804605305 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.794622969 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.796175436 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.794078671 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.799815104 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79973885 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.800674901 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.806364956 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.798446692 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.796162431 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.79520034 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.795786537 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.798376329 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.801619662 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.803290764 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797414654 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.796182809 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.797030706 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.79958962 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.798079539 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.796281291 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.799967076 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805426289 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.807860746 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.801193663 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.817539843 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.804907553 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.79835601 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.796122648 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807997069 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.821910323 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.801003521 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.798791178 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.796528337 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806424778 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.795757573 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.795223998 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.798270138 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.812272167 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.804537406 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.799657091 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.799585133 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.796044849 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.797771037 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798813044 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.797878181 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799919659 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.799626625 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.809542139 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.82469313 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.798289574 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.799053049 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.798998399 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.798191769 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.800435986 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.800810444 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.797707424 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.798082602 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.8018525 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.800845225 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.799121192 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.799663806 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.798483419 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.808763214 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.797705904 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.798016365 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.802974198 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.807460123 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.797814835 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.798561876 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801507459 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.800179369 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.808510738 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.799435823 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.799449834 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.799399938 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.799764343 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.804203021 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.799320061 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804385104 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.805344436 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.809578046 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.80130804 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.806519146 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.805010384 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.803117218 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81255917 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.825861943 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.79911723 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.806087738 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.809207673 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.811069209 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.805473166 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.798864286 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.804179854 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.798912696 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.800759759 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.803641853 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.801596374 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.801126234 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.801725831 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.800561971 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.800949138 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.801536776 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.80470652 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.805324023 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.806871913 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.800502503 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.809866077 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.80283642 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.806168555 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.810430026 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.802083883 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.801552709 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.799543446 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.804064318 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.802806405 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.804740447 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.800661258 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.801587498 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.803350758 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.802178594 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.805620611 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.802721955 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.801443585 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.801460539 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.807530672 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.803912407 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.801648735 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.801384779 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803719539 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.803343244 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805229124 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.804587481 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.806620882 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803391532 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.807753009 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.801740363 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.802422913 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.803744178 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.801449022 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.803855739 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.809745507 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.816056631 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.809224606 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.813976867 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.804580538 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.811868958 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.805193781 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.806653812 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.804519912 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.804650242 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.803586119 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.803203864 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.803467496 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.808288538 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824151739 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.814457526 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.809152318 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.804188374 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.80748056 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.808013344 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.811772224 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.804687782 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807614905 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.808191533 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.806362771 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.808434662 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.804377021 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.811636996 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.805404263 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.806009316 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.810196336 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.807282513 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.805768646 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.808724867 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.804989096 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.80993832 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.805656017 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.804613673 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.806121223 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.80524712 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.815965639 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.810301001 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.806337485 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.807130811 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810218737 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.806716897 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.807690849 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.809052317 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.811659417 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.806175674 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.808411123 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.816356612 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.805279056 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.805831112 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.80370608 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.804977354 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.810384077 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.805139198 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.811423104 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.812226622 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.811851019 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.805267117 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.814651927 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.806454999 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.810880679 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.807092463 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808858015 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.808571461 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.810380746 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.808797585 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.807246374 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.817049403 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.807571952 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.81276708 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.805796925 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.810581989 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.809805217 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.81142675 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.809772106 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81226225 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.816313366 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.817331859 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.810140658 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.812268605 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.812779318 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.809215566 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.813703835 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.810302859 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821969657 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.819059212 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.808295857 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.807515894 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.808633096 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.812045711 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.809836483 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.810571357 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819478035 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.808963236 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.809708601 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.813969544 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.809025685 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.807584534 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817223071 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.813995477 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.813774773 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813564918 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.811255233 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.809976982 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.810332018 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813320024 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.812583297 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.813280031 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.812826635 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.81138534 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.812857173 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.810082881 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.82548653 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.810351369 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.814919831 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.820604738 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814035048 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.810864093 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.814952084 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.80969744 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.814664712 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.813902196 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.810302096 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.811449448 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.811745651 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.817392423 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.825248087 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.81641129 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.822200986 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.813833078 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.823861819 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.811415801 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.8117212 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.812127774 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.820401596 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.821506261 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.811989758 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.812335242 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.82288252 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.814269079 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.81260808 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.815846801 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.809617936 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.811251134 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.812359316 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.812770919 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.818826075 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.817675325 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.814194317 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.813167607 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.809977061 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.812459805 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.817229174 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.814746342 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.814431841 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.814703913 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.813111121 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.812024043 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.81308509 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.814005149 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.81321829 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.813325372 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.812581623 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.825260078 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.813266538 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.814250394 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815948939 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.811861406 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.824595755 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.815319431 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.812625879 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.813615052 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.813266912 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.817295416 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.815170715 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.814552202 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.815666525 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.812546784 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.817736381 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.826417804 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.824508781 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.816304412 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.819201203 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.817588908 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.816585283 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.823421428 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.837870446 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816013351 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.819491163 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.817444947 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.824373059 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.817774529 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.820001674 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818690753 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.824977444 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.819713391 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.81419736 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.819820837 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.827760186 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814499406 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.814720578 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.814872338 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.822873793 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.817282941 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.816251255 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.815945022 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.821271394 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.816266986 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.828240032 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.816575623 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.816010087 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82039426 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.817342886 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.816176764 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.814275877 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.819774539 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.818564982 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.815757434 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.81627488 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.819750011 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.82432304 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.814783801 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823876759 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.827774995 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817257904 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.817681515 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.817709391 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.822237253 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.822818929 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815466979 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.816097599 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.819068169 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.816608092 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.819256586 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.822433092 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.825673233 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.821363887 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.81631683 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.816105295 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.821844118 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.816271058 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.816606456 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.82067393 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.828573903 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82407456 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.833230468 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.82838981 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.81860141 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.817832348 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.826125351 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.826816491 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.819615323 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.815748561 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.820196168 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.823718299 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.820945157 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.820476022 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821804761 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.82009023 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.825923763 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.819833469 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.818202724 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.819010204 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.820048002 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.82355846 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.821830696 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.828479094 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.818429788 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.820185689 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.818940604 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.822152384 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.823567183 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.824303363 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821269225 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.821423788 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.824693601 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.823294522 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.826155659 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.819709989 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.818337798 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.823871031 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.819653009 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.820522758 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.819516784 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.819385666 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.820027114 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.827699767 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.82712315 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.818891504 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.823209643 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.82454236 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.827446313 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.821511038 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.824429933 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822271656 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.82241015 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.833368412 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.822903235 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.823085851 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.822307812 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.819949825 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.831162228 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.825399906 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.828875189 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.820735769 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.821335868 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.821705008 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.825919348 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.829721982 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.824406704 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.827646808 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.828490862 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.829541547 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.825926235 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.820921084 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.821430171 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.824379179 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.822586888 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.825944214 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.824793487 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.823973968 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.821941472 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.824227422 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.821562258 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.828140157 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.822106348 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.822807699 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.828100629 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831155653 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.835746474 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.823084666 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.826178996 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.822747083 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.829940577 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.833350549 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.823900495 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.822755134 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.825252925 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.824928789 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.821592362 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.831737538 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.829232171 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.828146978 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.825878331 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.829012616 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.846669657 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.82785986 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.833742988 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.859137715 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.823869046 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.828136195 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825559813 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.825139585 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.82430745 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.828950492 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.824710465 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.833713014 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.825400225 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.823942592 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.835119363 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.824730657 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.823068921 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.825501912 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.82741509 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.831385023 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.823380299 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.833062372 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.824145417 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.826288792 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.824915434 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.829239765 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.823730602 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.824529995 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.825880954 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.828728307 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.826208102 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.827521825 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.838106636 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.826240222 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.827204739 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841035806 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.839390962 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.827366437 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.825427659 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.827470109 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.832613975 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.829974011 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.823173968 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832339617 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.831725113 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.830160808 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.831943604 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.831471043 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.82783729 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.82951848 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.827496198 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82747129 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.838088896 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.840219882 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.826487898 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.827229538 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.834423559 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.82737998 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.835531636 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.834747017 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828032022 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.830620417 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826892155 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.829006129 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.827885962 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.826834039 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.832990578 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.83374074 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.828262822 seconds)
  done (took 1082.666868876 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.826818995 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826323335 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.828042423 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.830398191 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827645739 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.827544578 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826524829 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.825827096 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.827985855 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826863095 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.830016341 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828767468 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827210036 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826195097 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828994464 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.827562205 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829432648 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827995123 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.828487836 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828403085 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82720471 seconds)
  done (took 40.14574001 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.828482257 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.829265291 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.827997358 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828476885 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.829446684 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.827085876 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.827602315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827840312 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828954646 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827317708 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.828370432 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828512369 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.828884953 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.830927459 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829489808 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829721297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.829293078 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829832421 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.829657847 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.830495666 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.828142107 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.830854698 seconds)
  done (took 41.999799952 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.831479104 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.828708467 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.832636378 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.830279034 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.830977385 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.832293273 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.828687281 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.833668024 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.829339856 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.831032372 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.838780005 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.839862582 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.830082638 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.833925977 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.831657763 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.830442359 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.976537105 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.829781059 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.832176586 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.830835264 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.830623113 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.838388259 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.830073293 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.83123175 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.830373774 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.832126867 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.831356427 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.830305931 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.831738257 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.833503781 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.836066475 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.831784974 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.834169194 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.835252018 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.83020525 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.833645951 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.838173671 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.831455455 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.832451235 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.830264192 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.843205398 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.854629222 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.834249575 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.833358746 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.842745789 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.834716656 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.833825579 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.838813825 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.841237047 seconds)
  done (took 91.756288073 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.832484495 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.835586415 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.834448119 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.832974831 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.832051724 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.833258684 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.834036164 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.833493007 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.83262742 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.832259123 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.832868323 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.833867838 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.833096944 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.834843034 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.832758871 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.832808345 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.833920702 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.833761199 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.833360789 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.834543216 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.831479866 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.831055031 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.834709497 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.834561563 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.8343136 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.834817208 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.83312057 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.832525756 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.833549752 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.834794965 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.835719719 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.83205748 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.835826753 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.834523786 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.834827087 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.832964028 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.834882215 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.832154696 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.834090166 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.834774835 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.835654302 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.834846167 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.834541959 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.833239383 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.835672391 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.833252336 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.834603008 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.834749701 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.835380171 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.834242873 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.834730585 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.836266898 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.837684208 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.836105565 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.836794808 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.836839649 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.83347873 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.835915214 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.837559504 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.838323939 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.833976036 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836311988 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.838807093 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.835615801 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.837577894 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.83690418 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.836308085 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.837472596 seconds)
  done (took 126.515873221 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836844679 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.839653187 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838412763 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837916451 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.838447025 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.835237851 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.838299847 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.836436902 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.837561249 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.838736142 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840147042 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.836617832 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.836155534 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835797657 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.837693504 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.836456286 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.837010874 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.83757602 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.838216876 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837824079 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.837663692 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.837871467 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.838679405 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838420725 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.839063476 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.838129035 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.837515194 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.83705314 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83772928 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.837007459 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.837261749 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.838701467 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.835344946 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839392085 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.839528976 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.837320478 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839550788 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838477015 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.839643721 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.837784039 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.839093161 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.83876043 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.838763433 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.838678562 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840406751 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.838085837 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.841375045 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.840740206 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.838872096 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.839734409 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.838674929 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84017648 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839777601 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.839333313 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.839721989 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.837083784 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840668827 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.838472081 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839158558 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.841006529 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839259906 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.839480391 seconds)
  done (took 115.753209993 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83731088 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.837198311 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.839320124 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.838421446 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838892435 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84115641 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.837281153 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.838044314 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.838942448 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.83889891 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838345723 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840519718 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840888316 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839386945 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.840524831 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841079162 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839331777 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838902273 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83965116 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.839382937 seconds)
  done (took 38.554758064 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.839381884 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.839537428 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.839991286 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.840107776 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.838658271 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.840295318 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.838615108 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841476542 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839443041 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840402837 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.841568772 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839608064 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84185361 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.841323108 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.840634334 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.842148257 seconds)
  done (took 31.217546731 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.842314145 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.841790919 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.840438868 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.843927215 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.842805141 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.843013615 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.841208614 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.843586075 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.84019593 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.843856005 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.839136876 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.841717424 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.843818114 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.841628629 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.840899822 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.841410255 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.84353506 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.842730896 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.844281001 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.842882396 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.841853184 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.841892354 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.842986789 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.844179715 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.846204213 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.84234286 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.841052424 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.842720152 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.842579155 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.842338231 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.842766256 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.844143717 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.840281066 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.843971244 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.845477074 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.843185456 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.843032456 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.843984575 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.843462057 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.842481029 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.846199386 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.845053443 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.843857169 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.843282104 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.845019717 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.844609768 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.843956974 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.844845751 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.845141876 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.841644233 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.843912012 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.845257738 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.843646142 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.843682789 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.843028605 seconds)
  done (took 103.144212735 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849589083 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845200439 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.845483872 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.842770284 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.844649125 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.84369032 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.843520979 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.844451163 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843614207 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.845013087 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.845032115 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.841708456 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843255513 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.844203412 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844165965 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846419884 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.849268137 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.844999827 seconds)
  done (took 34.983085848 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.843422209 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.842939041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.842244905 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.843740066 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.842375834 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.844607294 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843693177 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.844411156 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844972251 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.845062198 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846304847 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.846776363 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844952169 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.84499375 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847812993 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845753 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.845604514 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.843432983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.846945849 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844819121 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.845086662 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846069824 seconds)
  done (took 42.360735807 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.844147389 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.846286331 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.86375571 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.870467116 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.866262746 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.88252119 seconds)
  done (took 12.950817791 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84730724 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846832006 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.848440217 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846025032 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845058909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847289728 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847737032 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847467997 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847018247 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849979923 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847844141 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845959673 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848493221 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845270321 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848123927 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846235524 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847174722 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848288977 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848759689 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846794976 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847847904 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848338539 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846129693 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847411485 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847970462 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84696004 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847833968 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847395228 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84604602 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847347895 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848942929 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851534976 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850064025 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849732136 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848508312 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849527328 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850289724 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849226665 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84704836 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849346764 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.848294321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847434514 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848119148 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849148389 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847900506 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848724294 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848347288 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848172526 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850363982 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851695668 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850561403 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848877936 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849743925 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849397051 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847643188 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84941908 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846886911 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848213477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850309172 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848633156 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852441317 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850728142 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849191332 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852156461 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851399167 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850726807 seconds)
  done (took 123.780180254 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849593665 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.850832069 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848887497 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85109229 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849354167 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846802719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848098465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849100563 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858875187 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851918315 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851575261 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849843902 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851477404 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850846602 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853251253 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849934568 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851618995 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852817431 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849861646 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852412555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851043021 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851360194 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851642509 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852453092 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850979654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851047718 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851460974 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851610602 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850379567 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851059344 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851466674 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853346419 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851643781 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.853464318 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851942887 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853046443 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852308134 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855372885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852555429 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85173244 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853658432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853576151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852478771 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854592938 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854322377 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853573503 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85880643 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855491981 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853944371 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854419041 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858135288 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861153546 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853060489 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853386579 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852105829 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854576541 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853517623 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855268861 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85514119 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853017142 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854034943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853880909 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854520974 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855772132 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853425767 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854198539 seconds)
  done (took 124.063517646 seconds)
done (took 2523.107560802 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.950252896 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.903707423 seconds)
  done (took 15.640076807 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.013703502 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.967847825 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.853925615 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.889600976 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.852719626 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.871523885 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.875408459 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.85402447 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.852834537 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.852708884 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.854364399 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.038856394 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.869253057 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.854403578 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.853706821 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.945380206 seconds)
  done (took 52.086448376 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.858390099 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.861524676 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.869765403 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.861126799 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.85821776 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.871656826 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.890095386 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.86289879 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.89486169 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.872854561 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.928715312 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.870084973 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.861923869 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.909523299 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.873933741 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.874659079 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.953331838 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.938352271 seconds)
  done (took 35.695218442 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.937377859 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.865596132 seconds)
  done (took 10.593340711 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.861174182 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.874822196 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.872743401 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.856304611 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.877024844 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.874431335 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.887420643 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.887505597 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.889275695 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.883606703 seconds)
  done (took 70.550935941 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.862684561 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.86143282 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.861430662 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.857798788 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.854917803 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.861346449 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.858122765 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.856815298 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.548162344 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.896504781 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.8654437 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.86771581 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.858303259 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.860094515 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.854542735 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.883248237 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.972323148 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.854265256 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.853900779 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.864733647 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.858960363 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.920197781 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.873079641 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.85801492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.890090747 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.546644749 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.871108894 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.864172623 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.966779391 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.853795756 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.858500912 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.072137089 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.864044339 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.314079188 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.139317197 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.862088972 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.871373588 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.867590663 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.855367226 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.982622731 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.860193042 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.865317887 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.760289596 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.114078325 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.951538567 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.906115154 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.205238565 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.863465102 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.859860889 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.895752406 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.863248793 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.861735318 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.875100728 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.37281538 seconds)
  done (took 132.286623011 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.856450812 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.206329211 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02141187 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.855464467 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140021522 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062714336 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.858887315 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901153399 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.86048238 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.087208469 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.109283318 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.961409474 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.857463254 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.859414004 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.857779895 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.855705409 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.999303362 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.926024593 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.860633609 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.855662148 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883681801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097240457 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.977660959 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.859469331 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.88284031 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.062716461 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.978409571 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.958791007 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.636685079 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.856156635 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918768136 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.863293982 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.858594936 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.855848737 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.00872218 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94884799 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940133436 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.859575008 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856611559 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.857969877 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.601839638 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054870493 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.952818422 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.984792004 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.108207072 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.063564968 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.730311458 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.85687593 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.592632016 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019684128 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.084096063 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.092972786 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.979771406 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.861471521 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.206634448 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.857830953 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.856491882 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.103174895 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088730706 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956375234 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860873607 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.859373134 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.857357613 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.144991276 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.860160528 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.952705743 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862384734 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.857315602 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.957741994 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.956434055 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.093373232 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068599944 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.886982214 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.197148015 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.363742959 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.103692141 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.924430396 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109550686 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859471077 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.859071014 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.939316215 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.694607896 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.111318161 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.137813748 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101385971 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896101068 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.5806743 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.858146121 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.08288796 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.078884904 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108345659 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105883311 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.099227521 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.189176298 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.857952738 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.860192144 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.114523328 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.979614168 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.861602619 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.2066632 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.089308217 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.40826867 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.886948018 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.163016903 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987836054 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.861719468 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.49439136 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860121538 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.081545217 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.899739831 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.862011833 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861736629 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.078006164 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.834228663 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861815801 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.753738254 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.921203247 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.866217543 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091347508 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.864739231 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120654896 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865876763 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092285647 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.323513894 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891212428 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.033531585 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.107171608 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.864740839 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.10212432 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.100275741 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975471355 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.132751907 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.766837223 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.8633245 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.146544604 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.863587049 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.860413032 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.0280327 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.864297066 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.006188269 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.864564589 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.141347634 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883341181 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.095178577 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.863823002 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.117450318 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.89420076 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912798666 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.866793962 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.992152299 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.864962442 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.696476528 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019735487 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.865875838 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863414594 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.411025047 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.863723282 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010328061 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.088856252 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885044306 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.934348634 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.525954298 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.863762903 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944217933 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885868756 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.248308751 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.864283703 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.11537082 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.86581089 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.863614255 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.862923053 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.146403079 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.098093503 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.864463329 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.864525283 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.759904153 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.865365139 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864766544 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.044144591 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.756132881 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.863468098 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063043226 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871579551 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.992247642 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.867785488 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.925687497 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.195275579 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864174432 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.866180649 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.86531615 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.866341094 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.866678556 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.070632247 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888889752 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.381121416 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.001294537 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.130900317 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.172951208 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.102970027 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.906405751 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.866632243 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.11807219 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.868334605 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.928633802 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.867574735 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.885068169 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094354259 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868464433 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069245108 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.133291263 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.724122074 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.913847197 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.869693484 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864380648 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.865518609 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.002611793 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949533343 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.868507854 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.868542961 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.979962848 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985012642 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.074118874 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.867268411 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.959387278 seconds)
  done (took 901.943239106 seconds)
done (took 1220.582036833 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.867199631 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.868586128 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.870461762 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.870282611 seconds)
  done (took 29.27580491 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.870820332 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.867462955 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.870829332 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.86833494 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.868178376 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.86855063 seconds)
  done (took 13.013306098 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.890012524 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.871958322 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.869030444 seconds)
  done (took 21.430075775 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.94279909 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.278499588 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.008902155 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.307191625 seconds)
  done (took 10.338726009 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.870868624 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.870414097 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.869398379 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.870223755 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.869833943 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.870864954 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.868591662 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.868777705 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.871945787 seconds)
  done (took 18.630575302 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.61340438 seconds)
done (took 99.100830106 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.178758876 seconds)
    (2/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.026254199 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.870012165 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.014854389 seconds)
    (5/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.004910063 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.939331608 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.002399645 seconds)
    (8/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.945210579 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.869895414 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.129719418 seconds)
    (11/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.073829432 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.958606004 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.768130222 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.89776729 seconds)
    (15/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.04736364 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.876319019 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.201076294 seconds)
    (18/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.87640204 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.072883039 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.727859908 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.030289336 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.957259577 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.961786894 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.895251534 seconds)
    (25/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.168268484 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.13352482 seconds)
    (27/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.253789084 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.257115977 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.957054862 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.873413388 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.265644596 seconds)
    (32/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.971836553 seconds)
    (33/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.57335887 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.923551107 seconds)
    (35/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.992997592 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.69782786 seconds)
    (37/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.037586785 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.014886109 seconds)
    (39/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.019521061 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.996405075 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.962106036 seconds)
    (42/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.885397043 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.357455985 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.390993285 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.954161385 seconds)
    (46/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.18669634 seconds)
    (47/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.30196888 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.088549875 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.87481345 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.10019676 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.491379474 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.853693489 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.204658535 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.525331175 seconds)
    (55/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.874896119 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.114627876 seconds)
    (57/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.985224726 seconds)
    (58/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.126134425 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.184117503 seconds)
    (60/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.168481011 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.005583517 seconds)
    (62/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.028469433 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.894785726 seconds)
    (64/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.952252894 seconds)
    (65/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.091798566 seconds)
    (66/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.954576077 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.951932412 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.326213299 seconds)
    (69/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.31301416 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.122771442 seconds)
    (71/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.983276438 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.798403282 seconds)
    (73/309) benchmarking ("sort", BigInt, false)...
    done (took 6.963418359 seconds)
    (74/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.895562746 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.935456795 seconds)
    (76/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.963866848 seconds)
    (77/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.880139749 seconds)
    (78/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.912524497 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.87267376 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.570496924 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.731743974 seconds)
    (82/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.205139778 seconds)
    (83/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.178632368 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.183930557 seconds)
    (85/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.877566638 seconds)
    (86/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.203651119 seconds)
    (87/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.87772731 seconds)
    (88/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.591526793 seconds)
    (89/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.044320942 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.315290109 seconds)
    (91/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.894979966 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.879829708 seconds)
    (93/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.898127751 seconds)
    (94/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.087442953 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.898783429 seconds)
    (96/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.034867714 seconds)
    (97/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.129778669 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.900281312 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.207945697 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.878854368 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171251261 seconds)
    (102/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.191781064 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.193205274 seconds)
    (104/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.994595089 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.532506825 seconds)
    (106/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.907421629 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.978631013 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.97130368 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.999807034 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.895356277 seconds)
    (111/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.898468899 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.468954472 seconds)
    (113/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.026496071 seconds)
    (114/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.08133664 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.98544801 seconds)
    (116/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.888871039 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.254091382 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.200427922 seconds)
    (119/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.884216715 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.184257498 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.009933158 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.172002847 seconds)
    (123/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.133637388 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.901966722 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.875638505 seconds)
    (126/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.077993918 seconds)
    (127/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.029890913 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.000902982 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.297306831 seconds)
    (130/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.994635963 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.904398557 seconds)
    (132/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.222371949 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.912356072 seconds)
    (134/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.955957538 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.976864936 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.001574833 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.008982426 seconds)
    (138/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.104115386 seconds)
    (139/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.959971054 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.108503041 seconds)
    (141/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.976231257 seconds)
    (142/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.025097739 seconds)
    (143/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.356730648 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.149426086 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.187571029 seconds)
    (146/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.074604736 seconds)
    (147/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.306170437 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.906061474 seconds)
    (149/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.974322591 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.016401975 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.222090247 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.923818271 seconds)
    (153/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.878470818 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.571560663 seconds)
    (155/309) benchmarking ("sort", Int8, false)...
    done (took 4.861671892 seconds)
    (156/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.287512588 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.170511136 seconds)
    (158/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.020193721 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.89266331 seconds)
    (160/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.884261994 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.061180507 seconds)
    (162/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.899328453 seconds)
    (163/309) benchmarking ("sort", Float64, false)...
    done (took 5.58761833 seconds)
    (164/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.977029386 seconds)
    (165/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.901197425 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.8818878 seconds)
    (167/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.9816836 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.055701404 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.203814084 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.009525795 seconds)
    (171/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.161468047 seconds)
    (172/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.892298844 seconds)
    (173/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.976227246 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.891746126 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.87884661 seconds)
    (176/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.99222336 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.583906216 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.292391783 seconds)
    (179/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.3531629 seconds)
    (180/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.084913898 seconds)
    (181/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.97357977 seconds)
    (182/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.062329684 seconds)
    (183/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.97070207 seconds)
    (184/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.943345366 seconds)
    (185/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.084387168 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.881268961 seconds)
    (187/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.271266172 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.145389634 seconds)
    (189/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.908273298 seconds)
    (190/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.957802914 seconds)
    (191/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.284976959 seconds)
    (192/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.06465575 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.887175663 seconds)
    (194/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.932113208 seconds)
    (195/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.880056218 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.411341883 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.983081539 seconds)
    (198/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.070170795 seconds)
    (199/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.89062492 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.276988202 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.883231487 seconds)
    (202/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.866523074 seconds)
    (203/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.889685098 seconds)
    (204/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.983497362 seconds)
    (205/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.930561755 seconds)
    (206/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.053672785 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.950521203 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.945696299 seconds)
    (209/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.095660132 seconds)
    (210/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.805013956 seconds)
    (211/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.856687164 seconds)
    (212/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.056514463 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.085682573 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.215210252 seconds)
    (215/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.974348553 seconds)
    (216/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.883959185 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 5.553353478 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.887091395 seconds)
    (219/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.350706347 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.666307984 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.188772653 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.593185048 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.994688353 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.687124041 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.547111588 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.889627138 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.887825287 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.069920019 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.915588609 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.643822645 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.788360842 seconds)
    (232/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.534199247 seconds)
    (233/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.884074824 seconds)
    (234/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.991434982 seconds)
    (235/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.053621375 seconds)
    (236/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.650142022 seconds)
    (237/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.587607268 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.279134861 seconds)
    (239/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.13633566 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.706855757 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.995625769 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.886588075 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.956685875 seconds)
    (244/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.036716913 seconds)
    (245/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.260416254 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.889621777 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.884853043 seconds)
    (248/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.942466852 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.885700519 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.937042557 seconds)
    (251/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.977718846 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.800194568 seconds)
    (253/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.983283678 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.27388102 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.365223556 seconds)
    (256/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.131370423 seconds)
    (257/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.271530635 seconds)
    (258/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.398289128 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.0413408 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.26794538 seconds)
    (261/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.0486209 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.019084162 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.986397596 seconds)
    (264/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.400162564 seconds)
    (265/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.107664711 seconds)
    (266/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.971789412 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.015213685 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.202213646 seconds)
    (269/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.954349279 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.293811142 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.904827539 seconds)
    (272/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.436427246 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.075204794 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.289413804 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.887578587 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.905141864 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.890251232 seconds)
    (278/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 10.308439192 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.303056167 seconds)
    (280/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.021992318 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.662561814 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.302120636 seconds)
    (283/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.016508825 seconds)
    (284/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.63874919 seconds)
    (285/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.887730762 seconds)
    (286/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.357001997 seconds)
    (287/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.906543511 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.891923669 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.295793075 seconds)
    (290/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.998905387 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.785213463 seconds)
    (292/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.020251153 seconds)
    (293/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.67486863 seconds)
    (294/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.155715339 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.894577804 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.024389558 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.915823667 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.076590619 seconds)
    (299/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.663747119 seconds)
    (300/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.150461615 seconds)
    (301/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.018222105 seconds)
    (302/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.984058489 seconds)
    (303/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.418827415 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.285035742 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.891102493 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.144204537 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.106191472 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.686605497 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.174073788 seconds)
  done (took 1017.241522276 seconds)
done (took 1019.114866153 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.919243028 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.909365251 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.895175078 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.916870844 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.004704603 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.935836485 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.908581055 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.89921544 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.946414083 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.945653265 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.891022667 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.935409713 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.894745237 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.893174381 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.89668598 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910248182 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.20861282 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.929805144 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.911516934 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.9074673 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.910958521 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.892204413 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.947864049 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.93347468 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.900959497 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.901446949 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.897537262 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.915238766 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.006096225 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.897465607 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.902407331 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.905294258 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.209180364 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.928719402 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.894954223 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.912557752 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.906431727 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.908872128 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.90225618 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.927130903 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.358334276 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.901978284 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.895309254 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.899192785 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.897897961 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.904692826 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.895772202 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.907806511 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911938453 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911156991 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.348580051 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.91848497 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.897309411 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.89957468 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.912109228 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.896027924 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.903548967 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.912779351 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.916524484 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.911131736 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.194288282 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.942973386 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.901600352 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.916014641 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.906015466 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.387831771 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.905481663 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.907147252 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.359288731 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.914683826 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.388222864 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.914615385 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.902067529 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.913143125 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.929790707 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.209095312 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.932796295 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.898336142 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.907283379 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.896343836 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.911215096 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911023675 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.904182482 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.904544265 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.913077986 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.94110218 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.913125312 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.897707203 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.912846649 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.916550123 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.906198797 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.909771647 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.903984362 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.89779109 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.913693517 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.905289208 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.900752047 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.900219942 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.904996763 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.914249771 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.356227119 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92266885 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.898834626 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.897970115 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.90108487 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.911962214 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.355806534 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.9069287 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.923862972 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.951733067 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.903043863 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.197378527 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.932811794 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916856273 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.914159201 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.904399826 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.900147076 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.196004329 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.388161514 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.924667809 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.903098815 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.897349308 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919405926 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.903907116 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.899270371 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.212126672 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.937594604 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916078707 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.023233238 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.915701338 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.932750057 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.896969094 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.905780838 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.946232232 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.915891206 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.931703002 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.904815046 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.916265975 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.917127753 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.901289027 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.911668697 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.915946936 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.903169104 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.911778905 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.900999908 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.945995774 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915137986 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91450641 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.924391993 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.024074675 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.900314025 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.198066057 seconds)
done (took 298.769687946 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.977084702 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.89546155 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.014509124 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.898987877 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.985290709 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.978668218 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.898306875 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.897867312 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.898124201 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.398017913 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.898895211 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.904075282 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.901464532 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.89885664 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.968115164 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.898696407 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.89953213 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.180912728 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.900807981 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.976997043 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.896398934 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.89964898 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.905873314 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.40127076 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.899331894 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.897680077 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.977658044 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.900156822 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.191219348 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.898185313 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.900024127 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.188110177 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.981269324 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.912595556 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.905842301 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.905963231 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.994996317 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.908029042 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.969386026 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.965257055 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.026594457 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.934443385 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.902675318 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.897885717 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.904722433 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.901192389 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.89938518 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.93357964 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.899205412 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.905535855 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.184888034 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.908150707 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.904947653 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.900120353 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.899737502 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.913541601 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.900684687 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.902301425 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.983225874 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.902423779 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.966974705 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.401605237 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.39940368 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.90055789 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.900976933 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.901868374 seconds)
  done (took 186.676929526 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.966132386 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.974267819 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.966781272 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.90708253 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.949993212 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.96772159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.906664188 seconds)
  done (took 15.468138428 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.907777392 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.901534927 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.949683889 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.952128069 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.903185149 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.084531307 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.913414597 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.907259145 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.928110265 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.901784091 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.55142618 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.951424397 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.909500267 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.900872021 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.913765639 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.95690615 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.904319994 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.904868756 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.011241894 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.049992561 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.907788351 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.909843777 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.927902609 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.914806133 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.903099539 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.902788244 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.903888551 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.910390942 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.902777321 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.902670047 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.904158082 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.954745878 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.905440381 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.90209832 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.901556982 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.902687368 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.901636578 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.901843186 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.902211807 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.901340777 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.902149035 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.901622943 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.903954618 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.902239189 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.901954656 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.925198099 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.902556752 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.902879569 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.90134716 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.902751172 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.928232232 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.903212137 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.9016673 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.907991219 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.950998068 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.909392849 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.903542867 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.903231835 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.905185015 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.903584797 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.903144989 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.051964197 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.953026687 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.903848238 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.951532295 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.055618146 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.903232224 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.903385539 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.90357614 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.991491647 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.9031723 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.95289227 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.904019155 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.020970774 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.903991211 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.087668106 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.926140832 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.906441146 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.906400062 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.902638239 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.911204175 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.904042563 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.905434556 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.909911047 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.909638756 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.903404716 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.90594894 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.905392111 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.910995242 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.904977952 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.95450884 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.904660291 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.905301723 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.03831971 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.905546166 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.014452049 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.931589137 seconds)
  done (took 209.226709984 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.911728314 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.910716638 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.905374249 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.918838621 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.906325491 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.904908488 seconds)
  done (took 13.291067168 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.908360862 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.909783122 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.903981027 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.905211741 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.906317306 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.906824756 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.905396573 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.906415042 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.909773768 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.905665584 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.906306325 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.90549743 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.90837863 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.907899802 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.906354374 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.905707547 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.905607368 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.905162674 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.905582583 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.906311603 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.040851804 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.906933209 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.907283904 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.910323543 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.910284393 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.90590063 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.918962497 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.905379969 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.907049347 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.914115138 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.911867412 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.907911301 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.909359595 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.912156147 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.910749276 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.91034508 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.910966678 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.906908361 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.906003335 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.907949962 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.907134454 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.908521953 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.906610765 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.907114008 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.910868895 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.914954811 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.911387719 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.919338954 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.908180173 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.908755123 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.908147602 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.907625366 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.908727685 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.90778871 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.912104799 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.914291992 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.912239313 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.907930132 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.909338005 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.912176895 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.912416279 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.9099161 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.909779368 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.912319303 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.913440942 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.909386287 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.912598372 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.913576227 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.909015291 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.908452476 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.909073279 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.908334788 seconds)
  done (took 140.420600315 seconds)
done (took 566.930326913 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.652597503 seconds)
  done (took 9.48857871 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.920995275 seconds)
  done (took 8.763726168 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.894726183 seconds)
  done (took 10.73369845 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.925359659 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.938237036 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.916570152 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.912974904 seconds)
  done (took 29.543701761 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.102646998 seconds)
  done (took 8.942500463 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.922735691 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.909276062 seconds)
  done (took 15.736346105 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.025545233 seconds)
  done (took 8.865980756 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.335242187 seconds)
  done (took 9.189584983 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.927171874 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.942134425 seconds)
  done (took 15.729197197 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.91195816 seconds)
  done (took 8.751178483 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.675767125 seconds)
  done (took 9.591714766 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.929556161 seconds)
  done (took 8.788162431 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.939925366 seconds)
  done (took 8.780402557 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.024954628 seconds)
  done (took 8.864586522 seconds)
done (took 163.607133149 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.920338837 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.91088711 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.911074726 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.910670279 seconds)
  done (took 29.492487041 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.946614252 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.947406975 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.95388689 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.943976289 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.936181472 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.935414322 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.946794662 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.944645028 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.935288644 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.94173402 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.946101394 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.943535773 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.943018954 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.953035653 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.952941681 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.942466336 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.946016789 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.941720595 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.933767353 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.951860489 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.940394501 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.943587077 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.909865536 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.908142724 seconds)
  done (took 48.428589333 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.094042566 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.97379243 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.062729926 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.952355933 seconds)
  done (took 9.917909778 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.905867882 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.970468797 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.957694266 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.956123807 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.988480043 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.005445785 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.956937182 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.128701534 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.016411881 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.073586131 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.908217816 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.924890828 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.926436647 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.94582395 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.000238858 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.89732939 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.897556154 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.013840709 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.956421183 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.108320147 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.894508716 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.94895704 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.9798228 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.944820669 seconds)
  done (took 49.142248015 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.892790612 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.901749685 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.901457872 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.891642779 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.89223381 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.891673282 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.899737711 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.894170997 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.912072936 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.889191222 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.888989213 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.889142463 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.894186229 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.890736326 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.886829109 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.899804613 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.900386078 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.887837368 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.891732427 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.894880879 seconds)
  done (took 39.713025568 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.881476589 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.724932535 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.224886409 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.131241594 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.880692617 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.881257484 seconds)
  done (took 31.536295917 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.894153548 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.888279362 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.880976119 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.939136926 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.019236372 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.888280253 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.8807414 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.892736342 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.928444201 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.949219749 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.90391157 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.912761971 seconds)
  done (took 24.78981208 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.880838551 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.881165824 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.881636287 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.892022944 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.889568073 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.887140316 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.889808059 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.882792715 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.889542157 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.895190931 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.883881882 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.884992255 seconds)
  done (took 44.454143989 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.088311599 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.099206607 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.091462542 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.515363739 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.863479364 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.768658024 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.488049468 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.652850506 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.209205419 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.891064634 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.884395696 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.997835169 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.158401113 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.911142333 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.159904103 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.83387297 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.910984393 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183322757 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.908837492 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.908961083 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.195669778 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.956140619 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.12143083 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.950651693 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.116664034 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.386981992 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.153020408 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.157357882 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.239974095 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.956247409 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.145898118 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.967050659 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.921730698 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.922027222 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.913953155 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.923781005 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182058088 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.913024276 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.923161041 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.914532758 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.845943177 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.242722193 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.034854839 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.339072579 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.047506749 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.157794215 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.921534465 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.137998286 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.978927753 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.176669437 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.026288757 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.13077141 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.844647144 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.272290561 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.048249512 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.920336479 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.92313687 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.618543754 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.160773567 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.999440665 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.255251399 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.036342132 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.921057908 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.005701796 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.919505931 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.031758704 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.111175185 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.924141997 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.920401035 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.925801739 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.01636751 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.134659603 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.920254781 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919530517 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.935781838 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.921720602 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.269541331 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.521031603 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.915024871 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.477524646 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.404618608 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.893270907 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.405979173 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.970442076 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.20367397 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.303342265 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.000101969 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.164383474 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.80437245 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.923718729 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.727776297 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.003996642 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.98364946 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.919706313 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.146978651 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.236687026 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.040383844 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.921266556 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.84673885 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.93256385 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.124507384 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.415120751 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.984204971 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.922620338 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.920495201 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.9239155 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.921627285 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936855683 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.936261722 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.840329935 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.209452754 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.038924005 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.176434894 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.914424111 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.607217571 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.189847639 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.048570016 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.52360871 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.055768113 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.92219193 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062852964 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.935571906 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.924474459 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.112096789 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.340395112 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.145045216 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.174091609 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.986645309 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.956690761 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.92785696 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.005511582 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.148292352 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.923631548 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.178915616 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.169062168 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.576285037 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.987386333 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.995981571 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.930663219 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.137005014 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.007523021 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.455903639 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.149321369 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.529282912 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.919246686 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.520447644 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.200483227 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.312310802 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.937668314 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.149713795 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.961072794 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.624886245 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.84947665 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.927940804 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.258715724 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.963468176 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.028503595 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.925519062 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.925937676 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.931610726 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.008657884 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.000704524 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.999421742 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.851210557 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.927676604 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92677256 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.925715364 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.464422375 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.667122351 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.216601035 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.92491421 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.998206148 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.926778815 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.524195615 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.928402491 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.958931186 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.930994095 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.693722052 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.955597227 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.201699828 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.332511003 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.046619978 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.925446051 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.928519002 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.626667293 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.935248401 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.625468074 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.214835332 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.926864043 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.37097539 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.991629976 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.00521886 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.945563239 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.932441013 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.930895519 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.931332438 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.13182474 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.44670401 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.278718189 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.275551791 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.011046442 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.20016376 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.121601591 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.419969908 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.61956151 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.443203481 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.155682882 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.931473224 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930156024 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.50722181 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936744739 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.147030298 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.131846054 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.208311973 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.23454253 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.3464275 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.935448145 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.945413685 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.172219171 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.930666505 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.37482199 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.99735972 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.30502472 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.744975235 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.195173377 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.998170234 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.942545306 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.577563958 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063607907 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.886177539 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.058923535 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.856642858 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.622236975 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231853062 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.208663873 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.913875354 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.268763097 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.228541878 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.20889263 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.566538684 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.931301376 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.980626017 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.013157 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.940209135 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.50428639 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979132683 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.989183937 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.937862566 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.932178195 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.933197505 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.614598959 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.01039938 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.063789159 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.684272557 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.452360043 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.848855542 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.203579338 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.991043515 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.385281987 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.975218372 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.145469129 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.93634435 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.54624465 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.987508197 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.211193836 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.891456929 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.145946627 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.140872943 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.959594451 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.939142636 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.85909768 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.808654283 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.937112334 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.167637385 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.875373487 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.93587841 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.226812035 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.60475699 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.974616025 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.935061593 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.277877766 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.372527398 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.117942719 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.941968289 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.146012255 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.061182859 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.852661308 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.42976219 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.521369808 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.634223606 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.945053161 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.137504881 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.281254667 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.273287119 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.978371304 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.004737629 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.201864047 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.921376614 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.934823708 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.454692118 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.032702884 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.173986286 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.248988578 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.455032533 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.35138259 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.18278597 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.937437799 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.154410822 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.302376483 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.182993698 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.992643815 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.025883335 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.150606546 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.22123387 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.818797892 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.644222773 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.176544557 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.940768461 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.862724682 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.145212505 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.445787432 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.303113734 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.475148746 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.170052294 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.969162939 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.427855113 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.952718208 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.871167669 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.937695381 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.885943897 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.15061522 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.164468746 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.982570174 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.493926373 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.218969607 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.349109007 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.229565873 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.981155719 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.862325734 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.638674407 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.888096694 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.004799928 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979556117 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.010502689 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.939926989 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.140228558 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.375237868 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.992174209 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.474139565 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.152700912 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241207264 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.208723756 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.248704678 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.897952639 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209642673 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.887110241 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.467095212 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.035352806 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.013305679 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.937402125 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.937868895 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206370234 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.273430749 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.558065889 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.98021619 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.298503322 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.047187236 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.940627306 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.944196578 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.45129827 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.181363791 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.153802943 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.016425891 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.138203019 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.011821833 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.453666211 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.944805861 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.941567281 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.074909432 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.93948453 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.657531603 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.237637293 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.684728931 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.141950754 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.461528775 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.861163972 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.1714377 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.991152227 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.93906035 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.066300371 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.945231101 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.180354724 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.208609045 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.706165739 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.945307193 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.94101966 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.846467925 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.666744841 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.178542757 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.950424706 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.007189015 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.939944748 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.056476276 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.944569866 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.20151069 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.993599334 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.931950003 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.944038844 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.144619334 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.445661369 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.948208082 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.629084605 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.131896427 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.937504909 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.418958431 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.388853855 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.228617633 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.975266183 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.154540692 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.18310373 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.462283067 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.150080986 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.929198466 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.152101071 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.927370285 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197409608 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20098154 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.928042566 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.142351899 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.407890779 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224636449 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.939346156 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.803986254 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.933036734 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.193235717 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981369282 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.924453048 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.93131209 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.921720873 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.664988136 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.419198389 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.105050928 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.292094549 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.754337235 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.70590238 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.942984221 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.943309271 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.632393615 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.671619895 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.156194569 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.227739497 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.890126483 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.146731111 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.648130271 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.943545368 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.206118849 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.870264141 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.94651236 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.472415253 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.22367113 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.879131525 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.948763624 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.517823425 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.943562528 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.030891983 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.945230527 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.071060106 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.214183614 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.356317628 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.063206513 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.583689517 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.693665094 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.887563091 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.003532726 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.748625102 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.503640141 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.650530956 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965148243 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.956965007 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.867614804 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.942530682 seconds)
  done (took 1669.863355767 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.940530161 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.058910083 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.973341368 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.956895673 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.00208588 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.000999883 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.97754574 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.939797502 seconds)
  done (took 57.715990219 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.92047033 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.93755807 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.922870405 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.919611483 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.931802336 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.918082819 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.078139207 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.928963182 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.921576343 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.921602012 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.928413867 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.915701476 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.202540473 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.938712702 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.918494667 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.917526981 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.921328216 seconds)
  done (took 75.038962913 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.921373921 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.153514551 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.969908616 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.919944624 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.877302927 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.934251979 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.899547059 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.948123613 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.925079823 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.160629499 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.215687068 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.946572259 seconds)
  done (took 90.719413174 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.923773363 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.918475873 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.919150206 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.918879634 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.917999203 seconds)
  done (took 11.449752847 seconds)
done (took 2184.16741983 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.16334191 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.977652014 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.018829022 seconds)
  done (took 5.844271808 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.067239214 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.111537075 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.223821557 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.985602104 seconds)
  done (took 10.243330964 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.176685449 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.294012804 seconds)
  done (took 6.318003229 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.287515298 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.926713486 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.292394478 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.923048416 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.921718325 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.923439427 seconds)
  done (took 22.622372302 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.921081739 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.919986828 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.921026665 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.920442486 seconds)
  done (took 9.53117027 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.917966282 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.656234952 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.922508766 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.929704664 seconds)
  done (took 21.274378058 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.063042779 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.032034865 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.058408948 seconds)
  done (took 8.001476431 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.139969735 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.136371264 seconds)
  done (took 7.125021837 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.061914297 seconds)
  done (took 3.910084008 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.947931019 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.19138742 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.443372638 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.483145249 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.56989187 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.712695548 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.249123167 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.169739199 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.360553528 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.380484137 seconds)
  done (took 25.357273022 seconds)
done (took 135.746098742 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.274799963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935881277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.130124474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.289092351 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.15819425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.121922143 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.145212942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.281537551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.963670406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.949834259 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.285709599 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.146443803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.088148999 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.939577055 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.090842954 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.934554448 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.145843744 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.290084594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.968131183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.21152449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.151579301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.933845497 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.13036882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.945927219 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.146203226 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.095893864 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.475847011 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.936839967 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.116628387 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.486271253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.076681099 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.349874196 seconds)
  done (took 170.04924885 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.923529053 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.923187425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.948355729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.923562305 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.184377084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.924176876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92501878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.923993471 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.126891062 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.10474768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.923806352 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.171932776 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.925521947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.924312002 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.924578383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.924197268 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.253506975 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.923375362 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.924360663 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.924082417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.925263928 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.020016065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.923892125 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.027622152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.242413974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.925112132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.925476404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.925189995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.925668107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.924398196 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.924634486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.926361414 seconds)
  done (took 209.196767922 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.924338332 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.922917381 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.926364665 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.926844757 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.926538039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.927928367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.928486462 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.926225955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.645811738 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.634186743 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.924609762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.924898291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.926565752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.925626553 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.928049799 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926206955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.925605875 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.926351339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.926752677 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.926312893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.928299676 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.656985661 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.926330063 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.674042226 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.926065643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.928932665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.92648923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.926600988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.926106905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.927270833 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.928160946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.926417622 seconds)
  done (took 222.408055588 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.173294212 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.926973303 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.928424912 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.967954673 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.928437421 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.927953407 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.925276461 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.174027394 seconds)
  done (took 19.807569658 seconds)
done (took 623.327470961 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.256391575 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.641194047 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.077049553 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.952701798 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.19597491 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.00325149 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.945671045 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.012335947 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.788570245 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.023843714 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.356828463 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.954814792 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.717513453 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.977051667 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.071065423 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.009069173 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.30932324 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.644253233 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.089339299 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.616536331 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.117047071 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.895040931 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.027014667 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.822866199 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.374317379 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.916479923 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.00210817 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.31115204 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.952227675 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.111144677 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.589772797 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.234646315 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.965196638 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.94973896 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.000428159 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.979876887 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.175480361 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.960114446 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.07216848 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.686091147 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.622618776 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.668832995 seconds)
  done (took 102.934954365 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.937922689 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.934625672 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.934655293 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.935141348 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.943910741 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.935337897 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.935392022 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.934973768 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.93387768 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.934866133 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.935097321 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.944119364 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.935365192 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.944569638 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.935372329 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.935374607 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.935463243 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.944127988 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.935245004 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.935981238 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.936377493 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.935301595 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.932887262 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.934967134 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.935057274 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.934357656 seconds)
  done (took 52.225663896 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.931320234 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.101237874 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.176219762 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.952763443 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.932215541 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.9341324 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.961668072 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.940121646 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.934762835 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.935434003 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.051591516 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.938296012 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.945874944 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.177384356 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.950275456 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.932982064 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.932053727 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.933240696 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.106722076 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.951550893 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.963639794 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.941163016 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.962770753 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.948155063 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.936025139 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.933558758 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.936784701 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.352076136 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.945935671 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.052203011 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.976543991 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.967018719 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.323340576 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.191118446 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.989967871 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.940662085 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.934119654 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.056568999 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.940138141 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.934782351 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.963056323 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.942436494 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.183619285 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.471596887 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.950010553 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.934092793 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.356754029 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.069324506 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.975754453 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.945722315 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.188359091 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.953716516 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.9341857 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.936982343 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.970543499 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.946322203 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.934689696 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.225626868 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.950688589 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.963756264 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.941980476 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.936285458 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.117862361 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.945853058 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.105236119 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.946597013 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.942705322 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.937163481 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.185308064 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.954170179 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.481694899 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.952329352 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.935000451 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.054526614 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.111849422 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.379673794 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.950056923 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.119099975 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.342513516 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.973413054 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.947093296 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.339289415 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.979311268 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.947653774 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.936080568 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.936690069 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.936098316 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.982810425 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.962496681 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.400238688 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.480039275 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.242916116 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.976251123 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.9499111 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.937267557 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.227965699 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.948310931 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.939868115 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.174668617 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.493760623 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.953274506 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.944537502 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.460837381 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.955544 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.966418938 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.949174933 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.199883363 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.955950006 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.985753217 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.937664493 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.94394966 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.940903199 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.968043111 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.947902101 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.937993881 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.455236056 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.079339246 seconds)
  done (took 240.244764385 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.939054066 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.936696104 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.937239025 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.937306666 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.935863624 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.938713237 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.936524651 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.936063442 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.938080544 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.937152765 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.9364014 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.938650721 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.938551971 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.938487732 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.982231685 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.940423175 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.425142753 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.937886193 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.938092461 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.939950825 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.499781311 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.942536225 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.937746857 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.938444588 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.937900055 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.939271834 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.943237423 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.981225484 seconds)
  done (took 169.279166839 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.939482361 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.994398985 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.952482943 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.987563766 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.952778846 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.940341583 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.03552407 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.95723463 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.945848808 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.941056344 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.940916968 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.973151192 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.947912055 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.036793491 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.973099613 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.047894779 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.042463698 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.948360243 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.939900576 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.940456271 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.988429028 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.954652132 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.972001552 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.004481592 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.953792276 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.997340782 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.952310623 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.94150317 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.940395635 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.054998522 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.959768362 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.972146082 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.976526475 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.962332604 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.058817158 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.054578015 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.042870686 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.042995078 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.946527483 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.941006091 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.941195868 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.942903229 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.997364815 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.955014443 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.942928767 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.058214855 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.959625208 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.942171077 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.942068127 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.943629958 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.955685174 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.959835345 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.978947463 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.065260254 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.988559251 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.96823905 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.038015708 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.058886724 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.94437234 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.038219564 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.949995022 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.055761124 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.960659368 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.942958546 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.943022835 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.946311127 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.99084738 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.052845986 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.044469423 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.950089802 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.039499235 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.998369396 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.956642719 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.944944797 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.94453056 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.000188081 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.055902565 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.99847736 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.003952565 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.978952019 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.95645151 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.945198749 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.944253419 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.970835454 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.951398188 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.057705164 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.056760142 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.950046935 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.944428511 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.944805663 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.945480374 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.970986718 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.011023879 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.984662596 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.050365859 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.981474684 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.983811903 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.95285504 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.957865475 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.949573919 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.977497545 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.952798382 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.956945458 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.219858941 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.976428085 seconds)
  done (took 210.004299998 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.311772704 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.988716734 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.01905519 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.230270599 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.307899437 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.840750582 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.98609983 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.997358669 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.01484516 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.121167833 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.063580165 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.037400774 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.984270256 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.971058221 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.989024301 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.017985284 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.020106234 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.29692977 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.190045279 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.467581668 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.989298885 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.291262814 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.312945255 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.370473475 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.048035835 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.388113677 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.608567382 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.090531643 seconds)
  done (took 64.833668072 seconds)
done (took 841.380165641 seconds)
SAVING RESULT...
DONE!
