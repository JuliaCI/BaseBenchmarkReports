cset: moving following pidspec: 14473
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.179606333 seconds)
loading group "string"... done (took 0.533512696 seconds)
loading group "linalg"... done (took 9.766985174 seconds)
loading group "parallel"... done (took 0.1657502 seconds)
loading group "find"... done (took 2.489816179 seconds)
loading group "tuple"... done (took 2.30986674 seconds)
loading group "dates"... done (took 1.427692336 seconds)
loading group "micro"... done (took 0.569732512 seconds)
loading group "io"... done (took 0.564609389 seconds)
loading group "scalar"... done (took 54.318837394 seconds)
loading group "sparse"... done (took 13.527224792 seconds)
loading group "broadcast"... done (took 1.244364698 seconds)
loading group "union"... done (took 2.626535226 seconds)
loading group "simd"... done (took 3.64081007 seconds)
loading group "random"... done (took 13.675687096 seconds)
loading group "problem"... done (took 2.3264133 seconds)
loading group "array"... done (took 23.763033943 seconds)
loading group "misc"... done (took 1.086992213 seconds)
loading group "sort"... done (took 3.735999748 seconds)
loading group "collection"... done (took 20.719956832 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.767657988 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.16645873 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.247182019 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.307793271 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.303906505 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.21057503 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.204923302 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.169597606 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.660076415 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.240132149 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.19768891 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406710341 seconds)
done (took 6.687377389 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.401768861 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.14725894 seconds)
    (2/2) benchmarking "String"...
    done (took 0.218150567 seconds)
  done (took 1.014022247 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.139698349 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166837277 seconds)
  done (took 0.951634041 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.138933326 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.172980608 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.149488869 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.13642082 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.151582528 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.134765474 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.150655976 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.1506444 seconds)
  done (took 1.690649603 seconds)
done (took 4.840929245 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.535351579 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.9891169 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.573355696 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.206791624 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.362204959 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.319683426 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321716643 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.278975318 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.142841944 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.119330711 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.218586683 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.503064775 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.479951253 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.015446961 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.103839111 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.160083975 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.179241536 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.883440694 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.129882452 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.159450633 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.54101663 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.264837936 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.164181139 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.140475215 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.315981883 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.181704777 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.173551348 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.151401282 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.778493776 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.18540296 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.247847346 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.130004097 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.173686702 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.205622818 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.288586583 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160564704 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.789902046 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.253243722 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.129684353 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.150435265 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.82751157 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.177174044 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.246733554 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.152983556 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.117343071 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.195037154 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.149713432 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.125908744 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.163177706 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.148635614 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.227180887 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.516319317 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.153715495 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.236245274 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.157427823 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.789723211 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.152613086 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.341478524 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.187212373 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.15769148 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.126428734 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.152161115 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.219003146 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.143277829 seconds)
  done (took 23.642486849 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.214555338 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.230602543 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.14427918 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.209582858 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.181619615 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.148813217 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.139996882 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.146240262 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.167124523 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.250699367 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.193494226 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.24571619 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.125261449 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.161085208 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.208299516 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.286505689 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.179840863 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.177011649 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.141825623 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.164203193 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.178468836 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.168877177 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.162590338 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.147029269 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.226643876 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.259576093 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.173451667 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.175572316 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.157913084 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.147976724 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.192944919 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.218770116 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.129407239 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.156881194 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.22876569 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.176019514 seconds)
  done (took 7.289161661 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.272949968 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.151585674 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.279423476 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.174840263 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.239046933 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.194655405 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.22814305 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.217083655 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.321712378 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.250458197 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.544746738 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.230146458 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.180202317 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.145784489 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.144623027 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.138950946 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.146810093 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.898586092 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.228112057 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213433472 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.228263128 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.163024259 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.136124539 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.773961036 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.138780832 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.153414696 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.146676269 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117421887 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.264877696 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.145769009 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.534941465 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.151304443 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.161915407 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.163238507 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.255455886 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.192386222 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.172746585 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.160769772 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.21906095 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.25931058 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.133875972 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166268803 seconds)
    (43/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.025825022 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.13386815 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.146926583 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.183501849 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.169801612 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.155964757 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168919736 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18161409 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.135746083 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.175606989 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.912147388 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.135824424 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.247089358 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.206394236 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.154222869 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336918284 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.153836897 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.166124519 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.157502976 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.240818295 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.173983566 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.149908209 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.129746616 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.147492869 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.158417466 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.129274974 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.167981176 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.415319342 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.135384972 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.163592728 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.16588778 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.756221967 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141189045 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.155337051 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.159820289 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.154909451 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134805054 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.153625974 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.132697763 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.158854265 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1243087 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152381621 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.128824791 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.213587923 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.147146788 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.171163127 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.174851226 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.140003758 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.151064148 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.180081959 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.13183375 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.152933671 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.226991971 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.163070926 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.127071655 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.162815713 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.192851228 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.139912017 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.259396143 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.137442985 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.177000598 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.152799093 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.16217474 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.16358157 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.127850913 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152079001 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.146768921 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.135687765 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.212834619 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.140822222 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.14924431 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.143367624 seconds)
  done (took 29.023789364 seconds)
done (took 60.598944932 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.413816548 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.114468686 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.112857701 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.133324195 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.113023984 seconds)
  done (took 1.614287535 seconds)
done (took 2.322457156 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.235634896 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.34006216 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.253351683 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.153883032 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.219652596 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.218923929 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.203316109 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216691564 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.218562018 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.237449134 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.134603522 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.245470534 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.234779897 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.225601641 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.130945433 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.260452341 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.212104174 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.216184298 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.258026123 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.154334726 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171092529 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.155866334 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171803028 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.14044391 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173153564 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.156830671 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.174403059 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.157757893 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.169082976 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.143760226 seconds)
  done (took 2.48727022 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.200150141 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.154865511 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172066233 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.145777325 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170648473 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.139466607 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171904173 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.155656457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.178633694 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.154448666 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.171180178 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.143065975 seconds)
  done (took 2.478237063 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.158069944 seconds)
done (took 10.276863214 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.769049388 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.208861524 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.206678177 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.345198814 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.705413367 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.32880744 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.691776387 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.253189281 seconds)
  done (took 18.340205142 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.169436802 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.166223473 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.146692689 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.163939813 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.199666947 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.164787079 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.147303818 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.168350585 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.146422678 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.166221666 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.148530424 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.16429264 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.148480131 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.16802811 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.146814009 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.162509886 seconds)
  done (took 3.357077569 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.171071511 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.18580174 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.147717901 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.168878229 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.145557855 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.164549046 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.148857082 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.1672859 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.144885908 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.163307678 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.168511685 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.152942698 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.168620413 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.14945251 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.170410424 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.157134692 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.16608428 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.153281453 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.171615641 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.154324909 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.172045771 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.151253167 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.170190829 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.153571623 seconds)
  done (took 4.663687591 seconds)
done (took 27.083306252 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.202897384 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153193639 seconds)
  done (took 1.089184138 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.205705098 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.224770126 seconds)
  done (took 1.172110667 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.170636343 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.158128528 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.1735001 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.169419724 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.141646033 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.160280225 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.184033562 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.142482292 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.160241988 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.142845803 seconds)
  done (took 2.347861022 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.146373512 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.162446441 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.159070689 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.216477827 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.155501629 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.169913266 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.1500661 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.169462506 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.168183237 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.148262227 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.167991376 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.165168562 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.170744961 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.166482126 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.169443306 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.152089494 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.173363816 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.149757957 seconds)
  done (took 3.706723978 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.14219173 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.142991603 seconds)
  done (took 1.033243031 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.145003249 seconds)
    (2/7) benchmarking "second"...
    done (took 0.159149241 seconds)
    (3/7) benchmarking "month"...
    done (took 0.144770601 seconds)
    (4/7) benchmarking "year"...
    done (took 0.162944104 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.14754384 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.16344687 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.147342053 seconds)
  done (took 1.816169378 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.637764608 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272856773 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.431409568 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.125490673 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140025551 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.373719242 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.158072994 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108568323 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.128041025 seconds)
  done (took 3.151772972 seconds)
done (took 15.059949201 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.142950496 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.230943916 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.67386606 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.164142788 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.161367393 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.203893619 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.360624062 seconds)
done (took 2.68962391 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.378376892 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.190249482 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.125225289 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.150500476 seconds)
  done (took 1.594163487 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.134126986 seconds)
    (2/2) benchmarking "read"...
    done (took 0.171726698 seconds)
  done (took 1.069236685 seconds)
done (took 3.423259345 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.158660817 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.162388972 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.1506821 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.169040513 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.151650116 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.167064784 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.151173774 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.165197499 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.150193223 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.165678786 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.150067185 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.169074153 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.148603767 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.167789368 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148635906 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.168238425 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.15152118 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.165688751 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.148131153 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.16912012 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.15020357 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.168597083 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.151164736 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.168466341 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.167042878 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.150807774 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.16585946 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.148074626 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.16958288 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.152230922 seconds)
  done (took 5.523902254 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.174669973 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.161013885 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.146578543 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.17418558 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.144804196 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.165396588 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.144088277 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.143993299 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.292004816 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.146330853 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.167542007 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.147104585 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.163081018 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.148909798 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.166725967 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.172587506 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.175348774 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.145036421 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.163223326 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.149490064 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.169301114 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.14377698 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.166004784 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.148068969 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.164766274 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.144220741 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.164731776 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.148684452 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.16661535 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.147609543 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.169773082 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.152245051 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.1659263 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.157720422 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.168733009 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.147840877 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.17246644 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.143875734 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.165939574 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.14426333 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.162854178 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.147209665 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.161242154 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.155248809 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.166137542 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.148349613 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.144710558 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.166742634 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.148329612 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.168736274 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.144485718 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.16360008 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.150388569 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.167178762 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.150318035 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.163360341 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.149696405 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.164151992 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.150452215 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.166724928 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.145228988 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.162675536 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.153553786 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.166576558 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.165244283 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.172804242 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.145754972 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.167831404 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.149133744 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.173459557 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.151835707 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.178535532 seconds)
  done (took 12.285450084 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.146182216 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.145699655 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.1669132 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.148328237 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.166768745 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.149186545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.167348349 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.148421419 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.166505308 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.148865392 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.167155674 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.149093176 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.166957577 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.149656648 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.166793052 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.148572816 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.166939095 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.149134706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.169023349 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.149585566 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.167797656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.149647088 seconds)
  done (took 4.228410399 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.292322119 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.150708837 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.220806502 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.177650155 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.169030784 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.180629553 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.152888639 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.174604972 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.154110808 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.178883732 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.158549525 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.175106864 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.187438515 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15987585 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.177807469 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.162904567 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.173839699 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.161152935 seconds)
  done (took 3.98523267 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.145010019 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.14407277 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.165776907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.147297279 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.169694922 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.148968951 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.169006144 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.148968278 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.168075004 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.148041745 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.167021373 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.150086374 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.167976355 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.151000158 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.169149097 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.150645123 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.167647547 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.150446126 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.168088395 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.150290749 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.146745321 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.168584003 seconds)
  done (took 4.243751424 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.160083152 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.168362208 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.170453183 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.174483074 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.151545059 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.171916945 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.158672287 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.172886056 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.158843767 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.17132986 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.151567782 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.171821321 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.167872554 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.172032384 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.15799254 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.172888369 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.152999747 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.172526972 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.15186186 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.170804723 seconds)
  done (took 4.082890943 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.238871794 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.187110372 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.188113135 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.178796067 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.184967948 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.163089086 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.193456904 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.161081112 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.18292333 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.196744527 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.164692359 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.185763845 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.178186464 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.193390976 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.168720414 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.196730807 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.19417134 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.178055362 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.191031192 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.165860523 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196536078 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.186054803 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.177657931 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.190060774 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.169985958 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.189138825 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.168102476 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.194875409 seconds)
  done (took 5.951058427 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.1576438 seconds)
    (2/2) benchmarking "in"...
    done (took 0.176129932 seconds)
  done (took 1.124566859 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.148379661 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.148163856 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.173568873 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.152056151 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.173909103 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.155384867 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.174059054 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.153090712 seconds)
  done (took 2.066526913 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.212942733 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.237078463 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.180425819 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.165822287 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.247104264 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.234752676 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.238129876 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.159907329 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.177238041 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.146261336 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.238629671 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.14451365 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.177360243 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.171890088 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.155494371 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.178289187 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.153890733 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.183146484 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.16186903 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.175578325 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.158964098 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.180203364 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.157806519 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.18250665 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.149639226 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.179339166 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.158515485 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.184415821 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.150781089 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.176971055 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.152691695 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.175829305 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.156999887 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.175820617 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.154096343 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.246127905 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.183056329 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.151792481 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.177607301 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.158664261 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.209073817 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.154539617 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.178301146 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.153745897 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.179876666 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.158400106 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.181721866 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.150507401 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.167262164 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.149994124 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.175943655 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.149752217 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.173781479 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.15597123 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.179410307 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1784681 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.158849109 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.171567458 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.151084321 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.170064633 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.155122077 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.172015936 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.157389763 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.175089042 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.157074712 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.175969576 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.155714417 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.172454137 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.153319326 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.174013555 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.155352912 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.214135459 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.165965944 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.177018356 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.15728527 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.172989552 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.150239428 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.177644787 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.146419565 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.172836866 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.153256029 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.201221538 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.169856535 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.145456895 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.165017025 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.155780181 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.170801518 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.157095711 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.164512756 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.165536054 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.170908237 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.152270687 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.163059778 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.15043713 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.166126633 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.156584687 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.165588304 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.151846362 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.170066885 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.152995658 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.17396243 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.149634673 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.172298705 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.158398309 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.176345603 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.154356119 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.223211576 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.166032432 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.149617026 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.171563201 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.158388134 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.16673094 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.15358311 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.170511319 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.152271866 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.168077901 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.156939891 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.170804009 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.151682512 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.172286626 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.151282079 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.173484567 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.160190624 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.177728511 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.152749459 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.178915633 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.164084862 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.179422577 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.157823254 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.173850838 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.156473625 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.174184438 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.156111796 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.168531498 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.156311024 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.170949623 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.153115549 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.175367604 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.163190429 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.178794026 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.151759218 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.177213695 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.155526618 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.172668517 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.154324724 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.173997023 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.144948883 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.16352889 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.151413271 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.167234993 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.150296253 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.176733218 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.165469998 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.156082817 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.166532526 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.165431349 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.168214858 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.155618339 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.173152695 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.156346391 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.173818221 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.142435817 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.167150601 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.154576558 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.172158792 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.146494606 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.17090818 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.14995401 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.175995735 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.14348984 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.173731142 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.142872799 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.180081051 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.154293822 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.17181934 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.154941329 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.16490692 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.190414132 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.182183074 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.157998449 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.170480052 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.149735066 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.175900372 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.156072029 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.181622604 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.159845393 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.179286343 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.148952907 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.171264695 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.156099893 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.168306214 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.152673862 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.174269829 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.151926689 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.166863377 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.1510473 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.165342374 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.154794194 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.175434049 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.156131724 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.179226309 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.157232481 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.175536958 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.161950843 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.175260877 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.156730914 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.165359618 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.154626379 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.180836201 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.159830496 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.178610059 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.152526516 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.170465454 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.149683733 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.17851981 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.152332433 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.171781568 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.153568435 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.166646116 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.143341698 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.177809785 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.151812417 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.166336877 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.148450254 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.174495361 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174139394 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.148793478 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.16474671 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.156065616 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174940957 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.14693444 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.176608581 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.148942681 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.173559165 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.160043157 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.166200896 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.148667773 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.179943835 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.162212851 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.178529542 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.157173146 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.17892609 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.160051008 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.179216445 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.154086089 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.172681434 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158449818 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.171013542 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.15338505 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.170305764 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.152331483 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.164964452 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.151866673 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.173743605 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.148444669 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.170012525 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.157266755 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.181926337 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.158025737 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.170524432 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.153929975 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.176612437 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.155960647 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.171102755 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.153919073 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.168662394 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.14653224 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.177138636 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.151153146 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.182753862 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.149489444 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.18229394 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.149730428 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.171938463 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.157187309 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.183652365 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.17405472 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.157226684 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.183071313 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.145741958 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.167067296 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.149531837 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.172306436 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.151013525 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.172828452 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.15388033 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.173985205 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.155837708 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.176927541 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.151002093 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.176442505 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.159667454 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.173963455 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.158879033 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.182503395 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.155949995 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.171530217 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.15511816 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.173557384 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.155774008 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.168710786 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.153614767 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.175881964 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.152623295 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.172249233 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.14853588 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.168041108 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.143387546 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.168804539 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.17744752 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.154649109 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.176600254 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.152389897 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.171656661 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.149123654 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.166637407 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.160419772 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.172715712 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.158185436 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.175668717 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.150947449 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.171956728 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.165725245 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.179385897 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.162927699 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.169988027 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.159308364 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.182384499 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.157374655 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.176138669 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.167938671 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.184169885 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.162261802 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.178216108 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.149274694 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.172497261 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.157133024 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.174039711 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.154860808 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.177208405 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.146877821 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.173817276 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.157533943 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.175996505 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.150942684 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.166454964 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.153512363 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.181272699 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.155030289 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.174554239 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.153225179 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.173533006 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.149115112 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175803736 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.157681503 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.173656312 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.158654326 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.173411445 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.15683093 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.170264183 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.158107482 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.173017431 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.147092405 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.167154004 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.150433777 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.179163476 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.146116371 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.177116959 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.156093109 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.170860728 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.150940584 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.178607139 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.149225611 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.177106071 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.156001599 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.171206515 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.161920474 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.174729888 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.150561923 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.178238609 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.157299523 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.170151944 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.151857325 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.172041228 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.158017403 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.173348281 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.156868617 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.173290258 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.156587266 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.175245349 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.157229771 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.17935875 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.157497537 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.171845149 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.159442574 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.179387753 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.155846087 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.172231099 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.151857607 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.168931661 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.152127161 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.182899793 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.154062504 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.184506805 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.180674602 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.154591997 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.176118941 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.158596889 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.173742975 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.160793391 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.169382641 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.155861408 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.169722841 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.155314489 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.173012316 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.159249745 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.171317976 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.149077801 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.177870547 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.157446143 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.177380007 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.157648081 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.180808068 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.148155686 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.169622263 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.155286571 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.171131297 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.162436727 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.178026337 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.15248255 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.173733492 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.156069579 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.17637204 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.159340951 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.169606713 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.151607534 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.175893942 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.155177935 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.174132036 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.148199274 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.178335099 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.152754072 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.179189447 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.152752105 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.171104927 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.156811596 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.183046317 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.15214938 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.17230533 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.151153227 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.182260738 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.153055402 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.17470494 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.150161242 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.184534656 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.178830124 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.160480395 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.171262017 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.155277164 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.171828724 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.157369463 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.181540747 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.15391849 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.177431467 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.1539504 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.183975145 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.159455146 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.166350194 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.152377301 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.183388359 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.158365566 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.178226796 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.157279044 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.17582994 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.160340176 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.181659116 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.157459929 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.1697758 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.14961968 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.174301807 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.148167173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.17817846 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.160353415 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.176317465 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.152344065 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.181246651 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.157653126 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.179060099 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.15614265 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.170394685 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.159728747 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.174074821 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.157595743 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.170665296 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.151140793 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.180910059 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.159063822 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.17652508 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.157794449 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.183240207 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.158089327 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.17285419 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.153962346 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.184393809 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.161412268 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.18631804 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.158548664 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.179769597 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.158802767 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.189956688 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.159283056 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.183758723 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.164008909 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.184715658 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.155540046 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.179995047 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.182328753 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.162234045 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.182412478 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.163894564 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.178399575 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.156551833 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.185914122 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.165492352 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.18559409 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.154595055 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.171783388 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.16288131 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.17643151 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.153665666 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.185854631 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.170095344 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.190202048 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.158115065 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.177162406 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.164367612 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.181550161 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.155366782 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.177993772 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.158093593 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.184960817 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.152123651 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.182693125 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.153423706 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.186044606 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.162183686 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.183966304 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.162430967 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.174493713 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.160638638 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.180426335 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.161809485 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.179314019 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.149935106 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.174241079 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.156919032 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.184458359 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.161571489 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.180810017 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.159022274 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.186076169 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.158644518 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.177951319 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.153838552 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.184825537 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.162733576 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.17799868 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.158983053 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.176229071 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.157540296 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.183468575 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.16424161 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.185732706 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.158618461 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.190467794 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.162495629 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.18240149 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.152578556 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.178759122 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.158915608 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.182315466 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15969461 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.175778834 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.152754103 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.185304056 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.163516835 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.178860779 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.189749152 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.165487757 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.176793153 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.159977029 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.189434587 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.163225691 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.181678179 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.162918791 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.183151175 seconds)
  done (took 100.23722763 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.207120445 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.18944524 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.159420355 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.182654399 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.176010632 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.183448614 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.158191097 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.180803588 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.160328904 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.191401191 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.157032001 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.180629 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.172926642 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.203476743 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.196267857 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.168739116 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.182366843 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.158852378 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.179726271 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1591823 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.195482508 seconds)
  done (took 4.629157395 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.15870445 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.15630137 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.179976693 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.158466442 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.179605001 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.157351786 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.179721871 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158156171 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.179874436 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.159121351 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.178864407 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158463189 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.178800184 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.158057954 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.17888565 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.158021942 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.178860834 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.158631851 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.181428524 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.158703546 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.179811911 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.158028355 seconds)
  done (took 4.583858256 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.187876593 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.183533273 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.156482353 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.157587164 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.184590631 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.159499861 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.185606534 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.158208561 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.188242377 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.154154693 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.173853863 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.152758988 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.183290106 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.158337262 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.179765643 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.160919688 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.188911188 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.161617463 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.188378265 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.163757852 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.175514772 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.161708141 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.182730759 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.149830351 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.189576854 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.163072386 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.185783902 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.161786091 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.174027057 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.162402686 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.181443192 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.153963345 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.171546825 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.150507885 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.172416876 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.164639295 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.185941529 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.161880314 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.160534018 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.17400368 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.160917905 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.187203974 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.149715996 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.184344882 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.159700827 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.176381768 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.164470817 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.18459343 seconds)
  done (took 9.073967257 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.187898421 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.22010586 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.16320796 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.2136455 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.197079409 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.168457884 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.186258823 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.192714382 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.187479798 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.163571954 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.198853273 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.200884221 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.165567437 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.189196355 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.166760876 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.188435629 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.167009519 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.186154238 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.16838982 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.186355718 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.168862778 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.188972044 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.173149129 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.196116938 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.190181566 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.16492931 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.186208918 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.168366505 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.196243798 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.168937281 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.189698373 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.167567242 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.197533171 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.163653856 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.187499316 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.165520173 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.197638728 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.187482668 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.166629842 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.184752483 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.165155098 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.193629921 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.166648728 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.197476194 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.166619749 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.190204055 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.165581247 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.187262518 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.171512206 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.191132804 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.193624244 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1807732 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.195245583 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.170687309 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.197467586 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.178510114 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.194464862 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.163290322 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.188959404 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.196960336 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.165711232 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.190088068 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.178580381 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.192017087 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.175127403 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.198355397 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.170904726 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.188902291 seconds)
  done (took 13.411233994 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.196763593 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.191472035 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.177456572 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.198760763 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.174725092 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.202910131 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.171108012 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.192172261 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.190894663 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.175074755 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.192222106 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.303334997 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.432981986 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.199041191 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.16732649 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.193251055 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.167527386 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.190279144 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.167798441 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.192567886 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.190295614 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.177114792 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.190145139 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.175992503 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.203081671 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.164026182 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.190457914 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.167887576 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.197823776 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.192645953 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.182335982 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.193791892 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.167087564 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.19977726 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.203439417 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.169290868 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.186809367 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.168212144 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.190352523 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.167842197 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.188078357 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.176978252 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.19487146 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.166489212 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.194043898 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.169681406 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.200050461 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.2052258 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.174813645 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.196494186 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.1719845 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.200432838 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.191964107 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.169753861 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.199972246 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.183916546 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.199598476 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.199836831 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.168658273 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.199729613 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.176337792 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.205965168 seconds)
  done (took 12.804991271 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.164811777 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.162833526 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.187131757 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.162165431 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.187493416 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.162543839 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.188508999 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.162735815 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.186492923 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.165932443 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.186538449 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.163252267 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.185441342 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.162833308 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.185629507 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.163386427 seconds)
  done (took 3.69969853 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.182042419 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.203887845 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.269936081 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.168606328 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.18717383 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.17238245 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.186680358 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.167276261 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.185069631 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.169743691 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.189554803 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.166145831 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.208375681 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.165100795 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.189280756 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.166929643 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.190199454 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.168940798 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.188048323 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.270703047 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.169125764 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.191270196 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.165880117 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.195081418 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.167347158 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.193926921 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.171158448 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.191850145 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.166694912 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.191284022 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.166750663 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.197295085 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.164483835 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.19260148 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.166441246 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.19063717 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.166721539 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.189897178 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.16741246 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.190322619 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.166445085 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.190698374 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.165933157 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.191233515 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.163334814 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.192670355 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.163467904 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.194928643 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.166000639 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.191979611 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.165671566 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.19801853 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.170008559 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.197492478 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.196197388 seconds)
  done (took 11.03364596 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.178381832 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.190069113 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.178015589 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.187192286 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.165772475 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.190742959 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.168501662 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.190367039 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.166960867 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.187737776 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.166765001 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.190176363 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.167913481 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.190009778 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.166973541 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.190445861 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.165196609 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.18957737 seconds)
  done (took 4.161189752 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.164387846 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.165131669 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.188023217 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.163825428 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.188237745 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.163821901 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.188754377 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.164171558 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.189889076 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.162995122 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.187404228 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.164907626 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.187754691 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.164952928 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.188163809 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.164565661 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.186950077 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.164679384 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.186804274 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.164438205 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.187117101 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.165178627 seconds)
  done (took 4.786903129 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.17602441 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.268576476 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.193487318 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.248921013 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.18743193 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.18496872 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.171127921 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.18523523 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.179216352 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.184853514 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.160411731 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.184616205 seconds)
  done (took 3.266566668 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194977386 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.225594713 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.167102565 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191485475 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174557736 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194677218 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170326263 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194575475 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.178431354 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.206613328 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193846449 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17754487 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201679113 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178632984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196956149 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196806965 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.171991758 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.193581643 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167902521 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.208814421 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.170767815 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201933226 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.170040913 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195917667 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19380993 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179979409 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.201690918 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.182135298 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195524736 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178461658 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199674484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195407736 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.179971579 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.206769374 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167193979 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202203707 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.170493961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.210924986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199141434 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.179811887 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.19181161 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174858444 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.202030681 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.175123471 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202025459 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.194221851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178151615 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.193704682 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.171958527 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.215955784 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197252054 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.181202923 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.199162512 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178724497 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.201594277 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.215446672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.184498352 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.203687543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175953335 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.207363547 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202778402 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.177665854 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.204494327 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.183816873 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.20088005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.202061459 seconds)
  done (took 13.529377448 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.206815088 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.193284429 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172686754 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.207655711 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.180048544 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.197295802 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195052043 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173678256 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195747589 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169253615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.239074571 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171472375 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.205451591 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202886578 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173014554 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195767673 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17214139 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.204457756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169183155 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.216894059 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195654694 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.180717032 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203337018 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.17975151 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.207787182 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198907467 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.173595254 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194653828 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173759569 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197316091 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.178352993 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196620678 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.178864061 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.194721664 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.178873088 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197447475 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196583139 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178208981 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197252602 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.17623761 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.204948641 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.186838703 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198857408 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196666583 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185183747 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196655379 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.173404587 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.192553548 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172458425 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194756078 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.183534598 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.209616522 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.208330805 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.180460521 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197799389 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.171790903 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.199053605 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.172433324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19874246 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.199856865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.182627438 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197146566 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.193934184 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.198459705 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171372274 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.206411849 seconds)
  done (took 13.544914022 seconds)
done (took 243.011714997 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.337307757 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.35260806 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.158685607 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.416819464 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.158639265 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.861146811 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 5.008486511 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.253572778 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.185058035 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.158771911 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.183560088 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.177365842 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.636274943 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.18232741 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.160265339 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.197115036 seconds)
  done (took 32.380433501 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.355618541 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.399524621 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.174811159 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.190329194 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.165141836 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.192129478 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.162748088 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.191765375 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.163025982 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.193961816 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.165826046 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.184804887 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.168366126 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.185482218 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.187005447 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.166592614 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.193177045 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.16562963 seconds)
  done (took 4.569689025 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.184895294 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.240828926 seconds)
  done (took 1.396303295 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.194898509 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.286693268 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.392971377 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.239672223 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.186299353 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.206893242 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.239568694 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.17863074 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.278550451 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.202486043 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.178805862 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.187695631 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.191762981 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.195350959 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.180410829 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.188191845 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.193709781 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.207289006 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.177998978 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.193065388 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.215494717 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.168173028 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.194451545 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.180888026 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.272980643 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.202299454 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.170224227 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.191618164 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.168176796 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.203615379 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.173910113 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.208930864 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.177118508 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.246821193 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.192978634 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.244066132 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.169231924 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.191124107 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.1787591 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.191350799 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.16762737 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.194427733 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.199335062 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.164916167 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.187640139 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.171684997 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.187601969 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.167770483 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.19798681 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.168580001 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.198428 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.172063558 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.241121824 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.193828595 seconds)
  done (took 11.820776001 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.035062683 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.108527681 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.204149098 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.219968399 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.130854732 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.172360222 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.048213174 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.161968862 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.304719193 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.168807181 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.181307365 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.197402036 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.191407639 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.195718898 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.188527724 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 1.222726871 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.175035345 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.197524906 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170892444 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.996826882 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.195490687 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.011125499 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.210357036 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.310933002 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.167336776 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.195077166 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.166407925 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.190996483 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.249230674 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.170181597 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.184842107 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 1.045841087 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.175375902 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202135055 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.166210313 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.186690744 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.162678437 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193866011 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.341415866 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.28165474 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.246840269 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163674 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.191398457 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.167277894 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.198219439 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.163204518 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194921474 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189067644 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.211483713 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160983497 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.210889313 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.172533394 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.191124106 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176680247 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.191757729 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310531706 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.333731368 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.163310655 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.209308801 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.170996719 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.34913896 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.177130138 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203350923 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.974378646 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.294474743 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.161892203 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.912047995 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.176806544 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.185806361 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.170260271 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.190628716 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.169634885 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.195538502 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.241916941 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.290503063 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.200516953 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.163871524 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.197662473 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.28392268 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242360568 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.167831777 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.247244491 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.190629499 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.186794225 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.199725802 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169342477 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.224520726 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.164908995 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.197116252 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.169690463 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.192374767 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.186607181 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.191177898 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.30826252 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.170760745 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.199793143 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.29749877 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.171994765 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.198634259 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.165359626 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.204380141 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189720759 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.191876607 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.177865815 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192705001 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.172729021 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.199844962 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170243643 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.210659555 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.171867487 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.198292585 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.177001284 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.190121121 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184847269 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.330855783 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.1923944 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.162079154 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.215462255 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.171200052 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.24684322 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.201169216 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.336460597 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.195327684 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171084933 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.189294288 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.164771519 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.210284152 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179245873 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.187532244 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.17320358 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192170679 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.168772455 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.194779675 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.284094868 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.187009301 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243811134 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.208772043 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.19749207 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196945931 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.199393954 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.256478093 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.171343972 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.213075912 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167346794 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.900359574 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.172975705 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.197331739 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.169771402 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.251842651 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.167326738 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.197538672 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.193886344 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.191060312 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.879649252 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.195542454 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.173599013 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.195113672 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.169442928 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.196273994 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16975281 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.212321623 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188452954 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210494043 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.17435716 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.196134988 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.218590549 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.251163158 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.1952775 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.285885739 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.223043465 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 1.070915999 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.193889741 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.169680341 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.19868257 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253701917 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.173718314 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.209723668 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.582322262 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.200997662 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165945574 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227758268 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189703727 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.177673435 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.197743375 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.171689642 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.265018543 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173845157 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341773902 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.256686219 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.247296274 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.176340509 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.20130151 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.164502352 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.196950791 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.190160798 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.198714025 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.168769793 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.205134216 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.172618083 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.202129247 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.176452281 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.199593031 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.324056168 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.16475389 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.216626333 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.168608489 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.191411574 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.178313762 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.191205046 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.180038428 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.202799474 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.164464577 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.213831608 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.877316083 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.205659033 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.177604873 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.190040624 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17852747 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.254278028 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.194371292 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.190536288 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.202688034 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183929276 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.309592616 seconds)
  done (took 59.166864316 seconds)
done (took 110.296691415 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.330996699 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.236080813 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.434081356 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242822488 seconds)
  done (took 2.310077305 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.355315892 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.209510537 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.313187489 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.191117412 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.319739016 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.165799887 seconds)
  done (took 2.576455333 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.236955382 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.237657651 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.235350541 seconds)
  done (took 1.733645986 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.279657325 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.281290208 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420505271 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.333651167 seconds)
  done (took 2.396306406 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.351444149 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.182638834 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.225813157 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.298312954 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.312679029 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.276814553 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.190699926 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.24422261 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.224825035 seconds)
  done (took 3.362635537 seconds)
done (took 13.396352141 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.211684364 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.228017853 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.190487887 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.208670152 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.201611962 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.231769114 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.197095988 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.226756858 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.220093831 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.183040952 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.220063984 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.180134361 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.290111435 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.198756648 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.205229337 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.218929346 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.18105769 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.231350309 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.202073802 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.203519712 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.203607879 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.204277059 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.179242192 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.213136609 seconds)
  done (took 6.045266582 seconds)
done (took 7.071268501 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.275894507 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.185853741 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.174522756 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.205264273 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.285813642 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.183184869 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.220003509 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.177175712 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.214534872 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.177097842 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.195019062 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.189350114 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.202822828 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.279404806 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.179828647 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.194274546 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.168474583 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.215226098 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.193553757 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.219483922 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.287645924 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170986243 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.214734726 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.168206031 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.290526895 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.197033458 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.177547119 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.204181584 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.192459854 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.202832527 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.178686945 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.192125586 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.194319589 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.219087864 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.169910096 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.203627988 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.170279425 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.137556287 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.20708651 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.178583002 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.218272554 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.17761135 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.20411215 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.194500287 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.181380488 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.202971865 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.172043225 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.20556526 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.16884519 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.203669769 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.172786064 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.219224932 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.178757383 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.192972568 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.169591491 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.195219072 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.190380932 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.195867958 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.192060838 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.195042162 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.170364689 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.194876064 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.181230016 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195065694 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.179488892 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.195245851 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.180468691 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.206247722 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.178314111 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.199368068 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.171586101 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.20223104 seconds)
done (took 15.216367324 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.173098087 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.241877997 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.281801389 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.259540901 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.228985563 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.21413818 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.184444381 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.22017649 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.182059342 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.215516985 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.209794386 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.249782109 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.294180068 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.185077179 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.214107125 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.181931535 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.20996482 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.176753698 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.287717619 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.223177356 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.219690785 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.186722234 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.223444417 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.189372296 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.199440254 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.198123353 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.204215478 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.181369119 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.200297586 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.191245773 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.220697291 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.173416103 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.204064719 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.218094529 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.193674685 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.210269744 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.186621501 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.208270698 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.173705384 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.199428508 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.180874025 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.218104083 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.172828699 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.214736067 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.18146422 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.217361286 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.181418066 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.214540983 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.174859546 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.209434797 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.174034574 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.226328365 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.213267639 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.190233224 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.214603154 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.190965916 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.215500401 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.188032407 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.204051143 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.194045072 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.201478087 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.173110052 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.20180255 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.193815863 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.205576694 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.185941353 seconds)
  done (took 14.589928037 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.192264275 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.232498273 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.18388873 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.213949055 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.178547983 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.196358654 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.168423595 seconds)
  done (took 2.427248025 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.170229727 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.299620719 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.295944031 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.296478224 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.28945354 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.303806285 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.194459454 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.19693764 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.20838464 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.208529173 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.299881293 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.331974607 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.181745526 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.212926789 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.298953614 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.169786161 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.29928975 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.27955992 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.183711979 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.297260809 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.217824618 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.202617792 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.210927391 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.196693441 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263076379 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.201938803 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.346727667 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.216086867 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.181994359 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.212235585 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.186232497 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.279680602 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.291911062 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.184527693 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.207393372 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.294737594 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.28926381 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.186167625 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.305269249 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.201391607 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.263313844 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.215117451 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.213776701 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.188649962 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.212327352 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.252456148 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.221344217 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.213716543 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.187264071 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.303105746 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.18002311 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.294524905 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.214059301 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.185469772 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.210203037 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.187040561 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.223800512 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.185779068 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.302889873 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.218171791 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.298352893 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.295430769 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.29224498 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.297211833 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.198225638 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.298316756 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.285834557 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.184937807 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.293829271 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.216921105 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.297896393 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.186337054 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.211010571 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.284203464 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.189950006 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.300887034 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.300859807 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.183150466 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.21488509 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.173814163 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.21413884 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.170872614 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.297558122 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.217142623 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.183388216 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.22035704 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.211061742 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.187825772 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.291356196 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.222369551 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.18858939 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.211631622 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.191124379 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.212757588 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.188661167 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.299475217 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.212360212 seconds)
  done (took 23.959549045 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.17496711 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.171938971 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.208152208 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.198526785 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.174976449 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.199817131 seconds)
  done (took 2.22009366 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.213238187 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.215782751 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.195365686 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.216452787 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.240395343 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.304694125 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.30888284 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.21324411 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.203797704 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.226359987 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.307016381 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.308572447 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.307990196 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.191810948 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.310981185 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.216472331 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.310960763 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.186633284 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.224368632 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.186176817 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.214711585 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.192475439 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.214169521 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.29634379 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.188526862 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.218005871 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.180607673 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.226500358 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.194487823 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.211572672 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.190694007 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.216694058 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.178315276 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.211586634 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.311192484 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.207493901 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.184409295 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.217114 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.191517306 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.214396562 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.310630586 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.186351936 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.221596422 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.192136696 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.212180387 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.180609973 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.217809613 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.180226867 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.309526716 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.220542791 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.190468503 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.218652759 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.187827365 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.22190099 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.179837 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.212060244 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.218028275 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.283539391 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.222790931 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.20896276 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.190044412 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.217706845 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.184233466 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.219968376 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.189645071 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.219923758 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.180486171 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.220006653 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.185746102 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.217477149 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.190559722 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.216597667 seconds)
  done (took 17.048348096 seconds)
done (took 61.285975635 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.748718522 seconds)
  done (took 2.844401788 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.215715055 seconds)
  done (took 2.315582802 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.825962857 seconds)
  done (took 19.95802795 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.495555149 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.42234289 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.11865813 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.245840152 seconds)
  done (took 3.383103629 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.158226788 seconds)
  done (took 2.270657404 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.488828177 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.355951473 seconds)
  done (took 1.945258584 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.86828939 seconds)
  done (took 1.987474934 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.836788231 seconds)
  done (took 2.945932829 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.367110064 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.290239641 seconds)
  done (took 1.773274555 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.696964897 seconds)
  done (took 1.817648671 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.739214161 seconds)
  done (took 14.861423476 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.32556771 seconds)
  done (took 1.450624663 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.367164147 seconds)
  done (took 1.495301383 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.849059579 seconds)
  done (took 4.978344047 seconds)
done (took 65.136996923 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.188772044 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.218789548 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.192706014 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.21472196 seconds)
  done (took 1.927538937 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.194520997 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.215089234 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.19358142 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.215054991 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.195520929 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.21565808 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.18753315 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.219163815 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.188984596 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.217365933 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.188649654 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.214467673 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.191235753 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.215848155 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.187614979 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.218055979 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.192007129 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.216922824 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.188569582 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.216475717 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.189679146 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.218318391 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.191300113 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.220311472 seconds)
  done (took 6.012128085 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185788231 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.204164861 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.181222383 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.203466762 seconds)
  done (took 1.902873272 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.199990711 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.231952409 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.202518519 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.22610583 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.203904501 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.2307878 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.187190563 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.215496916 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.187833728 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.227710076 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.203225115 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.23298559 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.229562784 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.194729771 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.227247997 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.18518828 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.221049488 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.203294087 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.224806068 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.200181883 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.219713426 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.198463782 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.216361262 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.198686677 seconds)
  done (took 6.193707615 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.26559995 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.230381467 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.214706493 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.247766239 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.184576192 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.246610133 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.263605624 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.194688731 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.23003495 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.194022287 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.218840304 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.188398295 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.265090694 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.220858992 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.191701633 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.218086411 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.19771394 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.222126907 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.231174157 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.22164579 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.193446929 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.229238055 seconds)
  done (took 6.007454902 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.281271263 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.211168093 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.177452052 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.209290114 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.220367061 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.183717858 seconds)
  done (took 2.421351671 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.180670693 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.173406532 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.204070333 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.172400578 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.207941023 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.174161948 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.202265525 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.172819141 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.204928138 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.173057952 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.2032835 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.17246959 seconds)
  done (took 3.383708106 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310815199 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222645997 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.358200253 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.468188175 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265625313 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262511936 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.381883357 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233496908 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.282723304 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237592705 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284074315 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234017748 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.256743949 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309690484 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21333913 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.249201631 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271983256 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30611457 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243952661 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340852095 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260295023 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279092856 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.265820636 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.252096084 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.238853861 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234905192 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.221751206 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198842566 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270478703 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267115186 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27608327 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250014231 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.21565326 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292184687 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314667701 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275994163 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.359536004 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233669112 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.234028563 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.297731292 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.333978702 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24273317 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.29409043 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223531139 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233150666 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.317444414 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250890803 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.258190349 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.237495934 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243358288 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253091338 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281159225 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.272352157 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236689047 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398736613 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204615331 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.244967199 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282327966 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289470907 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274217463 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284164257 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.223774504 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273024492 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.292507238 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317240431 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.214415335 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.266342635 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223680293 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238525799 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312751188 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287327699 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262502957 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.287795601 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202402497 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275432244 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268113827 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224823374 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30864755 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275927123 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.219805711 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223032281 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235886424 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19504734 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.291915063 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190852747 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320424994 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233954266 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.276106723 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249157905 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.256870937 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264217187 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261798846 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236086797 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251130918 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.159556557 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245873221 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.258581652 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230120458 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230656409 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223489094 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240687468 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.224493894 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223645398 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.224873298 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26914488 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.195817619 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260024113 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241875239 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.236122837 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284546926 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219508215 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.267887508 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271203763 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2997404 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20152754 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.235183807 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323994074 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271067091 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.207644244 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274211387 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.305587147 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.208897022 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239279315 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267275069 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297770995 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215628756 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303243768 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239920988 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207397197 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.228824844 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276701185 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231781425 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.264740766 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227623346 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.239144749 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290355381 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.230429824 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210719223 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285646142 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236061822 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196652987 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239640892 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206815641 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.245852987 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.254305176 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.209945205 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257209439 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26935612 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.240208479 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258001135 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23758839 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274124911 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204463124 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.275516091 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219532948 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.223213481 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.2800529 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303177231 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200009212 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286734152 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.26465849 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282178582 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245275268 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231671024 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.290405596 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198184795 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.223792397 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260773967 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.244017312 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267086468 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.293552556 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277947409 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.269481668 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.266685732 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22097415 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271513844 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.287972247 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227716585 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.244721835 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279026756 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270617767 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.194549061 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.224736297 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.20045473 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239033108 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201489888 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240000066 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281139296 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233670097 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.278367142 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.27160438 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242075969 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.299643992 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.19655139 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265693456 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.278140447 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210510919 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.296490905 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.297559858 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281414069 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212528707 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26574849 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.223401723 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200474097 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.234812383 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.232843406 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241991413 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238089601 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213502263 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.297684253 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274272441 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218666567 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.322765346 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23707086 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.30959509 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.223908093 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.234807631 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270863607 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272902834 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.263169075 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236527269 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.262317369 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268759971 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245745057 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.300372382 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271229556 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254276561 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297678574 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.271879018 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232157371 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217753454 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267409926 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20907355 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.265644578 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.248331183 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202576949 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25224151 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.239972488 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212563811 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290686647 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249732452 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.276716493 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.228233913 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272131325 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227191743 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213626263 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280169404 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246678072 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.166862862 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268548635 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293228578 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222665727 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256018872 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271508843 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202835636 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.453950801 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288625198 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273592749 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207912145 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242851833 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.277042182 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.231620428 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263319578 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.291279554 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213620461 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316014829 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.27835128 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.24213394 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204572168 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.25337895 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223838623 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.23003164 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.256935519 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.236653046 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.249267482 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294537777 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240034935 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247119885 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286199038 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.250158924 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.222246239 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242316214 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.334248174 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270741855 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246191544 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.272104987 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.26837779 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25700098 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230443553 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198128677 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.237368892 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.293809926 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202998881 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284308007 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.26975202 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284748523 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.282140274 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268560727 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214575637 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.23131379 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239760577 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255073875 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.286772499 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239476971 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.211173749 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29128557 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.186080966 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237241322 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.267785114 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.390270658 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220711033 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273315789 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.166033208 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.392225176 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235496314 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20520969 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.263997871 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274462824 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.205021397 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.291112901 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282608845 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213485031 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.264928089 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206653611 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.310590618 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255460869 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271802855 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281854357 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.2491651 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236114606 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262854695 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275591807 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218246372 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.252853198 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262391193 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269231195 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.281943375 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.236959536 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242936793 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276954242 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280344713 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275561434 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212156114 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28983452 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231718875 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239221687 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244831461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196958131 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264268205 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.269310789 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235080855 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245472678 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280675893 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237103465 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201217018 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252314251 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269900484 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213412514 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.23637769 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290406689 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.204480378 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290370596 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321154977 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20381042 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274407342 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247175833 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202798979 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247081746 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21763009 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238117518 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.252846568 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279335724 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.236286819 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277523754 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239455232 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27145207 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26078894 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216577391 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.377215149 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.231531269 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26727857 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261331773 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.329924416 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.259181436 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281538781 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247285606 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256699191 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269772223 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221274874 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.330189383 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271513754 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.242362512 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237751735 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247701351 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211337492 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.241415864 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226148494 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278690968 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247312495 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.210126937 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.276991565 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248987909 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.220266458 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249160514 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.308850746 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226339393 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294413905 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2975505 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.244840729 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251523233 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279485235 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236467061 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.237631981 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27717126 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251604048 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225290297 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.242597888 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.243168619 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290340962 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.233608555 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267256615 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248701556 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.279983774 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283509303 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.208494177 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285687233 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249584642 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283421381 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204059959 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.259446346 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246951094 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243495702 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.230840312 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.249728737 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266284805 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.274524921 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217026646 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.287166922 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302333616 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.198590355 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239146692 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391949702 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234445631 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.304459275 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.227596546 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211318304 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252531338 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232420444 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.274327405 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281914642 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.204127976 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238556977 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.25218089 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.22428845 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.23094022 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24997582 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.292183851 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265566232 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294758007 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.211039894 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.364107659 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215969505 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281263677 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.209209664 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.20663256 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247204542 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208214807 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248507263 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.285150769 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326311927 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.239122185 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.255222936 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241973184 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.201684658 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238102094 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235860782 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257765505 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277109382 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222267524 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.19783066 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215179026 seconds)
  done (took 123.988134545 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254698584 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.344225744 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.272869433 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.388080622 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.33416711 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.39510185 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.366847011 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.348467885 seconds)
  done (took 3.975215601 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.197605777 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.266636833 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.247562432 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.22424986 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.187645616 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.559068258 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.243643916 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.196506758 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.271778664 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.233385266 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.188826416 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.653297196 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.234337042 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.223681194 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.22684654 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.185955164 seconds)
  done (took 5.602689 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.308003357 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.648433516 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.263953178 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.37765478 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.345268112 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.295019931 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.917844575 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.280904446 seconds)
  done (took 13.709645915 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.253433518 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.285516441 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.467280161 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.389824566 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.301661014 seconds)
  done (took 2.976629086 seconds)
done (took 179.215324839 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.203215951 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.23151001 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.202777076 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.236857578 seconds)
  done (took 2.134641451 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.249459182 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.163811181 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.196881368 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152871765 seconds)
  done (took 2.033663278 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.484100573 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.155153141 seconds)
  done (took 1.938182469 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.223529864 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.24430409 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.213210136 seconds)
  done (took 1.971763587 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.215070091 seconds)
  done (took 1.49908879 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.197943623 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.227045845 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.293648522 seconds)
  done (took 2.003782341 seconds)
done (took 12.861428764 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.222681267 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.056328649 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.664472661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.211027846 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.829169708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.474475834 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.581047819 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.259478508 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.317078704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.191168696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.255320037 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.768473492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.5601512 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.957070878 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.545704498 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.954874352 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.803661041 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187832746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.227687231 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.189677215 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.554927027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185746364 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.221408243 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.188297508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.801768659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.495772282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.221517451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.998923838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188466657 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.229794445 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.479608362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.219383596 seconds)
  done (took 24.308788437 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.19251821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.280826311 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.244249317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.223837408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.197214642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.224117367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199114819 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.235277149 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.327670097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.188943673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.244510952 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.187620166 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.228064232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.188878422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.247453135 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.188434273 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.226176882 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.189595698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.229439907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.191343114 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.245007045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.220157578 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.194018065 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.737366982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.19454327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.238787009 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.190435329 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.233813818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.188838644 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.230126346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.19338269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.222487164 seconds)
  done (took 8.804468733 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.23414076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.290872307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.245025732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.262823137 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.277843296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.191286469 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.313706685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.260086637 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.302760077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.226140102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.210693162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.223083771 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.262199409 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.191256164 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.24575781 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.191239613 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.224391629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1907646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.229229126 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.19284181 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.24665188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.188778338 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.224987427 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.191292169 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.222750755 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.210703282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.222094647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.233184061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.191364045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.229849749 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.196427957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.221577021 seconds)
  done (took 8.638174822 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.205622891 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.234455292 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.215046222 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.245097691 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.200307681 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.235242173 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.206006936 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.231860314 seconds)
  done (took 3.06515068 seconds)
done (took 46.104454283 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.214846497 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.238942225 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.21321249 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.237778724 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.284364727 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.232666832 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.209177093 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.23074824 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.204151087 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.247339769 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.187444383 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.232058674 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.211383211 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.234996646 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.322709972 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.206386006 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.326159197 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.323861381 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.19722887 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.241562903 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.24745169 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.291497872 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.240781283 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.198265308 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.29940007 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.229300152 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.276403624 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.23892115 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.200978802 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.22653249 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.321020741 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.20104829 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.232589327 seconds)
  done (took 9.286351735 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.300555514 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.23599029 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.19895182 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.234347989 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.200629596 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.231818726 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.340154559 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.199025122 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.232871013 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.198132012 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.231672159 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.289615476 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.242475626 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.193452792 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.235698589 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.174927141 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.34249857 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.233015093 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.192733125 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157482495 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.22972004 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.197662901 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.352516336 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.228970676 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.199713791 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.232648267 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.201020947 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.238408007 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.201004794 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.199761015 seconds)
  done (took 8.254687347 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.205618545 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.245630183 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.221668849 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.30217652 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.230045356 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.246721622 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.213590837 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.245387167 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.219731478 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.228412572 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.208911318 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.263779001 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242689174 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.204876667 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.225187444 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.210464102 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.239932834 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.195544574 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.234439676 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.211031389 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.243945589 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.209333766 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.250675543 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.202501097 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.225123577 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.201840691 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.238160838 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.204490924 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.234545367 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.209573033 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.228594455 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.195099579 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.229003499 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.228076138 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.228866402 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.205979738 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.248881851 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.20697129 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.24131375 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.22573878 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.230007392 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.194489341 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.253829335 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.284851666 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.196550709 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.237169771 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.197110717 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.242744448 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.191403796 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.244302572 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.23762923 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.227578786 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.214609355 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.225810975 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.192319389 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.234893492 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.194306111 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.229456224 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.209247676 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.228124912 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.21200624 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.234872381 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.20621361 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.228935758 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.205871447 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.225011935 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.193420097 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.23213766 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.221077293 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.235164046 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.23393132 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.22737677 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.20555452 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.241038559 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.206164644 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.240054178 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.192731256 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.239647354 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.205481848 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.232199867 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.207014232 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.231562905 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.195574334 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.244473075 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.214975912 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.243515187 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.20640063 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.239445698 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.194436639 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.230714735 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212417238 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.231029861 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.196155928 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.243111543 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.19464111 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.233944819 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.205852954 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.239291117 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.192067002 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.257206125 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.19862817 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.228980824 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.222349668 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.234312715 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.197493135 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.23649252 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.23530982 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.230368413 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.201976703 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.241563158 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.193582973 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.238542328 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.195040912 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.228525823 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.21126406 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.245264059 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.200894539 seconds)
  done (took 27.417753686 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.422888661 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.416216635 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.301332942 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.462351204 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.244791918 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.332242443 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.411245664 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.416744767 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.194148551 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.266068536 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.287124212 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.379493619 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.194637125 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.260037727 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.418701406 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.497433238 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.226224731 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.26996141 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.26466183 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.20887051 seconds)
  done (took 7.814623012 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.205955623 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.260149207 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.217107456 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.246232553 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.207385773 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.242048429 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.19640515 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.251606013 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.206167518 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.236286842 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.199163364 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.235810002 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.210409343 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.244141675 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.209890218 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.254619329 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.201816041 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.232229814 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.217919342 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.232990303 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.212498153 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.257570025 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.237125086 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.217990492 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.246410534 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.207673799 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.226066305 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.19912413 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.201266021 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.239902702 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.196137913 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.240073519 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.20208309 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.202855017 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.207545167 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.246411748 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.202259635 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.231983184 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.202020486 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.23177331 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.208763416 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.24074803 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.203889378 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.202293803 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.24938215 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.177433855 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.240280538 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.20869255 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.171709459 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.250279612 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.205967101 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.24094897 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.201951893 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.249762709 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.201288298 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.246843158 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.236373031 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.208588831 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.230870782 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.195476734 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.193028881 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.232100103 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.20440849 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.241518968 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.207249548 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.238339677 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.203471467 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.231606735 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.195924222 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.232883031 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.197637359 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.24356675 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.216114453 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.240000155 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.204126884 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.243103185 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.203959566 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.195597804 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.205613067 seconds)
  done (took 18.77384612 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.223276555 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.239718979 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.21566446 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.263112779 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.208651024 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.236475059 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.20772255 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.250042829 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.208088133 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.249060554 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.208645382 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.243578957 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.220379691 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.241783694 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.206735823 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.244912132 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.208930836 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.269064498 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.208861772 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.25536742 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.207978746 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.236937874 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.208156409 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.243933998 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.222143074 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.243988792 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.220086184 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.243679791 seconds)
  done (took 7.799723183 seconds)
done (took 80.641112118 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.526993359 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.70793964 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.466703659 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.461252293 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.468409029 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.492204941 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.463951445 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.459788919 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.069839845 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.437897347 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.465303099 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.455334423 seconds)
done (took 31.881508699 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.868257695 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.135401742 seconds)
    (2/2) benchmarking "String"...
    done (took 2.14571262 seconds)
  done (took 5.645557876 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.142874414 seconds)
    (2/2) benchmarking "String"...
    done (took 2.151627336 seconds)
  done (took 5.642405029 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.448053583 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.451608776 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.855927137 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.454179845 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.448599071 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.455436206 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.469437742 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.455800944 seconds)
  done (took 17.935671643 seconds)
done (took 35.888858685 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.501078106 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.788220142 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.746307337 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.430233779 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.449109222 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.447743265 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.449768367 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.520291911 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.458894059 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.430229489 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.899255376 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.723846105 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.450027411 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.855800784 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.432927474 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.467281979 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.464748111 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.840902 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.458160915 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.495385909 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.451911877 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.433035019 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.45508838 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.463123494 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.465746979 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.45277652 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.498108293 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.467158584 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.793560953 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.460070021 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.498469652 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.454158052 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.495815334 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.458802422 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.45415805 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.464569641 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.836566484 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.471609454 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.45323576 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.456458433 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.785152357 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.480206164 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.465674505 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.456743693 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.441856408 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.447589538 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.449708717 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.576852137 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.475536942 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.47053911 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.552784277 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.87691413 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.461150326 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.459839661 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.453193093 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.831942384 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.457821098 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.587268692 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.489332953 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.467526762 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.466307729 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.469894078 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.465461329 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.465196047 seconds)
  done (took 161.195622872 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.453731261 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.46150219 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.460757775 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.46092294 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.458782231 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.460059724 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.455344715 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.453924299 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.462793385 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.489718455 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.463441981 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.454567782 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.461502833 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.410064545 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.466784525 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.47134502 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.46191163 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.45637921 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.4675458 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.456340409 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.461822255 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.462284243 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.462716227 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.462620697 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.480462973 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.548623324 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.479850409 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.48850279 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.472203674 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.455203837 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.478091811 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.466856825 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.166650575 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.326319704 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.4636035 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.469936943 seconds)
  done (took 89.686536542 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.456271736 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.457532265 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.457075338 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.456685239 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.49444255 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.461420825 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.12319347 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.127762533 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.533154884 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.860763021 seconds)
    (11/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.682598104 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.128803944 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.826544274 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.463655774 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.553129892 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.469686204 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.460242902 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.55533486 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.483092638 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.465299198 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.458253811 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.12535211 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.478068332 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.528162278 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.647834927 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.458606287 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.496007274 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.859682826 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.45958574 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.496720744 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.8043018 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.49603889 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.458099348 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.898127999 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.208351409 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.580832358 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.461964223 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.497894651 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.463288789 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.753041457 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.460223115 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.45977649 seconds)
    (43/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.936013422 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.466379611 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.462492614 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.196045016 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.466351269 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.128290056 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.467253534 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.558268003 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.46584991 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.46115864 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.949606352 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.468847302 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.377198787 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.466416417 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.460575002 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.462759396 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.460487277 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.460828669 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.499305844 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.100740533 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.485222357 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.467694127 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.461732273 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.465279482 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.499373327 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.46715848 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.462510314 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.314161343 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.526043031 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.130816005 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.469200209 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.531473716 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.568772226 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.583488481 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.462059051 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.461270244 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.463588911 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.461635828 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.57782074 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.462854113 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.930519464 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.651925172 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.464145638 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.165110394 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.569933081 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.462735661 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911302653 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.471378693 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.463217965 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.332803142 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.568214635 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.464609858 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.464184329 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.465185523 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.936328182 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.132851888 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.847356786 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.471166683 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.054226733 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.474766769 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.946850904 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.134914139 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.221482879 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.471229802 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.579451987 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.653794713 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.467261087 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.465095665 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.16925747 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.472194255 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.517600809 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.465720686 seconds)
  done (took 403.931819359 seconds)
done (took 656.162479246 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.448041796 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.447861285 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.453267116 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.449628682 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.448973842 seconds)
  done (took 13.607868635 seconds)
done (took 14.967919115 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.687751672 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.677401516 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.676642811 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.536471772 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.692351734 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.700964603 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.599411289 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.691634026 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.703933109 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.68467067 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.504325316 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.696057455 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.666059423 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.708014225 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.531233912 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.593969981 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.620546396 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.619829413 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.609166892 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.780169028 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.838663871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.527887275 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.762685743 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.512858504 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.771788012 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.808238701 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.685051221 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.669622309 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.491620957 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.488976928 seconds)
  done (took 19.703244221 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.588843585 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.786206945 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.838100774 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.531182955 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.772106695 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.514255186 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.776511842 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.829337408 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.693226164 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.647023191 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.498464885 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.489510113 seconds)
  done (took 19.74175672 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.48559416 seconds)
done (took 75.082792826 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.511300717 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.577710592 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.507507663 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.488059283 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.48836513 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.486342625 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.488573471 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.489014298 seconds)
  done (took 13.401494532 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.487008667 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.487722858 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.486318045 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.48660283 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.487312673 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.487853543 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.488527992 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.487495633 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.487956007 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.487067078 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.487160973 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.486823941 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.487966778 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.488380214 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.488740579 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.487618413 seconds)
  done (took 25.166142477 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.490283714 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.487692558 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.487864676 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.48659265 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.486268125 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.489756152 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.489386869 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.489911348 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.487710158 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.489260316 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.490092413 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.487466948 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.490523873 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.488489152 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.488328369 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.489759506 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.487605689 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.488782264 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.492928504 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.488632671 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.48893111 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.487821702 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.489784557 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.489414956 seconds)
  done (took 37.100080033 seconds)
done (took 77.033591726 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.472383147 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.48285502 seconds)
  done (took 6.322220943 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.547186416 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.546020846 seconds)
  done (took 4.462989035 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.490661151 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.48913653 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.48891271 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.489295533 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.489913627 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.489843577 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.489575664 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.491066743 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.48954136 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.489772789 seconds)
  done (took 16.265215297 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.491581297 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.489398618 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.490917336 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.491317174 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.492099745 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.489604597 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.491311695 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.489274014 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.490442107 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.491578505 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.490194435 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.490637652 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.491473324 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.490913263 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.491203373 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.491901249 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.491459432 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.491164951 seconds)
  done (took 28.204837858 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.504647123 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.509465687 seconds)
  done (took 4.383225702 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.620811636 seconds)
    (2/7) benchmarking "second"...
    done (took 1.53332756 seconds)
    (3/7) benchmarking "month"...
    done (took 1.59654386 seconds)
    (4/7) benchmarking "year"...
    done (took 1.588314554 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.532945999 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.512635833 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.534663731 seconds)
  done (took 12.288382312 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.483934456 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.785218438 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.984309593 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.654645406 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.478004582 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.498299057 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.459779785 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.50199304 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.498717484 seconds)
  done (took 16.714275283 seconds)
done (took 90.007990962 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.477194481 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.510904864 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.521191232 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.500705673 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.794057114 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.486978551 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.483474585 seconds)
done (took 18.145712059 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.463098437 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.465848068 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.479171092 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.491139962 seconds)
  done (took 11.270484682 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.486166008 seconds)
    (2/2) benchmarking "read"...
    done (took 1.806515369 seconds)
  done (took 5.664273619 seconds)
done (took 18.305300305 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.494321033 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.496307694 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.494434504 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.496381794 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.496840867 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.49474264 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.495563986 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.494069151 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.49556421 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.495681825 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.495628065 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.496389816 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.496032358 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.495462459 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.495155863 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.495700591 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.496266013 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.494363146 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.495538074 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.495914306 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.495804368 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.495125139 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.496239531 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.497284324 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.496315574 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.497381376 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.497303746 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.495480344 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.495364449 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.497740569 seconds)
  done (took 46.247346218 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.500978287 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.500271702 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.49725077 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.496504242 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.496638158 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.495978648 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.497014732 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.496702704 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.497743956 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.49833136 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.496304195 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.498168122 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.496853534 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.496627677 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.498254359 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.497417516 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.498710543 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.498116543 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.499756935 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.497599123 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.49859178 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.498226152 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.498649129 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.498610587 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.497277113 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.498212933 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.4999896 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.498068921 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.498280834 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.49941746 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.497890376 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.498680266 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.499522239 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.498697761 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.498491775 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.499748493 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.502190948 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.50251131 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.49836408 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.499190725 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.499930234 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.500695911 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.498529561 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.499421172 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.499264334 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.50103408 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.499736463 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.49929366 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.498563417 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.500278914 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.50010186 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.499143459 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.500374003 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.501614649 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.49942389 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.499094938 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.499862312 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.500343245 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.500880031 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.500203787 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.500762812 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.499913861 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.499888136 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.500199929 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.501721604 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.50082405 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.501333546 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.50150911 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.501404292 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.501098786 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.500941065 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.501325849 seconds)
  done (took 109.320559965 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.500436501 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.501457766 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.501094172 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.503424485 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.50204595 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.501617207 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.50243464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.501030785 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.501144307 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.502267089 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.502518802 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.503139549 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.501543187 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.502442273 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.503028802 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.500914347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.503274818 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.501804121 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.50180659 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.501761394 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.502102683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.50262357 seconds)
  done (took 34.421961638 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.502514787 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.505046236 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.504902917 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.504028639 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.506119159 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.503772183 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.503929713 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.504315681 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.504684367 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.503617123 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.503335463 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.503628467 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.504413635 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.504279884 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.502934944 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.505341152 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.504463585 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.508047726 seconds)
  done (took 28.460227995 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.504922677 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.505852045 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.504503991 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.504731593 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.504536434 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.50689286 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.503944641 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.505217379 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.503872154 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.504117938 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.506025197 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.504687742 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.505827855 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.507736026 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.505074611 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.505031129 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.505780831 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.504328033 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.505693025 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.506660554 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.505251193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.506669554 seconds)
  done (took 34.497367165 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.50816387 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.505629845 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.50647472 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.506709631 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.505762703 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.506803056 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.506879702 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.506036074 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.507367208 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.506926897 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.505312458 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.505133134 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.509236724 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.505544942 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.506334184 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.506650863 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.506414982 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.506805086 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.506704909 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.507617176 seconds)
  done (took 31.515477773 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.507184802 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.508161695 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.508340192 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.508732842 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.508062134 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.507762029 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.50749661 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.509500925 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.507320005 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.508049959 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.508578856 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.507567762 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.508601492 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.5085502 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.507551881 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.508661192 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.510362628 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.50938457 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.509500173 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.508587277 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.509793848 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.510295758 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.50984706 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.510090167 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.510411445 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.510504835 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.51058415 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.510965731 seconds)
  done (took 43.634494669 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.528889983 seconds)
    (2/2) benchmarking "in"...
    done (took 1.527908068 seconds)
  done (took 4.44221913 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.510863176 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.509548874 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.512013758 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.509693957 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.510559065 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.512911049 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.511500959 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.510235088 seconds)
  done (took 13.473087778 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.50486329 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.511699999 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.511004225 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.51077772 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.512325015 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.503664068 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.511161228 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.515999409 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.50507171 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.505394102 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.509373809 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.507485893 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.504571554 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.504352008 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.505441925 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.510136209 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.514873288 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.514859468 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.512524439 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.513037423 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.513559068 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.508097878 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.5084494 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.516839987 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.505505429 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.517229025 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.513277346 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.518759531 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.505691222 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.509851723 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.508305637 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.51677517 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.513312132 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.515197477 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.513365635 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.513896265 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.515710898 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.51137148 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.515625695 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.518124074 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.514609165 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.51390091 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.507976359 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.509898331 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.51136267 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.517183366 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.515711442 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.514844212 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.50585769 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.510983666 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.518755725 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.506322674 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.51634462 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.514344087 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.513190945 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.517917933 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.522229519 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.508994282 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.513088963 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.518841519 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.526998967 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.521724875 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.51835011 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.519143446 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.515402497 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.519947698 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.520483782 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.524250731 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.519664311 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.517334619 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.517067569 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.531240103 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.524862367 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.520210696 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.518021348 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.51853185 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.510161474 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.521326273 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.518827585 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.519889832 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.521013329 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.517227536 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.515377329 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.51962727 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.512750709 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.520879052 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.519076984 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.518668834 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.50964256 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.523812044 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.526330697 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.518900002 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.511148121 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.513554317 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.515221693 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.519946039 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.511521785 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.515452831 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.523827257 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.519027543 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.518432448 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.513118505 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.519293754 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.522942521 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.519007927 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.522293407 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.528965124 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.514062284 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.524375371 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.527086814 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.519333599 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.513874136 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.520012635 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.523835972 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.514121046 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.52097797 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.524599423 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.515434856 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.525004869 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.521871318 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.519487666 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.527216725 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.527069393 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.521964012 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.516275397 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.5270575 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.521922012 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.518046466 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.52761865 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.521791722 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.521541945 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.51868803 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.528200223 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.515649062 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.523762245 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.517903223 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.52625315 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.523263298 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.521618046 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.518955694 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.521818736 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.519261892 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.52258091 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.524404557 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.526606978 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.518505512 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.529683836 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.522620997 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.521382295 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.523054293 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.528513407 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.523129301 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.517969835 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.526038949 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.515907835 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.52526661 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.516863568 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.527338985 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.523266608 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.525276257 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.524030672 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.51499253 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.521260733 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.527241061 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.521569007 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.522853996 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.52846597 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.525417683 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.524295606 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.517622592 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.526998659 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.515030288 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.519719654 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.530430112 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.52477862 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.523845164 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.521722492 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.530896047 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.525267367 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.52542194 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.519111796 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.525950782 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.530409594 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.527773398 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.531773745 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.52448489 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.527118769 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.519856025 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.523061545 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.528231038 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.520209112 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.534398474 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.536430494 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.538431857 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.521944981 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.530447365 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.520061129 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.529095021 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.525711785 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.532413605 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.527721689 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.526066191 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.520506238 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.530752784 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.522172792 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.53041123 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.519362032 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.530458481 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.529077747 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.525875558 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.527793068 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.520821318 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.526203663 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.530790705 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.528019301 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.527475195 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.52080643 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.531514049 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.518780525 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.523500035 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.530630661 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.528078397 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.529355834 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.534833539 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.525899628 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.530727279 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.527854741 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.524544168 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.532165501 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.526297669 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.527121249 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.533074048 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.531509055 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.524838189 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.534656829 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.530413889 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.522600139 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.528840826 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.537617748 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.529769815 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.522265269 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.535313172 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.53240844 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.528907381 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.52912459 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.523455294 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.533669118 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.532503209 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.538987845 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.524154557 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.536014475 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.526420843 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.535796251 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.527258821 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.533876464 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.531374874 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.532309629 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.538055845 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.531009408 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.526994101 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.534365677 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.529791265 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.53045953 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.524671645 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.535102681 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.531974858 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.53170351 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.530188399 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.527713217 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.535723498 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.524816798 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.534185493 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.528139647 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.545153259 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.551108691 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.537507193 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.535270803 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.536249598 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.532975177 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.532708534 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.527707662 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.528267575 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.529777541 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.529523282 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.527418745 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.536517382 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.526968499 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.536626803 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.530931075 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.532228705 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.5361482 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.534467883 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.52686361 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.537684275 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.533784985 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.535071559 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.524973841 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.537017943 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.530183059 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.53516532 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.533168714 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.529976336 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.540438576 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.53855034 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.533831668 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.532903889 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.530277873 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.527689614 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.532271435 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.541309774 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.529499526 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.540835976 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.528356787 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.535650068 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.530813638 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.539676758 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.543140196 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.529232061 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.540881744 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.536961107 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.527056723 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.530221613 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.538499141 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.539073878 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.54543663 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.528429072 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.539987548 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.536685552 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.536497749 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.537164415 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.536183056 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.537040898 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.535549264 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.541047364 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.53900615 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.533585666 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.539891832 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.547227606 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.535837881 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.539087229 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.528435088 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.540994585 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.545551765 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.533908828 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.53980675 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.532733753 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.54105093 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.536043347 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.539044722 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.539577236 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.539121717 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.539501541 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.541099555 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.542005228 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.53917874 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.542587163 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.54708144 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.542439922 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.54753427 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.533321432 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.544257107 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.539194027 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.532165569 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.534286895 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.535648832 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.54146575 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.530228032 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.544565359 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.538899895 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.535730439 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.540268156 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.546032141 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.531033915 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.540099248 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.549230666 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.531638238 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.544514499 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.539870525 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.531700749 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.542501998 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.538935863 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.533826475 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.536357498 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.53880559 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.548661837 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.534462263 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.544737385 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.535659108 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.544646682 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.542514237 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.541470577 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.5409303 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.542419067 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.534039034 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.54249672 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.542549717 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.54931678 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.537628537 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.542391357 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.536876058 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.545973403 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.550482614 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.538528856 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.547513473 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.545403146 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.536131705 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.540262639 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.547005126 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.537848894 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.546767208 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.534554214 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.538579394 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.539482055 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.544025552 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.545332472 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.545855345 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.535858479 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.538069011 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.545414166 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.542286929 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.542837261 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.540277496 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.550218082 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.535620533 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.537268007 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.546391795 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.537987221 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.549229423 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.538243582 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.542647937 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.541144931 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.548062262 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.545645529 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.545569018 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.535506528 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.539066776 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.552245468 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.547378547 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.543866499 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.541966151 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.547626462 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.540223676 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.541796415 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.545720153 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.5407177 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.540901373 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.548693396 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.543215184 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.541094919 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.540727252 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.546595585 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.548589482 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.546018578 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.539738868 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.552641792 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.553273417 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.554499761 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.54014051 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.542932124 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.543043892 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.548479742 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.548444343 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.539823481 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.553429824 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.551602087 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.550265096 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.547040025 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.54552923 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.537580497 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.549498563 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.548361095 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.544086889 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.554665049 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.543255591 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.55416242 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.547560351 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.549067426 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.539464466 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.539457482 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.543938268 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.545373479 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.549312058 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.546015435 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.548544714 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.546886364 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.553196287 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.547693101 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.549412035 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.549363899 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.539527722 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.548855145 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.540878616 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.548864851 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.54799359 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.542737253 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.553112949 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.547212878 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.544486896 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.547401947 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.555472379 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.548221987 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.541547187 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.547972166 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.553841173 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.55582458 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.54921893 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.542641264 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.546855862 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.554571702 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.547918893 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.550566531 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.543791587 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.560716462 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.560927544 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.544612553 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.548568282 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.55615798 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.559450107 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.551374604 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.552521146 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.546670871 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.550517555 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.555866644 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.551638426 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.554321413 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.554875397 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.545828034 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.554707993 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.54642534 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.550058081 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.551534374 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.558367107 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.552583549 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.546990722 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.562945088 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.560398223 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.549287627 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.565893416 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.557606619 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.552946835 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.556662539 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.543024569 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.552741409 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.547744058 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.557925391 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.553103896 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.55177739 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.552652326 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.543869852 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.55453644 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.557561534 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.563672094 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.554043009 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.545987718 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.545869343 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.555912754 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.552574452 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.556773299 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.553252365 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.552021391 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.554414984 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.546967956 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.56851793 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.567785492 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.560009398 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.554297445 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.555818061 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.553992487 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.556714852 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.554670817 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.561824748 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.555373436 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.55479594 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.553849254 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.562050393 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.555986899 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.548890449 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.552085657 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.550340082 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.56103376 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.565886289 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.572376836 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.557310009 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.55764211 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.557632757 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.557683326 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.550877802 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.560150779 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.555804397 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.552561379 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.552068093 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.558452449 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.55745646 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.556828397 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.550828607 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.562522179 seconds)
  done (took 915.75447521 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.55819842 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.558121939 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.557829051 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.55838174 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.556517347 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.557333637 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.555410736 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.557716865 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.557029575 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.557531983 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.558782057 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.558130978 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.560346088 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.55810981 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.558427967 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.558878316 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.558617953 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.558405408 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.559263425 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.558182925 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.558461472 seconds)
  done (took 34.144845846 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.558531133 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.558555484 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.560362964 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.560175988 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.562708749 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.560009792 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.55930237 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.55933618 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.560487358 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.558407206 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.560370665 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.560732932 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.558178132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.561370105 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.559531275 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.559611456 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.56188739 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.560148407 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.559503352 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.562329886 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.559228987 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.56212364 seconds)
  done (took 35.74797455 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.560394985 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.558708081 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.553320185 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.564888112 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.560013224 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.561666771 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.561363788 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.560346883 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.56216091 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.553450716 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.553949371 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.555183793 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.558415099 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.568103328 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.557400197 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.56664382 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.559832829 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.561887567 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.562895396 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.561498085 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.564373735 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.572307608 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.562761418 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.553378571 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.564314181 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.563670294 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.562907983 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.563132019 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.554904342 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.565293036 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.562659064 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.554853364 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.56607134 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.562560337 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.556060014 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.567666144 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.562617237 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.562172232 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.565607012 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.562010041 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.575115078 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.563081542 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.571124668 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.574312239 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.564325396 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.558480536 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.569702492 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.564342534 seconds)
  done (took 76.419095835 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.565201128 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.566605029 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.565622808 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.56390333 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.565794245 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.565340558 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.565559137 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.563451861 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.564621673 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.565176023 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.566421798 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.567343804 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.56709574 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.567845312 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.565235885 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.567452465 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.567026937 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.5658404 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.567377922 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.566740939 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.566729033 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.567442337 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.566836165 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.567804511 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.568620811 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.568082875 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.567946402 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.567136424 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.569011721 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.568254982 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.569390931 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.567607331 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.570285476 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.568289114 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.567408025 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.567908834 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.56829031 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.565918406 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.567905832 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.567788288 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.568813016 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.569416411 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.567842409 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.569765821 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.56856987 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.567248019 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.567180795 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.570098142 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.566498959 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.568317892 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.568009706 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.568981307 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.568845548 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.568350665 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.568327323 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.56829872 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.570926375 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.569193192 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.568950069 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.570901591 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.568161935 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.568766996 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.569230518 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.568698914 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.568558655 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.5679376 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.570593321 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.5703493 seconds)
  done (took 108.040235216 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.570176976 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.569323539 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.570600161 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.571742547 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.570832052 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.570873299 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.570108865 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.569679898 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.568441057 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.570026429 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.571365848 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.570277017 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.567420657 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.571944996 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.569228105 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.569391152 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.570123881 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.571651946 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.567932215 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.571063482 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.571135929 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.569765419 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.572645084 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.571563828 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.571479164 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.571521814 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.569489196 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.572553584 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.57091422 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.570318992 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.571276668 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.570630276 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.573260282 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.572496516 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.571070255 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.571611724 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.572414146 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.570994621 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.571735668 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.571746182 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.572853854 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.571077712 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.571697302 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.572906026 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.572154886 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.573112002 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.574968082 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.572266715 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.572426322 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.573430217 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.572884729 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.572279794 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.573133578 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.57305198 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.572988203 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.574405138 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.573050513 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.573975816 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.572414346 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.57427174 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.573565485 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.574514485 seconds)
  done (took 98.876465199 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.574171689 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.575892167 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.575057474 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.574524732 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.574361752 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.574213769 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.574066962 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.574488712 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.572273395 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.574180768 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.576024638 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.57687488 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.574663826 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.574616105 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.575863902 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.575524225 seconds)
  done (took 26.637806824 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.576412656 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.576602452 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.575782639 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.575142118 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.576266138 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.575429464 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.576553513 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.576541725 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.575762527 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.577530155 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.576083079 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.577045711 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.577096129 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.575435716 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.576896347 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.577642187 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.578766461 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.576768559 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.57760717 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.577112529 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.57655425 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.57623569 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.578505855 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.578138249 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.577833643 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.577646238 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.577830903 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.576704603 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.578844623 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.576464972 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.578644378 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.579176041 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.577682223 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.578430198 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.576165255 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.577889569 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.577282784 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.578861462 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.578227804 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.577897608 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.578006971 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.5790362 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.580606023 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.578568126 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.577668171 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.578696284 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.579856489 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.579726242 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.579907307 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.580544784 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.578513186 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.578600855 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.580852283 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.580083533 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.579262185 seconds)
  done (took 88.220139975 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.579710487 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.579757795 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.580000825 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.581235369 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.580246893 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.580327633 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.581275185 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.583985018 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.58054978 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.58147232 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.580899812 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.581155199 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.581906959 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.582286134 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.580264303 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.581786732 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.580896781 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.581556955 seconds)
  done (took 29.905452744 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.579718288 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.581683148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.581694031 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.581920349 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.582294791 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.581363663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.580552239 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.580413487 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.581418291 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.582218555 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.582825885 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.582739313 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.582535786 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.583063534 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.582770271 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.583201431 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.582801246 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.583867052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.582358213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.583274373 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.582707415 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.581576887 seconds)
  done (took 36.252283751 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.570706161 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.572017916 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.571050491 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.587274593 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.582728391 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.572247046 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.571816052 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.571668523 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.589117844 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.597293128 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.594453129 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.581203707 seconds)
  done (took 20.409193388 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.584173491 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.584037143 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.582323176 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.583201731 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.584383423 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.5856516 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.584367434 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.585084682 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.58379263 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.585544685 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.583059541 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.583312362 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.583987021 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.582843801 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585429586 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.583609675 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.584321622 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.584463902 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.585336558 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.585369844 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.585332441 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.586217094 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.585313917 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.584721821 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.585957129 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.586001659 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.585135987 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586264249 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.587183325 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.586036008 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.587405712 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.588311583 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.586147017 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587068801 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.58633995 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.586891432 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.586047803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.586973169 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.586757782 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.587843948 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.58787416 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.586416066 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.585648841 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.58614429 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.587680936 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.586637645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.587049292 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.587665896 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.587362032 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.587692829 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.586665173 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.587889007 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.587980149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.588335114 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.588560033 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.588836993 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.588446448 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.588547505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.58892709 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.588198162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.58966954 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.587746695 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.5886313 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.590783026 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.589074732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.589407699 seconds)
  done (took 106.151186903 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.589143561 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.588469692 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.587916735 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.58944336 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.589272462 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.589683198 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.589552383 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59101272 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.590649751 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.589785482 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59065476 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.590448216 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.589944769 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.591163806 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.591105093 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.590038539 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.589781325 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.591440058 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.590136417 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.590502998 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.589824461 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.591010454 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.590240803 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.589822182 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.589708393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.590974549 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.591414746 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.589595859 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.592219434 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.590487242 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.590651199 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.590922716 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.590396195 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.590279672 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591955089 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.591518275 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592365297 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.593079464 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.592308526 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.592164096 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.591278152 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.592062117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.591342156 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.592177326 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.592257333 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.592528556 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.591300831 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.592606046 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.592089859 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.592706693 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.593777322 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.592891299 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.594069454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.591778501 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.592102894 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.593559458 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.593990398 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592128904 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59307711 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593172697 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.593829096 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.592935108 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.593481368 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.593282421 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.59460718 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59416794 seconds)
  done (took 106.489237338 seconds)
done (took 2030.432828602 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.579721434 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.5772808 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.584456862 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.675891303 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.582374572 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.223061859 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.142284252 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.582733011 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.583380251 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.583756809 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.583831646 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.580047979 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.888872098 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.583244879 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.583332465 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.58165001 seconds)
  done (took 58.37312374 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.616590299 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.592559392 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.730251045 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.594160988 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.617476234 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.8097483 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.658917992 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.59343832 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.79832297 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.595712365 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.590298505 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.616555582 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.589916 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.585741221 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.611795224 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.815392516 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.895686827 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.589658169 seconds)
  done (took 34.360310521 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.133612088 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.616684813 seconds)
  done (took 6.207136046 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.612528233 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.592393311 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.594037624 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.592419776 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.581210936 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.581792573 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.589634477 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.585205095 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.587708183 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.743887324 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.592975706 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.605789064 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.591791325 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.593037521 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.600540514 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.641516821 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.728485224 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.600521725 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.599134011 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.595273878 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.590823235 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.79061901 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.639792659 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.60195494 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.782134096 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.597587079 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.595027893 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.604156279 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.742170796 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.604253558 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.59042837 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.590076951 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.59195366 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.586834631 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.170870285 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.587130501 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.625502263 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.599150672 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.600191855 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.750550417 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.593430306 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.599053544 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.584368526 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.174327412 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.720639658 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.828755061 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.585431353 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.595179961 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.593879602 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.7475704 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.593522839 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.594790394 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.658510446 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.593358564 seconds)
  done (took 100.388151197 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.595109426 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.593252982 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.58525588 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.589215231 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.599039457 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.59604784 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.58782595 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.933964897 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.594751022 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.586697648 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.929715562 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.606283303 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.586039743 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.590254588 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.591558202 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.672187585 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.587762952 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.587803444 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.588425725 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.593492168 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.596433179 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.586384893 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.587444942 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.613784762 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.629889861 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.58873503 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.595845784 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.587411083 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.59076644 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.5868792 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.595686206 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.601445639 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.59360997 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.587630314 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.905048379 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.622775363 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.587702915 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.588075168 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.628291733 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.592368015 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.618268307 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.205826308 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.595239301 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.588451105 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.602635621 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.203623061 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.588121954 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.608447705 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.597166454 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.590629517 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.592844823 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.591253656 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.589400064 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.613380641 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.590349759 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.705835797 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.717629178 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.590309299 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.608070748 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.588399385 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.608086975 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.591233112 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.604135446 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.598023344 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.594903445 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.589651727 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.785251572 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.593699429 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.601471223 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.605785265 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.590859626 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.613033674 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.307688753 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.599181323 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.612311213 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.590788937 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.614142633 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.59269015 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.593404686 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.631923936 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.590691544 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.595833564 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.933688175 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.611295067 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.591449782 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.613635592 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.604814573 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.591940761 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.60782129 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.603424143 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.593375686 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.593975352 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.928776252 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.639282802 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.593297714 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.595214835 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.644831928 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.597298626 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.594605844 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.592896715 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.593882501 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.598585741 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.313229639 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.600181276 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.593531689 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.600353661 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.596882725 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.597235628 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.593722466 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.595651672 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.598097221 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.595456452 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.602313794 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.605008625 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.620360932 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.593865888 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.014190801 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.601529422 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.593431782 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.601672667 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.594946531 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.616725827 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.611266644 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.593669647 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.595499212 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.959549445 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.614752684 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.597284271 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.596790474 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.594427713 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.595230186 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.596018051 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.594773513 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.59817236 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.595965092 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.602215839 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.610896072 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.595869961 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.602840844 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.601730645 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.616520668 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.598547349 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.315724463 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.918479773 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.812094429 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.61299102 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.597126761 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.629928965 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.599792214 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.594986517 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.598304862 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.597344979 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.902136559 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.811005352 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.601286996 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.597455717 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.620224518 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.600932149 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.600874337 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.309652464 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.604287521 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.602573642 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.605582122 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.59949876 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.399449251 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.637872604 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.600775111 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.939127873 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.645751228 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.601126088 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 3.384708135 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.599164171 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.599906207 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.604792581 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.6025968 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.597802531 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.600633464 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.790754523 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.598528163 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.599411086 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.602394812 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.597467052 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.600976371 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.618665765 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.59915447 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.603603355 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.599872134 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.676201435 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.603652747 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.603559178 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.60671062 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.60416651 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.283768427 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.323975693 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.605371837 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.601558924 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.602501152 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.601330798 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.601469449 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.606055705 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.605602011 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.604218831 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.602296723 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.977926141 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.607657927 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.644653563 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.61241107 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.602009063 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.601424616 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.621120999 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.61962575 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.607047333 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.60601858 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.819972438 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.604524781 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.601456374 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.601810277 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.606780885 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.601873963 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.614210099 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.602286058 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.603178815 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.607090046 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.623012143 seconds)
  done (took 574.323937385 seconds)
done (took 775.1070187 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.601564225 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.602337647 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.606925414 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.60184514 seconds)
  done (took 11.888640267 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.619604442 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.611973525 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.618566311 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.608775047 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.619510171 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.609566049 seconds)
  done (took 11.168849757 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.602208977 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.601912012 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.608537639 seconds)
  done (took 9.290133296 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.855043617 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.607317121 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.028583482 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.619525483 seconds)
  done (took 10.590457284 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.618169117 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.62002395 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.619699598 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.620297519 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.620892295 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.621710945 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.620088681 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.620578323 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.621944569 seconds)
  done (took 16.059245496 seconds)
done (took 60.473706531 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.691211058 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.688351841 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.625368564 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.652647564 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.744046254 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.700254813 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.694113264 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.697731706 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.69299369 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.644217823 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.692003663 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.638671138 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.688834575 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.806486592 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.644751633 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.69125861 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.636807124 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.785782463 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.694855727 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.646265841 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.714786761 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.644978668 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.647557424 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.60919157 seconds)
  done (took 43.851190345 seconds)
done (took 45.331792104 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.642346069 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.707719658 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.615120589 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.614757124 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.616508572 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.624396585 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.642538612 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.617686099 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.635065808 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.637064737 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.625546789 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.629694964 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.630865729 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.631986416 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.649997306 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.616682209 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.617095851 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.633788535 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.639363995 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.639931575 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.617442548 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.620373764 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.650476213 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.617274163 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.625906095 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.626471812 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.623740719 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.611221161 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.629437454 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.639154444 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.620151719 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.622145951 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.640943298 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.634473115 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.6192119 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.63502536 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.621963595 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.709809355 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.646427045 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.63489078 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.631479592 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.640321284 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.622939576 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.622969291 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.636401985 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.653582795 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.628439908 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.634386846 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.617289906 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.62901933 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.64024001 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.636494913 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.634006351 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.623559309 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.617420941 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.634474245 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.634124728 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.639281762 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.631953145 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.621233784 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.653855612 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.639736819 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.637477651 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.628546056 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.632745597 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.634384065 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.636939584 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.643104837 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.632490664 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.621835626 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.622230161 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.634396059 seconds)
done (took 127.057600114 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.742038161 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.618552605 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.771292379 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.629374643 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.790541396 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.747322282 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.630289093 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.629301442 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.628627286 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.429431404 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.629722739 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.630317357 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.620381159 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.63100275 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.742191517 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.629960818 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.62983526 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.321338593 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.630235461 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.756994915 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.619284669 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.631146946 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.631229878 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.41850865 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.619162332 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.614829808 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.757329318 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.630719148 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.319235378 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.614357123 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.616026796 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.316870936 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.757849261 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.649198797 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.640821297 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.64070974 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.794605098 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.638328193 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.745764906 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.74667445 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.777024857 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.669239698 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.614662368 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.620591146 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.635233292 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.632273946 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.633118812 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.660309041 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.619890361 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.632238187 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.32715475 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.641901309 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.642091361 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.63392071 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.633556882 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.653154552 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.634613987 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.633496883 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.760991925 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.634242915 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.746284481 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.423300668 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.430904787 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.634085248 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.62172615 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.63451747 seconds)
  done (took 127.910336364 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.691657296 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.702077404 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.755234704 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.628902491 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.675590234 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.749135921 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.625576266 seconds)
  done (took 13.317221872 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.631059012 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.636590795 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.674818717 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.673851276 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.633295192 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.797652312 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.634681825 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.637542925 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.634543032 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.675764288 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.636056271 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.636972307 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.644540459 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.6238786 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.673223077 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.63595747 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.744053356 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.626195709 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.634299744 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.781109724 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.635004436 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.644839475 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.675533759 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.637454559 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.63603635 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.632522932 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.385845127 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.634966378 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.637708298 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.635258158 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.63649245 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.691551335 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.635426108 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.625189885 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.636549974 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.74022489 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.635868264 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.63850867 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.638346133 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.628767183 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.637791841 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.637891313 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.638389304 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.638640197 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.637025459 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.654276399 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.639245678 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.638153816 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.639619117 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.639148967 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.676386029 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.638843738 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.638805706 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.639002266 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.682013641 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.647744088 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.640034722 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.638892345 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.639563263 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.637766993 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.784658879 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.677647474 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.638291835 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.677916156 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.638677132 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.641099528 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.638977313 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.638325862 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.722770815 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.640783182 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.678712311 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.639476115 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.812997088 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.653643569 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.642551251 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.633029486 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.634410379 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.637360473 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.627938161 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.63537673 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.639894865 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.632629649 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.637876912 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.639533802 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.639424071 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.789551483 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.739117342 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.64096875 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.647912538 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.637331695 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.63991427 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.68124782 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.640149904 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.641547109 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.68320964 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.750016526 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.683270306 seconds)
  done (took 166.961701448 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.64526052 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.643819894 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.636382206 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.659830685 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.634108374 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.631498768 seconds)
  done (took 11.347494138 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.63420459 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.646875761 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.641166995 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.641131889 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.641797878 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.643715002 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.642467597 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.634148762 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.64546749 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.644289031 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.643057682 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.643081473 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.642558744 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.642416953 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.642228753 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.642636098 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.644944597 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.642356846 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.644549838 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.643428935 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.629577281 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.642415584 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.642954599 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.635652018 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.647617359 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.644546898 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.657908087 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.644139274 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.644653481 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.640035626 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.648997326 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.645768818 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.637101166 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.640881253 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.647248599 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.637467552 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.649605446 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.646328499 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.646624117 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.644235588 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.644178955 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.644750538 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.644906707 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.645149407 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.636516241 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.639742407 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.649707062 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.66189531 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.643835251 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.646360082 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.645644656 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.64605995 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.646683649 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.645468391 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.641524943 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.642202421 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.650068549 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.646655221 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.647910583 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.639417677 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.651294568 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.647919247 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.640233858 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.651007366 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.647981885 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.646180248 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.639610349 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.651527255 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.647986315 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.648883222 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.646711621 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.648241524 seconds)
  done (took 120.896388278 seconds)
done (took 441.919770618 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.069296281 seconds)
  done (took 4.571298839 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.899533881 seconds)
  done (took 4.40527466 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.323800993 seconds)
  done (took 27.837209504 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.696419446 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.635733044 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.666141856 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.638119556 seconds)
  done (took 12.139040879 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.254208005 seconds)
  done (took 4.757214517 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.657585483 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.647578564 seconds)
  done (took 6.812287938 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.127696009 seconds)
  done (took 4.630541161 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.428060323 seconds)
  done (took 4.939542383 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.641502904 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.651911849 seconds)
  done (took 6.80602366 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.617044809 seconds)
  done (took 4.121375695 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.17939389 seconds)
  done (took 16.687354426 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.655751437 seconds)
  done (took 4.163062187 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.644149354 seconds)
  done (took 4.146356497 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.021254747 seconds)
  done (took 7.524869388 seconds)
done (took 115.044612572 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.632408705 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.637758611 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.63860345 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.639941868 seconds)
  done (took 12.052335754 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.713979685 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.713100639 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.72349467 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.708594947 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.708076375 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.717280557 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.676010462 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.675833307 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.706960143 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.701437429 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.718702309 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.709245923 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.717127935 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.684147825 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.702817034 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.718588285 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.707101477 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.723246442 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.676461494 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.709909327 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.65279775 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.70987433 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.70403664 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.651102493 seconds)
  done (took 42.33695515 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.15914907 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.715698713 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.798321724 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.69460359 seconds)
  done (took 8.873772519 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.756168082 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.756970915 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.776948356 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.812468879 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.859918226 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.771258224 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.680355931 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.673552668 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.661479619 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.758818097 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.832577912 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.756501093 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.970641678 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.652965678 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.972114416 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.65297652 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.653204189 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.756965711 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.808024735 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.835615899 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.654122332 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.755506147 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.761923797 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.756401084 seconds)
  done (took 43.833907489 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.662284076 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.669625214 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.654814847 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.655427804 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.655237698 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.657143186 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.667915313 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.657639017 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.661940084 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.654874025 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.65441614 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.656760582 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.67005672 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.655255869 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.655847432 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.662839647 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.658242851 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.662439997 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.664607846 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.656070007 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.656011818 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.662176479 seconds)
  done (took 38.019773888 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.638867089 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.638335943 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.990494923 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.893960353 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.641339674 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.641357706 seconds)
  done (took 15.952359235 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.733439964 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.90108795 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.651643891 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.093817197 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.196273026 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.653201282 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.648115669 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.944664642 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.342637155 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.356208889 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.722376346 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.730380664 seconds)
  done (took 24.482129816 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733168969 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652705578 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.652401037 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.693128381 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657922016 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652659662 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.705713172 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.229767723 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.66495442 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930032879 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655448542 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734425795 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.900980984 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666759008 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.656874977 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.63889267 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884907577 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255826209 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655263862 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658696092 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68682431 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.657721762 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.66697534 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.906160115 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.656911238 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653054595 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.91585462 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.654876293 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99612502 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970475961 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969827568 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654873313 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931524164 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178604962 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765084756 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902377217 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654915645 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.654844424 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.653181535 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.66556211 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657443281 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.657690462 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971364513 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658476557 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.65516766 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65858455 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235068513 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.668697552 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.656483893 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.657964205 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973147786 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740536003 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.661112537 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.655851145 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740806085 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658784441 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.661708658 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776741653 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293404518 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658538759 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660710273 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.661568515 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646298072 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680313368 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39365729 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.666968299 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.662926021 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66038727 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656663465 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.670474129 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681338062 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657232371 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.676749094 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657322503 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565541285 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.668291951 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696227517 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315617399 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678325121 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.661228513 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883884297 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658094773 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658171007 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.658042246 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.659466506 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.613970166 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671358051 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.630548137 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695616434 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.23391763 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923786982 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.684720482 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687370449 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.879685771 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.630218673 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659453072 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.659536609 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685696894 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68048647 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238217147 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663315893 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.663631917 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909273983 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.870401129 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664883372 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.636769498 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249240394 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.683644252 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.688953662 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.660077962 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926546154 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.392978096 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989778163 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.664531919 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699563769 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.661500527 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.680548653 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68434751 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.672531181 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.671672583 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992092533 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.638502518 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667280019 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.734853496 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663082127 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.662522543 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.668246329 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663992246 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.663542636 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.904506947 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667025344 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.983627208 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.664572086 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661797224 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.674512634 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663127099 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.669089797 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885349617 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679127448 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944696724 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661239794 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663002784 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662914382 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.881322618 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.663115211 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.674810548 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005086669 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.662418913 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.670483811 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990288047 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705014373 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776726541 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.698991533 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.682059573 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.918477624 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.672271212 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.670258288 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.674601715 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.667031862 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670660751 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.672983779 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656552485 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406654835 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651300201 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.670095153 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.665205153 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.681430025 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739168032 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67323657 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.927779506 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.66948098 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686235333 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.676876222 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.668922113 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890207849 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985240378 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.676038629 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.845189552 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.248968314 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40856754 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68452987 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.666703647 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.66556804 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.664940933 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665987481 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665532722 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.668789531 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926643628 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996305335 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.678766185 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411683632 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672939893 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.672066062 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.674802206 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988698315 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.679152059 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665552701 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.675747357 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666455264 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679350284 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.994796187 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894020792 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.684443006 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.668551849 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.18595672 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674809474 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.670323817 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.667186079 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693912469 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.67114595 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338518944 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012724112 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.656887047 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995944696 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.673044722 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.687060286 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.668259562 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667761391 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696290891 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.692358467 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681818464 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.931677364 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.68985238 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.676201733 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307651313 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620322803 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.362390462 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.688258126 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.691696093 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.678295784 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257734072 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673087093 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670110543 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962678978 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258906058 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675037441 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254264396 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.680480294 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.59358583 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992736763 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.900100605 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.67957192 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.675745076 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002448512 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.885144978 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.699782807 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.669477663 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694561914 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.643667164 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350933931 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.691276636 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853285273 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256408845 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677204365 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.676705254 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.705933271 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.694287113 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184074549 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.674937583 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67182107 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.671474707 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.686189076 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353553106 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.683747369 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.672141123 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.452680313 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.67500482 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.267811904 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67763842 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.937571759 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.003175847 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.981964961 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.67917292 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.681251976 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.924145165 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998664105 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678690881 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.691674005 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.360386524 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.536702991 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.681831938 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674951196 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.693644317 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695096918 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027859861 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.691156086 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.684639905 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682999029 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.676025601 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673627526 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.67506044 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.682172259 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658061535 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279054746 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.666680145 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675534821 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.691979182 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681602533 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.92381025 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.690392024 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42066436 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910087733 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.670119301 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71455223 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.681463309 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.676136664 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.650324078 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.674999004 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.674900188 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.753231353 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.901554356 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.679425889 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.654744318 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.731636436 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89384095 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.676149325 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.691509886 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951631936 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.681670958 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.70294308 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642329657 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714864205 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.696033536 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678665096 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.67618708 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713520894 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.751520288 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941757844 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.009346937 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008595594 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194260803 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.681375481 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.700580742 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.696104142 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758235185 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.678258496 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.685159212 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.679331984 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420842016 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646542706 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.43302462 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011397091 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.685397416 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.688203525 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.677859015 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920907806 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679210468 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953868188 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679036146 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.675348944 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704800888 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679244825 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.683709245 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895283294 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954250153 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.679748776 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.694080214 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682703149 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.680481912 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011090107 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.893948817 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.286744838 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343105638 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682607791 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.687138709 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27148483 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960393709 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681374658 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.681222316 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680896508 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.700098327 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.699804224 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.693871326 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.680577742 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904758849 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005408999 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224511868 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012579069 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.708878797 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.558180098 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.682887486 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930574606 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513495969 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.947201128 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438320876 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.5601016 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94005911 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758155121 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948274214 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.687379481 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91894737 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.68830179 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.686942255 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683130588 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682460798 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.681726527 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.00823323 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436422313 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942895135 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.689938041 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.68643002 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718221386 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.947218622 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.911204155 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.651383516 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907762164 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018140779 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.695536703 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.683645414 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43456435 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018837248 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688871442 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.69010938 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960888733 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.689112281 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71888804 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.557021024 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.683252039 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34699334 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.897213341 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706130779 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68761607 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.568952244 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444149789 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.699120778 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.297623147 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.689498424 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704652577 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965035305 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.694774678 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.693721434 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977459804 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.691974954 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.694138473 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9568227 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.436903226 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.638251854 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.695913374 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.706242426 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.688582265 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.686900845 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.757438286 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.69280236 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.686488426 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.185893359 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.690709201 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.688914638 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699664984 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.697101443 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.695957311 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.690305876 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.68952894 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.695117411 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.700930494 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.665138007 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.697342638 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81158019 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360145829 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.696051721 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.302364626 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.026120017 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.935078447 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.700282946 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.665440604 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.694412719 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.69158881 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690187351 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.689483507 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.684847976 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357274401 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.704761263 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.020354761 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698081811 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.902363878 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900870662 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.68935325 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959289891 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701549222 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711346974 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.663473166 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691110264 seconds)
  done (took 1133.022300125 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.764329718 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.733209409 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.697853804 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.815726442 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.699351527 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.862155543 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.702194272 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.720474262 seconds)
  done (took 23.540085655 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.69715106 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.688405496 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.689274221 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.69822597 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.683742534 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.264123148 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.6961378 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.690204375 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.706985296 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.692292714 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.688783805 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.429737992 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.695703789 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.683113343 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.701582127 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.693201566 seconds)
  done (took 37.953598601 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.939752821 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.908143081 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.308972379 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.702635421 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.686571302 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.701917587 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.111290288 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.704684571 seconds)
  done (took 30.611198139 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.699200813 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.697359166 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.697831425 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.697090837 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.698718195 seconds)
  done (took 10.038939097 seconds)
done (took 1422.222675716 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.698796552 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.699190785 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.699449233 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.697555575 seconds)
  done (took 8.34272719 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.666919565 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.669349549 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.669260496 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.681414744 seconds)
  done (took 11.235318751 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.148449597 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.366625725 seconds)
  done (took 6.062392739 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.694170615 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.458434451 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.435595588 seconds)
  done (took 9.137005774 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.011695427 seconds)
  done (took 3.559465046 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.097809813 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.19901744 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.685571114 seconds)
  done (took 8.530599985 seconds)
done (took 48.414935621 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.702392767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.453012468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.841599908 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.694697835 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.847964953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.843161751 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.005286761 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.684654829 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.701962824 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.683734864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.694787663 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.847390073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.989624293 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.45439604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.99285577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.453093238 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.84823321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.685284213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.702654228 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.6851094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.007077103 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.692859189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.698931743 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.703731027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.850565416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.831711995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.694774276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.454088718 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.692773722 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.686061677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.83336324 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.700030126 seconds)
  done (took 93.208198211 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.687768928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.704557069 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.686982691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.688830392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.692170436 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.68642592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.689965297 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.688310523 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.695538606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.686433396 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.688545192 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.687629248 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.690252088 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.687273435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.688346098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.689360901 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.688200931 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.696890423 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.687443039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.688636316 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.689734871 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.687182517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.727102198 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.689101184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.697243878 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.687720029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.69589585 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.689877199 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.688160978 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.689595789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.714603998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.688991194 seconds)
  done (took 87.697558646 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.68934134 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.688625765 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.689130132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.706309993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.688524591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.691696754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.711805389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.689477807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.688720764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.714598523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.689725007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.690949337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.690524589 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.690481665 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.693549991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.692068029 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.707158883 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.699119563 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.708634444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.690074458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.691047659 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.704681456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.704236229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.709104765 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.69700702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.690896785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.693877115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.709786642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.690431705 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.701203378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.691400191 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.692015023 seconds)
  done (took 87.83939607 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.933242755 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.707848237 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.710944743 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.70218506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.710741527 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.707721124 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.702446616 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.939287683 seconds)
  done (took 17.669741303 seconds)
done (took 287.965912812 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.718701143 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.707081716 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.728788332 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.700711896 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.741227434 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.731012859 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.937567613 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.730629898 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.926262069 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.703663126 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.719683647 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.704646838 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.673130815 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.851310248 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.69761671 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.720015354 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.699211538 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.712976509 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.707384066 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.965632525 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.741375721 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.69522484 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.709755831 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.704118714 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.699945976 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.779613703 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.782378238 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.872646971 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.833442139 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.77990063 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.713641741 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.705738074 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.719969719 seconds)
  done (took 77.370534934 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.702354059 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.710437059 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.711779893 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.713003814 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.713396767 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.712128237 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.701830857 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.71323852 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.714519974 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.712992376 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.713893457 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.712802886 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.713968162 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.713360243 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.713309137 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.692749326 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.703770852 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.711993802 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.702059369 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.691345007 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.713322271 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.712854514 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.714888042 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.713102716 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.713976906 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.71433428 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.712710353 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.714666926 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.714588825 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.713494649 seconds)
  done (took 52.871616132 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.714293952 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.699220919 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.707476118 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.712972858 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.705070733 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.711036478 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.066353558 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.71439521 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.710929501 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.709744242 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.699429858 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.71908662 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.761355066 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.703076102 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.713126334 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.716286726 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.717198725 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.706965746 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.702846343 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.721352812 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.074519242 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.718588139 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.066711081 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.72306989 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.710441142 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.706438817 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.71152927 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.699442633 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.71020104 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.700780035 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.706795839 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.067833388 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.702434615 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.701879769 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.700919511 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.721273073 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.719096349 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.702156674 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.709708769 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.710061793 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.06734891 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.710912486 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.70927828 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.708618376 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.715838771 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.720444036 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.701979608 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.705061596 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.015587648 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.716145811 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.703319358 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.720595746 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.721622754 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.710765684 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.016959945 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.712144282 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.709950665 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.717457294 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.7139908 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.069096479 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.719705283 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.71003377 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.70385364 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.712711185 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.715087349 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.715003479 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.725321929 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.71084956 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.70975811 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.717944077 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.703040634 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.716150558 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.720038669 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.702903152 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.705717952 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.704987368 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.71328718 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.710130724 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.705604723 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.088189169 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.716877861 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.706367777 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.082324038 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.71583018 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.724793357 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.724601153 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.721385775 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.789678016 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.069316693 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.686878786 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.730354346 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.716921263 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.0745485 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.721938111 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.714044611 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.719354358 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.722527524 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.722782961 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.707978978 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.709563197 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.717567414 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.727687693 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.709303087 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.718560288 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.075162373 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.7197295 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.708170249 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.720165006 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.791444303 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.724486846 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.727800855 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.718197539 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.08342292 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.719880569 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.725403541 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.706304526 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.720049802 seconds)
  done (took 245.108302571 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.710522232 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.710716759 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.709346031 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.708611074 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.709507641 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.718008367 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.707411543 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.710304859 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.714450899 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.710598288 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.711884875 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.718556937 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.716728296 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.7084221 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.710139912 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.711471848 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.710354129 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.717046711 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.713611976 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.711348919 seconds)
  done (took 51.8072253 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.725883324 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.412359633 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.40366231 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.73182146 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.725104098 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.717697084 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.786248582 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.729051708 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.72604932 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.088149533 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.93672435 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.729977635 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.72927813 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.726189445 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.405157489 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.728062306 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.089305396 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.412867089 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.729219233 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.412450429 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.729482672 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.727791522 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.716038906 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.413776618 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.102089529 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.077460839 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.79011445 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.417387604 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.729750459 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.726123644 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.414375797 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.72758253 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.71936266 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.403236342 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.728890608 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.742582374 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.729623419 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.791572636 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.792099507 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.094282027 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.420846476 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.090271906 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.740583032 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.916869723 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.733978937 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.705378086 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.427589416 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.731023625 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.705420144 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.730656673 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.7344654 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.402761048 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.723322844 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.403316696 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.732408966 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.730513518 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.416650797 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.403414839 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.414161996 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.941784784 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.720289528 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.093722402 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.73582396 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.428924476 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.731847917 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.730966344 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.731974958 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.940606973 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.41884165 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.082806973 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.094572318 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.096255915 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.732520004 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.805043882 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.732494617 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.097693438 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.804068203 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.141218093 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.102416392 seconds)
  done (took 156.418529672 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.0548012 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.839195566 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.172952696 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.369230198 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.294897216 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.883667777 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.861358374 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.998050145 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.728961497 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.82761967 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.504936575 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.831057171 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.582095787 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.807506857 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.838903778 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.856418148 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.196026207 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.736994296 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.464150659 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.482838455 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.727619636 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.852041974 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.558456351 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.154571083 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.734088757 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.557345334 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.732223376 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.32054065 seconds)
  done (took 64.545168697 seconds)
done (took 649.675469927 seconds)
SAVING RESULT...
DONE!
