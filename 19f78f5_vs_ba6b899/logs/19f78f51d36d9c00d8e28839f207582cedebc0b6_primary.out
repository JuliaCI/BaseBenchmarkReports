cset: moving following pidspec: 22257
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.325701926 seconds)
loading group "string"... done (took 0.582443142 seconds)
loading group "linalg"... done (took 8.141146302 seconds)
loading group "parallel"... done (took 0.17245058 seconds)
loading group "find"... done (took 1.242507872 seconds)
loading group "tuple"... done (took 1.92462973 seconds)
loading group "dates"... done (took 1.316383886 seconds)
loading group "micro"... done (took 0.203879553 seconds)
loading group "io"... done (took 1.002051167 seconds)
loading group "scalar"... done (took 40.777348892 seconds)
loading group "sparse"... done (took 12.346030883 seconds)
loading group "broadcast"... done (took 0.968586724 seconds)
loading group "union"... done (took 14.009389079 seconds)
loading group "simd"... done (took 4.826513883 seconds)
loading group "random"... done (took 9.465451546 seconds)
loading group "problem"... done (took 1.606841573 seconds)
loading group "array"... done (took 21.69400735 seconds)
loading group "misc"... done (took 1.754392419 seconds)
loading group "sort"... done (took 3.405752532 seconds)
loading group "collection"... done (took 18.296058148 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542520023 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127953467 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138937016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121915206 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151860874 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 62.525102991 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123742767 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084128726 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.222456878 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151675625 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115231381 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.424560994 seconds)
done (took 68.109797315 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17707591 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.0895046 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079950652 seconds)
  done (took 1.228229156 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066715801 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129099642 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068324665 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068208469 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068472497 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068298978 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068105717 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067699497 seconds)
  done (took 1.595985106 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07406259 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069961163 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067671655 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069439766 seconds)
  done (took 1.33991759 seconds)
done (took 5.507840424 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.805212072 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207832091 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190823974 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41303968 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138477629 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182889313 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653079007 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324653929 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206815756 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096336029 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115057989 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.366096235 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125868488 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.647976578 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078803906 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098302724 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140130289 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.464336737 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072642377 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086225926 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093697715 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132396939 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090327998 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077878735 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.154325785 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07133693 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145597385 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086939966 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070259576 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.221999073 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176322778 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659925277 seconds)
  done (took 10.492303373 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103320906 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101565844 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069731721 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126643637 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099126667 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071207205 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077118555 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069080307 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091256273 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130387673 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092837395 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110457561 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067138208 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070824502 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084763558 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199295741 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081760935 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083131496 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069902875 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080232011 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109447145 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079755639 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085751356 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081517052 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130290777 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170913238 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097643267 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098830777 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068345434 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082971402 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119022336 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128908251 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067696535 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067667785 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127696245 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096318254 seconds)
  done (took 4.590718632 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.023535808 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153114459 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091269841 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137630476 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.120342197 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066444336 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111690254 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066746871 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084492122 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.240360449 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.389077342 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.643712491 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.124919605 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118904893 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107074112 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072178823 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070766752 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06625934 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068593849 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.285682479 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104010424 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.117601114 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087291047 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073334908 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070838521 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067133946 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078223938 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067624113 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071778404 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090939241 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077875973 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.332750861 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128860263 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070083681 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.847258939 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.167929468 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06957696 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106723774 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162376394 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0949049 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142328968 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068563413 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064906749 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159557166 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064281523 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073535268 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066319006 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084013732 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108129278 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118846071 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065498098 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065230916 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166156511 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064414802 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063878263 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081110921 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.209488368 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151474036 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063874713 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.281349095 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089906443 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069721384 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063801456 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.199353775 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.109913069 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068290128 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066537359 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066938731 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066198231 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366580015 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066253419 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.203307614 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.065871879 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074097376 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067572986 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068941723 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076655401 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07702782 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062862312 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08732351 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064950211 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071527218 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064629002 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063744182 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.064258161 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089190444 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.369225205 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.064863956 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070660717 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062767203 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088817942 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096612472 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065492602 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.063907206 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099757439 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068786754 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.064667108 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066193062 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11383854 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068710861 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111620752 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064549859 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.304949007 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099719517 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074572205 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103787393 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079961591 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074228664 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.47155761 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068263337 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075040556 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069035758 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070374231 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068916231 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081126106 seconds)
  done (took 21.952194805 seconds)
done (took 39.117092542 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.25061539 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086772581 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08684066 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08699955 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086897585 seconds)
  done (took 1.784855715 seconds)
done (took 2.96067413 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129984047 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102430981 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066647756 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10338698 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066754862 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103552674 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103282997 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085905704 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102438516 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067051805 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102254175 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068000849 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067908266 seconds)
  done (took 2.353439594 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084486501 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085118338 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070960498 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084167843 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06433046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084128477 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085441199 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089981722 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082685273 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074126482 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064667044 seconds)
  done (took 2.030923208 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08376736 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085259881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070956958 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083425707 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064027849 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083482503 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083290622 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087576313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083903292 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076034182 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064553711 seconds)
  done (took 2.016019998 seconds)
done (took 7.55169699 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077834923 seconds)
  done (took 1.220169636 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.542584321 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.579650641 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080734292 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.104460033 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196249245 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112349544 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.243982236 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085548025 seconds)
  done (took 8.263535259 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096825005 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072095532 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072015418 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.082864529 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070517822 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071024626 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071353039 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071320184 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072258311 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07277857 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072117931 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072480954 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071031327 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071190568 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073234429 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071670103 seconds)
  done (took 2.414709983 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099233084 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098414967 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075483854 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077736574 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075326365 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074799394 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076824222 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076500143 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073212588 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074742221 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077900242 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076316268 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075640981 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066627237 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076214779 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07863646 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073224915 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076567702 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077150748 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077804651 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077615407 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066389096 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07568123 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07661068 seconds)
  done (took 3.113692904 seconds)
done (took 16.162919045 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.120026787 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07975388 seconds)
  done (took 1.352486614 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082751186 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082432148 seconds)
  done (took 1.326558185 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080335104 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064428949 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086582163 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076210539 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06482431 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064607403 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084923027 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065111884 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065091047 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065067039 seconds)
  done (took 1.880634733 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067711738 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074470318 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070928144 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081354792 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071888945 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065580926 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070212196 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066664949 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074991759 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064726651 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070067463 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085125565 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070096749 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087238083 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070352634 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07063842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072247693 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068944852 seconds)
  done (took 2.471320576 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066271739 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066024154 seconds)
  done (took 1.298422397 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069537837 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065117843 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068046148 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068290407 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065146321 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064352274 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065585822 seconds)
  done (took 1.628685672 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395136808 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124882069 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328487137 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072396431 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08249531 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257577265 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066705146 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071248968 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071823809 seconds)
  done (took 2.675182343 seconds)
done (took 13.801621946 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083323289 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088171449 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100192924 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.421887824 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095179872 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069834619 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117518767 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184918863 seconds)
done (took 2.339157882 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213666467 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.876972537 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.475753949 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212924505 seconds)
  done (took 2.741062445 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341715486 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082979959 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078763172 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068593926 seconds)
  done (took 1.750824484 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069216574 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071598774 seconds)
  done (took 1.323221127 seconds)
done (took 7.207646236 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066060892 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066292023 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066827565 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065890817 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066242152 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066428883 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066255722 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065978515 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092188893 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.182361603 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.065991141 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066379683 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065833127 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066612988 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066420755 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066277157 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066153336 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066374694 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066299323 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066294097 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066377323 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066078682 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066519153 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06638719 seconds)
  done (took 2.945085883 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083775778 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068824966 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06990215 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069765452 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070526534 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070241402 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070463399 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068589841 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070562999 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068548984 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070892119 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070832043 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068184002 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07074077 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068246053 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071089177 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070230687 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068719703 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068048421 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071208109 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07029241 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068754246 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070884432 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070331971 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070472076 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070558525 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068286916 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068798234 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070131087 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070859242 seconds)
  done (took 3.289243739 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06704673 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062186041 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062944957 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071483585 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062443048 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063647367 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062473999 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062813916 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063278704 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062556505 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063563478 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062451516 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062635711 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063357594 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06354403 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066977833 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081041807 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062903113 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062712845 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064190725 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066965982 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062715774 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0628682 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062670051 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065314677 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062569869 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063369537 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062900995 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063619916 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062458686 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066969635 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067439308 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062810367 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071453311 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067154575 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062932565 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066704849 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062420843 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06332874 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062997925 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06217113 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062335426 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062565387 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072060342 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062900802 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064242547 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062614174 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063828866 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063054475 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065499162 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062384174 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062470712 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064671035 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064172898 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067890481 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062462363 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063309022 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062290803 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063246496 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062689718 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062200764 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062247066 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066015005 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063480654 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080751891 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071731269 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063006582 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064614059 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063615109 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06644403 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064302994 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078788226 seconds)
  done (took 5.850738665 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087822275 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089632584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067713852 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067508081 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063529708 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063110833 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071651612 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063212128 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068397387 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083018239 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063345615 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068119273 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068062676 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067812877 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063999255 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068033898 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07246721 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063883705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06351615 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067587747 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064109805 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071585881 seconds)
  done (took 2.726321646 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149771291 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069505237 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107864404 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073964448 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072245842 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07454055 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069582192 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069842606 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069547723 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07012922 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07037632 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069605752 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072024423 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070596893 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069960078 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06970602 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069383646 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070114135 seconds)
  done (took 2.577452868 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082433278 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068749019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088260326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068652183 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068931423 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068311038 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07289458 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073881593 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068964687 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068823351 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074056213 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068660359 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068621128 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069128006 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06836455 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069232271 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068500544 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068730522 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07420778 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073182964 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073040724 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073874978 seconds)
  done (took 2.78089978 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082719463 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068419372 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083612059 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07016217 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.073051567 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063405033 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069276022 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068797463 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070320558 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067763934 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068291379 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063076726 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070897521 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068161983 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07151927 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068457968 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067569618 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068716542 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067910518 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063506151 seconds)
  done (took 2.596730549 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086627355 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066633031 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066647441 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07336076 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066198958 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066468886 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073102199 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066848536 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06644476 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08778394 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066360041 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066687649 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074031975 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070707847 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066674139 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073063879 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075860299 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073467826 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067046899 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067154433 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087464124 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066840038 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073206896 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066872877 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066923808 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066594529 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066573754 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070660749 seconds)
  done (took 3.186890957 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066573153 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066167574 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066318458 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066296852 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066654032 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066568095 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066491206 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066974367 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066103708 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066442232 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066100802 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066049181 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066187098 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066182107 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066350637 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066131473 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066284563 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066745223 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06648933 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066690683 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066126604 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066223082 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066258811 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066724872 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06620695 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066089325 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066083823 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066814705 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065889289 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066643292 seconds)
  done (took 3.187475619 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076615467 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07514157 seconds)
  done (took 1.347900338 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064684294 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080643039 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062542519 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073972653 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072480971 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066524768 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072963381 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072723241 seconds)
  done (took 1.75814599 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087356049 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077134107 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065413721 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077692334 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076329295 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086487703 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128922099 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065562796 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076059916 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066669913 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084019653 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067182683 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075731224 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071068445 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075838036 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079394621 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063278239 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07044496 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067341482 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063599119 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066583251 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079512263 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074976701 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063677044 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070629714 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093657562 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081661528 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064719996 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072746858 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078182667 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075370594 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062643836 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065019057 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06593568 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06352328 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076610678 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084098258 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072662784 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078336654 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066389308 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074376557 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063263664 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074645599 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076632142 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081749943 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065880392 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065684822 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063311317 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066047879 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071861959 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063281931 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069845143 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062531251 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07752304 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073541949 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082015891 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063890631 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071091461 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072170767 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07221244 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07686286 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071385775 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074823233 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064704757 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080868395 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074628807 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077135148 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062725286 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062040556 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063133282 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079428213 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094055492 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075187787 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065991084 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065691216 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063295926 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072421565 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06612844 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074725412 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076869736 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064828515 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070195356 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077643698 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069770071 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071739478 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071693814 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063217163 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068354125 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06581333 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08510922 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063649525 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063579079 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066287422 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080408521 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074123414 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064387688 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066014866 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076595387 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061775774 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064766004 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065264357 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070248724 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078137613 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068624075 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069566692 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077872626 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073914466 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069762012 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070994165 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06170914 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065489399 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066584862 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075912853 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061732695 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071240075 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068655524 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064926064 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076607725 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062973202 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06461886 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077128975 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076338554 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062945026 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061771636 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071563555 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064291462 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06649576 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077846973 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06275575 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062102017 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061832623 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071956693 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063890197 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071996866 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067862826 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071237874 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061782538 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.189551579 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071556689 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078799611 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069123816 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07182916 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075873917 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071264008 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06471064 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077433822 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072856856 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067841063 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074882465 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069697384 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06330806 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067821884 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072966724 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063865044 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07254826 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067747618 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071887562 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065475379 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063456043 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071046881 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065754598 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06766823 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069992352 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064028089 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080604413 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071998484 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064062358 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063502299 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072633164 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066833163 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064585385 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067906961 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07195613 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065508028 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063371468 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064601175 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071200155 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073376003 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068840254 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065920724 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074753967 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082764026 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064776758 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072101361 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064561225 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065941907 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065731915 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079579981 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075443608 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069324376 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072063426 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062726571 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074618227 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077171068 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067709223 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06344175 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067688259 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068984718 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077063828 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068777168 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065594429 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063613476 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071311015 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067933371 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071837514 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064602074 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067538303 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070356243 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063481846 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071352902 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065902766 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079882886 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072660375 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062948294 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067641384 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063589438 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076154667 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063258574 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066751402 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067917542 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066225535 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064931325 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072092914 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062587201 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07794508 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078447162 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071472854 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067703157 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065216307 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07778298 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070780509 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073133194 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072209279 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074916732 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080573929 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067460142 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072003954 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080080273 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064751694 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062188326 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074803848 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065981443 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063796074 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064088763 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064063354 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071634118 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071902194 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074818322 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062043257 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071365502 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063890079 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066936412 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062842918 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073349766 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071483911 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068739636 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07693138 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065213508 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065386965 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072714124 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064448238 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065219789 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066227598 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07196885 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065503561 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070547419 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067068784 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071099748 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06693504 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062444363 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06997874 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064144772 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069404724 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072920265 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063597998 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07048027 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071034371 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064277874 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070575499 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.198309265 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068809472 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073287441 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07170795 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070923818 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072162618 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063272809 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078155118 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065271719 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078097977 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07003884 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062607889 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070689754 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071983059 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06955932 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065586496 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065733337 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070785817 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064516994 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071902205 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078024613 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066841961 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081202993 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076227569 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071142464 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072064709 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070940705 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070365397 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067802549 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069826084 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065561637 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070787978 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064892825 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074149177 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072327354 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07063964 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071449487 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066246605 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070638895 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066374786 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062536409 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068067414 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068093697 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065017275 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077718183 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065498597 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068448523 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063996274 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065722437 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064323615 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062241489 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072250203 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072838811 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065483998 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076469552 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06799128 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07191284 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080713524 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062683044 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063687231 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062945844 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066539727 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078065311 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065881637 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078853701 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070623376 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067876253 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062711978 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065954284 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063612853 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062794773 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063268022 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073537065 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067373776 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064515175 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065383072 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072260945 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065848921 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078146935 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065110317 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069882009 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065736182 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06268802 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068014541 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067727456 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072339113 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066036465 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066538273 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062835388 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065373398 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06981102 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071237076 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064726959 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071175018 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077710538 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065040181 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072411207 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067740523 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062917156 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072175607 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064837601 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065288973 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067380642 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073172753 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072669834 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065491953 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079417684 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064835797 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073482005 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065218161 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063087099 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064392999 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06461479 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06503215 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068396501 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065719986 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078141821 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063000052 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070908876 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069719999 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068385311 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075269006 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065704976 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070517236 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070804002 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066274205 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070798448 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077981887 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068339716 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072108805 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064784672 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070035474 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074079077 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066800288 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07618738 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069935078 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065379971 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0699644 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065295286 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063717308 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063789618 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063296509 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073646248 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064504922 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066520342 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.201397351 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064031399 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070580643 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068421021 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078822529 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072233927 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072590782 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063317524 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062940472 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066018148 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066227876 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071022493 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07168265 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074874909 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071840481 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069110138 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063948675 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080414909 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075321461 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073470672 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066544281 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07323009 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066177884 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072347878 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069485995 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070055427 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065768649 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073432511 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071198295 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067979161 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075710404 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073054785 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065732063 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07119983 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071068674 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070220902 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063436402 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066079614 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071362232 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074613166 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071720431 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065449787 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08148083 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066152363 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07032484 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067746019 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064403709 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073768512 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063149978 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071647815 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065984721 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066378003 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063564488 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067871831 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066245227 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072031362 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067545173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063375211 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080782405 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079622062 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071528973 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064722597 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063941389 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063356985 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063705435 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06771348 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066175132 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071534581 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080815135 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067539135 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067285133 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063405187 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065490671 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072593145 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072981294 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06312776 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063245106 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067531198 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071439953 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077060186 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064024408 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06492375 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072782667 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071947558 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063386381 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068878849 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062298555 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072603815 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082586152 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065407373 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071062677 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075597478 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077805974 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065664584 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063760804 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065166691 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071470521 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070855096 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066178976 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065926043 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084672469 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07249672 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067535233 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063965382 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072298537 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067564141 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079525007 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06593799 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065497125 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074374055 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074091928 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073196594 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075317083 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076170262 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071169962 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07139688 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06411919 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069747521 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06350712 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0673396 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065810976 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065201426 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069206026 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071677994 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067042356 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083098547 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078446354 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06728505 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062018533 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066916717 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067018817 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062490162 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065177226 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062729427 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063376201 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06312782 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063637824 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070468075 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07306729 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068457512 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064622486 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06389664 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061725619 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073750075 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.0705865 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.203505576 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063462564 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065855887 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066292773 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073860933 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068133815 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067501759 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071307514 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071080979 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070997607 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063185542 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077121594 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064607061 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071130684 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067682 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065402158 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065600464 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072621351 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069430708 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066894109 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072255294 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072340548 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066802376 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063247899 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062610192 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074568046 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063495892 seconds)
  done (took 43.227354521 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101735559 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06452344 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063121472 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063573031 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073434885 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064748147 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063651861 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06482265 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065013477 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066666199 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063455049 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064084589 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071469447 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078890335 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074112339 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068171328 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063492699 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064890758 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06353724 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065607687 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071810772 seconds)
  done (took 2.712365943 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071684947 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078856851 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075968043 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081326578 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073664034 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069202727 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076537529 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068822911 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07732458 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074397328 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077102249 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069044859 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074549928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074521584 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07439773 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069427424 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077247617 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072832997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068910191 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076564919 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069220048 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076763109 seconds)
  done (took 2.890438241 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066229129 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064879097 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071157913 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062770536 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063866321 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062668525 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067513689 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062550917 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066877795 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067674011 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066990214 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066768442 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071223632 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062801172 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068066783 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063426621 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110690067 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06728883 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064664126 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065691169 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063076946 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071949126 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062703465 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06367498 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067187033 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067630427 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065010601 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063151165 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064489986 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066538277 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064653234 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063174693 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070995432 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070661448 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066619749 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066952143 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064911992 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064916886 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063188336 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064057761 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07087976 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063200493 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067648222 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071664013 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063679418 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062919072 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071481061 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064954817 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.0629216 seconds)
  done (took 4.547495332 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076557058 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112414061 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069507596 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092642965 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077968635 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070996626 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069265222 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094126594 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064833251 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065897454 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079378957 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079612063 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067232328 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068397358 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069480405 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066770121 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067859008 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066131935 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070392351 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066290544 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070358871 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071000451 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078210703 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078505263 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068211468 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066465684 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066660636 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068680229 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078637816 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070817121 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069010836 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069393976 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078690447 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071652109 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067306451 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066683285 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080218811 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.0675883 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067628828 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065308909 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066349511 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069093408 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071622668 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079829672 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067403931 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072113327 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066890331 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064733145 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078556565 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067089637 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071829412 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080695751 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068198567 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067078466 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068438208 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.094061977 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066959171 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065699333 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066739017 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078202841 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064668121 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067679461 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078994272 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065966683 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070714301 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07923034 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071441478 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067709134 seconds)
  done (took 6.319867836 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075246363 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095326568 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080655167 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080857526 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074322828 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074589353 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074552144 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074932944 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074609901 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078766976 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075273264 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117100706 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070478872 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076627217 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07502258 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074707111 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074989477 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075034249 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074728782 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074437124 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074477088 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081452999 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075229228 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081298181 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078138027 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070080915 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073899039 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074847002 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081596818 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074705904 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077717505 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07434761 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074278214 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081877865 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078135356 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074274643 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064184641 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074150486 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074743543 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074674367 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070416235 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081181662 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074310467 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070249654 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074533492 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074306921 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081078373 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077756285 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076358295 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078193219 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074683776 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081227288 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074582934 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074253627 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08115703 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.083754405 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081082912 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081407984 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074625599 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081601443 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081070552 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083992433 seconds)
  done (took 6.109345409 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082486613 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071132097 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083222824 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063166795 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063068968 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073303526 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06294217 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063031907 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071871055 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074494753 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07374435 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073514131 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076211947 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07415627 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073491887 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076023897 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073619034 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073303615 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071480353 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073203539 seconds)
  done (took 2.754064467 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07826881 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082276484 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068499269 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073691136 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068611733 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073087399 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068119052 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068719358 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069536221 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068892879 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075468077 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075209765 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069580565 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073432607 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07501139 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073267837 seconds)
  done (took 2.458474735 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085642566 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07173967 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078615465 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065518568 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06843918 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063494253 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064673526 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062712378 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06356128 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077908882 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064357344 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076320736 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064890504 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063515486 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064057785 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070894287 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063594034 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064550319 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064349675 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078079846 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071769473 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065459611 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068541165 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064620049 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069819537 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071848576 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066006152 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068157981 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064502092 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065136618 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07042818 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071603934 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063951148 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065316547 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064047172 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064380177 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064245961 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064960464 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070352285 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06434419 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062775034 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069818061 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064455528 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.084465928 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063596278 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065019113 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063602922 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070401948 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064878736 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070117223 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064519608 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067201401 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065011997 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072325942 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067267464 seconds)
  done (took 5.032085803 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080582795 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068767108 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062551246 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06242988 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068019782 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068970548 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068729114 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068516537 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069317238 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062913741 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069418877 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068706306 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069469412 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069132686 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069181002 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068872044 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063393457 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068442864 seconds)
  done (took 2.540929149 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074443525 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068127556 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072489683 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068140049 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067451438 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067409328 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063440121 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063299008 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063160035 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068339923 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067965612 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067548353 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063113722 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067749032 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067994641 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06797974 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067806859 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063527426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068055497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06328388 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068088036 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063258598 seconds)
  done (took 2.774999166 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097964873 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084474622 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142680866 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080561932 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088521621 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072963133 seconds)
  done (took 1.872748089 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095511441 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099325753 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06824427 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068317245 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074084678 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071355127 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071618287 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072197618 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076218995 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0769823 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071871212 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076927609 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076329977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078782083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074392219 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074127185 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074221861 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072090719 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068082066 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081918982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071985842 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076508643 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072002555 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071587971 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072375807 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078503431 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076428987 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077458472 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071869693 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076779301 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074246697 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071890338 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076652987 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076818765 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068255668 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07640913 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071904299 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081496777 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073973225 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078441292 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068393092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074428589 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076535009 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076117514 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076809177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072143704 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075941522 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071904634 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072085347 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083722847 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074605985 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078364295 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07475673 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077345543 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076313327 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083424801 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076901309 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078751395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074441682 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076973403 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078874835 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074411363 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078456156 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077038526 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074482389 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078703524 seconds)
  done (took 6.30760725 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10677914 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068638153 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071587944 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076771932 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07839557 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071687839 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072624958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071999211 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072326069 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069279134 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107559919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072184886 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079036303 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079063036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073071655 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072630546 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072514729 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078645875 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068914754 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084098713 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07205874 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078490765 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079308901 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078663741 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076809122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07452459 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072546642 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071961127 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071997376 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07206154 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07598357 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072088898 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078761262 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068820718 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078695016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071989321 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071891691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076171874 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071972938 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074601038 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078967772 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081998021 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072095494 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071880421 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077217368 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071876248 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071819888 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06908175 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072130255 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069107876 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077028909 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077410888 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077583495 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078368152 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072497131 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07202114 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072599551 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072274763 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072626937 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074800214 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078313057 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07182034 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083102522 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071709111 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071505331 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078727927 seconds)
  done (took 6.301931814 seconds)
done (took 129.27860275 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213931914 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185462006 seconds)
  done (took 1.692726881 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076015559 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106623788 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085061783 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.134456636 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072443346 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106796622 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105625017 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.085962625 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072738524 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072247521 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072193074 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074976819 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137620562 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073260776 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072618578 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075356715 seconds)
  done (took 2.738228428 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106984462 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.21978066 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110163741 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070375865 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106096853 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078681081 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07016454 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084283894 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077700032 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072570993 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078661339 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07705729 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07199958 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.079366148 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077668765 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079039864 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072070132 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078494957 seconds)
  done (took 2.926035291 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10562868 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09744057 seconds)
  done (took 1.520815912 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.180411362 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135549403 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204118613 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347572203 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155642987 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.434411788 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142444218 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143004667 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117010291 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137845038 seconds)
  done (took 3.308889559 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106027809 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.195957086 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299654162 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123076047 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077227441 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11453888 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124483871 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083391998 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081330074 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081081217 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081243505 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079955466 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102844316 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078440497 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077403425 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079371235 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105324026 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076265731 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077626958 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077414169 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10566236 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070973879 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078534575 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076473884 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079061883 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079459183 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072144512 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070811031 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077809225 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077005362 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080703273 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.111555692 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079039946 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107307577 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075332621 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107752399 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079948408 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07573913 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077078466 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075739989 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078850211 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078863055 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079583227 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079395666 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071888615 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079626214 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072189619 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070752347 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08165355 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071841411 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081627577 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081197848 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106751406 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072232567 seconds)
  done (took 6.224748521 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110448609 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108878843 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072326903 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114810971 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106305194 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072210653 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108112803 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100611967 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10973053 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072309677 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070298517 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072196506 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081206947 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082697334 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117150993 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.110164335 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07482733 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071631197 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.109933565 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109491276 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071288069 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10386767 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100088833 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109341415 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070049125 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071885928 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070736032 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072427593 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077972196 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079509927 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070997259 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080857349 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085801787 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079017461 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069671229 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07033434 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070312059 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080083728 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080626 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079727954 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078442268 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069290407 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070022465 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071240953 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070942215 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069032364 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079187252 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080160332 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078863854 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070460189 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071738039 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07040692 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071551711 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080339216 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077866724 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08147368 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080352706 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071003797 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070212861 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072900376 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080673515 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080897585 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07939162 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071048018 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07988992 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070241206 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081411409 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083880959 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072938111 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071582892 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070182159 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070440508 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071138105 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077693706 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078002576 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071398807 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06998578 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069711612 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080093993 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07795218 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069794981 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077189325 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068762404 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069740078 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070929837 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071261961 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077776467 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079711077 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07153845 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070045575 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070285907 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069901365 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069205158 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077507222 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079640469 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079412465 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079472639 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07143578 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079669809 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078458119 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071508746 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079397193 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069877786 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071486545 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070973841 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078292118 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077379686 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079799559 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069807107 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069646799 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078058262 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080752156 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069894786 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077555752 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079299448 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07693538 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068552473 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07925808 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069280841 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077473453 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069040668 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212028966 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071687456 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079844473 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070831262 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070067046 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070798085 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07952951 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071864419 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07073616 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071621259 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070720872 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078963198 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082041698 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071741821 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079056829 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078440022 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071666416 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078807889 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070412465 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079924261 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07074612 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072345851 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069573452 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082206039 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070770791 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070208585 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070691251 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080104372 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07004005 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080171341 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078016389 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069865038 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082091524 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081106544 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078014171 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080230682 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071499446 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07060367 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069882432 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070209662 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077454659 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079412342 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071887567 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070246988 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078423038 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080399711 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070405467 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078856926 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078877315 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079103036 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070869203 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070893337 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081356459 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081571811 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079187003 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079293419 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079047405 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071066024 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078331567 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078924046 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070913981 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085430709 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070925258 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083382621 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079294253 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077838902 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079930053 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080869373 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080803909 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080746156 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083071599 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069745836 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070481052 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079275611 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070746638 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071326312 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078177242 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071825933 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071735822 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083088648 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07103776 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080439226 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069318052 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.0794655 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069452834 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071519757 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08351389 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070485844 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071862663 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079297329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071035552 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078556023 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.0803751 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078301564 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072829027 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071224275 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079323809 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079608005 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071056716 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070317272 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071374613 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077856843 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077312651 seconds)
  done (took 18.767279788 seconds)
done (took 38.508332199 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213422184 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156705745 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187994836 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116775749 seconds)
  done (took 2.091860828 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.110529882 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099485136 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.089746752 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067022225 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096289861 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067034425 seconds)
  done (took 1.87664559 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.345936383 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217034435 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196631578 seconds)
  done (took 2.101446966 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.226335846 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.217633239 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463396072 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286882631 seconds)
  done (took 2.64002349 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147038058 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083668444 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06585981 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.079835722 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126740019 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180193063 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.095058773 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130502186 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073689226 seconds)
  done (took 2.383657154 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150020807 seconds)
done (took 12.608935675 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.12073453 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.099010332 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069578095 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.173939405 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.212934706 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.131535041 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.178174442 seconds)
    (8/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.179776536 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.133951498 seconds)
    (10/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076248311 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.208494595 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077350162 seconds)
    (13/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.234056588 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076305116 seconds)
    (15/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076095384 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.158583302 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.209001619 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092573802 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174488439 seconds)
    (20/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086531033 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067325472 seconds)
    (22/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.180808774 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.226470803 seconds)
    (24/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.198960852 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076726862 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143072491 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.101364311 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.247791598 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071290884 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072464551 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076160988 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177306804 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.105918031 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105836145 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075986872 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066157513 seconds)
    (37/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.176901422 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079598567 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096130539 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088974049 seconds)
    (41/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075550889 seconds)
    (42/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.217242056 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.197404787 seconds)
    (44/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075645678 seconds)
    (45/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.067381572 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093447754 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.150990124 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.100428447 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066867889 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.067582472 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182431305 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067145358 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067833497 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084575957 seconds)
    (55/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078069311 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072262601 seconds)
    (57/309) benchmarking ("sort", BigInt, false)...
    done (took 0.243911995 seconds)
    (58/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.178319422 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06669757 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075774438 seconds)
    (61/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.198762584 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194795535 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067282807 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065812206 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.181112312 seconds)
    (66/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06984417 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.150726932 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.120636103 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092356337 seconds)
    (70/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.230994153 seconds)
    (71/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.08927477 seconds)
    (72/309) benchmarking ("sort", Int8, false)...
    done (took 0.171598829 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077457426 seconds)
    (74/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.22572363 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.23040812 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066810035 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.228383806 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087730386 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148945774 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.22991004 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168218786 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066799234 seconds)
    (83/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.218003564 seconds)
    (84/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.239395184 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.179400867 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18561327 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175285541 seconds)
    (88/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068693716 seconds)
    (89/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.14275638 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080554699 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071215232 seconds)
    (92/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.142951737 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067944095 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076126342 seconds)
    (95/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067090374 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07518868 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.150178548 seconds)
    (98/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073779308 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07367986 seconds)
    (100/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068154057 seconds)
    (101/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067960486 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07267602 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110538312 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078760814 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195359255 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077950413 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06803315 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.158727773 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090323103 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07640444 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120010664 seconds)
    (112/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076073206 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066932247 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066840797 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076113003 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068093762 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077275481 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173814836 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084857559 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079134361 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.138991242 seconds)
    (122/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067406386 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076161176 seconds)
    (124/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073949638 seconds)
    (125/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067355234 seconds)
    (126/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.234413975 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079697054 seconds)
    (128/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.14282682 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067799181 seconds)
    (130/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082750944 seconds)
    (131/309) benchmarking ("sort", Float32, false)...
    done (took 0.136294601 seconds)
    (132/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.171117667 seconds)
    (133/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.182384154 seconds)
    (134/309) benchmarking ("sort", Float64, false)...
    done (took 0.133453103 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078410589 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077005544 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07511076 seconds)
    (138/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067738863 seconds)
    (139/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075022079 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.179683296 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068256576 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075697606 seconds)
    (143/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.174162303 seconds)
    (144/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068017601 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073577192 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066670711 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074313057 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123287179 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073217036 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067769472 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.179492989 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073363448 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067286171 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088530459 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074859036 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132895001 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066848144 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075121254 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073533259 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065481299 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073437227 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066857228 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18236274 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134783913 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074141907 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.138552672 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090550351 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067028388 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078862808 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067747298 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14081496 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07467525 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06919882 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119321115 seconds)
    (175/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139377856 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.195823318 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142037036 seconds)
    (178/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07738692 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067024223 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066881912 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066859728 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087954986 seconds)
    (183/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076184513 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135448625 seconds)
    (185/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067513647 seconds)
    (186/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066092284 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069732265 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066739511 seconds)
    (189/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092302627 seconds)
    (190/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066354167 seconds)
    (191/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067224121 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07658842 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066618412 seconds)
    (194/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.135265844 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066641615 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179253052 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127083346 seconds)
    (198/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069281362 seconds)
    (199/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066464924 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06635397 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123937193 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066602315 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170799565 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.224776972 seconds)
    (205/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174519606 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090723008 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07563406 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068324205 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.076006029 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067916317 seconds)
    (211/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070441691 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06987686 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127823547 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067041235 seconds)
    (215/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068131582 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133038136 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093569802 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073879446 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073859765 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091329793 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067689406 seconds)
    (222/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.141611727 seconds)
    (223/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067887963 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124435001 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076930423 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.085256553 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07568356 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138746282 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079340908 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070420144 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067788823 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113129818 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075050207 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095156879 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067939851 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068953928 seconds)
    (237/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071456617 seconds)
    (238/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067612537 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.079362568 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088938219 seconds)
    (241/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076435414 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066929888 seconds)
    (243/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068834626 seconds)
    (244/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.070124676 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071491448 seconds)
    (246/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066259388 seconds)
    (247/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068083899 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066625478 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06596889 seconds)
    (250/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067635535 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067922614 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.141972617 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074639243 seconds)
    (254/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07417075 seconds)
    (255/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068167644 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130381571 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090858404 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06745575 seconds)
    (259/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075620787 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067597 seconds)
    (261/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067314442 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067500458 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082722546 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076906574 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069348491 seconds)
    (266/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091981885 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067927565 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07380839 seconds)
    (269/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.067558473 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067671389 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.102570479 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068789007 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067455301 seconds)
    (274/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067178981 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066858348 seconds)
    (276/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068200872 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070267068 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094455428 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067375529 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087655191 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068884897 seconds)
    (282/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080014608 seconds)
    (283/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067901271 seconds)
    (284/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067950735 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067338548 seconds)
    (286/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082307528 seconds)
    (287/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.0668144 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06754832 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075257729 seconds)
    (290/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073510228 seconds)
    (291/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06649869 seconds)
    (292/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066730168 seconds)
    (293/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.131697789 seconds)
    (294/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066685677 seconds)
    (295/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067911564 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074162785 seconds)
    (297/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067278033 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066986023 seconds)
    (299/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067419153 seconds)
    (300/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120832751 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06660295 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066456901 seconds)
    (303/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069100055 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066576789 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06607061 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066451374 seconds)
    (307/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067341323 seconds)
    (308/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074855992 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066922761 seconds)
  done (took 33.325160276 seconds)
done (took 34.687553968 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087934415 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099215251 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074107842 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094053763 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083127672 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096411322 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074940692 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080221732 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082323597 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082514788 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080731525 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073042111 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076094855 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076217052 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074347235 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098544703 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080932429 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075424338 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075509279 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067049958 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075774583 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067159574 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066832574 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073035562 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078899405 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07508474 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076852747 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076274761 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067062159 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068026547 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073237523 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075951428 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067331723 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079718737 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076119711 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076632716 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07746485 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079904373 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067355496 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067546541 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077188595 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067558181 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075303717 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073243865 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071819318 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073763264 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075526034 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080251945 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098586664 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071822076 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077532697 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077679175 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07891565 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07272096 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072574512 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074907053 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073493067 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098380186 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07595802 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071410713 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076756901 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076492518 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073516353 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075465458 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075139694 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078254543 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078923615 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073929356 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07732934 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074448365 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066920999 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075255409 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071815654 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067228283 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078817182 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079658606 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066426915 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071340416 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07549183 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07564055 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069828484 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071961563 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066566069 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071856166 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071467571 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07312336 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072407295 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07432673 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066753718 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076025616 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074385186 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075347615 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06717937 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079967418 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066926261 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073358114 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067451054 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067008556 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066747644 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072699109 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067269383 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071085546 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07564884 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066123781 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071239886 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080294862 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066604529 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073971453 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066329488 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066761011 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078470552 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077779762 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066965136 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071055075 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066206916 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072106948 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066086267 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066639151 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066706117 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066540987 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071147584 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066782987 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070900669 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071788822 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079407153 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066304786 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070999693 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070845179 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066953283 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073079833 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066641058 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066706307 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06625748 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080144613 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071357231 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067150135 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07209134 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071058262 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075215417 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066574007 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075296713 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072469775 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071170165 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073070654 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066169593 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077569165 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07104815 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070562738 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066439104 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066505066 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.065474458 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065917806 seconds)
done (took 12.684486495 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072194482 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.119329173 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094216269 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094462563 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084250287 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068126441 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075096712 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.093015382 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069315206 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097808759 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089586545 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089304586 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111289595 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066460523 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067540902 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068676581 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069051384 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080032367 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.095470109 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089679546 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107734445 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067293841 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.087027294 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088195705 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.084905365 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089578256 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068534306 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068842063 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070885206 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090913489 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092590081 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070960741 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068420473 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.091919031 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.086378106 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08107661 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068720765 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.076383055 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06846953 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067869797 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069144626 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.088928055 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.076063671 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076674232 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068672455 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075709895 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068954123 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083776888 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089180679 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076267951 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083395383 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.092677915 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071584506 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084558386 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067203376 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083936467 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077356893 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068196532 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068345626 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072944043 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068094672 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0703532 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079457006 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.077086211 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072339205 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082823448 seconds)
  done (took 6.69307463 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087549657 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095574334 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084842739 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084781724 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067466758 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067877335 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067558642 seconds)
  done (took 2.001664755 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071831638 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088520713 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092063125 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091318496 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084485516 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092510132 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076241647 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068130114 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097770922 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067219231 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088634838 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099145905 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07180617 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079931877 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093889798 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06820937 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092972852 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068225616 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068862504 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092742401 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072730855 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095353503 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079677879 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068595651 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081194934 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069154517 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101557847 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076251264 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070043168 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070669448 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069360572 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094864993 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080539029 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080032295 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069576952 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083723478 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082590591 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071864988 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079254032 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080385487 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081690008 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069430847 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06707134 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069779312 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071843378 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079773879 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0671977 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069617248 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069359843 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087571648 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067246325 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080485177 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071557344 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073949709 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073557868 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07331236 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076280617 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06995586 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087570812 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069285981 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085603106 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084703927 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081378771 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08509347 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06809504 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08028078 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08139955 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069079883 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069967384 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069700487 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084710225 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071607809 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070261042 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079600416 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.0681818 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092707617 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092196189 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067767064 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08144251 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069073713 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069621069 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080202609 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092069392 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073947539 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069361018 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072416679 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070474521 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071212509 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067420631 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072175197 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069517928 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073653201 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069807687 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072302331 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071014941 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085045602 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067711742 seconds)
  done (took 8.940243453 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0715467 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069211394 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070803407 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069093491 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069035423 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069212283 seconds)
  done (took 1.892116914 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10411674 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069193805 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081895885 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069054465 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105207906 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0847569 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084943361 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.087846106 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083181572 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081124898 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085064644 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08797211 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088968722 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071669003 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084491631 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070427252 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084740325 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07368046 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080273518 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071678468 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.082693248 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071932141 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071927847 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08960362 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072761804 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070130055 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078194862 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08032786 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080695714 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.094730224 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071687091 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072732846 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077596586 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.087270417 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084675439 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076813458 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069136326 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075056055 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072055279 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072608425 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087541063 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071534798 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071751287 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075421429 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.089887218 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076653057 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075416903 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077674016 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084152662 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075684348 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074938913 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070592872 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072684084 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075349778 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077017221 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.087007757 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075361924 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084586278 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070942448 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076669937 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068908084 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072336004 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089007529 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072112313 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.076530631 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075566501 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077349647 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071141097 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071615899 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069099309 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075048427 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069108127 seconds)
  done (took 7.086160755 seconds)
done (took 28.075661033 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.877577596 seconds)
  done (took 2.314458107 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.625110809 seconds)
  done (took 2.083002233 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.594972189 seconds)
  done (took 8.048320219 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.422036184 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.671595486 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.759401637 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135891874 seconds)
  done (took 3.483960745 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709026705 seconds)
  done (took 2.174596993 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237957845 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228113224 seconds)
  done (took 1.938943219 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.352978995 seconds)
  done (took 1.810603611 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.062501035 seconds)
  done (took 2.520449368 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257167716 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.171730633 seconds)
  done (took 1.892426233 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447841732 seconds)
  done (took 1.908690048 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.222713982 seconds)
  done (took 5.683794105 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.225898666 seconds)
  done (took 1.722247853 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23754706 seconds)
  done (took 1.699515586 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.843501078 seconds)
  done (took 3.305397426 seconds)
done (took 42.060338909 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085357685 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08623822 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086094302 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082002585 seconds)
  done (took 1.783841616 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077356993 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071379173 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075518726 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071309581 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075733144 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07147856 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073232546 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074336655 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071358153 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072377372 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071917663 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071557968 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075032034 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073589744 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070524029 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074685673 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075919242 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07206405 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074910301 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071792667 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070215204 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074827715 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074830996 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071314797 seconds)
  done (took 3.224477771 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080243855 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074180577 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076961116 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073606497 seconds)
  done (took 1.776998338 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079575679 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089318971 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087204036 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078085265 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089624032 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08560404 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068305702 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068423406 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069493224 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077599252 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067378637 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094419469 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08707125 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078056098 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079671731 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064540917 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06640957 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086256984 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078342772 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078189173 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069473637 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077720116 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067243881 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088087515 seconds)
  done (took 3.344724031 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089610174 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066826607 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08710036 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092963688 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094735062 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066987097 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.085856344 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094857428 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.143017296 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067128134 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073064135 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067194075 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106953973 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067341488 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.087251081 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110444187 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113530917 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071181871 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099841649 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070213461 seconds)
  done (took 3.235227828 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08521364 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070607232 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071669284 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066613359 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077320923 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074185536 seconds)
  done (took 1.928219866 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071215208 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069072505 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068435846 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068046137 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073448445 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068525504 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067505615 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069191875 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069103929 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068786383 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068275912 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067664768 seconds)
  done (took 2.303674934 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.212392329 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070479852 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071382869 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06684575 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073093799 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067550898 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082701619 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.0702704 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094901828 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068121852 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068295558 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070306648 seconds)
  done (took 2.499048069 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196850459 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07506671 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22612308 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147130366 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10411982 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11120646 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112833213 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109955037 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135508279 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099139514 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156302381 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162657153 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105274886 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131069459 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088875254 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.12130697 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147101435 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159229753 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101384864 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156961075 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137640709 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123844713 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144119279 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098649093 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10283937 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114859452 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072725253 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078329637 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161787155 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125404213 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138649022 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106317766 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091372114 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168168635 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159117432 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134128678 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143566274 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082205068 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.123655161 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130269116 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195329334 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087930322 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154310451 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103959474 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078061333 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125790993 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110835467 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.115679391 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100945162 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086986776 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275755248 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17691959 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129888534 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084577627 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11791901 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106212743 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110990189 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115244961 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221422 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151660797 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122536834 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070706149 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107856539 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145158296 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127499618 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106204344 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.11966686 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092615673 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126306496 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15358636 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137587354 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135661062 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.137642015 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085779204 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117399273 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132523892 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1249672 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16432644 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119402691 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071557915 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117452778 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096824726 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07919436 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143059708 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074276515 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166985774 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097186486 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121764689 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126722146 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106212275 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106403906 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153217929 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136572139 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102432762 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08460351 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100549037 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.115280203 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144236704 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085391964 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105456413 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110951276 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077654286 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128952383 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07340448 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116545991 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09351813 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114583121 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268477665 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079092841 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120255106 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10220968 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100594132 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127828564 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15136297 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086414882 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079673667 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159029897 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11764821 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101318077 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13777945 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151379432 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1189308 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095955094 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139678276 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166200794 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088888071 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154783689 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100823855 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082646616 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103603818 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119316082 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107789096 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119109367 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079327357 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116484913 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160767058 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073324964 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094800515 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128438015 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080392837 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07943709 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10230574 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101692193 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094769202 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099596823 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102783948 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132890948 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119475437 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103198132 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119882902 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098009063 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158607206 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086545864 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100766711 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102375284 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071951907 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128613491 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149188237 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077275926 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153906776 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118720256 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112194674 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114603916 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081444571 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131247115 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077104186 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071302139 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133754703 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108768411 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254047159 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146492519 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11182795 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120402052 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116835745 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127534835 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125034799 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124912596 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111923348 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087158746 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111510005 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162623945 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071962396 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090160566 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081055218 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100744905 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092624789 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082742084 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134303136 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12084047 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108116555 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111297481 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094870724 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143752368 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077674085 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120922912 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118118501 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093467421 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148058202 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145971388 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127997967 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099314133 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131959969 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07262201 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074211891 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087919736 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119530136 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08343258 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082340513 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111199944 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143643896 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125279097 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13107011 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119862684 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116522804 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150114361 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071716158 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116863447 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138274456 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117122432 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102541582 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088897604 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095700549 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136892147 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101120924 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200198301 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110054937 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11977473 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148498742 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.2473258 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078677607 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102674013 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127780519 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099916074 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138154058 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096909441 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085299797 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105455097 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076807478 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098076812 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131452884 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114046218 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131041373 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108885295 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125025577 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076655558 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109283932 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119178382 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120631102 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082587407 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116456423 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15962181 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102582808 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113967991 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145344426 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078073135 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.136472431 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165311191 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138247294 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083267945 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102495315 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117848147 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12230831 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118224679 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133174707 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101789066 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131459785 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108059439 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083388829 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085217501 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093603384 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101282609 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.110802272 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102652147 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111777633 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094352985 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131853341 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101174341 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108375152 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114430195 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098067965 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094168704 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094866841 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166108828 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114151321 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15998917 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.09748564 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.135739042 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1513874 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072877606 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225318572 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080157593 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133981066 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083443915 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126792004 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109951532 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112641482 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120123603 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133641584 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094522024 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070599039 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106710853 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128534771 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119320584 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094325872 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101523653 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156590126 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115603323 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077757316 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109467324 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113685044 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101806689 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166760908 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080420954 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107418254 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075948454 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079328114 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122715207 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146134762 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081954513 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101524558 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116581762 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108557315 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122119833 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096794445 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10907365 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126968768 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141329418 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122953733 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088771789 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108096464 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124460201 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147275896 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101757654 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098160782 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167222946 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144807197 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155049333 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086384869 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111203519 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110886408 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107193926 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130749912 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083155493 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153956785 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079879863 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127712328 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097654534 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087697093 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124545535 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107808573 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084960226 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137891125 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110598872 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07981628 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077144655 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105252132 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112448918 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097240183 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072308214 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13426549 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071619957 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126472623 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157854276 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077349656 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099864718 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091542131 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079288379 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098123867 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096704656 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082415089 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095722239 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156925948 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084237442 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140432225 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124133458 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107188456 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127256841 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099452486 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640486536 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077166467 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140349316 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10878338 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164311485 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092945592 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108589881 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103168538 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11032257 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127733949 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094210807 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.172655456 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116925136 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.108987544 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075680202 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094537103 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095776991 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.083513748 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099410316 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105125501 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104177663 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.088161718 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.108794966 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110403806 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078837561 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090748545 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13952565 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106425679 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133579536 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126368108 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07983211 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.370871707 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131726992 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081755638 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119055392 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148318486 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105459217 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124066035 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083818596 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101360011 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1680977 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074089052 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155309492 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118925928 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110370222 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115448163 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110154332 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127762843 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102997271 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11956331 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093448408 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10936239 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112903658 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084124536 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080083759 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104524418 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109197525 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.13390413 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097787538 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098846918 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14633679 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072319396 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096862958 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112743792 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145036361 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164847938 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.104657954 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08313962 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11845151 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155756087 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112145057 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118158719 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080624995 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080227791 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080920758 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.09929824 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.122603695 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111272865 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11605178 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110579944 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154356377 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083153672 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222722977 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094190533 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103315744 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087471787 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079240056 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094140479 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094703079 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101105329 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108253491 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165120069 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09319331 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.241922647 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091858869 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073708749 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082280975 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121850691 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107354825 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11459732 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118505019 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080650297 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100957306 seconds)
  done (took 57.619626144 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.104194799 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083317517 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097948127 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145675151 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122340516 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201281051 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151771877 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189783977 seconds)
  done (took 2.696382355 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06897148 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093959784 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104313193 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083552243 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067822805 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069182401 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227052355 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082162909 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067621896 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.0923379 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078224064 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069570673 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.459724321 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067436897 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068040725 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077324489 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068353575 seconds)
  done (took 3.43117362 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.384217074 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611393257 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.358268719 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076427335 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.027018071 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089646712 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.243092318 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138533516 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082474026 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549894346 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369121107 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133757458 seconds)
  done (took 18.665940289 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083594153 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080230179 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09274836 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091975673 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079759944 seconds)
  done (took 2.097092819 seconds)
done (took 106.089514826 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083400242 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.527904338 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070762538 seconds)
  done (took 2.225415231 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094767221 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090510712 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091186584 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088800349 seconds)
  done (took 1.979072696 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07889157 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078957447 seconds)
  done (took 1.760072111 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.211558722 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177354797 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100087432 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086764259 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081581725 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082079391 seconds)
  done (took 1.858498198 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076237227 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074019812 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075110024 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075327194 seconds)
  done (took 1.902955215 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071538181 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067796513 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070330836 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073007719 seconds)
  done (took 1.887115499 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088340139 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086291154 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081295907 seconds)
  done (took 1.85901837 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105084302 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092306659 seconds)
  done (took 1.800027987 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083543028 seconds)
  done (took 1.694576925 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09251698 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10218928 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133074854 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117494993 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139430437 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117866709 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090616863 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087350621 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080704007 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094397226 seconds)
  done (took 2.665324443 seconds)
done (took 21.802183035 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081593807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372370808 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36192988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092110039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674552555 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359435731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993884006 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094853756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110111285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070541926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087794699 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650665991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984095069 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329239064 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969934191 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.332942446 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654358519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071020298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06984219 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071120074 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.974851252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069796246 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070614879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0712313 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652918685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377767662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072412929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332923829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071035608 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075388475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361327342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072235838 seconds)
  done (took 16.225292273 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073143036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124475436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074258659 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086266979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072855223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071498628 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074034551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071415781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12118396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070781363 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088883092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070240483 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074524884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071693355 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090770894 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070676197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074051382 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071748086 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071403598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072685768 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090333375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07136034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072429086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074438763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071937985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084659664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072961404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071277922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07178283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075930569 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076773963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07302997 seconds)
  done (took 4.124177421 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120346111 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128435351 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075669017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108421062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120680812 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072630029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149896807 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095666546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123648144 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071774049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088230421 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070587814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106045161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072024054 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091886909 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071770298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074657133 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071618186 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071042699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071802784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090746389 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070850523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072288981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071693771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072241241 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08659161 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073029406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071940368 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071316148 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075643654 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077208234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073163548 seconds)
  done (took 4.385933264 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073767393 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074456426 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082122442 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083589211 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069278763 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071488777 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072608439 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069888051 seconds)
  done (took 2.222412849 seconds)
done (took 28.576103582 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081827716 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069257577 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073116606 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089643002 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075437124 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081309858 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066723644 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075910674 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073354493 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073798748 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075758365 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06921189 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07230423 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067445948 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074307661 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068311061 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082766124 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072384583 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082810116 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082689139 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071406606 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074834913 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077283135 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08290836 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083210178 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082411439 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078415251 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074673546 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070019705 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072392405 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.072217228 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080188243 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083173524 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082858126 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.06900517 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069576778 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07379414 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071029845 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083872378 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078314638 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070986149 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078391706 seconds)
  done (took 4.782723157 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086166299 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090806371 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083948514 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080735696 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.091939354 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084267221 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088099208 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07925726 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079071554 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088388677 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075473171 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082947553 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080370421 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074657697 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079436501 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076880651 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081859845 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075981325 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079524763 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080117751 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088824865 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074250785 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089517654 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08074199 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07604402 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082231374 seconds)
  done (took 3.763903246 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07494607 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087418828 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094277474 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146329427 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113173101 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081337088 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083102137 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.093774537 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098072399 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070156956 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074860401 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094602198 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094265047 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075931731 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112796316 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085709557 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085605306 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071800066 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076938648 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098985351 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089942768 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08680501 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095280906 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085762268 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068663486 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071685882 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074531183 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087963388 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072013249 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080876422 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072914616 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073547642 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070582888 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080160945 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072202009 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069486297 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094645404 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08125878 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083050113 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070504744 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.0795673 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071032807 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096006184 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131181739 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069056038 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073775392 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073180669 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.0815117 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069434723 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097821972 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081790949 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069733926 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070304295 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068847964 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069135249 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.072365067 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071497927 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072066918 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080360151 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076649355 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091716189 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074739986 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087172871 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069212944 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080123316 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068740516 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071061898 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068656637 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098146988 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071091447 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11425178 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070898888 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068299456 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081023485 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079916657 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075676019 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069277495 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087321104 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081282635 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073711573 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078265101 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073040045 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073406359 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100536392 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070074881 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069773801 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068293244 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073819256 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072940117 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070309583 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081788074 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068921364 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073122303 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087526914 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070060227 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070436774 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073542384 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072230117 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069052822 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080793204 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073963997 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071430843 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080097122 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.07027712 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073143264 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082730555 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076130988 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068291861 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071746476 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072961165 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070681265 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071226125 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072845704 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071347539 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076445836 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076193042 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075351932 seconds)
  done (took 10.939975724 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168764743 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159259934 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072301874 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15099187 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078535249 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082300776 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154614378 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097359634 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070267238 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071356693 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070234654 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111376514 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107042256 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118173878 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083345249 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071385757 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096010991 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116868464 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156878738 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150997278 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093459733 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078519448 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073102612 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071786913 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071759578 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080234148 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.0874979 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078904069 seconds)
  done (took 4.492528583 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081849633 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105186203 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074508077 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093116186 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090467287 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070644807 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071708875 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.0721621 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086637554 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080345418 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070831808 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076083898 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073949244 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073508725 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07087524 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076727103 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07770179 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06940603 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074572659 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075742622 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080474958 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095902846 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074085778 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070268041 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072821854 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070028035 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078836835 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083397863 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072884961 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.107329207 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067930825 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075452135 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084674358 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070592351 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069746494 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070826906 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070629153 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070281835 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071722781 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068945412 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069093263 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074331993 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069397682 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078635702 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083117608 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072164228 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072241473 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072767797 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073197017 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068076504 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073207189 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073376138 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073131723 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077560204 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074660209 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073597353 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07153315 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097431389 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075962849 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069638855 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069139032 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068761998 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072724693 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080621532 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085521367 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072547692 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068630191 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070221304 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.083315754 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083302125 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0694952 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07485603 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068089617 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07268594 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072790914 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072925332 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071552111 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068839922 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070202671 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070477224 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071094043 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069842765 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069407845 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076948607 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068722666 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068933674 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070456563 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072060364 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079227681 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069786008 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073582067 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071016696 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06889757 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072947536 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075760038 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073170367 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081086052 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081575735 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070381976 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068819809 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083454063 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072641971 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069294361 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075994842 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074684313 seconds)
  done (took 9.541264783 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095013173 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070282265 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086802131 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093142184 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080236443 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075828268 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080430218 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06994543 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086085639 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074977363 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077966527 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068915956 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081653228 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080575541 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070571726 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080749301 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073688803 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088060492 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084802304 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068736977 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078993781 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082656071 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.082787993 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084723001 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08357498 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084895756 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082295953 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08073147 seconds)
  done (took 3.927855271 seconds)
done (took 39.068529621 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.719770547 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.877293088 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.696208865 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.914508765 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.747254987 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 82.055957782 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.736023195 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.688642487 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.269404177 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.735302285 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.037186887 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.988464929 seconds)
done (took 141.230539281 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.751449665 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.845499153 seconds)
    (2/2) benchmarking "String"...
    done (took 1.93934541 seconds)
  done (took 5.412421135 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.888722562 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.359100201 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.923114018 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.691103754 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.696483434 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.943229762 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.465535448 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.133458392 seconds)
  done (took 29.841852861 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.875743546 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.912975537 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.387674431 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.424734106 seconds)
  done (took 15.272650303 seconds)
done (took 61.886620748 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.699596664 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.746232529 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.728022553 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.691037884 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.782887544 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.70373378 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.958754159 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.713813423 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.692164743 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.694544683 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.695763169 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.122364064 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.691161343 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.055024899 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.691569514 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.691896006 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.705264701 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.434262269 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.897606384 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.712624954 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.716606001 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.73295225 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.695977544 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.697139963 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.742881469 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.693698844 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.096451827 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.702838265 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.308726446 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.699041212 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.729810781 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.172919276 seconds)
  done (took 201.725631088 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.694938794 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.609469995 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.681501049 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.711298204 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.095332003 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.871431488 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.798021175 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.13660633 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.699779159 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.721660069 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.873801209 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.693301847 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.887511682 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.632856768 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.73172186 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.742302521 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.833103865 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.888671672 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.732189295 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.859990898 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.712070892 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.769681532 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.71975671 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.840474313 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.723526216 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.778378557 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.707982329 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.710328983 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.875166896 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.801699134 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.705853709 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.732698162 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.850942252 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.567082786 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.718259795 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.699113646 seconds)
  done (took 166.441560067 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.888224684 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.696810799 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.696792284 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.697397818 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.694309225 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.700138412 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.697108898 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.818497079 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.821850681 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.353460751 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.044349554 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.751932641 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.695823174 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455046468 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.694781524 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761999296 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.709323796 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.69407858 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.69644439 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.711128037 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.723882281 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.698101515 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.698067077 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.819361691 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.71225227 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.692958396 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.706528268 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.698845034 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.700392415 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.08587619 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.694189316 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.259678868 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.697538664 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.702604179 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.940129352 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.696267083 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.697474552 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.51722804 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.203385354 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776245812 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.697642719 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.703199548 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.697845298 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.914323214 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.696335115 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.697120968 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.698013348 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.696654846 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.806440459 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.696946292 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.820848592 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.698577283 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.179786444 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.696532754 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.697307942 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.69927308 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.833468969 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.274611468 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.695501695 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.699146972 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.696528885 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.699523842 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.702992755 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.859743817 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.925104186 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.699304388 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.69898655 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.712609613 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.697820507 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.717653314 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.696909339 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.800285795 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.712896502 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.81660622 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833894689 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.699969942 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764246399 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.790676822 seconds)
    (78/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.698348593 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.699044131 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.697634692 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.700554476 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.699507476 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.77998692 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.698505719 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.834168718 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.708877883 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.699725748 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.756965544 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.770050618 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.697092973 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537089573 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.697818638 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.698207352 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.972118933 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.7630889 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.697871588 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.700969327 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.797398866 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.821991036 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.436923403 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.700696758 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.830849746 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.791351269 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.700146126 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.816572896 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.700243807 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780698232 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.706496267 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.703571653 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.73575539 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.70295695 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.714654083 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.699043559 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.073331014 seconds)
  done (took 391.109159228 seconds)
done (took 762.85510932 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.317947117 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.278905095 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.383717803 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.298788357 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.271045571 seconds)
  done (took 13.184797969 seconds)
done (took 14.824427189 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.783690405 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.783073325 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.719022094 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.781895185 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.716503295 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.783317158 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.765809524 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.723611161 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.750346188 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.727175854 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.752240104 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.723944044 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.711401598 seconds)
  done (took 24.355919166 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.922907088 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.935987811 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.76813868 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.927085378 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.744455361 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.94993964 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.860442088 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84427991 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.84405229 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.71446326 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.712750999 seconds)
  done (took 21.862513893 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.925302518 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.933119272 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.775570889 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.929081049 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.747204353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.925541916 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.870261562 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84726925 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849410489 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.716737661 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.711144561 seconds)
  done (took 21.86774697 seconds)
done (took 69.727037519 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.704749534 seconds)
  done (took 3.341614089 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.72572642 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.878309117 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.705874051 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.70542068 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.705918136 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.70597438 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.70619035 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.706144652 seconds)
  done (took 15.47719888 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.706102209 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.705685095 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.707956536 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.706527359 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.705319816 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.706687346 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.707315417 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.705553145 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.707113409 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.706696097 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.707228585 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.706580542 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.707486122 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.706063665 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.705361263 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.707356177 seconds)
  done (took 28.943511768 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.710067328 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.706107995 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.70761179 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.709054471 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.706402234 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.707314009 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.707866966 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.706284265 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.70903731 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.708052332 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.706605198 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.707367347 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.707023418 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.707165062 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.707366314 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.708358341 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.707981666 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.708141515 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.711978352 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.708395526 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.708937805 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.707925681 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.711112459 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.709896396 seconds)
  done (took 42.640431554 seconds)
done (took 92.042672638 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.446851943 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.311215415 seconds)
  done (took 9.398771302 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.712436499 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.709440327 seconds)
  done (took 5.132479268 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.708460882 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.708250655 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.708780361 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.707436165 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.70922256 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.709189891 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.709645211 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.708642614 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.708476033 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.708217924 seconds)
  done (took 18.725380309 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.708132329 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.710403701 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.708574684 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.709295618 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.708003789 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.708155321 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.70953425 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.708207294 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.709540569 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.70812787 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.707886546 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.710675826 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.70802608 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.709027642 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.709952635 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.70819671 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.708415976 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.708308239 seconds)
  done (took 32.398561121 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.708815227 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.709625083 seconds)
  done (took 5.061348281 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.709617489 seconds)
    (2/7) benchmarking "second"...
    done (took 1.710268275 seconds)
    (3/7) benchmarking "month"...
    done (took 1.708493848 seconds)
    (4/7) benchmarking "year"...
    done (took 1.709300505 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.710435461 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.709333647 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.709100675 seconds)
  done (took 13.608238993 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.710822467 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.867454799 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.929596513 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.351195424 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.71208189 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.71380344 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.649484824 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.713265743 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.715565535 seconds)
  done (took 19.004773951 seconds)
done (took 104.972054344 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.557500022 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.709006992 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.03263976 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.785868187 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.727006578 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.709144196 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.708347046 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.000556362 seconds)
done (took 41.876002506 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.713797834 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.473424125 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.519529037 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.784281903 seconds)
  done (took 15.420918567 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.720528611 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.027988961 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.734741556 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.525889614 seconds)
  done (took 21.660241716 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.077485108 seconds)
    (2/2) benchmarking "read"...
    done (took 2.053859224 seconds)
  done (took 5.779879071 seconds)
done (took 51.224367543 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711974219 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.711834111 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.714110768 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.711161367 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.710544881 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.714034052 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.712195383 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.712902765 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.710955288 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.709892683 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.716278364 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710597388 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.712395648 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711133298 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710851598 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.71275251 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710733674 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.71186597 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.712982233 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711066683 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712863399 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711541363 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.716160562 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.713328231 seconds)
  done (took 42.738065262 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.713277606 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.712053732 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.714188483 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.71364329 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.711039722 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.710479295 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.711892163 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.711670443 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.710742723 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.711738241 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.713455545 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.712669743 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.713303832 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.710595192 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71432306 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.714664945 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.716282007 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714081422 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713935536 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.713578662 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.715003469 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715447932 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.712741098 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712474863 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.714685357 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7134546 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.715682314 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.71761715 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715317956 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.712798896 seconds)
  done (took 53.05046614 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.714562487 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.717821054 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.717293122 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.715584593 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.715545579 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.717820672 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.712741405 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.715211923 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.718218433 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.717241608 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.71942017 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.717354833 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.718702857 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.717945979 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.721278953 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.718851578 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.717544611 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.715830398 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.716295317 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.715773277 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.71560238 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.719342112 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.71694119 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.715266122 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.717366015 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.716160055 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.715572222 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.715230717 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.718180637 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.716203316 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.716158702 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.717668976 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.715809931 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.718193377 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.715540116 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.714657617 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.717573434 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.716278115 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.717097995 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.714949009 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.716526094 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.718725422 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.716811973 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.71948003 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.716555009 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.717790038 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.717617993 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.716979826 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.716977288 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.716665119 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.71889109 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.716695099 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.719510922 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.72204356 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.718665979 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.717642135 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.723416571 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.720360247 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.717630056 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.717372893 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.718639297 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.723739843 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.718948351 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.718989415 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.717337585 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.721624292 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.718360412 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.718536972 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.721446779 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.721056829 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.720449563 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.721020564 seconds)
  done (took 125.328453369 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.718674541 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.719379383 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.716395533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.720297798 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72078413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.720662417 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.717966952 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722430316 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7214819 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.719414083 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719581214 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.718857506 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718319711 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.71893534 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719927724 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.720504011 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.719016674 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718702879 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.719327374 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.719196309 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.722904258 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.720142513 seconds)
  done (took 39.484114768 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.722787401 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.72101051 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.720117884 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.720053935 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.720305222 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.722822571 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.718543426 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.721727976 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720918299 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722461483 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720470564 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723366101 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.719854227 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722324908 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.72420121 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.719432147 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72387936 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.720725435 seconds)
  done (took 32.63595265 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.726508537 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.723835061 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.720303436 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.72212918 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.722704163 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.724179234 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718775133 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.72202312 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.720007946 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.724201848 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.721244639 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722023668 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.722481257 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722385524 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722092694 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.724402958 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.722152499 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72226521 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723293831 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.724147887 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.727252395 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721879728 seconds)
  done (took 39.555332917 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.721927539 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.722394577 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.723403404 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.724222897 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.723196011 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.720946661 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.721282903 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.723158984 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.722879748 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.724237502 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722453127 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.725902575 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.721177065 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.723000095 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.725496349 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723681483 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.719837839 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.721549819 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.727884968 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.724042996 seconds)
  done (took 36.118004604 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.722136405 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.723116964 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.725285889 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725474233 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724451101 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.723938801 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722439881 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.722795834 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72409623 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.724684626 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.722738565 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725986496 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.722849423 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.724614709 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.726482161 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.726665926 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.723086522 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726450778 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.730268542 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723011992 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.726662901 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.723736733 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.722337148 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.727573141 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.728253467 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.725935321 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725548641 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.723755965 seconds)
  done (took 49.95206947 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.727074473 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.726445088 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.727594193 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.728796929 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.725575106 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.724152965 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.725265702 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.727876097 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.723541401 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.722607629 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.724339882 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.724640517 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.726459183 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.727627385 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730792972 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.729358223 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724467433 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.728453348 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.723914174 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.73015626 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.727794773 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72427052 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.725281882 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.725456043 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725135568 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.724610382 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728892994 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.727713376 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72624572 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.728220537 seconds)
  done (took 53.452475771 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.748486686 seconds)
    (2/2) benchmarking "in"...
    done (took 1.74791688 seconds)
  done (took 5.157490818 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.723150657 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.725874964 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.722824455 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.726696049 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.726735759 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.727858587 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.731817314 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729151962 seconds)
  done (took 15.474888487 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.729432488 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.728879031 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.727987324 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.72800032 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.729491883 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.72792641 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.733578871 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.729475436 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.731393878 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.732028387 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.733921554 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.734757835 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.72831598 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.731073669 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.730410765 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.728829403 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.731901139 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.731778719 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.72664346 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.728049459 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728643963 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.728876891 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.730414391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.727279496 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.732906795 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.741767159 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.735889293 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.726776801 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.728078826 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.731602466 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.730037421 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.730764519 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.727699068 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.728744046 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.73123626 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.729168895 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.735572552 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.733490512 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.739463263 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.72880082 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.728712469 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.727894517 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.734063405 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.733139797 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.731831055 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.72553614 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.726785526 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.726563727 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.727456622 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.735941137 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.737595388 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.731044202 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.727347263 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.738189313 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.73046047 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.738705121 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.731290374 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.729976368 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.738168998 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.739347902 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.742211132 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.737242394 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731395311 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.731150755 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.740701533 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.757453994 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.738515045 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.728810453 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.729904875 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.732279122 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.737606907 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.743643197 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.740211529 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.729701284 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728231419 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.73280824 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.731352944 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.731641186 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.738876697 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.734362538 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.730732928 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728783206 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.739390891 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.759014378 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.733993089 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.729754212 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.730693052 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.731767207 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.73176707 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.745316179 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.731247129 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.728565717 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.729621036 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.731568265 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.730491103 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.730616757 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.731316069 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.734399409 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.727879803 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.732433786 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.731091504 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.735444181 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.741484277 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.731380856 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.733167304 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.737554535 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.729726158 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.733497136 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.739389346 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.730981842 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.732613439 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.731287326 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.740143637 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.728932035 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.736500407 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.742729524 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.730161986 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.736869392 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.730951037 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.732698099 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.740942084 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.762435806 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.730073688 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.733954892 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.73942841 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.742048618 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.731372031 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.734881199 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.732979946 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.732680516 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.734609539 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.738052439 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.730424501 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.736529778 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.73602855 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.737778682 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.731469184 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.73116729 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.734296277 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.739005605 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.735961846 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.737100633 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.733625772 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.739372304 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.732790041 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.737455404 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.739561541 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.733616939 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.733962986 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.737574656 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.732183067 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.735508273 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.734346965 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.731936645 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.734423166 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.734348783 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.739874978 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.735763195 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.735567684 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.734479674 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.732358474 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.735001016 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.740028072 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.732590801 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.738716112 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.74285529 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.735712979 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.737077912 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.734915029 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.734905207 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.734653988 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.734775674 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.737934834 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.746397958 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.737927391 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.738005757 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.740582486 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.7366113 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.736508045 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.734146159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.741348081 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.745586717 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.739258106 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.744828029 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.738475792 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.739373246 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.736818552 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.741424772 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.738553026 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.735380316 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.741792042 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.743343242 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.748639103 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.74826137 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.737010784 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.739049469 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.737103109 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.740557334 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.740382316 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.734621446 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.735524646 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.736693322 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.738159768 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.736526989 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.741444801 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.737853706 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.734342235 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.734780916 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.739460209 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.736623336 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734842729 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.73664799 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.73940206 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.735198192 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.735906856 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.738531561 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.735813052 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.735337742 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.735996837 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.738003395 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.73469616 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.733906007 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.748333543 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.742298907 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.738641394 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.743374071 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.740698797 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.738919636 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.739946717 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.744861489 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.742151976 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.751031074 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.740080181 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.738458631 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.746242744 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.74027721 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.738399803 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.741737721 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.739317191 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.739625387 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.742992235 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.744270034 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.7395782 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.742439201 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.736443175 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741377064 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.73894778 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.746661009 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.739832962 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.741889673 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.742315349 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.742083677 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.739792103 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.740514815 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.748983726 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.740667367 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744462208 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.740735221 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.738823404 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745140911 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.737690708 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.742753729 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.742177168 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.743585856 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.747991405 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.748066508 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.744571858 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.742652728 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.746241051 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.745588645 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.74268596 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.737718318 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.741119037 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.751105575 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.747777695 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.745584121 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.744170335 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.740074049 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.747897266 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.7414242 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.74499783 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.742040717 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.74358566 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.741435268 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.741853701 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.740078101 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.741597372 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.742239346 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743493145 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.745323117 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.744204673 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.739642063 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.74377257 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.739674408 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.739944818 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.743439154 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.742301354 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.738603008 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.745787805 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.742591423 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.739167856 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.745337102 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.746136127 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.741262123 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.742508225 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.740766732 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.741581113 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.741704015 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.745243304 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.740793799 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.745061724 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.748699921 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.744835194 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.756825411 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.743834288 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.752554272 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.743553653 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.747405118 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.749206125 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.7423849 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.74287815 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.740330173 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.742271111 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749487719 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.746291817 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.741570615 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.747651166 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.741039197 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.742239722 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.742216959 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.740697231 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.743239274 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.743712443 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751573124 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.746340991 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.747558509 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.745062435 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.741553311 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.74235687 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.742483782 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.743451205 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7483421 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.745078685 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.744018831 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.746501966 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.743211563 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.744021544 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.742956163 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.745815057 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.745773533 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.742280153 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.750976471 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.745427963 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.746283455 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.745319062 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.749478506 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744594691 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752366727 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.741562597 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.747203745 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.743531085 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.742234982 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.743425054 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.746218102 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.746287349 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.746624812 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.742307744 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.746412109 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.744332796 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.747659898 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.748860748 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.743871644 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.746137625 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754601396 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.769327713 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.7486083 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.752328062 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.745513586 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.745880353 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.74723039 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.743553476 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.741772523 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.750912882 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.75835853 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.751834032 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.74588822 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.744835454 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.746206723 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.745311101 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.743977245 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.745117129 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.744964247 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.748205515 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.748701738 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.747861775 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.748507054 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.745078522 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.746210033 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.748751033 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.747356563 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.76163481 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.743771888 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.74911854 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.745174508 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.747113955 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.749604549 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.751342522 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.745074366 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750965922 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745694115 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.74977395 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.756226977 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.753225374 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.752151503 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.749117385 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.748585223 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.748685182 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.746520953 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746652821 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.748309586 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.748663623 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.748184648 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.749019561 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.74818552 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.748177644 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.747385055 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.746354675 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.748284263 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.751057327 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.755975023 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752769185 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.746093726 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.74555672 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.746554936 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.749901492 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.747502482 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.75812431 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.754423207 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.759223419 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.755712433 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.752038383 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.749304717 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.753426358 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.756368284 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.748221652 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.7504394 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.74769767 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.751603392 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.745630935 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.754720957 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.749417879 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.759657166 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.747735083 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.748585311 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.757830678 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.752570156 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75163932 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.750713178 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.752878408 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.750463229 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.75062138 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.748721529 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.754564614 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.75750226 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.752198205 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.749026869 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.751992727 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.7453267 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.749937597 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.751891839 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746807025 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.751634383 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.747442335 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.753793497 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.746624761 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.747993028 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.751418645 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.747270628 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.748849878 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.75358673 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.759007756 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.748507966 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.75507217 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.75281112 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.751048088 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.749399984 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.750154512 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.747966246 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.751756419 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.750320862 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.751438783 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.752310882 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.754879539 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.748343416 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.753019946 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.752574933 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.749967738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.753615164 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.764534908 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.757342763 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.748067807 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.752461833 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.750016723 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.75357823 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.751033786 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.749995289 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.751922608 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.752288556 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.751898335 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.749681734 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.748955217 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.756326586 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.768801443 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.749872996 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.753316031 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.753692674 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.757739663 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.74956021 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.750195991 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.750476092 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.753122483 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.756406331 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.759942748 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.751996258 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.758547204 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.754928017 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.751051516 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.755173982 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.752912764 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.758797044 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.757995708 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752243115 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.751715844 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.758692834 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.769772912 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.749890999 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.762188338 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786124831 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.753298061 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.752747392 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.754482338 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.751146662 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.752288398 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.755299391 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.752202825 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.751815176 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75073052 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.751569858 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.753974872 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762762381 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.756463376 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.751455159 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.752772939 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.75326669 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.756039105 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.755706321 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.753772951 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.75269429 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.751114737 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.752346932 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.754635513 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.755179846 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.762658736 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.762802894 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.751524969 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.753558793 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.752890154 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.757221081 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.759502104 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766058252 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.76045293 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.75397659 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.754733167 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.754409977 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.755240854 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.753234926 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.755437949 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.755731424 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756926937 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.753559598 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.764429168 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76093706 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.760455305 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.754721101 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.755381027 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.752422072 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.755666246 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.752355813 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.753957282 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.756299815 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.755700916 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.756395087 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.754379748 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.754451079 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.76191523 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.762880781 seconds)
  done (took 1040.933507912 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.754716635 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.754828554 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.754043856 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.755732429 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.753564934 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753816357 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.753978742 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.754783679 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.754561265 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.752560727 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.751849861 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.751671992 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.753467991 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.75455667 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752088853 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757069182 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758319752 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.754872919 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755913331 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758282452 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.75369476 seconds)
  done (took 38.53007436 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.754841241 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.757830294 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.755779522 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.754982235 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.756825837 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.755225904 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.75733846 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753103505 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.755509953 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754449179 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.755772435 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.752748214 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.754091504 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.755888505 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756345716 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751001874 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.749768867 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.751853928 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.75105616 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.753784619 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756847928 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.752303064 seconds)
  done (took 40.281856016 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.753927166 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.751617442 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.751832846 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.751923191 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.750777793 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.749248479 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.749736193 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.75324421 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.751762025 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.748472486 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.744485339 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.747061337 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.754512597 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.753158507 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.749252216 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.745492405 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.890514988 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.746009122 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.745141292 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.745343292 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.744721361 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.7508396 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.743616567 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.742791689 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.744997616 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.745465885 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.744702352 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.745554523 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.744109849 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.747535341 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.747727042 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.74624175 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.745870275 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.746402485 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.74552969 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.744182981 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.749440571 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.74318331 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.744506795 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.743013613 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.756091215 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.770515352 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.742393494 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.750491341 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.744200586 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.743773899 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.74712216 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.750815839 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.741746061 seconds)
  done (took 87.475415979 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.741865553 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.743766865 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.743090786 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.745875514 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.745019377 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.743834188 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.743988293 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.74170513 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.743801726 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.742309129 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.743389456 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.745131742 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.746752892 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.746045356 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.742389688 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.745474566 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.744859559 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.745662056 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.743927475 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.745234553 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.744292707 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.743445283 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.742165287 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.744513231 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.743798595 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.744947223 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.742566517 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.742000244 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.743287123 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.743531496 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.745748822 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.742765866 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.745695151 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.744023571 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.745286178 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.74389474 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.745453092 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.744843742 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.743433569 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.744446203 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.74424801 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.743984515 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.745242922 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.746502982 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.74285321 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.744104436 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.744597032 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.742129749 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.744048198 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.745013105 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.746071668 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.742919468 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.74441635 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.745269845 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.744499456 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.74215592 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.745509239 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.743581467 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.743392561 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.744140055 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.743938976 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.746378266 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.746366528 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.744026539 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.744740697 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.743895013 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.74492424 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.746432123 seconds)
  done (took 120.287805747 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743812073 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.743982565 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.747090094 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.744504549 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.745651672 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.743564792 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.743767855 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.744830668 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.745807923 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.743423013 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.743228462 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.739826908 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.739590427 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.740653465 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.741414299 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.741639095 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.738020035 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.736736813 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.737894083 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735947784 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.736783531 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.737978974 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.737441977 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.737284016 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.736838931 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.736984943 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.73722402 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.738070804 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.737265265 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.737593698 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.737450986 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.73673414 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.737370265 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.737951424 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.736669475 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.73688643 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.736831072 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.737212106 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.735894599 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.73730542 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.737097588 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.736226907 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.736948905 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.737196888 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.738400976 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.737611989 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.738004626 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.738320417 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.737433076 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.737219584 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.739532455 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.736988951 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7379195 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.740436844 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.739323285 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.738968384 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.740893244 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.739980883 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.740223719 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.74031217 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.739386388 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.737070353 seconds)
  done (took 109.517426982 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.736289747 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.736761343 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.736863942 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.737943102 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.737563335 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.73750183 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.736950179 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.737604164 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.737662524 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.736504735 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737039924 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.738230883 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738609875 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73741449 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.737787913 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739963193 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.738921695 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.737417659 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.737958943 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.738097579 seconds)
  done (took 36.425249233 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.73712318 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.739033927 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.73657357 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.737226492 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.73693398 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.737906412 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.738937516 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736530948 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736945111 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737289315 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.737319053 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.737295839 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.738001544 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.735572852 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.738518969 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.736599423 seconds)
  done (took 29.47090047 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.736371497 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.735645928 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.735510589 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.73517726 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.734693995 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.735392513 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.735183302 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.736061412 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.734498713 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.735061068 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.734675721 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.734324751 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.735425815 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.734096348 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.7332908 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.733467528 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.733432938 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.733631147 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.734958772 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.733540515 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.732797084 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.732977765 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.733728245 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.732913971 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.733819831 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.733994027 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.732271238 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.732634566 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.733445073 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.732928997 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.750885688 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.732951708 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.731683289 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.731691101 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.732625011 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.731931521 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.730064936 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.728878992 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.729125581 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.728878948 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.728946475 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.729578012 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.727977377 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.728204458 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.727905392 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.728799344 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.728656139 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.72991894 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.728830063 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.729096696 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.729186879 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.728778863 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.728809166 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.729159753 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.727018051 seconds)
  done (took 96.957196518 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.727186848 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.727525564 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.727451389 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.727087052 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.726247061 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.726509494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.727332597 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.72700526 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726576539 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.728861019 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.726930328 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.726932654 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.727317801 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.726591454 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.72707475 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725902712 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.726660473 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.72631154 seconds)
  done (took 32.747636293 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.726469912 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.727956492 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.726621643 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.726108863 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.726234714 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.72608298 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725286606 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.725023166 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724777756 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.726180151 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725950831 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.72634447 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725771895 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.726749501 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.726251087 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725213522 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.725950433 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72585766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.725733801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.725890784 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.726253138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.724601052 seconds)
  done (took 39.632449135 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.724896696 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.725807881 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.73952588 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.745158371 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.748707302 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.758069188 seconds)
  done (took 12.101970486 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726532447 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72601944 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.725480573 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725313119 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725199455 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725787989 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72681127 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725059285 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.72540758 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726206032 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.724958604 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7249095 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725812561 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.726136573 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725236978 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72571526 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726070894 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725254386 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72686722 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725821102 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725825025 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725366907 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725675177 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726225107 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725316823 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725334453 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726116159 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726227663 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724629906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72464443 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.726399291 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724776746 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725362971 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725722268 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724529311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726171956 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72536985 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725162913 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725213137 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725308733 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.724522898 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726324739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725009631 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724851456 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724711333 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724777194 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.724633711 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725627553 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725427669 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725110874 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72447986 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7261012 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.727399475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724434656 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.724322969 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725256512 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725497208 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725087001 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726325102 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72453212 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724661572 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.724573585 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725405354 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725688479 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726611251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.72457292 seconds)
  done (took 115.541615354 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725215834 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724421821 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725358095 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.724945565 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725339371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725713757 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72563483 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.726001045 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.724976331 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725259096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725185739 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725094523 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725575535 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.724362105 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.727231018 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725315604 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725465977 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725466125 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725287257 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725062638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725518451 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725479135 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725238242 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725952638 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725729234 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725810558 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.72580919 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.724977468 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725184183 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.72570536 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725290574 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725168361 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.727183157 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.726185281 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726306357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725913013 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725712937 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.725537058 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.727112493 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725140619 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.725912275 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725290697 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.726267809 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.727047799 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.726037786 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.72558427 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725523222 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.72639037 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.725737487 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72622603 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726084012 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.726571396 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725618497 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.72561169 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726349331 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.726006191 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725342949 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.725742344 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725419576 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.725818664 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.725629575 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.726893432 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.72588676 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.725503091 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.726300729 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.725354545 seconds)
  done (took 115.557227725 seconds)
done (took 2410.060734762 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.738117063 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.843124802 seconds)
  done (took 15.242497733 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.888822755 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.841601039 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.725584768 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.760055952 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.728047333 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.749482351 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.750900461 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.725723737 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.725669511 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.726014832 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.727814212 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.910829347 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.786536025 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.726985371 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.726316106 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.819110509 seconds)
  done (took 49.985167026 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.728574221 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.730345301 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.737368018 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.731843546 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.728416503 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.740387579 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.758469167 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.735084934 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.761983128 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.73968471 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.7971843 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.739869335 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.728650701 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.781012221 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.742093241 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.743901061 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.819788866 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.803967143 seconds)
  done (took 33.207151846 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.805999182 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.740718063 seconds)
  done (took 10.214676547 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.761446773 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.779997514 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.80030041 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.746593352 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.741164686 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.751287929 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.775683416 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.778897377 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.743471055 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.761018211 seconds)
  done (took 69.303636896 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.735334115 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.731143799 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.728414209 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.726635535 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.724947948 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.728596886 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.729412075 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.728475354 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.38664322 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.76445429 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.735957909 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.733888342 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.728725674 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.729157647 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.728417032 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.751086891 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.838609402 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.726491214 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.726281127 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.733017983 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.730057657 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.782015755 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.741390946 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.729365918 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.758584486 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.384965871 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.735624301 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.734796111 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.849426811 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.726829089 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.728715962 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.915937698 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.732311913 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.187287751 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.992330703 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.735121213 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.741825672 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.73613625 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.726598175 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.839959054 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.73003403 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.735332879 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.651154561 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.973168325 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.82654725 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.773937527 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.032765601 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.744836043 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.729733513 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.75878858 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.731335048 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.730212897 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.744058657 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.233050936 seconds)
  done (took 124.982354519 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.727790072 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.072928869 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.894315905 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.730435185 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009627317 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.932864169 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.728525582 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.77299704 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.731149756 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.95364904 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.983919183 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831097116 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.728398642 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.728204458 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.725834176 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.728254293 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.879782309 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.797109313 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.729980305 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.726767792 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.755474421 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967272794 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.849984222 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.729580383 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.754047052 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.935972009 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.849353371 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.831816461 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.464501192 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.726398036 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.790795067 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.730183317 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.726848792 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.727378455 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.881722853 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.844680177 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.810542743 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.729369883 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.727612008 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.727720233 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.384877533 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.925225629 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.8203934 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.855897417 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.979636651 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.931362216 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.505745765 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.727033621 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.462810955 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.890054237 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.955633528 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.955290244 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.850147153 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.731461946 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.060708353 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.728542591 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.728257199 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.976518048 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949587052 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.823176573 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.73134082 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.730139591 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.728236118 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965645995 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.731844499 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.822761466 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.731380092 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.73058094 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.823132759 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827610731 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.956191021 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.939790892 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.758609615 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.068061025 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.227831322 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.973983042 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.793950613 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979465578 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.732525936 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.73003762 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.806763996 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.578053361 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.980395727 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.970398177 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971952751 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762692555 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.449077756 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.730194491 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.954019184 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.950977365 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.987147823 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976721304 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.961829134 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.051411375 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.729682433 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.731590397 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.994306341 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.854046956 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.732727752 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.071261788 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.957444635 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.258910335 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.755538949 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.031268619 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.860868493 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.732921699 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.359674666 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.731917499 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.95865213 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.770683963 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.731850954 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.72952886 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.948585829 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.72126559 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7322259 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.372057252 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.79071786 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.735208609 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.962203363 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.734366831 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001401563 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.732389529 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.961505996 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.813216883 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.761686404 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.904239954 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.97815674 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.733509013 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.969810512 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974334766 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.844134108 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.950782978 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.432129221 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.732708981 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01669327 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.733776983 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.73170058 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.899725278 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.732983327 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.872764345 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.733298811 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.022915997 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752093586 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958885245 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.734797513 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.983576612 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.762490419 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.780800058 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.737007636 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.856147669 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.732213314 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.555694552 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.888026456 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.738476966 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.734084647 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.277016882 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.734056816 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.880225056 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.956649005 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753926154 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804376369 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.398192565 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.732772521 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.817320244 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.755548739 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.121961796 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.733021107 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.98367338 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.736594482 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.73335207 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.734683513 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.964894894 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.915645578 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.73805591 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.734104348 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.639185795 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.733243137 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.733712055 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.916846439 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.124016341 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.733273525 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.936726557 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 7.15323286 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.860030544 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.738863273 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.807544344 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.066825178 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.735670624 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.735203316 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.733892217 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.736339857 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.734619681 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.941252908 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.758245776 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.22528127 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.872240343 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.003652423 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.041815277 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.972859076 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.776164537 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.740463606 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.987422495 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.737550012 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.795385434 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.735574918 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.754167785 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.958565555 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.736398737 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.0244194 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003015937 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.740850717 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.782482361 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.737608088 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.736399153 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.735323787 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.878305032 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.821000901 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.737303073 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.735347428 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.849540476 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.855255021 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942176226 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.736742556 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.801313668 seconds)
  done (took 873.522511454 seconds)
done (took 1178.121524253 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.736385805 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.734735884 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.738419193 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.739695994 seconds)
  done (took 28.620674081 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.738801954 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.73752862 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.737604134 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.737786755 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.737789309 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.736513758 seconds)
  done (took 12.096642785 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.743649779 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.735890738 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.738505684 seconds)
  done (took 20.890521737 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.807217371 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.119501548 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.87638544 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.146305815 seconds)
  done (took 9.622193479 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.738859944 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.73820735 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.738611186 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.738457415 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.739503031 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.741894294 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.738331104 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.737747174 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.739897095 seconds)
  done (took 17.326486093 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.814016314 seconds)
done (took 94.045415714 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.780633213 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.812359129 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.847398179 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.747309615 seconds)
    (5/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.111085147 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.420996531 seconds)
    (7/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.868071359 seconds)
    (8/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.035643804 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.47366765 seconds)
    (10/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.829643697 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.119388557 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.769044825 seconds)
    (13/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.001640251 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.910328069 seconds)
    (15/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.769916948 seconds)
    (16/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.74886374 seconds)
    (17/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.920729837 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.753683621 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.922718482 seconds)
    (20/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.841440955 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.379306368 seconds)
    (22/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.965449339 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.189983408 seconds)
    (24/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.910586214 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.779509614 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.747935059 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.680157125 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.54612358 seconds)
    (29/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.811236565 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.84638638 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.772386928 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.749217996 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.362280963 seconds)
    (34/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.24602808 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.931336159 seconds)
    (36/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.852572738 seconds)
    (37/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.992843764 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.242635416 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.759568526 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.153016513 seconds)
    (41/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.835269357 seconds)
    (42/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.749038167 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.167100984 seconds)
    (44/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.753576357 seconds)
    (45/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.913173332 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.545075138 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 1.973490364 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.868081632 seconds)
    (49/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.996335148 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.465305377 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.753246369 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.933516038 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.753903006 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.098268306 seconds)
    (55/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.750198696 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.181104956 seconds)
    (57/309) benchmarking ("sort", BigInt, false)...
    done (took 6.756126599 seconds)
    (58/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.899113464 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.916972244 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.772749252 seconds)
    (61/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.991425541 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.125741493 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.754950826 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.315297051 seconds)
    (65/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.77418868 seconds)
    (66/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.925069715 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.749327415 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.256238144 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.541229629 seconds)
    (70/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.011207341 seconds)
    (71/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.757941243 seconds)
    (72/309) benchmarking ("sort", Int8, false)...
    done (took 4.642469594 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.772802099 seconds)
    (74/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.090957077 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.755225972 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.187559659 seconds)
    (77/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.991081008 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.148746995 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.755251952 seconds)
    (80/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.757705476 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.682463608 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.126179815 seconds)
    (83/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.757533015 seconds)
    (84/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.800885061 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.686281122 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.757345923 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.986442551 seconds)
    (88/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.131959397 seconds)
    (89/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.858271491 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.422225463 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.823143549 seconds)
    (92/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.00401866 seconds)
    (93/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.200055127 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.782131671 seconds)
    (95/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.85079598 seconds)
    (96/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.782557495 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.266252359 seconds)
    (98/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.907321918 seconds)
    (99/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.776248804 seconds)
    (100/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.111329311 seconds)
    (101/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.052791418 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.775873376 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.875043543 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.755731987 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.930218019 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.755409996 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.139133097 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.816651083 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.767140397 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.77575286 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.75559912 seconds)
    (112/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.253568977 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.459339819 seconds)
    (114/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.067347455 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.890920033 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.7554416 seconds)
    (117/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.954717857 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.930088802 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.066306177 seconds)
    (120/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.466511186 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.838435791 seconds)
    (122/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.874400335 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.781769804 seconds)
    (124/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.128918498 seconds)
    (125/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.857132143 seconds)
    (126/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.065867266 seconds)
    (127/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.76315861 seconds)
    (128/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.076227314 seconds)
    (129/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.086329084 seconds)
    (130/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.325039942 seconds)
    (131/309) benchmarking ("sort", Float32, false)...
    done (took 5.466005179 seconds)
    (132/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.946809102 seconds)
    (133/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.762594334 seconds)
    (134/309) benchmarking ("sort", Float64, false)...
    done (took 6.176810577 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.067601234 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.791285743 seconds)
    (137/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.778612258 seconds)
    (138/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.07706257 seconds)
    (139/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.915537414 seconds)
    (140/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.939428795 seconds)
    (141/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.53969046 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.008507844 seconds)
    (143/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.866647693 seconds)
    (144/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.758727478 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.441953152 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.885172787 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.004455257 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.879527005 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.85403271 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.755083752 seconds)
    (151/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.012387676 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.766123231 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.065776872 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.770714036 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.795429045 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.881606764 seconds)
    (157/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.866559942 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.758457533 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.514866897 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.779667665 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.001020314 seconds)
    (162/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.761774094 seconds)
    (163/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.842137599 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.759750261 seconds)
    (165/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.020618469 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.862742157 seconds)
    (167/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.774035396 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.05563121 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.76324782 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.81117971 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.125310481 seconds)
    (172/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.836210404 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.757775248 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.85370097 seconds)
    (175/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.853873583 seconds)
    (176/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.881848433 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.759360367 seconds)
    (178/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.759972248 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.42694076 seconds)
    (180/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.118493881 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.124077828 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.777585957 seconds)
    (183/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.790141276 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.7813396 seconds)
    (185/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.756840412 seconds)
    (186/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.156210675 seconds)
    (187/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.820166299 seconds)
    (188/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.066122407 seconds)
    (189/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.655761798 seconds)
    (190/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.956433294 seconds)
    (191/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.844770903 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.897273125 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.757911569 seconds)
    (194/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.211629389 seconds)
    (195/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.079028605 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.762185439 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.859746001 seconds)
    (198/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.084598773 seconds)
    (199/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.926068582 seconds)
    (200/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.765827691 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.965314646 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.12159696 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.870991705 seconds)
    (204/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.932485784 seconds)
    (205/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.008903673 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.73743516 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.853345919 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.091477106 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.827881506 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.997839188 seconds)
    (211/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.842169047 seconds)
    (212/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.758588119 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.96660396 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.089577458 seconds)
    (215/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.981974321 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.803629389 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.432486312 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.007754719 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.994452211 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.092557481 seconds)
    (221/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.764988907 seconds)
    (222/309) benchmarking ("map", abs, Float64, false)...
    done (took 3.263075927 seconds)
    (223/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.076848828 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.767073211 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.51085116 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.082668248 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.913955733 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.75999343 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.056952836 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.828686362 seconds)
    (231/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.918876847 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.900132792 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.782494719 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.747925983 seconds)
    (235/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.765896924 seconds)
    (236/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.120375704 seconds)
    (237/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.930176674 seconds)
    (238/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.007776092 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.103994687 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.892446847 seconds)
    (241/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.788616994 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.15130977 seconds)
    (243/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.767781631 seconds)
    (244/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.925485426 seconds)
    (245/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.855705214 seconds)
    (246/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.894927309 seconds)
    (247/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.084549786 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.980383163 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.899917837 seconds)
    (250/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.212441499 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.765526637 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.940001612 seconds)
    (253/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.788380042 seconds)
    (254/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.76318764 seconds)
    (255/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.143462934 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.86670701 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.668956843 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.078488768 seconds)
    (259/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.7970989 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.217691156 seconds)
    (261/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.862580364 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.767350457 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.702701261 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.186739837 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.761219852 seconds)
    (266/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.356398804 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.361191836 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.78160289 seconds)
    (269/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.653536812 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.767548043 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.699522124 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.766104007 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.260256345 seconds)
    (274/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.880054243 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.005468949 seconds)
    (276/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.846919455 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.980431894 seconds)
    (278/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.765850937 seconds)
    (279/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.979895782 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.688736125 seconds)
    (281/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.767349372 seconds)
    (282/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.074409772 seconds)
    (283/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.764275081 seconds)
    (284/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.977860074 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.121210419 seconds)
    (286/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.620655628 seconds)
    (287/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.869462847 seconds)
    (288/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.893423749 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.601395708 seconds)
    (290/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.774519542 seconds)
    (291/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.854313801 seconds)
    (292/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.851485086 seconds)
    (293/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.682522427 seconds)
    (294/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.868465718 seconds)
    (295/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.056696903 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.8028011 seconds)
    (297/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.954616208 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.177784116 seconds)
    (299/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.956059481 seconds)
    (300/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.772811752 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.110132207 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.102402637 seconds)
    (303/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.779754928 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.738168535 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.952446478 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.984631066 seconds)
    (307/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.727292339 seconds)
    (308/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.794862112 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.895947299 seconds)
  done (took 972.444152274 seconds)
done (took 974.418921983 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.791425824 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.785648026 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.768238887 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.789052601 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.881086171 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.812105106 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.781538605 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.773508145 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.818669481 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.818127722 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.766911033 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.809365199 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.769580063 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.769690837 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.76876649 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.785183515 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.079985499 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.799978436 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.78768027 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.781304642 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.787498065 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.767323713 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.818727754 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.809981906 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.773785412 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.775665236 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.771926544 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.788624261 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.881467481 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.77260941 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.774188417 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.782028268 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.081487353 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.798212461 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.767529586 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.78971119 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.782626272 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.782074539 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.775221873 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.803563694 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.169667653 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.809935967 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.772047227 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.771403178 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.771187734 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.778179748 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.771751436 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.778766289 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.786263256 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.786709244 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.160357011 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.828485462 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.774424072 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.771879748 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.784778569 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.771478203 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.774881363 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.789101009 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.791084279 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.787885319 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.064544767 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.808316579 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.775632055 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.790311126 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.781451411 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.195858842 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.809634197 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.777488627 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.168073477 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.820433109 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.197239243 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.820965765 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.774311439 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.787948711 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.804755121 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.082916585 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.7996645 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.770659083 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.781666404 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.770419378 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.784237612 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.787087597 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.777686724 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.772947316 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.788814854 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.815364222 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.786519123 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.773569276 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.784086049 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.793245956 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.781578852 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.78558149 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.776331967 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.770858809 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.785206602 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.778066199 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.776986602 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.775675529 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.777630141 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.787039923 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.168403636 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830798329 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.770836698 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.770736116 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.77405622 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.788226192 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.168353437 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.814850471 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.797704921 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.823816626 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.774946164 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.068074291 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.806366504 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.790891319 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.785221756 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.776197902 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.771709186 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.068515954 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.192031357 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.828703876 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.774918584 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.771714916 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.791958462 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.775539883 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.771968473 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.085668701 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.807331417 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.792068541 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.897352478 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.787170723 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.807154229 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.772283568 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.778141642 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.820556894 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.791894532 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.807682407 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.777297448 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.7911521 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.792596061 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.772746678 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.787161953 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.787623682 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.775238191 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.7832829 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.773496137 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.82055734 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.790157642 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.791040793 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.796642922 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.89833731 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.77390676 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.06830214 seconds)
done (took 279.18565741 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.855777435 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.776441687 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.865222091 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.774388504 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.867816282 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.848497597 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.775878054 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.774865489 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.773927609 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.258524837 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.773977296 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.780036435 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.772186904 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.774178897 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.847162877 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.77372543 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.77491085 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.204118829 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.775730379 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.854210698 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.774606618 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.775266094 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.774582912 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.260613591 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.772404295 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.774993848 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.85604197 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.775473059 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.210160517 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.77326022 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.774504889 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.212872608 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.857326419 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.80297274 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.783916459 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.78062938 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.865943791 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.786771199 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.842211391 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.846689874 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.867370691 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.808656367 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.773755327 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.774485171 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.779150577 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.776017593 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.774886097 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.808589748 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.774816868 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.783608631 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.2067516 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.780790431 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.783727816 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.777019319 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.776206691 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.804366081 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.776839083 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.777389218 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.855851179 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.777442836 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.843816105 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.262977593 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.259073365 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.776173239 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.775726544 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.777651934 seconds)
  done (took 178.843971633 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.844177828 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.853540259 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.844142361 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.781192065 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.826251175 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.843855486 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.782278273 seconds)
  done (took 14.484420301 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.784681107 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.776792216 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.827354885 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.826367674 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.77810398 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.934266585 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.777875369 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.788272883 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.782872855 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.804601492 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.779523648 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.777997218 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.785413441 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.776219246 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.82605419 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.789449918 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.892892763 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.780171615 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.777793474 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.926583481 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.7830443 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.784440655 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.803061974 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.78940574 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.779968844 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.785095956 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.343961106 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.778636033 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.778287779 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.779852885 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.777727549 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.820045847 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.779611586 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.778069044 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.780912549 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.893804712 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.781439137 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.779376527 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.780330383 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.778524177 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.778718745 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.781003699 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.779307978 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.779642831 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.779727969 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.802189896 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.781023433 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.779469675 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.779447115 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.780621733 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.80534571 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.780375101 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.781165189 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.785294118 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.822293511 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.787394766 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.779455816 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.781227045 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.780779776 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.779739822 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.928269229 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.829668212 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.781008995 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.830053335 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.779318195 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.780054933 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.779487182 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.780084179 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.868059744 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.779073723 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.828808991 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.779922062 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.938408252 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.802718219 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.782382088 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.784050441 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.783204964 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.780135983 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.780826843 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.787953727 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.780019926 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.782005763 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.788334002 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.78539066 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.780968272 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.893407259 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920729726 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.780304901 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.783916128 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.788674039 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.780666189 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.824564307 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.780671478 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.782845769 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.837854525 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.896185447 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.809380303 seconds)
  done (took 196.946975545 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.791052103 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.793567543 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.785826914 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.800246442 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.785845577 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.783049117 seconds)
  done (took 12.456617391 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.785213865 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.78516173 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.781975591 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.781913254 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.782889406 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.783617208 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.782111255 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784242225 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.78828464 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.782063841 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.783781598 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.785452173 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.78367911 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.783455871 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.783285583 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.783384022 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.784435236 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.783688524 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.78261505 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.783284317 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.033035395 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.78563358 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.783576515 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.78666826 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.78766164 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.782839038 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.796268025 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.78562087 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.78372028 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.791943906 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.788239809 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.784520369 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.787509536 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.789345226 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.787587715 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.786669842 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.788143015 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.784634584 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.784486155 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.784101755 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.78409616 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.784382573 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.783038972 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.784639007 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.786568756 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.79042647 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.788491999 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.798633398 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.784973664 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.78594938 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.784717997 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.784119284 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.785441653 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.784866403 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.788496321 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.791943966 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.78819341 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.785360097 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.783957118 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.788208775 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.789820585 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.785866541 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.786517922 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.789272173 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.793495148 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.785889934 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.788699723 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.790021344 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.785356103 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.785072498 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.785258122 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.78545471 seconds)
  done (took 131.562523554 seconds)
done (took 536.02314727 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.887388916 seconds)
  done (took 8.605136155 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.80109365 seconds)
  done (took 8.626535907 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.317881476 seconds)
  done (took 10.037335368 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.80133812 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.820523412 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.801726798 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.794240428 seconds)
  done (took 28.962521957 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.116200356 seconds)
  done (took 8.833154175 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.80865728 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.784311075 seconds)
  done (took 15.380914269 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.871770146 seconds)
  done (took 8.589580139 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.091015259 seconds)
  done (took 8.819061862 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.803918196 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.804486398 seconds)
  done (took 15.349498773 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.788503604 seconds)
  done (took 8.506334786 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.925799688 seconds)
  done (took 9.747045543 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.802148154 seconds)
  done (took 8.591206989 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.867460464 seconds)
  done (took 8.585421751 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.880132855 seconds)
  done (took 8.598193718 seconds)
done (took 158.953074997 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.788931944 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.785568613 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.785036573 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.784492986 seconds)
  done (took 28.863080366 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.819016904 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.818696393 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.820843382 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.830519973 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.822587987 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.821560086 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.811921413 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.812680956 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.830438005 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.822246807 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.82287963 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.823074292 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.821929151 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.813085785 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.82225526 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.822989992 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.831412111 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.821520994 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.812573641 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.821850143 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.788377921 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.832374796 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.823516481 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.787680714 seconds)
  done (took 45.375753431 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.977755889 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.855762098 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.941247691 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.839983754 seconds)
  done (took 9.335472836 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.840167418 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.842146449 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.853291955 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.892222619 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.914723392 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.850202579 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.813998334 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.811049526 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.796028986 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.842175431 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.916695704 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.836546178 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.926237116 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.789492901 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.976154348 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.789129654 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.789185877 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.841014893 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.894526089 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.905039285 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.790364675 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.843256772 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.845230846 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.837247184 seconds)
  done (took 46.157681303 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.789999133 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.797884083 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.796968714 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.791447748 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.792976107 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.789860787 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.797772005 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.792173928 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.812450209 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.792267409 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.790358297 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.791370631 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.797191658 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.791251275 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.791542844 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.80503488 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.805248595 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.791271971 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.794798732 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.798122426 seconds)
  done (took 37.633846248 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.787573703 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.635680661 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.135573289 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.041378799 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.789863291 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.791050706 seconds)
  done (took 30.904514547 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.803901952 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.796827285 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.791450482 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.849085838 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.93702783 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.799097604 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.791652503 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.802594766 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.839766178 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.855872129 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.811277679 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.821327065 seconds)
  done (took 23.625725098 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.790886925 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.791805558 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.792378942 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.803876129 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.801462788 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.799660391 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.800706914 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.789575304 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.804279826 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.811095333 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.799232568 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.802498272 seconds)
  done (took 43.314506234 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869455736 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.665869927 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234928676 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252091404 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313625629 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993251611 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.789918593 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87548212 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.79154834 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062068364 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.160045519 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999054222 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.033761036 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.508520375 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.796519121 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.268053679 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083067229 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007990417 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818940165 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.502701411 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90075624 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.273666768 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.465051959 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.904139615 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995297474 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.91552097 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.055401445 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.745131246 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839123305 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794785855 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796572268 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.792199548 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062997181 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91465935 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863336455 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796419435 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.201711382 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.497376482 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.861806528 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.452095983 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.306702103 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918417029 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795854323 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792789798 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.71890206 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.276764976 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886258007 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.79485951 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.493369312 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.793515615 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798170352 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867929584 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.794609614 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.599630747 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474227554 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.060420409 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.79418349 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794599704 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35405229 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813914415 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378867046 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.726715505 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.876504732 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450582536 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254892775 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.952308549 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.79493796 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79628553 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721054433 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.454311617 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910830926 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930657545 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.811721678 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436022574 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082325001 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.214986897 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851576996 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069762685 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.542204795 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.726956039 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01112328 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.742359353 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721953729 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.624308647 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.722546366 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010346441 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826237659 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.406732223 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828176353 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.878385464 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.80051663 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809716637 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797945474 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010456568 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.690097604 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795821458 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.10348061 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057813143 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812203736 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.880909003 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722230388 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.797662221 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040604953 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.999598029 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.001488101 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.281479523 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886157315 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.706387567 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.808903212 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.710789605 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.806046808 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.068501847 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858700171 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826833968 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916694416 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.745482036 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04556642 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.746966295 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.894921269 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.174131413 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037757042 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.139498107 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041108494 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858467172 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797153191 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.797612772 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.521371104 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409798893 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.01339573 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.810544127 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.277877585 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.806108209 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.799492735 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732748175 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.451760416 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.170188978 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.87911716 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011428415 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.733074134 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.072661845 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723511065 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934155897 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.786546223 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.011456955 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.456506464 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.885024374 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047583684 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.015227997 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.010920038 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808017171 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812307176 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890697146 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81584548 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.194174763 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.045639918 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.800349512 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.800967746 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.510100462 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.855878681 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.80393835 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.801186743 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323718169 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074294109 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.827840584 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.804060351 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.673822795 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.810844573 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861494044 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.801470031 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.802478041 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.319115478 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.304299768 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.805341409 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.455463895 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015599117 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80275197 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.445368554 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978212275 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.812214581 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06976294 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867308068 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.727771747 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.502457384 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.50058772 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801298329 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.727523115 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.801599583 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803430453 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806016836 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.98876307 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08009941 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855835782 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.500084932 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.909342356 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8068814 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.80432061 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802772186 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.292122229 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828761533 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278610291 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.929188734 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932183108 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.814241672 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.728961847 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.80179104 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802939839 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.801893435 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.751103956 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848398754 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.508596297 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006843349 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053315942 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.206351405 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810917016 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.500808583 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.920174199 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.815326244 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.11815895 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309645669 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.905699312 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865567961 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.808120485 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.504677245 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.539443364 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365817655 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105066651 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122434502 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154942055 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.138743262 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.11867263 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88843734 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029676903 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.323003765 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8580255 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891902696 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.738792066 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81750127 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.455452795 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160057421 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811821117 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019493503 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09333912 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.202097197 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940471801 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006697553 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833564602 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.589191458 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.826697632 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.339634912 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820792112 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.226572822 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.011229564 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886690101 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.125851441 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.889782391 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.804324199 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148282605 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846400428 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.504846784 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.156337075 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.167939723 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.292396564 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03222134 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.810130925 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.245116757 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172937041 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.970028322 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.921733486 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733414416 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.808720636 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809931006 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.816182147 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.777375732 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.650395993 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.047364399 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809650728 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031082587 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.905076785 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168713364 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.720599358 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.808036752 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807141825 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070034142 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445949896 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955141243 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.076180534 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.368513858 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811285612 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.732119782 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733063479 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.506600957 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.81194857 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.772786937 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016162475 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.907024714 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486942014 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.15907123 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111697791 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.050491315 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.818127052 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07818102 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084080971 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.297880786 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826633975 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.903934073 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.127661902 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.555272041 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.021343355 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033379715 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33829755 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024293847 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264480158 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.777450049 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.807042228 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013035243 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.021950408 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.200612752 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983811087 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.517708517 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.818391542 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172644641 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870660065 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.199124767 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.997810713 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.901123142 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814327442 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885495596 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81134018 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.813411802 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.813643953 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818420704 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.197078516 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928719807 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.820174246 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884485343 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862262881 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.379327638 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.816656918 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081265642 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17223631 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144081968 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874985672 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.809493015 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818269112 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.737016944 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938756416 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.248344003 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082434858 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.929732684 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.941336188 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829901194 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.129934012 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.022319662 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111421142 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081771522 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.692057164 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412596578 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.922637915 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.025618265 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81448765 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.012509268 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023656402 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11052138 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369484037 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.902742356 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995238479 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.080524408 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.173042177 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.811801641 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394912658 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.813772881 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212349338 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.843380375 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.208978995 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070177423 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813104918 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932002419 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813198957 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.009367351 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.260042465 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.462313775 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159439709 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664462163 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.813596047 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087437578 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.143776547 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118839209 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887974238 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816171975 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.505892754 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94383666 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.672427804 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.04030842 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.812326374 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014114243 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.521032659 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.814823126 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086676837 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119099316 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.812470204 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.707898238 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842177551 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.816024127 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025608673 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042704725 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056030633 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814929738 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.820814212 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.619707536 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090623135 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875344825 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7396363 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.814677236 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857439956 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.038248499 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831060305 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.326507647 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.512694035 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102499831 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.717659659 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830672887 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.182757224 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.18717378 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150671078 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.334766928 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030003584 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363592784 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.631253684 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182466239 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.816918345 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.180894172 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.186718872 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.81515285 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.287170483 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917590748 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.085559727 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142625294 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.827935524 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530428287 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.847113215 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02905021 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16952156 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.744113027 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.815500149 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.862134733 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.813700816 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.811780689 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823084716 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.745668747 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.23770497 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.652470319 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370997218 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.816567712 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.008745368 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.175314464 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320032883 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915293413 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830662924 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818702275 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.513028772 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.101239728 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059685184 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.297405833 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.905166189 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.817030899 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815858859 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.733831265 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.998160139 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.001830972 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095443702 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.118192322 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.918319987 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816791678 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.022467822 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019854832 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.215085412 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949719035 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.915121217 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924913507 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.755128086 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.521653962 seconds)
  done (took 1629.017634646 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.848330143 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.868303296 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.838993598 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.915256526 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.862851841 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908183766 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.939661358 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.880371751 seconds)
  done (took 56.810466096 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.816072258 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.986705628 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.821761857 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.818354496 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.822750279 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.818269252 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.973169581 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.83715388 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.82230492 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.822999695 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.818279665 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.818314295 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.105672845 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.837528535 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.817830019 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.818729032 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.821681515 seconds)
  done (took 73.391051133 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.822141859 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.0586222 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.853895415 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.822092948 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.797494073 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.829436516 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.859233951 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.879779026 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.821883495 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.065135824 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.11652571 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.824982531 seconds)
  done (took 89.50294495 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.830865461 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.821022012 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.820868628 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.820500777 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.821109088 seconds)
  done (took 10.873221556 seconds)
done (took 2126.547712242 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.048250594 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.010361896 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.059172864 seconds)
  done (took 5.820944356 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.954408265 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.005428994 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.119623914 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.140071397 seconds)
  done (took 9.974281954 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.119496979 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.192768547 seconds)
  done (took 6.057876849 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.124832515 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.844567468 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.223498293 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.815735901 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.816295146 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.814670104 seconds)
  done (took 22.196353019 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.813912318 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.81409931 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.816726762 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.815410739 seconds)
  done (took 9.005859617 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.813872638 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.509870301 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.814844032 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.824348626 seconds)
  done (took 20.708749329 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.961528333 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.930640599 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.957460958 seconds)
  done (took 7.595177057 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.956387031 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.046260416 seconds)
  done (took 6.748595334 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.974046424 seconds)
  done (took 3.720312116 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.846072061 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.087661171 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.30497547 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.875406452 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.442512678 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.119000651 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.154709423 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.039364795 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.258795666 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.291034115 seconds)
  done (took 25.167736639 seconds)
done (took 131.991669591 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.390777568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.847349484 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.017266915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.182377008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.057172032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.017860415 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.038685694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.177262654 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.862059846 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.852347261 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.190058616 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.058779999 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.983294891 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.836425567 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.990636387 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.843447202 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.055627315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.241405463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.900984497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.081950581 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.052276034 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.822568888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.013072597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.839074561 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.056710109 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.969702322 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.367672006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.842539428 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.005553571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.382212513 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.975408107 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.225696986 seconds)
  done (took 166.929535058 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.819987705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.819632302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.818911781 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.818822261 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.306083606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.821659106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.819496849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.818485486 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.201990716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.205353679 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.81961706 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.288865011 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.819443799 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.818880368 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.821576333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.818967435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.345443915 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.820914834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.819742857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.818959061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.817800992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.127769441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.820712195 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.123085648 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.334943739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.820245302 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.81975949 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.820260971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.81967201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.820297855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.820803165 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.819806519 seconds)
  done (took 207.360459609 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.820289916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.822435885 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.822794913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.82055499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.823235997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.823077116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.821847608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.820650239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.452795727 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.441307918 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.821915553 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.823117298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.823649106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.823677017 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.826096114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.820276343 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.820882602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.820275114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.822456971 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.820961994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.821496935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.634254642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.821386711 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.617520393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.821922753 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.82499645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.820747966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.821882009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.824044909 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.821664499 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.821404618 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.820622028 seconds)
  done (took 218.916604813 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.067023596 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.821501301 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.821986351 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.728584778 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.822359805 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.821395881 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.810164027 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.066374253 seconds)
  done (took 18.716684094 seconds)
done (took 613.682067667 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.186788278 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.023867524 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.002062063 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.845695487 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.088616746 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.891157477 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.841250839 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.910601653 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.655364839 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.922567243 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.484354764 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.865360902 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.578215122 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.871205984 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.96656237 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.901706535 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.434898945 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.538570293 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.019653424 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.937351248 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.023903084 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.742994328 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.926629209 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.694676396 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.60501361 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.793366689 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.857980705 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.436922839 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.855940663 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.001561582 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.500983651 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.102440156 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.859955551 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.841991711 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.901442791 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.877375453 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.038359012 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.856918454 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.967734615 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.542396454 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.911417944 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.562656123 seconds)
  done (took 100.621723814 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.835692434 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.830490003 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.829777973 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.830085261 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.840072726 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.829470559 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.830930713 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.830829803 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.830286108 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.829833906 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.830094103 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.840808473 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.831130416 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.840189604 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.829928923 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.830690132 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.830805019 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.840159919 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.830545477 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.830756519 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.830173423 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.830285721 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.825885096 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.831454452 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.830023373 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.831850269 seconds)
  done (took 49.401403147 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.826441062 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.982773326 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.072836113 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.847878926 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.827100344 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.829718205 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.844050931 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.831682731 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.828968755 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.828795074 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.916595612 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.833191163 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.846114096 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.070514974 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.843870631 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.827238636 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.82595301 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.827396153 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.989788458 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.843095347 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.846528824 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.831582227 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.845324098 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.841125753 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.828989246 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.827379956 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.831192301 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.289065831 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.836986446 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.916877419 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.885895954 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.852648075 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.237842255 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.081837958 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.884656694 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.837559466 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.826905543 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92178866 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.834186717 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.827606474 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.845325802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.833685705 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.070342168 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.361510722 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.843933833 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.828282779 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.29919608 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.930937274 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.869825705 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.838037248 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.074012737 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.844812856 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.827571369 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.828051412 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.863982482 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.835461167 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.827263241 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.188943725 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.839998488 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.844919944 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.834038663 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.828487361 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.99410997 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.836947884 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.983610724 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.838263489 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.835099726 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.828978855 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.0735645 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.846820271 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.366431203 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.842717385 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.826373782 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.916518457 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.987204755 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.322720838 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.841175318 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.992306648 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.252572585 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.851563128 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.835499078 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.276058288 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.855221935 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.833770127 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.827064514 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.827185115 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.827803674 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.866949841 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.841857036 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.279006647 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.368356563 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.202352343 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.852476958 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.840521876 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.826342293 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.183754576 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.833881467 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.824880663 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.061483193 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.375510682 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.844379724 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.838623626 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.353292172 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.845442851 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.848434641 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.83907279 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.080784107 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.846035945 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.870175384 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.830545271 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.835964249 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.832858164 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.847875735 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.837561665 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.830429212 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.345385297 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.93901484 seconds)
  done (took 227.492056632 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.83051676 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.8331973 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.827883721 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.834412362 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.827847261 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.829942443 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.828111809 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.827414169 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.83124409 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.830527608 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.830704416 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.828666296 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.829563498 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.831450408 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.844196409 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.837749792 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.437596216 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.834911193 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.834486317 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.834596784 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.474703347 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.841702884 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.836285974 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.835967844 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.835379955 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.837859468 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.836066158 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.841579496 seconds)
  done (took 166.347990592 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.837428769 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.949995612 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.856760341 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.866439305 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.8467491 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.838665967 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.934831185 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.855997208 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.842962658 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.837951967 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.837646159 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.897685279 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.849472527 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.935186973 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.87122711 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.944312752 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.94283088 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.846489931 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.838588023 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.838465326 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.867266098 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.848222895 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.897440543 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.962966009 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.856406282 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.951268684 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.85698513 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.838165548 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.838533491 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.951314999 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.857052987 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.899419248 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.868874498 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.856524267 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.956305047 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.956921564 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.943800845 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.943907674 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.846348207 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.838329264 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.838807371 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.840135468 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.951902651 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.857786249 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.839533374 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.955324844 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.856813866 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.840508668 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.839388039 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.839389285 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.852491797 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.8569839 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.90364037 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.97021524 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.874426933 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.863009109 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.937907928 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.965528268 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.841279942 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.937493228 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.847688435 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.953997576 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.859479287 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.841261072 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.842659935 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.844733182 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.869097843 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.947900513 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.946504319 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.848801258 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.938495743 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.877601319 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.84824783 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.841398745 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.842052893 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.954445485 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.956711521 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.876872737 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.879328116 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.870976043 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.849516274 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.840634371 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.842524722 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.857269272 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.846040698 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.955331996 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.95643599 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.848155677 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.841371717 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.841619878 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.842546252 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.865801991 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.962440555 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.875049184 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.947388324 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.908204263 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.91545579 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.85628126 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.855326476 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.846055152 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.903333897 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.855959372 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.853767012 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.134402824 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.902088099 seconds)
  done (took 199.630876695 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.236555359 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.891243319 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.897793713 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.159125635 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.186272344 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.743898329 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.889221437 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.889070461 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.912967871 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.07120396 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.954610734 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.907356523 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.878550927 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.863609132 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.887818621 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.909510243 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.897924775 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.248312342 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.094499589 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.039016992 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.877744493 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.16115667 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.195644172 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.468497683 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.937824646 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.280111669 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.458769698 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.022315882 seconds)
  done (took 60.740550361 seconds)
done (took 805.990008169 seconds)
SAVING RESULT...
DONE!
