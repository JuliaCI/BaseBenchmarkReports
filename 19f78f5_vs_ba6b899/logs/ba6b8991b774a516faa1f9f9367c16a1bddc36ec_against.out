cset: moving following pidspec: 14635
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.326453829 seconds)
loading group "string"... done (took 0.586415962 seconds)
loading group "linalg"... done (took 8.105505882 seconds)
loading group "parallel"... done (took 0.172246297 seconds)
loading group "find"... done (took 1.238975302 seconds)
loading group "tuple"... done (took 1.912867575 seconds)
loading group "dates"... done (took 1.311450797 seconds)
loading group "micro"... done (took 0.201093881 seconds)
loading group "io"... done (took 1.001214668 seconds)
loading group "scalar"... done (took 40.91009333 seconds)
loading group "sparse"... done (took 12.767003876 seconds)
loading group "broadcast"... done (took 1.016582858 seconds)
loading group "union"... done (took 14.418895227 seconds)
loading group "simd"... done (took 5.044359811 seconds)
loading group "random"... done (took 9.772142842 seconds)
loading group "problem"... done (took 1.623406719 seconds)
loading group "array"... done (took 22.520028204 seconds)
loading group "misc"... done (took 1.668386226 seconds)
loading group "sort"... done (took 3.619187112 seconds)
loading group "collection"... done (took 18.606775841 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.543853062 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127707734 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137484856 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121057573 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152023063 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 61.828674758 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122788424 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08304489 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.84036743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150453872 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114023818 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419289254 seconds)
done (took 67.013819189 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173924836 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088699306 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080123067 seconds)
  done (took 1.204167823 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066541426 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128540914 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068232724 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068542551 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068239359 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067513425 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067277427 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067883967 seconds)
  done (took 1.572233205 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073542487 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069736406 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066840422 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068921271 seconds)
  done (took 1.315568768 seconds)
done (took 5.384608189 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.798966245 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.2101183 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189688702 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413043073 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136995152 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18545682 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647450581 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338863989 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208251933 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095470895 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113347612 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.364184324 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125192299 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643545698 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079541496 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.096954534 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140098592 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451641341 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072957928 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085792539 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093566395 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131813563 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089509949 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0774478 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152721942 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070934406 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144195374 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084274083 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069412687 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22157138 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175694694 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.674135786 seconds)
  done (took 10.45754846 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102602334 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100021338 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069527879 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126358824 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101842714 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071606792 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078811748 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070315431 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096074944 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12929605 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09221697 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109908327 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068127496 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070450627 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084214351 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.199428406 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087994882 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084708908 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070796436 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081342699 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111528344 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081648178 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080884284 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080515258 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13037752 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.1740536 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101031799 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101486837 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06984893 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083092219 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115769102 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131898786 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069421844 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069142846 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129396255 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097787121 seconds)
  done (took 4.599884213 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.025533444 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151785324 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091027021 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135458945 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06572857 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110739764 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069331249 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083374187 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.239192155 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.394746985 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.638760735 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.152050122 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118880222 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10689485 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07347846 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072153605 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068577591 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.26977574 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099883236 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108104772 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084353176 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07143535 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069981712 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06583853 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072397808 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065262957 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069626936 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088625441 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076423553 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.330802134 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125512381 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068866703 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.84393882 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166775101 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068305834 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105521088 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170606493 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097534387 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143286216 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068006183 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064309124 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157901258 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064394825 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071867142 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066728268 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083655267 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108574259 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118718044 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06501773 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065113301 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166301662 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066562419 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066060522 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082255534 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.166916156 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150902343 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.0669046 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.279669147 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088849118 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06884949 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063685801 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.167513722 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.107417916 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.065372141 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065679813 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066777743 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.065639718 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364714519 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.062738133 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.898955093 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068877569 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075809102 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067772932 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068965714 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075533469 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07527585 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088495175 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086738654 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064383146 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069482837 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.063632232 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063492645 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066151548 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089326014 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.367852108 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.064482937 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068855424 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062600405 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087975229 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095403598 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066021287 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062751185 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098913654 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067689138 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.063329784 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065361939 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.061201535 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111035189 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067009115 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109980281 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067572551 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.301320972 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103156667 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067381479 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071453803 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10377035 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079705704 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07380158 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.471409022 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067363276 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07637697 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070239943 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072243469 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07050394 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082950616 seconds)
  done (took 21.475325874 seconds)
done (took 38.594818999 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248805064 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088355669 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085807215 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085901737 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086159562 seconds)
  done (took 1.761003565 seconds)
done (took 2.920574474 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129474202 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101668148 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066620063 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099530248 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069008895 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102957562 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101829397 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085015388 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101581025 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0660437 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099051057 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065853256 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065870593 seconds)
  done (took 2.318414702 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083539303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084150011 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070583773 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083039769 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063862831 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083137195 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08330414 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089893263 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084053258 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074984864 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06490232 seconds)
  done (took 2.003630518 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083557392 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084580769 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070512992 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082846785 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063754673 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082787972 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082146701 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088724263 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082925818 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074766497 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063983643 seconds)
  done (took 1.996177494 seconds)
done (took 7.450931385 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077123861 seconds)
  done (took 1.202812974 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.53530556 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.52004736 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079850609 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101628932 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197531465 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112864141 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240947745 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084990977 seconds)
  done (took 8.17413604 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.109471531 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073111705 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072804462 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071622369 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073198356 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07294853 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0734813 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072667724 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07263255 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07335205 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073371196 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074138739 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072081129 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072182152 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070426402 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071439091 seconds)
  done (took 2.409539296 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098758936 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09969776 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076865993 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078668412 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07583997 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076200624 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078374714 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077234017 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073723753 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074209081 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077349294 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075034914 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074101342 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066441777 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077393809 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080226613 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074656346 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077900252 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078875295 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079928742 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079053779 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067669845 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076857488 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07796334 seconds)
  done (took 3.111057426 seconds)
done (took 16.033195589 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117167055 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079089256 seconds)
  done (took 1.327707115 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079720656 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081253474 seconds)
  done (took 1.302293864 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07860296 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063663231 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.085146161 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074556532 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065896703 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066373069 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085953129 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066917853 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066354413 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065954068 seconds)
  done (took 1.861290239 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066055303 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074227102 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072112288 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082092512 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073040183 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06697795 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071967161 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067876042 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07667522 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066077278 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070885442 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086623565 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071183104 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088400646 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072448365 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07120554 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073203277 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070091106 seconds)
  done (took 2.465992455 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063764132 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064882319 seconds)
  done (took 1.277624791 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067453908 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064580282 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067476744 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069267881 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066933494 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0650423 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066231737 seconds)
  done (took 1.610875468 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.415618951 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.127070495 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.34451066 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071878288 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080976342 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267207502 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067551424 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073526791 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072859647 seconds)
  done (took 2.708741858 seconds)
done (took 13.704587467 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081893777 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087227444 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098868426 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420644751 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096824222 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.071436453 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119011489 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186761316 seconds)
done (took 2.322045774 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215034485 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.091048425 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.500037138 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211677733 seconds)
  done (took 2.953367697 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350278401 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082718274 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078444356 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070078519 seconds)
  done (took 1.740605373 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.183579858 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071026352 seconds)
  done (took 1.412220594 seconds)
done (took 7.479896862 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065983531 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065371407 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06602351 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065549059 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065501873 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065742811 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090793571 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064973875 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065585185 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065686592 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06629912 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066338347 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066113751 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065719243 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06550637 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065727798 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066503144 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066232001 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067009456 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067189918 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065662708 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065948339 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065967278 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065798927 seconds)
  done (took 2.798230604 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082310361 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06808628 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069599806 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069457546 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07012081 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069738488 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069510993 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06784367 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069671138 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06884731 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071601426 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072229767 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068200047 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070274019 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067980019 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070872417 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069894986 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069568563 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069690068 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072099527 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071874499 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070046355 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072190708 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071799575 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072040052 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071952769 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069658706 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069970649 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071930353 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071997475 seconds)
  done (took 3.286902703 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066841635 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062586861 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062498137 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071353342 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061663165 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062903563 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062493471 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063207485 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064456108 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063457321 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064717003 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063956403 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063474535 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065330255 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064762453 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068584299 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082220943 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064509554 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063766283 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064466409 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068619405 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063890096 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063913215 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063597517 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066696986 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063764025 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064699823 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063674578 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064969353 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063687109 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06768586 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068540915 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064191064 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072593124 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068725279 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064329632 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067680745 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063610511 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064325536 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06371075 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063364841 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063458629 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063585245 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073547522 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063755577 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064975191 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064113998 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065007515 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064522308 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065735741 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063791535 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063470676 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065886857 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064725403 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069071588 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063445094 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063098755 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061690225 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063144021 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062477275 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061545184 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061619022 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065414636 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063868977 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081748596 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073104664 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06351114 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065272163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064473887 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066913563 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065103313 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080172886 seconds)
  done (took 5.894635467 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086115676 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088494196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067099298 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068367161 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064410372 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064525251 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073060222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064567685 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06955069 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084192056 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064680086 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06900355 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069154585 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068634673 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064836426 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06935741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073304146 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065118998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064703532 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068575235 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065335258 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073082333 seconds)
  done (took 2.72701664 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147898947 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069350997 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108296127 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074267684 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.0735093 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075638477 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070319055 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07043109 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070825321 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071174066 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071647983 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070180867 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07203165 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07069944 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069100182 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068989515 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070169853 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070990427 seconds)
  done (took 2.570322636 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078886772 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068418315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087531938 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067937738 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068494079 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069187162 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073890855 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075040268 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069572699 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070283242 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075202577 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069739688 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069790871 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070698023 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069894524 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069835871 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069534185 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070305654 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074931237 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073941808 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084275855 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075046807 seconds)
  done (took 2.778134119 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079634203 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066974459 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082943141 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069473152 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062956217 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063036338 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06883809 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067832859 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070052632 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068903477 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069496248 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063336226 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0698263 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067611231 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070180304 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067685852 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067281013 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067758391 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067935621 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064543336 seconds)
  done (took 2.553599054 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085650846 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065645863 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065667262 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071955786 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066325143 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067457481 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074019551 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067630213 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067724964 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087986793 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066173707 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066280899 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072493526 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069836743 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065556463 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074219897 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076700822 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074086122 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067903723 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067665644 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089260159 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067802311 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074552632 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067574216 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067786226 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067879259 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067781926 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072308939 seconds)
  done (took 3.173482298 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066088975 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06522195 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067533583 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067220435 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068064878 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067274479 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067438602 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06745271 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066815306 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068831547 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067346713 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067081866 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06728291 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067279922 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067468721 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067187113 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067446299 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068393007 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067576248 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067262355 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067330166 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067426044 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067124494 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067730157 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067544574 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066883873 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067294784 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067574504 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067052173 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067212636 seconds)
  done (took 3.203381242 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076813758 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074229486 seconds)
  done (took 1.334499034 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064395791 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079891082 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062413343 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075238102 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073308118 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067619974 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074118568 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073359075 seconds)
  done (took 1.747726585 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086137712 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07628095 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065445913 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.076356677 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075638974 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08685141 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130176228 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066616235 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076782467 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067256089 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08565658 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069180786 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077178071 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071935611 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077368916 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08075502 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064508847 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072125443 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068007161 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064831747 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067127207 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080445923 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076527062 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063795149 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070166307 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09276908 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080850229 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064235266 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072181907 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077323688 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074727043 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062076566 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064645117 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065170784 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06287747 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075654883 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083687036 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07256184 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079532032 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067310273 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075177026 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06409601 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07513884 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077504012 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082587789 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066610411 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067056306 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064545555 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067474957 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074101634 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064907229 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070998049 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063611941 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078885293 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074197357 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082075906 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065240099 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072632806 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072847676 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073489967 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078159033 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072949535 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076263127 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065981485 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082672104 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076133799 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078476168 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064341876 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063535142 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064220086 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080767526 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096085587 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076290574 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066493087 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067069759 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064090584 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073454507 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067000132 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075550061 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077799373 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066009787 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070835692 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079085902 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07071944 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072928561 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07294329 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064750369 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070157644 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067510688 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087035111 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065023405 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064349599 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067264746 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082520286 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075722652 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065433631 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06713464 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07771289 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062810909 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066108737 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066320284 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071743811 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079446358 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070175755 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070330032 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079981942 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075379467 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070754142 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07214469 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06253951 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066161075 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067416041 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077110013 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062230969 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072515079 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069415324 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065215762 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076788161 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063540332 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065040957 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077676788 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076933815 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063975637 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061974188 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071805272 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065536056 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067587499 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079012499 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063960332 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063649659 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063273564 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073115774 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06490144 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073338286 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069184718 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072143346 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.191061193 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063779532 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069776558 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077768003 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069090376 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071079797 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074891801 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070646421 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064155507 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07673056 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073447449 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068947053 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076085769 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069300092 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062640542 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067350307 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071129747 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063542645 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072652191 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066970493 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071302991 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065161588 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063089018 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07106829 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06489342 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066889452 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069301161 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064125171 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079422341 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071143226 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062421378 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063119782 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07185657 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06683472 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064201893 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067003621 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071451889 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065470971 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062892328 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064282838 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07079108 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072448443 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067558985 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06581134 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.0747943 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081855116 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064530446 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071374473 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064218787 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065606689 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065075867 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079122663 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075039867 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068718575 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072304947 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062154788 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075729197 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078814591 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06920667 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06471081 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068989702 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070651096 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07833317 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070567444 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066866671 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065011956 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072086438 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069018927 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073351888 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065725694 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06868177 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071833536 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06480638 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072660207 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067371254 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081612151 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074245642 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064732174 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068941057 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065124928 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077669909 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064620736 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067466238 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068863204 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067247216 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065428085 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073346915 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063308648 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079332376 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079238452 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071389034 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068935963 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066116541 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078576665 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07175662 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074301803 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073375611 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076140791 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081796917 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068636684 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073176898 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081788691 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066082825 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06333466 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075729192 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067422817 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065067254 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065347795 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064962149 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07312815 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073244316 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076110425 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062813939 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07253404 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064463669 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068098174 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063548881 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07431374 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072664123 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069479761 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077734104 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06624384 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065513344 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072808528 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06502494 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.065376141 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065804559 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071856352 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.06536138 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071125634 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067547625 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071209056 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06704913 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063154854 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071094104 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064734132 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070756886 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074199655 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06494315 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071345814 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072267331 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065190643 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.203371654 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070916071 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069845113 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075049493 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0730557 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071925694 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073629607 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064539115 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078682055 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065940172 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079587821 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071812478 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063389005 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072202063 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07294165 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070844111 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067135231 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067476799 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072637399 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066361768 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073230811 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078645601 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067435834 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082242656 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077406418 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071604411 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073285454 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071449492 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071911033 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068431846 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070621103 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066440163 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071720653 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065673491 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075519383 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072833721 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070876984 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072361331 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066243089 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072235766 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067438917 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064056977 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069739261 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068929765 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066387244 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07920895 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06672444 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069084625 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06594562 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067369052 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06612372 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06363918 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074469835 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074173352 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066768239 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077442038 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069192541 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072457553 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082153217 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063760113 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064619737 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064457965 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067444132 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078962712 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066900863 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080451975 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071267693 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068958053 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064212301 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066729191 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064868205 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063927064 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064238285 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074581977 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068228017 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065491944 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066330194 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072979341 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06713351 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079495613 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065620167 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070479791 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06643197 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063885874 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068987928 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068249412 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073300479 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066957235 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067541839 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063554795 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065849206 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070688129 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072494956 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065606903 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072054286 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078607768 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066072149 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073044682 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068804407 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064299642 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072967253 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065923759 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065872167 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068741596 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074247783 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073582258 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067009526 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081058015 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.0662447 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074808967 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066582649 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064512607 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065617069 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065750575 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06561022 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068139967 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066561663 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078854682 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063831982 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071589013 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071207414 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06973201 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075754197 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066017045 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072058978 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070719362 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067592697 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07197945 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078506093 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068352225 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072513586 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065857745 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070672883 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075276509 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067267496 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077067876 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070277424 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065568307 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071135088 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066808658 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065395474 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065294882 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064602912 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075187022 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.200804441 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069180074 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069741772 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066237947 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.07194603 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069734626 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0799946 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073211102 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074290367 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064958854 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064500263 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067286254 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068072512 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071708735 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073539233 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076350904 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073322605 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069445277 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065575459 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081113053 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076532811 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07394126 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068031751 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073992468 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066989181 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073498094 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071093735 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071356178 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066794658 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074165065 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072032237 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069110623 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077203568 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074180172 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06760053 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071867413 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072139192 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071879076 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064264207 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066633898 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072545538 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075434048 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072862059 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065974187 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081825151 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066785819 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071503892 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069243732 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065432531 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076306257 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064468146 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072855479 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067933194 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066983134 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064518664 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069390405 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067798259 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073791483 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069288051 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064638774 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082426949 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080933377 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072756464 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06585973 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06504443 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064251071 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064655203 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069191394 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06701165 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072276888 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081776511 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069416581 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068707068 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064306482 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066219862 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073206021 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074316165 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064087542 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064312598 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069096486 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073094124 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077883863 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065208869 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06584595 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073253563 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072310259 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063748817 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067615539 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062072759 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072276948 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08136585 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064633502 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071335872 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076265563 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079314812 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066588238 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06428286 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066708105 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072567793 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071975871 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067282586 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06666993 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086372138 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073385509 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068270356 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064836365 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073449902 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068982032 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080247307 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067349631 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066516741 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075600286 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075594619 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073687275 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076880677 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077905348 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073002825 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072656853 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06506825 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070968198 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064624686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068256092 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066361483 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066011249 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069772645 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071987763 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070121216 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079702874 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077568512 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067026207 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063430504 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068331527 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068259888 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063586792 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066677755 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063763443 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063995583 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063700746 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0645672 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071398152 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074468649 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069965773 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065248825 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06489006 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062419857 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074823098 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071715888 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070778239 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062970773 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065031392 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065513295 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072921408 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067641903 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066416008 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071081961 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070614599 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070913924 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063208397 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076630886 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064181626 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070935851 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067683169 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065178335 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065266752 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072651544 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068580913 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066171869 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071704097 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071712809 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06653716 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062842302 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062604832 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074470687 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063258742 seconds)
  done (took 43.563171416 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107782656 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066791302 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065878837 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065918763 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075598722 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066964743 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066277434 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066819633 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067095995 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068912099 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065842553 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066210192 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073607133 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081157011 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076245456 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069704675 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065179629 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065994184 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06528313 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066043834 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07249727 seconds)
  done (took 2.816739731 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070566026 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078544197 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077956061 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082474087 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073975642 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070225932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078148732 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070388036 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078488939 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075927631 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078393084 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069779127 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075793203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075421942 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075732281 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070330631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078956433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074074006 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069979466 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078170893 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070257084 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078359796 seconds)
  done (took 2.91353665 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064636661 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06552356 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072415732 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063900862 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06546989 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063911921 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069033883 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064191108 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068860984 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068564273 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068062315 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068392466 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073107984 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064292919 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069473946 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064055253 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112079311 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068428864 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065843651 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066702145 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064683723 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073419035 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064131338 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064591452 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068322008 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068911936 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066463884 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064649805 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065959201 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068549883 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065647732 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064078033 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073165398 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072442086 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068583947 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068868826 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065708594 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066418155 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065178956 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06466564 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072297065 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065109882 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069467695 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07313849 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064822453 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064143057 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073011569 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066110055 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064132507 seconds)
  done (took 4.609081519 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075208153 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113907782 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071036052 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093965776 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079505558 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072186368 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070481139 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095890448 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066095308 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067851143 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080552618 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081532539 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068358762 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070205036 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072681949 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068122358 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069325088 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067657746 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071297367 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067602966 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071739486 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072782078 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079565611 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080111747 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069735396 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06764066 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067374391 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069839451 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078834467 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070099146 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068131268 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068353891 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078649709 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070097937 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067737442 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067679479 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081486469 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068437655 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067815106 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066543103 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067505778 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069169604 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072736342 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081448063 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068247155 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073197735 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068437415 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065733256 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079968661 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067735688 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073222776 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081216224 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069368942 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069011279 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06989913 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080178312 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068210426 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066329884 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06820522 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079788829 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066155774 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068667743 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080899043 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067373038 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071752668 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080770879 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073615797 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069246181 seconds)
  done (took 6.382090927 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073947301 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096747409 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082304842 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082818937 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076161696 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07689124 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076345197 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076283174 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076819849 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08053201 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07702803 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119057562 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072267274 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078553354 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07697351 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07434899 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074434983 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074663024 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07381533 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073961344 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073918183 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081079677 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073836968 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081041533 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07878039 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072267676 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075950045 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076396383 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082258873 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076480567 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080113377 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076279999 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076454554 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083338846 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07965136 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076624945 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065880319 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076107619 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076448421 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076398142 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072647751 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099601147 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073673697 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069129259 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073443683 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073845766 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079872608 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077503523 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077177952 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079904741 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075736743 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082200046 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075476365 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07611302 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082257254 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085242968 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08203319 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082559978 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075367099 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082210802 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082044027 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084751749 seconds)
  done (took 6.167088072 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078926999 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07088597 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.084139492 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0636773 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063787121 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074827722 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064067521 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064371542 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073050099 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075609564 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075518607 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074709466 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077603425 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07536701 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075186761 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077205875 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074946405 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074597002 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07322852 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07544727 seconds)
  done (took 2.77454973 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076395518 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083136162 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070006086 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073998422 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070227338 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074405752 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069062775 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069642443 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07011281 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069677283 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07609424 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076278851 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07037586 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074954868 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076150215 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074847363 seconds)
  done (took 2.468075471 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084140954 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071759245 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080605204 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065796278 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069782486 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064682262 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.0654411 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063467374 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064609105 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079209844 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065462418 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07718757 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065451279 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064432157 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064751164 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071578166 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064905479 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066046938 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065393789 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079313637 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072818371 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066617383 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069409485 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065316517 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071209477 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073338794 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067125904 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070578471 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06547231 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06576958 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071448127 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072514445 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063839336 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064423935 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063338327 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063742964 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06363182 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082257521 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070617129 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065776659 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064053612 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070699623 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06592881 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066464045 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064801088 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066034505 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064733565 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071122437 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065831188 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071360023 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065217635 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06790213 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066033767 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07312814 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068146225 seconds)
  done (took 5.068520898 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07865954 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067454063 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062369429 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062429151 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067981124 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068692508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067685606 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067469723 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069032964 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062132133 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06836501 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068471772 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070110098 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069790933 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070848727 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070028665 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063866103 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069695343 seconds)
  done (took 2.532351716 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073263456 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067167395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072147018 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067080938 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067271222 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066975968 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062953595 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063445078 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063519462 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069166759 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069601234 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068570116 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06407706 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068895956 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068988578 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069175789 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068983655 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064439247 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068771362 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064160717 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068578524 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064284566 seconds)
  done (took 2.7783371 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09641376 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084511057 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144033076 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08194701 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090226015 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074381179 seconds)
  done (took 1.870086703 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09300355 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099012731 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067297765 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068778084 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075179402 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072624366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072803991 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073366637 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077910667 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077912749 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072959883 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078663472 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077252197 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079981199 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074950799 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075652804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075689389 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072837428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069743553 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082609208 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073712955 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078247646 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072812152 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072806739 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073055841 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07934798 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077642049 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077725092 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073026961 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077810115 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075235101 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072780807 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077735456 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078215966 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069987789 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077904624 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073555009 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082901541 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075109537 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079431033 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069440676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075436436 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077759227 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076894268 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077720463 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073476675 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077058835 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073252781 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073512668 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084525945 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076242147 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079458065 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075546563 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078289098 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07797761 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084678453 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078391687 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07971593 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075780476 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078231823 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079992053 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075324176 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079905427 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078564391 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075563637 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079973462 seconds)
  done (took 6.374537504 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104837601 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068918744 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072581731 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078014394 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079428333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073083869 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073278158 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073445795 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07371742 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070853928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108932881 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073719971 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079996494 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080130877 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073403663 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073712263 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07358902 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079803539 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070737227 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084888123 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073632769 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079679119 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079611134 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079504926 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078369916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075723926 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073009069 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073197876 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072996473 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072924578 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076888308 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073186345 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079544282 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070111109 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079609289 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073015407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072900351 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077444353 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073304027 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075444219 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079884636 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084175163 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073314203 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073170438 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078365699 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073102894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073358841 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07013131 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072937291 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069928478 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078094376 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078278268 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077636534 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079289924 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073078249 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072797596 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073052053 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073183036 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076022108 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07586504 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079784769 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07323854 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084479463 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073508437 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072828197 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079812741 seconds)
  done (took 6.37136256 seconds)
done (took 129.916227271 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211700155 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185313037 seconds)
  done (took 1.686746101 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074367038 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10509245 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083048829 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135191562 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071400324 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105568289 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104539088 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08397632 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071645275 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071841172 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07151235 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07400957 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137026952 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07157294 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071345834 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07413152 seconds)
  done (took 2.714039355 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10559389 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169834022 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112232762 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071396302 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107651444 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079740991 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070477765 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084613209 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078623208 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07326824 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080245694 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078282376 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.074705351 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080739474 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07861196 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080310127 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072975729 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079779005 seconds)
  done (took 2.890308119 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103241966 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098761589 seconds)
  done (took 1.516087994 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.175959396 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134310204 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203278174 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341673738 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155967163 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.433791156 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146588185 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144976348 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115759949 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136185711 seconds)
  done (took 3.297010434 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104313224 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.195598756 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301439481 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12443716 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078728414 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115564007 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12581292 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084367797 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08285483 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082432582 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082113856 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081379609 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104005996 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079433263 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078475495 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081137497 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10732205 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077461398 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078704651 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079328136 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107332872 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072377294 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079328533 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077020404 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080256108 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080777126 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073891895 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072255996 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079252261 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078018773 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082482751 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112613164 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07998228 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107607207 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076894448 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109664113 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.08149873 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077229484 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078821704 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077125108 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080492195 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080579832 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08078884 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080949692 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073302452 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08136356 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073343912 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071892483 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08354855 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073506068 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083713039 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.082861169 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108260872 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073501955 seconds)
  done (took 6.290974955 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108287213 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107855703 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073458013 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116416428 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108197799 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072628151 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109331679 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102645135 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.11149488 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073659005 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071475705 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073307982 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082286198 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085207929 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116390319 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108699232 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073432072 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070610801 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108585031 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110020497 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072361123 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104661574 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101439004 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111762969 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071602879 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073241196 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072505733 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073638422 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079444758 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080584591 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071886941 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0828947 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088066296 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077691995 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068951766 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071344241 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071369279 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081106533 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081419685 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08133343 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079783088 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070515884 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071469602 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072559331 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072071909 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070178067 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079900936 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081905348 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08034022 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07167837 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073094038 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071448792 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07203445 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081174993 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079222653 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082506029 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081640594 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071518479 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071087602 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074613365 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082329146 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081321765 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081403113 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072622729 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081820577 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071720243 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083514453 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087019818 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074081217 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07212248 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071497985 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071145378 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072167009 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07888013 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079301216 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073807322 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071978929 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07163593 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081476825 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079674187 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071278019 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078713918 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070347475 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070914025 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072401079 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072320177 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078755093 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082667211 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07301188 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071188173 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071415112 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071322916 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07015543 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078647746 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080777831 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080429856 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080034141 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072166325 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080472229 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079842228 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072503126 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08023558 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071235485 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07241904 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071891377 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079228796 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078294312 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080240716 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070960974 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070951614 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07927945 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080969741 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071876218 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078214534 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079015614 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076368821 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067650851 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078711709 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068730644 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077005321 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068397251 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212457368 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071278177 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078930472 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070882576 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071334393 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071966645 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080859568 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07305194 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071728417 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072450327 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071983129 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080428941 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084275888 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071211627 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079800178 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080747225 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07334188 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080116913 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07191075 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081231706 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072247434 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072709585 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071109806 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083647232 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072104366 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071565839 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071819553 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082666487 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071973417 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081696401 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079570171 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070730638 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08665544 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082348092 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079526378 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079764677 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071418328 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069474555 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069833506 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071651127 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079135109 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081504799 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073194342 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071885851 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079602865 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082692526 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071177691 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080046617 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080337194 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080618108 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072264437 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071603715 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082774791 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082363293 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077579527 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079408132 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081330076 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072292504 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07970479 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080802173 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069804466 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083040664 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069920473 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082380388 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078453365 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076608956 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078053933 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079812945 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079286453 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080013627 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082256884 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069505458 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070060118 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080540451 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071838044 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07157196 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07992691 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072920752 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072750552 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084989871 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070108166 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079462615 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068966956 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078697446 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068612048 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071078686 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083078456 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069611955 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070837767 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077580307 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069614432 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077321816 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07945909 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077015968 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072513394 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07038952 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079175624 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078228569 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069316329 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069786204 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07097165 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077298063 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078697272 seconds)
  done (took 18.936695901 seconds)
done (took 38.658070403 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216323253 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157860856 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190597401 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118504682 seconds)
  done (took 2.095985598 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108064236 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101051164 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090893272 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068178912 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097415876 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067863448 seconds)
  done (took 1.878765669 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.338321154 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212676298 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.198751057 seconds)
  done (took 2.091891834 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.227841762 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211707523 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.468372977 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.282948622 seconds)
  done (took 2.631971641 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148313759 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085596204 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067091712 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080551316 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128331468 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.180532815 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096526266 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.1300906 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073556675 seconds)
  done (took 2.387377004 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.15077339 seconds)
done (took 12.600558484 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.111089285 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100598631 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.245879043 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07114491 seconds)
    (5/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.219197311 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107494736 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091335581 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078516957 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075881235 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087132145 seconds)
    (11/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08243939 seconds)
    (12/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.199275608 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068535914 seconds)
    (14/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.096827166 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103561778 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077836275 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068617505 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.177022749 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.170495274 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077884732 seconds)
    (21/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07807004 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.440836631 seconds)
    (23/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.170480181 seconds)
    (24/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081094994 seconds)
    (25/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075237887 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087847653 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091538529 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.177792855 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171151547 seconds)
    (30/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077085998 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068711201 seconds)
    (32/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.203417684 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068926946 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078146199 seconds)
    (35/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.167715717 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106379103 seconds)
    (37/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.219579597 seconds)
    (38/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.17887246 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115160802 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076159866 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091442945 seconds)
    (42/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.219875173 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067643195 seconds)
    (44/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.08010219 seconds)
    (45/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.130908867 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072045076 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123962054 seconds)
    (48/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144061264 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.108081924 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.161589476 seconds)
    (51/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076823968 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076872202 seconds)
    (53/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.139537392 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 0.068043928 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094496964 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075676733 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103712529 seconds)
    (58/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.074769301 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067963094 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077382709 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075079629 seconds)
    (62/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.242544436 seconds)
    (63/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072525442 seconds)
    (64/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070134005 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066733687 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.199362763 seconds)
    (67/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077239691 seconds)
    (68/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.173035258 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172139946 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077140452 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074627244 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066426023 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077403595 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184793221 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069021725 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102533861 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067549086 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184165462 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126829 seconds)
    (80/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.184298847 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103741583 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073268758 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088979491 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068120299 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176413006 seconds)
    (86/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066446093 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078716635 seconds)
    (88/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068710043 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169017741 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088500945 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.224936439 seconds)
    (92/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.125314282 seconds)
    (93/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066549356 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116867911 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118087213 seconds)
    (96/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.228086939 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.072134559 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076556527 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.218712826 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088724656 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073507036 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.177723436 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074865077 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.198180861 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.223682168 seconds)
    (106/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.133830643 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13839844 seconds)
    (108/309) benchmarking ("sort", Int8, false)...
    done (took 0.15041006 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069013056 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.1869032 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094293143 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074537101 seconds)
    (113/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121919099 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077342651 seconds)
    (115/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.081476804 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091824296 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118018761 seconds)
    (118/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075524888 seconds)
    (119/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.132943161 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081400583 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.069014754 seconds)
    (122/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078086905 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175345366 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075497247 seconds)
    (125/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.142537115 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076550261 seconds)
    (127/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.208814869 seconds)
    (128/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069569838 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067972458 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073193701 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068488608 seconds)
    (132/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.185194847 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076556314 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171707266 seconds)
    (135/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069892399 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072848276 seconds)
    (137/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077070255 seconds)
    (138/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077833769 seconds)
    (139/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.221013017 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067255898 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082486108 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.18083838 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120127904 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074591402 seconds)
    (145/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17629502 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.198447795 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066418174 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089042072 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076438812 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067576875 seconds)
    (151/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082799554 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067592087 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.199720573 seconds)
    (154/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.069586405 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096871104 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075911629 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137734384 seconds)
    (158/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069464554 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143846645 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075424825 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.069071469 seconds)
    (162/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.142478576 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06908223 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074369894 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179014386 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07851706 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068738581 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068797658 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068766575 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069332144 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.234036523 seconds)
    (172/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08049313 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135856725 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069053774 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080645233 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068364084 seconds)
    (177/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.146509851 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068955409 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067385001 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.172393603 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069340497 seconds)
    (182/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068278899 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067655771 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.220504306 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075894611 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094081961 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088108457 seconds)
    (188/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.07844123 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127859759 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067965268 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192158366 seconds)
    (192/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066529464 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068540678 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073902805 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071697446 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071274274 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094931072 seconds)
    (198/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067736732 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06777454 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080686379 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07545219 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173113703 seconds)
    (203/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066663631 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067351522 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069071531 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068341628 seconds)
    (207/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.182868839 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06911597 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087728525 seconds)
    (210/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.222716663 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077608396 seconds)
    (212/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.070825168 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071174192 seconds)
    (214/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092888304 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093298379 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137182325 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083629656 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.071188433 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078012773 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079002985 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077125373 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140871535 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.069818922 seconds)
    (224/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.142772459 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070947497 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149502226 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076871084 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07010244 seconds)
    (229/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.082320764 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187813682 seconds)
    (231/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069908501 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185208908 seconds)
    (233/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08060729 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093841276 seconds)
    (235/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.069517084 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068974526 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142225725 seconds)
    (238/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06910572 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11298476 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083934514 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125324688 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069731109 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.078305378 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.069430985 seconds)
    (245/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077686672 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068451462 seconds)
    (247/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066730277 seconds)
    (248/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070290187 seconds)
    (249/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087933327 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134617918 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068758569 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09347029 seconds)
    (253/309) benchmarking ("sort", Float32, false)...
    done (took 0.13355051 seconds)
    (254/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067885856 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090563229 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065928681 seconds)
    (257/309) benchmarking ("sort", Float64, false)...
    done (took 0.134669956 seconds)
    (258/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176597345 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148062436 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.081234271 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09578299 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068025368 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070250653 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071442154 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.082545533 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127103561 seconds)
    (267/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069677031 seconds)
    (268/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077805396 seconds)
    (269/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077262785 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077737053 seconds)
    (271/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082167732 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078102118 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075495186 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068395055 seconds)
    (275/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.069724049 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.069501888 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069756401 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06931957 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.069026851 seconds)
    (280/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.090388432 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093698081 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068154715 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123665802 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068061221 seconds)
    (285/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069234305 seconds)
    (286/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072600586 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.069003978 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093496437 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067983909 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076784611 seconds)
    (291/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074921619 seconds)
    (292/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070790728 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067368017 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06986031 seconds)
    (295/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.069322321 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07485486 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066723967 seconds)
    (298/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.067309674 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066425378 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069013964 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074438476 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07460946 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.068158286 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072624435 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068540883 seconds)
    (306/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074943711 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069816963 seconds)
    (308/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068956904 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127020564 seconds)
  done (took 33.736512471 seconds)
done (took 35.093481198 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08730457 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100245083 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076312269 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096821807 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086365275 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099828515 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07660589 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081669202 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084340801 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083064082 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082448393 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075097538 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078366493 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078302571 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076237804 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101663657 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082797427 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076953901 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077454709 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068156382 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077329098 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068325233 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067673393 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073833575 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078329092 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073766256 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075995191 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075454194 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067148839 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066974283 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071779054 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075924304 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.0662681 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079750197 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075520443 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076594886 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079343719 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080124783 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066395216 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067154289 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076736585 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066988353 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075307329 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075058293 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073452646 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075124261 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076809334 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081811968 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10136409 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074033832 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078897773 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079564797 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080894702 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074017028 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074011909 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077388299 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074740446 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098554959 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077074136 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072702823 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076687777 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077554089 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075132568 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07694492 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077129177 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079839706 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080762588 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075156663 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079294131 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075425775 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068907332 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076863082 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073151313 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068701291 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080114508 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081559052 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067821887 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072565532 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074765244 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075986829 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.07071624 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07284058 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06791185 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073305669 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073289037 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075393933 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073806367 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075878316 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06819286 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077198605 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075439414 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076385623 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066450127 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079021614 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066447213 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072675026 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068354185 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068927418 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067683834 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073325805 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067790753 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0736333 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077677981 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067549211 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073170557 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082008262 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068591226 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075471627 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067534637 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067872169 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079643116 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078233614 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068469454 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073329897 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067219321 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072179573 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067546912 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067927127 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067937827 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068221724 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072408524 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068246785 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073324373 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073916889 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080650239 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068028516 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07314748 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073692112 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068073951 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075149433 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068541041 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068105793 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067535722 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081927473 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073285029 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068460974 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073525847 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073073012 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075856504 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067141703 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076600379 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073411683 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071962417 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073544282 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067526934 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077885513 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070359707 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070633983 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066473205 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067235142 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066978791 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067031016 seconds)
done (took 12.855806812 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070973314 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.121767905 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096834341 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09698371 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086309809 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070265612 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077682322 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09559096 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071054565 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100673085 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092057347 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091829781 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113605207 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068736728 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068983522 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070091813 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070844017 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082565191 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097819238 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092266251 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.110016807 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069043244 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.089289178 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090205532 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08701528 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094318757 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070303728 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070682597 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072382064 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091190151 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095725703 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072429533 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070009091 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.094297335 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088455467 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083636893 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070265744 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.079260294 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070174866 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069315663 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071180865 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09108042 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078695611 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080739734 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07092794 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076739554 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070845408 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086407907 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088890489 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079034005 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086377273 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.094398024 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074268434 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086778507 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068838792 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086396481 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079741232 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069494471 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069927017 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074442897 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070135995 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071854827 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081420096 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079291871 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075155449 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08554499 seconds)
  done (took 6.828598298 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085097476 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096807563 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086917825 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086873406 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068744296 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069431337 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069763743 seconds)
  done (took 2.013071195 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07058893 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090334392 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093908307 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093869522 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086278837 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094676783 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078239155 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069804022 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097897378 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06847106 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090108974 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101559828 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074027326 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081700473 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095331019 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069319928 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094564327 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069956972 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070698108 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095218334 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075157054 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096901026 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.082077927 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070178539 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082819536 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069842923 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103021165 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077851203 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071206337 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070873237 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070689284 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.09739442 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082378625 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.084202316 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070844984 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085325917 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083657142 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072962268 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081281925 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079533201 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083365184 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070869497 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068791162 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071161986 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071295337 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079351692 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068079682 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071267042 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070703261 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088246128 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06688006 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079651697 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072061838 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07338063 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073859012 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072634435 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076346366 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069477728 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08690473 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068536813 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084593088 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083439839 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082500932 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086612799 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068063363 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079954422 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081318294 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068600283 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069455822 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069066529 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08420978 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071032906 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069192505 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079437951 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06734119 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091566119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091546255 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067144361 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080742753 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068445682 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069702317 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07946958 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091692747 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073134692 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069062712 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071641768 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069506714 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070836519 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066410522 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071950586 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069165501 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073240413 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069197355 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071203983 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069947467 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08371066 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066714981 seconds)
  done (took 8.992814529 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069765294 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068198312 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069551246 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068747814 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068308189 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068624844 seconds)
  done (took 1.888655379 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099487718 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069125975 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081349103 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069174187 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10424921 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083762778 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084468207 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.086145202 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081820988 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079934477 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083969657 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089603534 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091700534 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073126715 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08644561 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072040699 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086833007 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075539717 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082669341 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073505574 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084819015 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073619004 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073819936 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091330522 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073429993 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069995066 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07780783 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079858664 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081113717 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.094347307 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073142632 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075063803 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079522978 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08943307 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086801124 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079049988 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071153127 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077162464 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073850742 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074698417 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088923472 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073213445 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07299624 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077324974 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.092253022 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078617957 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077471903 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079500037 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086318025 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076916352 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077053309 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071392 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074312022 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077463727 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078738952 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088851654 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077141679 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086680992 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072642194 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078380244 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071028757 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074251072 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091139232 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074358347 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078377876 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077418362 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078656116 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073355003 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07342718 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070943968 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07725137 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070602347 seconds)
  done (took 7.178448285 seconds)
done (took 28.367588261 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.517446959 seconds)
  done (took 1.948155273 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.621537973 seconds)
  done (took 2.082418624 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.595234827 seconds)
  done (took 8.044966137 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.414137717 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.652546387 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.759901536 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133960248 seconds)
  done (took 3.45322724 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.71103449 seconds)
  done (took 2.177581082 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235421897 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225853805 seconds)
  done (took 1.937328715 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347018182 seconds)
  done (took 1.800977247 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.064190786 seconds)
  done (took 2.520732439 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.251968474 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.169432309 seconds)
  done (took 1.884803399 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451358456 seconds)
  done (took 1.909848646 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.253511463 seconds)
  done (took 5.717106616 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.219319552 seconds)
  done (took 1.713597898 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235413498 seconds)
  done (took 1.696516581 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.734319598 seconds)
  done (took 3.195464825 seconds)
done (took 41.557469714 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083798416 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085676581 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085738559 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081226148 seconds)
  done (took 1.780087308 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075090132 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071293452 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076744897 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073155813 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077186881 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073504084 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074895825 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076448802 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073658161 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073653448 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073422789 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07396051 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076462155 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075335882 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072532289 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076800488 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078015672 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073830008 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077023095 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073492883 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071686759 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076712898 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076816767 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07276999 seconds)
  done (took 3.257663011 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079030131 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07557332 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078708918 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074630473 seconds)
  done (took 1.779884343 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076888404 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088183665 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08955152 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080123655 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091993629 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087015144 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070087646 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069917147 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07122815 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079333978 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069379552 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096419384 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089204336 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077208533 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081289788 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065874144 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067139244 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085769797 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077947705 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077887438 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069075742 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077315764 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066800798 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087158755 seconds)
  done (took 3.361429667 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086596061 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066853824 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085870904 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092633943 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095599819 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069317903 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.086557976 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097064643 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.145263645 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068066562 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073757002 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069067859 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.108294328 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069064015 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089957028 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113107921 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116083886 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072785105 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101481111 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069853226 seconds)
  done (took 3.251693993 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083610995 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070647139 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070855603 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065999335 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076822724 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073342291 seconds)
  done (took 1.919175671 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069543574 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06889051 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067968156 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069442025 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.075444211 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070035406 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068622851 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070824037 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069338417 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067889871 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067848746 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06681429 seconds)
  done (took 2.306708736 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.193773337 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070001109 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07135234 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067551662 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072848534 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067746767 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082407521 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069925041 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09423871 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06761321 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067762186 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070171809 seconds)
  done (took 2.470122398 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192830975 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076410689 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224626721 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145813432 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105997812 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113109607 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115099421 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111342266 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137268641 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100410842 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157309264 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163149249 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107875579 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133261919 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090609543 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124659712 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149127946 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16020198 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102725129 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154725374 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135872946 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122291359 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145814478 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100409252 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105580426 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115224643 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072321882 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077368987 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158767475 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123030923 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135737777 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1048928 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089622431 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165582307 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161573073 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131978383 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141571575 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081702465 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117695011 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128703414 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192461911 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086446282 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149968631 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102144655 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077462087 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123942703 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109428259 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113932985 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098908158 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086050411 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274378611 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173637207 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128239266 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0837768 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116742315 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105455086 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109386259 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115292339 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217055344 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149671457 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121796732 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069930359 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109856302 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146432151 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129594435 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108026955 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122070035 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093112815 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129175387 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156913621 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139383305 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137783512 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.140107359 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088255629 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118824104 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13471637 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126684687 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163865832 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118095057 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071157617 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115267615 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095537291 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078523961 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140973147 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073920586 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164315873 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095926078 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121412718 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12513867 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105097558 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104646701 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149997886 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134231015 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100874155 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083963175 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099086529 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113993783 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139452578 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084100244 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102875051 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110228931 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079841763 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130271657 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074738792 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118054516 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094830403 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115803875 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271909434 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07950203 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118728908 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099483266 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099608065 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125296897 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149412696 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085263637 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078763438 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156705222 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116668894 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10399494 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136816673 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15407039 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1213306 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097845456 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140328554 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167529079 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090473621 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157043161 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103104081 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084715258 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106175077 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117663972 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106298022 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117524578 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078593418 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115099685 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15764465 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072398434 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093511666 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126601463 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080287904 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077957612 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101037175 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100536062 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094019642 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098137384 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100857547 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131639689 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118484109 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101734137 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118716312 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096847182 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157811453 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08516016 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099485237 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100827167 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071428247 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126200233 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146314882 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076552768 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148872498 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115837249 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110100413 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112463574 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080520423 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128524598 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075960457 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070337405 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131170901 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.255950581 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107059539 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148260694 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111883667 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118712641 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115223893 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125576814 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122329523 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122892561 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110351422 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086343156 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110515724 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159721226 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071238846 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090169681 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081172834 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09973128 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090818846 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081832782 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132245521 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118785912 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106759257 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110569064 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093953272 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141585377 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077074248 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118929929 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117407059 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092875081 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145521321 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143897392 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126278539 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097630354 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129785803 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071612529 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07319381 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086532027 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118288403 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081829376 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081503081 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109306627 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141819442 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123132854 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128949812 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118088706 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115238663 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148362099 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071027808 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116509873 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136741669 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116235588 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101874016 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088723892 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093953649 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134893182 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098768814 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196505743 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107482212 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116312954 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.296240171 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100155662 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077379332 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10083108 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125321733 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097513374 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135087977 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095629147 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084960733 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103445718 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076042496 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099471737 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132564171 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115567278 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130439869 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.110442343 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123343012 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077152801 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107787383 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118047382 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11793584 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082169027 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117865849 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161563646 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10480567 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115476704 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146876233 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080070854 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138900297 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16689873 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139946603 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085844784 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105070485 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118581081 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120303394 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119211421 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134532507 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104249287 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134084851 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110322059 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085134982 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087835041 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095803442 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103235226 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.112948565 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10392046 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113922497 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096457594 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134380967 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103105933 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108273436 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11410656 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097558403 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092939181 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093160492 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166708048 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116088778 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158776975 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096244325 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133232369 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298443082 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074562518 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077426709 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079464338 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131106187 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082866192 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123337981 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109452945 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110916041 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116993375 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134627754 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096902533 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072397166 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108758615 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130637017 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122251783 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096911061 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103683335 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156416142 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120278127 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080176201 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111744163 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115346806 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10418088 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169338574 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083252676 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110214017 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078115725 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081116925 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124769247 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147267631 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083738462 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104172082 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119109388 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110220771 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120705453 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095185473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107471884 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125583094 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138830505 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120722255 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087206222 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10629491 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122302323 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144450895 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100999269 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097542404 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165918545 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145168036 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15555514 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085262909 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109399583 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109667588 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107784014 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130142129 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084561651 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154368101 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082283122 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129393528 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097779596 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085319341 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272820578 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109068355 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086040979 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141073897 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11276963 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080844111 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078657983 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106868099 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11339216 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098594901 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072885896 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13704657 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072036225 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127750151 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15993183 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078422214 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101158586 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092924004 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081651625 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10241192 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099546411 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086529118 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099877878 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164583736 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088799447 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147882515 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13018028 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113237075 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13397478 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103755859 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646071993 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080724301 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14680995 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11497324 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174797001 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098859128 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117033882 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109903032 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119235455 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137996324 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101566685 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179031134 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127242385 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116749291 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080341628 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102092575 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103206102 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089571753 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104593693 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109137197 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108694361 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091968518 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116133626 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119102503 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082877398 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094670381 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147128719 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111625298 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138187837 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.279040333 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082763382 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113822002 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127254019 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077978136 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115405524 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146010541 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106291661 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124158587 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083196719 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100919878 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166192597 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072671711 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152273642 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118551293 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10982303 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115108217 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109590183 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127246424 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103593871 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12003921 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094583811 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147066918 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113519964 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085177116 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080007885 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105401695 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10730238 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095211969 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096453841 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09738564 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143170602 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070834029 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097663708 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114617709 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14345945 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164663946 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106848366 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085002298 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119972725 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154409164 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113788448 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119150371 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082116331 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081704524 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082801572 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.102016207 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.125130358 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112864324 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118241357 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112275603 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155385214 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084775614 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223124296 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092889815 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10059639 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090513319 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080118822 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095222318 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09558128 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102436526 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109688221 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316372087 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093787621 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091838649 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093241709 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076104226 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084193964 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123779208 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109609508 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116820475 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120251826 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.08344874 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104213076 seconds)
  done (took 57.844580232 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1028137 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078793823 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100754065 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143902459 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121298021 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199943197 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151574891 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188657612 seconds)
  done (took 2.667087713 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068234274 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094349325 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106330696 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084987029 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069570597 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070738751 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231140198 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083890771 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069633586 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094538733 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080572681 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071766506 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.462986557 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069252771 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07045138 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080813083 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070726487 seconds)
  done (took 3.447051526 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.383721952 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.605434073 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353955352 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07575836 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.003523482 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088893595 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.209406543 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137866471 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081881785 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536320506 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364644377 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132313888 seconds)
  done (took 18.555076122 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081390701 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077599757 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09388579 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09314895 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080944579 seconds)
  done (took 2.002337642 seconds)
done (took 106.124588259 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081702125 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.453946438 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072609721 seconds)
  done (took 2.130164615 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090981684 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090563572 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091572882 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089671615 seconds)
  done (took 1.949788093 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075367526 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077569611 seconds)
  done (took 1.730875227 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.212086308 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.179952658 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101104028 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082685752 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080023735 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080985833 seconds)
  done (took 1.826089284 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072957276 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072512357 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074608001 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076010525 seconds)
  done (took 1.873680992 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068409073 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067134205 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.071875309 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074393708 seconds)
  done (took 1.86192221 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084551201 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084357701 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081865901 seconds)
  done (took 1.829687547 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101196607 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090715003 seconds)
  done (took 1.76991931 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081507041 seconds)
  done (took 1.659140593 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090329737 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101058788 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134563567 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11893322 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140427421 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118751702 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092026128 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088770409 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082214691 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095883884 seconds)
  done (took 2.640228959 seconds)
done (took 21.422848992 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078748583 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367778814 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363707182 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095122768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671611619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359925056 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989853051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097511765 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147899215 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07264612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090091344 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652791381 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981264359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326033387 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969282191 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328413832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.657585214 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071918826 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071231098 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072781481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976666497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072074311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073204554 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072832362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654375951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.3784171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074203163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329780977 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071065411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07392945 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359264407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070943252 seconds)
  done (took 16.232319342 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070424558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122406153 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073117259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084773223 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071725091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070649258 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071954596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069961798 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123237277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069559677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087062869 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069255327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073070518 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070254409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089301122 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069009262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072391714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073141614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072742004 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074403165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092796112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070398135 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070555002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072873642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070641956 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085104127 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074771695 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070018362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070418939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074116808 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075380865 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07125767 seconds)
  done (took 4.067712026 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117008868 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125826762 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073813532 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106330993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112761117 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071144592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146662275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09426069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133697607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07300725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091044568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071934144 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108014021 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074054612 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094661301 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073319778 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07672233 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073311288 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072545037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073465586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089930911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069767942 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070715494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07304482 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0742286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.089289331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075002836 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073304425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072782877 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074562118 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07574212 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071788732 seconds)
  done (took 4.367794472 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071173507 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073487504 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083088764 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08511101 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070789288 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072806738 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07379549 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07094265 seconds)
  done (took 2.196716363 seconds)
done (took 28.452781224 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078635256 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068785536 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071791064 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089433366 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076967339 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082092376 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068043912 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07728035 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074726736 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075055458 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076760304 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069825898 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073568675 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068311316 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07585226 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069917365 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084183957 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073518132 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083786124 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084488306 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072909343 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076210685 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078200742 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084328256 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084349019 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084036628 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079565062 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075572332 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070944547 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073250172 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074298817 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084348857 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084189636 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084834532 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070582144 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070018364 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074353729 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071934188 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085266721 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079385572 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072862687 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079879756 seconds)
  done (took 4.805323451 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084557313 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089603203 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082362127 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079813628 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094463576 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085763296 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090455343 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081211409 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.080678428 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08987216 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077536384 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.084523341 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.081731947 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076500009 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080511138 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077958257 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082991467 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076429751 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078927267 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078084255 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087125249 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072931225 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087679112 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079267033 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074952495 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081161744 seconds)
  done (took 3.743014882 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073443468 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085638245 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.092685187 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142636129 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110646305 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080331244 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081592421 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091526973 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09668504 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068781751 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075670628 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09530841 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095714626 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077576172 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072508994 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087539008 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086838508 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07277587 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078008083 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100434405 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091667366 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088575534 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097364529 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087356199 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070003821 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073548335 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076146119 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090156114 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07298431 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082179787 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074167131 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074641941 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071840654 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081348645 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073492482 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070053984 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095750672 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0819321 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083664382 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071291373 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080381533 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071709217 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09696741 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131405089 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069945899 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.0750701 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07439395 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081787271 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069939086 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098319321 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082952855 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070082939 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071352326 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069703574 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070080893 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073759349 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072146413 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073345346 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080564035 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077540267 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093041954 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075401359 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088993874 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070148628 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081217714 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069920766 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072639051 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06945776 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099198769 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072381371 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115945043 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072111307 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0696944 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081784078 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080953243 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077252904 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070607357 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088840506 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082646895 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075425757 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079165983 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074531966 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07459783 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101085616 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070971263 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070687933 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069105238 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074284808 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073876411 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070680935 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083107397 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069736601 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074171257 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088744367 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.0704826 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071463768 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074671141 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073605804 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07021143 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082421257 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074741307 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.0716746 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08123944 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071262423 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074520255 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083800422 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078029166 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069508437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073044095 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074437249 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071920676 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072017683 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07446584 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072550873 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077848522 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076964675 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075514751 seconds)
  done (took 10.971029926 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165784845 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157506464 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071646328 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149193236 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077710159 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081589047 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152895797 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09584176 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069809933 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070783242 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070009046 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111254919 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110188389 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124677606 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083249705 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071088055 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.09516595 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119823715 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159911461 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153358429 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095020166 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080845491 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074900114 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073759487 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073270425 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082525896 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.093413707 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081841031 seconds)
  done (took 4.5683064 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079385336 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104644552 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074284072 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095291022 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092078127 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072206698 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073475657 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072328815 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087797305 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080999157 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071411503 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075402675 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076268228 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075501484 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072842216 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078864287 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079787615 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071474807 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075961185 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078112813 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082541234 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097589369 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076089794 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072010521 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075140635 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071979497 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080952579 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084836375 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07497913 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.109529782 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069913481 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077479281 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086905101 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073070571 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07178966 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072288099 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071950542 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072071759 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073720653 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070797694 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070490086 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07590965 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070689965 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080111542 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084720448 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074232349 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07187059 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072799761 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072756044 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067557439 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072627881 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074611546 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074290272 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076922942 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073764689 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073120177 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070806899 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096452536 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075833422 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069402866 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070350091 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069870651 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074570565 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.082039367 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08799116 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074298859 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07092909 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072496289 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085703189 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083739522 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069498318 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074454248 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067808239 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071891419 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072729872 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075489033 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070668722 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068474364 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069979208 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072137397 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.073233809 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071885136 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069706189 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072707922 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068114393 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068440103 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069860951 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07134384 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078589605 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069146947 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073594299 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070925619 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068541476 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072254668 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075257334 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072908178 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080377704 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080820137 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07072254 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068299624 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083549135 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072465008 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06911614 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075858032 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074127558 seconds)
  done (took 9.592946668 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092809123 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070034703 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086086599 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092617751 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079817886 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075017209 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079895807 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069390149 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086212587 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074121217 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077052691 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06838544 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080449707 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079604719 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07038683 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080023006 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072584514 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087898958 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084207921 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068086804 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078475051 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082242017 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081774063 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084241055 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082865557 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084750406 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082290368 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079593747 seconds)
  done (took 3.882175048 seconds)
done (took 39.152940854 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.701591902 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.853634921 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.667901502 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.880944341 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.722351216 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 81.335989783 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.766820222 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.663683632 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.843513081 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.709858811 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.986563527 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.912467062 seconds)
done (took 138.789404586 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.713589706 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.814441038 seconds)
    (2/2) benchmarking "String"...
    done (took 1.89945579 seconds)
  done (took 5.319154975 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.846868167 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.330251031 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.898050695 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.664548673 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.672185517 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.919449992 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.466287526 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.14078827 seconds)
  done (took 29.696990176 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.889218161 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.89259252 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.382144959 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.419328752 seconds)
  done (took 15.236656218 seconds)
done (took 61.511058576 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.72005306 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.690558414 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.704738555 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.665923245 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.75890014 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.678970345 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.864002189 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.693019385 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.672181471 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.67666471 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.669541356 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.088490223 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.682650277 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.784338466 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.667730827 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.679813771 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.707514025 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.198196772 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.820490453 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.680153129 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.672728533 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.826872885 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.673073139 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.670164101 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.686730012 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.666971213 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.074596223 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.668781605 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.282895784 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.672441781 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.698507923 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.014076047 seconds)
  done (took 200.31849442 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.666177518 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.672903121 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.765365943 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.693492019 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.09908315 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.859944551 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.770260404 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.132041404 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.673597064 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.681328325 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.908165263 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.666462474 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.927441307 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.640728316 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.703914354 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.716267198 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.910186756 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.921660239 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.70651743 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.814339487 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.687492527 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.828659753 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.771672711 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.870552251 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.667972172 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.720974836 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.678198449 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.675040396 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.857596942 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.876936553 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.678070576 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.713499954 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.868612084 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.536242351 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.689406615 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.694769416 seconds)
  done (took 166.353145532 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.879243512 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.66999236 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.667813122 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.668397582 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.674318603 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.667598589 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.790723907 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795689559 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.319658814 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.071127652 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.727337956 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.668830765 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457518243 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.673666338 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734896565 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.682699779 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.669479638 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684041914 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.694975242 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.673959816 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.670561722 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797570805 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.682007174 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.669888948 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.67843913 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.669607481 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.675122093 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.055939263 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.669670722 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.740460942 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671028814 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.674911196 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.912674122 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.670896053 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.671641225 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.503872134 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.871301099 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.763630743 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.672484536 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.675596452 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.67348501 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.888772746 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.671268067 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.671566319 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.671231089 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.671260229 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.799232945 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.674944557 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.794690214 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.671250197 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.165329031 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.674023973 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.670783381 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.672112925 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.068872569 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.286652013 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.674986831 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.673179599 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.670649295 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.671637713 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.67707832 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.034295464 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.913751222 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.672893082 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.673026963 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.685431938 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.671621814 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.863701196 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.671534384 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.44353553 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.689630358 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.792871304 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803582381 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.673394464 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736010513 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764829188 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.672474438 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.674325271 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.674621372 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.673066094 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.673110344 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.754464392 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.674724536 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.79048126 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.684566243 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.673208194 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729305436 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.740918815 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.672773858 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.489818761 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.67671928 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.672335822 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.950539889 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.74271194 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.673712698 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.674349069 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.673919329 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.762114414 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795574715 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.40138107 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.679797972 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.9697388 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.761670152 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.673179118 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.67347097 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.801495577 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.678084227 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75356734 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.681323939 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.67485934 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.708554454 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.673840071 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.686643725 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.673757237 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.044814492 seconds)
  done (took 389.938699857 seconds)
done (took 760.156726185 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.279896886 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.23864693 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.351159605 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.262847051 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.236463767 seconds)
  done (took 12.981786334 seconds)
done (took 14.594565752 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.756550924 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.757645307 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.693446058 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.754549651 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.689743539 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.754686756 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.737727528 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.698264821 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.724966568 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.698800128 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.726811522 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.696353731 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.681892273 seconds)
  done (took 23.984806141 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.899624863 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.89609635 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.746663537 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.896214978 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.720472889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.914901025 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.828967918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.814972765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.813560629 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.684830668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.683465069 seconds)
  done (took 21.515818429 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.90036605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.906867155 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.750003653 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.897012875 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.723622526 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.89739058 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.830537033 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.81921118 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.815204717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.686009509 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.684159007 seconds)
  done (took 21.522499715 seconds)
done (took 68.636653827 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.675594147 seconds)
  done (took 3.287649654 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.693783346 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.848792866 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.674239393 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.674927038 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.674287392 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.676218727 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.676039858 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.676382159 seconds)
  done (took 15.208208801 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.675288622 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.675616225 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.674510727 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.675243067 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.675248177 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.674118643 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.675810683 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.674942078 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.674918749 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.677789449 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.667414513 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.67211904 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.67086298 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.668735992 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.669761961 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.671937671 seconds)
  done (took 28.384955201 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.671007765 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.66983875 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.671198951 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.669222591 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.675889622 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.668004985 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.668990101 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.666871349 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.666107221 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.66985548 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.669126933 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.664020135 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.666187257 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.667588354 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.667112056 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.666677477 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.669527886 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.663377324 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.670521541 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.666233596 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.667576938 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.668987979 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.670256156 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.669605624 seconds)
  done (took 41.648507264 seconds)
done (took 90.142785034 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.479447134 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.285765015 seconds)
  done (took 9.365345854 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.669333706 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.667100738 seconds)
  done (took 5.007382032 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.670401731 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.665525128 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.666304417 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.665980132 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.668196349 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.667022393 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.668366933 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.667068307 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.666129157 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.665596376 seconds)
  done (took 18.267240007 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.665567428 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.6657864 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.66683185 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.667099802 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.664848283 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.665631641 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.66706742 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.665528308 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.667476479 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.667367071 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.668247623 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.668657333 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.666640031 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.6695643 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.667938397 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.667539571 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.667502818 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.666419738 seconds)
  done (took 31.60503091 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.669635022 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.668083507 seconds)
  done (took 4.936652587 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.666862105 seconds)
    (2/7) benchmarking "second"...
    done (took 1.669658569 seconds)
    (3/7) benchmarking "month"...
    done (took 1.663719598 seconds)
    (4/7) benchmarking "year"...
    done (took 1.664388863 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.669696331 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.66478839 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.667127124 seconds)
  done (took 13.266218643 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.669783583 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.824721175 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.885834912 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.320671551 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.667448602 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.668828214 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.580909988 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.666509862 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.67025925 seconds)
  done (took 18.554716607 seconds)
done (took 102.601782631 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.511493667 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.668026424 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.948345769 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.780099887 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.68356683 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.667633068 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.685822539 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.933999513 seconds)
done (took 41.480962895 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.722710257 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.382657628 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.441901936 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.689518945 seconds)
  done (took 15.115122362 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.65869987 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.98802164 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.679421887 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.483955729 seconds)
  done (took 21.408061277 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.025657439 seconds)
    (2/2) benchmarking "read"...
    done (took 2.010435202 seconds)
  done (took 5.631207062 seconds)
done (took 50.479333671 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.659527196 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.660232642 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.659421406 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.659051442 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.659066242 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.657377589 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.65957399 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.657537806 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.65950497 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.660776697 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.659686373 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.661076762 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.66108378 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.658502242 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.658887541 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.659470772 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.660975103 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.659239629 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.661935694 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.658652042 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.659057713 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.65846562 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.660949719 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.660247639 seconds)
  done (took 41.420095692 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.660166314 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.661700842 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.659039432 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.659455203 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.661148635 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.662553683 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.6610433 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.661163843 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.661504891 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.661032147 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.660040679 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.661933069 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.661380284 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.661596747 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.659411175 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.662009721 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.661917174 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.66242809 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.660585655 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.661222998 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.661809854 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.66291011 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.661547251 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.662612261 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.662712784 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.663337831 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.662198878 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.659229839 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.661505052 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.665021222 seconds)
  done (took 51.436755442 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.661063687 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.658556802 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.661823613 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.660708597 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.66030368 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.654694682 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.65834678 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.658584955 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.65832388 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.656789284 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.658984209 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.65691105 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.65767979 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.658749872 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.661876566 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.65858487 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.658825359 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.660311663 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.659524821 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.660138614 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.661721356 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.65906284 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.656768319 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.658206601 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.659741201 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.660662441 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.658551332 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.657072522 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.659094487 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.660177564 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.65826628 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.65969644 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.663052172 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.660158688 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.660481749 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.6622409 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.662408893 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.659033904 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.660995871 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.659919839 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.662077505 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.662175618 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.663196319 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.660055587 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.658005574 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.661868946 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.659430987 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.658815095 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.660335296 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.657752334 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.66379039 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.660642477 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.65896156 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.661648673 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.663734098 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.661756852 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.661551553 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.664652546 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.662733967 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.661528824 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.66295933 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.66276026 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.661698684 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.661112094 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.659800958 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.658910314 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.659814868 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.661640922 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.661943232 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.657395818 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.661324962 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.661960396 seconds)
  done (took 121.129242606 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.663508212 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.662382208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.662249046 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.659848567 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.661801026 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.659993362 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.658551229 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.660961891 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.661729759 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.661465942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.658638782 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.661505349 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.66291858 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.661632381 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.662107671 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.663393615 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.661063257 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.660007132 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.65977445 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.663966773 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.66174737 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.661757892 seconds)
  done (took 38.1433403 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.664323908 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.665370406 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.6605596 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.660624506 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.664601026 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.66330019 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.662123854 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.663038429 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.662968223 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.661173273 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.66310494 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.662279647 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.663044067 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.664175085 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.660284982 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.662315681 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.659501928 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.663694561 seconds)
  done (took 31.518655369 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.664816854 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.66311438 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.66105328 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.66438357 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.6637655 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.665129628 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.664922173 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.663430294 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.66320657 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.661059281 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.663924205 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.661696469 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.660883232 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.664219706 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.662294335 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.661844791 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.664991289 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.662488986 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.662290485 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.664239427 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.663488867 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.665123061 seconds)
  done (took 38.188634488 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.665206467 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.66401453 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.665445893 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.663867416 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.66476271 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.662639556 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.663210693 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.664392979 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.663286155 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.661648086 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.663751624 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.664813501 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.666034875 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.665288864 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.665085103 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.66570421 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.665672722 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.664398581 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.665107996 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.66457534 seconds)
  done (took 34.883732243 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.666488697 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.66629868 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.66525288 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.666941495 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.668917091 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.667092174 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.668362934 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.66509478 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.666905988 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.668608968 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.667562228 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.666852946 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.667768222 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.669314452 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.668060192 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.667603302 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.66601033 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.668410032 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.664913459 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.666842545 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.668042438 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.667678173 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.6659565 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.668542522 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.669106097 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.6668466 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.665979228 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.668366108 seconds)
  done (took 48.279080498 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.666180121 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.668298079 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.669028122 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.664410246 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.666288223 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.665070285 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.66396785 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.666894845 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.665762999 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.664831906 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.666889323 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.665657228 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.667411492 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.665737767 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.666376236 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.666331794 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.667328022 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.668440136 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.667838688 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.665967994 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.668882538 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.664847888 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.667870044 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.668942583 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.667137904 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.668251758 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.668282386 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.671141723 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.669251025 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.667776991 seconds)
  done (took 51.606835348 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.696021885 seconds)
    (2/2) benchmarking "in"...
    done (took 1.691300299 seconds)
  done (took 4.985167718 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.668073218 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.67044736 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.669165029 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.669609983 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.671275259 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.666934334 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.666765223 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.670231284 seconds)
  done (took 14.952496968 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.671028387 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.67033004 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.666670713 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.667840512 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.666941148 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.668512963 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.678625492 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.671224518 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.67030602 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.671773143 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.678592929 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.67892471 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.675113983 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.671588654 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.671894599 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.669570772 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.669804563 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.668611844 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.668701077 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.669189685 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.669368986 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.673590882 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.673624765 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.671687189 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.673130313 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.68296569 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.676226021 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.671055308 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.668825729 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.672741562 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.671744893 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.669121097 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.671490916 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.671440692 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.670305232 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.671729441 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.682052133 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.672765934 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.678421537 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.672437607 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.670713685 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.668333027 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.675076587 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.673654455 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.673501305 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.670102101 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.671038011 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.67004512 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.670758564 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.67383398 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.68026706 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.670733241 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.668582654 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.674478861 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.670752227 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.681307916 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.670048467 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.675011966 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.684428011 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.684865906 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.685542121 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.683445612 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.674572667 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.672207557 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.682683401 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.700668769 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.680622636 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.672504069 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.670800547 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.670472366 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.678897155 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.684243986 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.687527848 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.672720734 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.670472052 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.672485572 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.673557847 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.6698694 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.682549497 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.679034099 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.673990279 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.670621759 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.684632612 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.699991988 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.671398256 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.672162835 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.672827425 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.673551412 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.674596794 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.687566927 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.674584906 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.674365424 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.674900726 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.673704719 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.672562462 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.672064455 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.671819806 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.674986344 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.672014251 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.67443802 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.673374383 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.676016448 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.684419645 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.674652771 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.673490707 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.680963653 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.675172996 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.676205703 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.681522606 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.677575904 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.677999479 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.678838398 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.685845507 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.677025841 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.683354199 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.683413898 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.674720095 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.67838269 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.67445756 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.672479011 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.683208207 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.704103633 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.676145311 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.675533463 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.679977064 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.688887474 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.672511082 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.679547797 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.676033837 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.676027988 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.672596153 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.677562179 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.675299458 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.679401466 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.675071347 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.677850319 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.675828689 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.675906729 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.675735255 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.679052383 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.678452226 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.67816544 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.6790097 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.680273114 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.67622968 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.680995155 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.683486937 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.678040557 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.681106372 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.682207286 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.676925287 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.676148812 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.679541642 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.67639457 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.677037902 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.675636031 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.679492881 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.678132291 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.676544366 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.679082237 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.67608085 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.676695616 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.683478384 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.67521948 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.680020885 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.677335502 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.678054645 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.6765914 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.677378866 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.676515414 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.673220176 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.677609428 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.679844999 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.689147635 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.678134683 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.678955152 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.679505682 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.678181044 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.678677575 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.678428645 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.680544134 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.690267355 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.679540827 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.684350725 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.678848932 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.679255201 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.676713366 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.683339421 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.677392884 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.678425656 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.682022635 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.686179583 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.689306281 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.689451126 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.676349197 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.680622105 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.677305658 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.679622455 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.681992312 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.679421369 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.673805706 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.674483985 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.676836661 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.676742728 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.676612581 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.678620952 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.673659165 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.673085538 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.671138464 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.674389333 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.671606386 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.675177482 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.676039088 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.672760552 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.672844109 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.673104792 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.676066084 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.677829021 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.67165569 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.674741773 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.673205964 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.67419164 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.684434615 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.675619663 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.676278821 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.676953903 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.676969893 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.676344949 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.6753255 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.677362407 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.676820252 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.682020801 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.67564343 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.674124887 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.684127099 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.673865353 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.674199458 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.676748562 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.675763972 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.674072406 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.681494322 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.681419092 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.672208399 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.674039634 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.673680226 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.675652927 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.673842021 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.681385693 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.674410607 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.675877686 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.673305361 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.675778111 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.674923502 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.672208282 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.676355259 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.675895973 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.676667994 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.674233461 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.674817465 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.668998123 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.674713179 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.673678223 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.674410807 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.678192476 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.683706819 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.676791616 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.674890493 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.677104721 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.676031142 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.678039322 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.671940056 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.673815775 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.674656907 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.684642718 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.681551762 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.680012189 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.678232095 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.672409479 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.679517171 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.67330956 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.676626615 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.673581857 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.681938687 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.671755174 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.67544919 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.670950349 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.672120598 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.67219249 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.679749784 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.672823051 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.672830431 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.670188004 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.670165452 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.668785864 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.675238679 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.667693618 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.668632477 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.668067889 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.670757922 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.670826413 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.673220487 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.66643797 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.674248854 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.668822212 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.668291471 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.666356299 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.674223232 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.668602471 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.667681833 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.664799827 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.670660356 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.675303597 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.675600691 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.676723011 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.669087403 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.67562856 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.666809994 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.668452156 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.675734315 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.66540681 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.665206822 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.670346897 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.666425515 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.6761127 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.667582948 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.669246044 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.671331909 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.666780764 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.668025983 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.666047609 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.6758944 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.665212024 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.665844507 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.677328191 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.667835743 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.673025884 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.673237674 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.665777173 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.665767697 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.668416413 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.66781956 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.671559934 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.673598717 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.668788738 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.667599215 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.668455874 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.667525893 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.667219012 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.673080389 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.665342935 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.666710351 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.676129443 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.669513085 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.670577081 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.672020718 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.676096582 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.669582785 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.677003638 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.667136838 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.667973584 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.668804253 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.667671475 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.670534159 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.666545709 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.669406588 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.667541728 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.669052453 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.670047103 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.668186404 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.669282517 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.669636632 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.66729638 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.668943779 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.676463065 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.689352995 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.669927522 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.67124441 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.667681138 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.672119768 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.672005679 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.667341994 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.667472574 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.672405102 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.679514714 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.677069251 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.669311372 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.668332227 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.671705313 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.668548647 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.668995842 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.671044034 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.669351322 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.668736826 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.66866441 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.668584457 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.673628051 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.672384539 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.670619149 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.671195394 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.671214089 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.681222646 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.669893656 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.675512063 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.6714535 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.668009684 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.67134867 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.670992813 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.67014665 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.676268556 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.671285572 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.671021052 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.677974786 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.676673884 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.673922811 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.675261923 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.672178274 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.671020196 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.67052417 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.670347407 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.67071926 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.678123667 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.673353995 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.670353798 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.672101976 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.670278368 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.667450872 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.676145932 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.669818243 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.67266432 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.678612568 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.671889105 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.669392859 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.673358975 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.669882548 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.669541149 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.6700432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.678224965 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.674582978 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.687622391 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.678843054 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.67377924 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.670571006 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.674539804 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.678745451 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.673126989 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.672031868 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.670479892 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.673767865 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.672226775 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.674826877 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.672974326 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.678659012 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.672485556 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.671595335 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.682695 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.676743452 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.673565608 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.672334175 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.676099503 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.67386937 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.670049715 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.67279942 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.673864424 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.679872039 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.675775537 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.671402243 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.67570505 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.671277542 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.677478055 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.674669092 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.673094993 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.674892369 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.672284632 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.677467571 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.675624025 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.671409086 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.672794949 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.673643829 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.673849137 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.673746232 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.683275097 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.66888266 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.674716372 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.670413554 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.672691357 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.670828069 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.675737236 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.670989566 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.670044016 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.673084442 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.671332083 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.673052007 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.681565317 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.670720355 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.672151299 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.674378744 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.671584945 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.674916799 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.68777229 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.678323453 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.671052855 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.674973396 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.672782143 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.676426575 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.677630533 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.672212279 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.672542395 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.675642888 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.670669902 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.672061651 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.674241115 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.675208288 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.688928043 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.672557873 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.672811393 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.673886269 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.679525699 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.673146204 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.671110155 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.673069987 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.677223155 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.675386563 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.681285909 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.672792823 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.680556966 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.675814919 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.672303199 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.675672212 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.676721294 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.680587065 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.675777855 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.672312256 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.672780836 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.678337312 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.68862191 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.673211014 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.682132917 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.701819996 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.675933711 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.674591843 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.674243276 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.674764691 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.67421588 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.675523753 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.673903691 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.67406209 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.674093186 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.673941708 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.675237497 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.679439961 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.676472546 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.673364068 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.673401337 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.674453756 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.676677269 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.673888856 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.674337536 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.673773551 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.67352391 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.673842467 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.674398367 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.675070985 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.685468576 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.684322043 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.673734568 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.675181436 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.674006747 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.677812524 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.678045961 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.685778927 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.680815698 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.675434414 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.675519267 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.677697938 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.674041713 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.674827945 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.67721871 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.677087533 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.676929213 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.67578719 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.686261164 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.682360945 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.681911803 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.677434751 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.676427639 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.676608331 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.677337688 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.675513274 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.676085517 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.678516705 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.677131692 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.679953065 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.676478047 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.677407158 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.679724103 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.68235056 seconds)
  done (took 999.869436851 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.676003194 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.677178938 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.676524788 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.677323538 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.676427463 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.676828116 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.676917797 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.676102075 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.676233931 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.676648574 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.676904882 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.676578772 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.67706272 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.67639822 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.677695967 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.67955854 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.678666829 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.680110098 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.677022888 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.677202684 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.67733954 seconds)
  done (took 36.828003913 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.677100996 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.677121271 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.677657315 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.677882965 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.677255384 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.676543234 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.677344397 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.676906108 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.678766021 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.678087607 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.677268355 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676946839 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.676961718 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.677573195 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.677583393 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.676246606 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.676881542 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.678046601 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.676779595 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.679484591 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.67697808 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.677915729 seconds)
  done (took 38.511712503 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.680762106 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.678938627 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.679109146 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.678286272 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.679329747 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.678729394 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.677469451 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.679200464 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.678281497 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.680551739 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.679756562 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.68272491 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.685078178 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.684984648 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.682523679 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.679087577 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.824392823 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.681263592 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.679493452 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.679567475 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.678781559 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.685947064 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.679851037 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.681608591 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.679571563 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.67930011 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.678592807 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.679095158 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.679724627 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.682825748 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.682724426 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.67893608 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.681114351 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.682263483 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.680125465 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.683088104 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.682943124 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.680348277 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.680504096 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.680285877 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.689775975 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.700817504 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.679634269 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.686852032 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.679905673 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.679286053 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.687493528 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.687889053 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.679770616 seconds)
  done (took 84.150269739 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.680495018 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.679388835 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.682650705 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.679776189 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.680753293 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.67981142 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.679875 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.680242898 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.683268521 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.680950478 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.68138113 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.68147292 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.679632541 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.68036116 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.683965788 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.681380688 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.681327125 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.681609224 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.680493162 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.681209166 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.683422957 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.682025975 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.681788547 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.684522576 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.683189451 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.682639423 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.685881476 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.680690406 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.681647874 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.682226341 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.681927502 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.682489712 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.687075108 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.680551988 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.680589007 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.680927955 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.680975758 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.680800398 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.682314926 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.681155956 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.680032828 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.681293392 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.679848633 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.680254291 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.682637987 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.680594477 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.680433015 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.680939636 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.680789717 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.681512543 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.682073712 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.680695082 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.680291449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.681587594 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.68074009 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.681977971 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.68530846 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.681008502 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.680275212 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.681844355 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.680103626 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.681289864 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.687430558 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.68163139 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.683194683 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.682485325 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.681453318 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.682392093 seconds)
  done (took 115.965150983 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.681779927 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.682757952 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.683511828 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.681713609 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.682198817 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.686714202 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.682567091 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.683138208 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.682818691 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.683073047 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.682705983 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.685164056 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.684333026 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.683644804 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.684331626 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.683568175 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.684656929 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.688806431 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.68469244 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.683054151 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.684344288 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.684366993 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.684161295 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.690139286 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.686467163 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.684506547 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.685738174 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.685542537 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.684037131 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.686755372 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.685420526 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.685258313 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.68581164 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.685789379 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.68565087 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.687279084 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.68543781 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.685826601 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.684838721 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.684715008 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.689817706 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.683476226 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.68563301 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.684733594 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.687278899 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.684749 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.689401546 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.681694905 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.686153568 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.685291108 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.688021203 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.686426487 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.689338266 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.685393536 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.687732024 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.687999441 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.68781766 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.686331616 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.68869674 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.685485357 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.684672604 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.68601146 seconds)
  done (took 106.108119363 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.687409979 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.693310108 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.687745126 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.686017242 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.688075236 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.688581856 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.686268793 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.692466402 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.688221799 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.689884843 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690378851 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.689855343 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694213766 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692076224 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.688904546 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.6889093 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.686004293 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.687762732 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.688776698 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.692218006 seconds)
  done (took 35.4029615 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.687365006 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.686798395 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.687407741 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.688109895 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.694609874 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.687467998 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.689147395 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.687016389 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69001139 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.685155062 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.692017787 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.687117928 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69049786 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.68678737 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.690865818 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.687245129 seconds)
  done (took 28.639398699 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.691021074 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.690803023 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.688208943 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.687464554 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.688867578 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.692943211 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.689274374 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.685434313 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.691810496 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.689129884 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.687397647 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.69739381 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.689456063 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.691935315 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.689700255 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.689389966 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.688484495 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.688918896 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.687966158 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.692398593 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.684969921 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.689872804 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.688582112 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.691353095 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.690330512 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.69342367 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.692141043 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.689399998 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.693686029 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.683748113 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.690662115 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.691169816 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.694091146 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.689980148 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.689054342 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.688378438 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.690169786 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.688392913 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.687277232 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.689662259 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.693005044 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.688887933 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.688956542 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.689751962 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.687880375 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.689028594 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.692349486 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.687027433 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.68813571 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.688957937 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.691071161 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.690012807 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.690613421 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.690043758 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.69088243 seconds)
  done (took 94.563951421 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.68904319 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.689519075 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.69034153 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.691916062 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.6901571 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.693203059 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.689317269 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.690473197 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.693128238 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.691067956 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.688872252 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.693222059 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.691956912 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.69195139 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.695278724 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.691284528 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.695189711 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.691112684 seconds)
  done (took 32.065705038 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.693504369 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.696317878 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.69088087 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.688268516 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.6923319 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.69182795 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.691100678 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.691436045 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692034121 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.693133477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695065957 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.694252083 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691004692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.692054873 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.693121337 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695505636 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.692588054 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.693676626 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.692286768 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.695259425 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.69171808 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.691858705 seconds)
  done (took 38.860516305 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.694806423 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.692648655 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.710279828 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.714119528 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.713991404 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.723507877 seconds)
  done (took 11.871136715 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695146924 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.692146843 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.691997769 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693740793 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.691969762 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693216899 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.691184204 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695063994 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692465005 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69655911 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693867593 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697358448 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697219777 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694790553 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.691061816 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692791519 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.69399209 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694164737 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697936681 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692653584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701072931 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693327598 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694812044 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695756415 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698721079 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694444411 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698766487 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.692531134 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699360418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.697615074 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7000407 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.693524243 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693762698 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694816653 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694553063 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.692862642 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696828898 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693045342 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695218137 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693447452 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.69495205 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694607186 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694981867 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693930237 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69211871 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.692877158 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.692672843 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696565178 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694768758 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696890836 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694711246 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.692910414 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694766121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.69483389 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697759291 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694209732 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69505941 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692906992 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693354425 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699393912 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.691286502 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693595224 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694397824 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696668727 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695190113 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696050727 seconds)
  done (took 113.478526051 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695305785 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.694715204 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696863665 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695890562 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695922303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692236858 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696399822 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694992962 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695577592 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695501099 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701880639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69498617 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694812114 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694725397 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695188257 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695005566 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.700018469 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695527609 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696600274 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700029273 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698265084 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695728451 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702745755 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699876951 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699410548 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698346009 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698698845 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702391412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700851855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695852565 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699354863 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697014848 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695260315 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.699852211 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698790553 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700055504 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698574116 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700599905 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698108725 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696163216 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698859263 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695856455 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695996631 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697746228 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697877891 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69666331 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701656524 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701128103 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701050318 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700327091 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702028678 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701685847 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701112702 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702549604 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701602782 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700281669 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701713609 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700723192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701215058 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700137194 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701206851 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702731021 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70391355 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702381964 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704994637 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704584743 seconds)
  done (took 113.745608956 seconds)
done (took 2328.202375667 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.755249389 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.765491268 seconds)
  done (took 15.152656811 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.862508162 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.812187033 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.697051029 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.744697355 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.696102004 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.720093989 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.72037145 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.696056012 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.698949591 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.6985893 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.698096335 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.886232268 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.722960891 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.696459671 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.698534018 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.793310388 seconds)
  done (took 49.475405354 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.700140363 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.700517776 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.708910849 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.70203778 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.700144965 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.713432091 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.733038028 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.703459199 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.734115767 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.709420016 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.767347276 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.706525547 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.701683444 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.748732947 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.710577028 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.714364774 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.793755153 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.770773489 seconds)
  done (took 32.64841078 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.776066748 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.704866733 seconds)
  done (took 10.116213073 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.721744329 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.709899304 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.746018343 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.715569528 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.718951821 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.729589251 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.715590498 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.713502356 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.737542031 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.723111319 seconds)
  done (took 68.863030725 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.706003905 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.703178364 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.701807358 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.702626778 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.698675745 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.700113604 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.700389861 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.705434567 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.346317219 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.732276768 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.708913754 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.706993912 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.704125761 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.702763407 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.699668975 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.724753324 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.816079409 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.699557294 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.699881899 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.707733835 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.701784259 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.757855494 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.714403536 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.704794066 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.731297834 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.351969731 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.705576284 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.70912636 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.835512456 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.704020734 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.701446671 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.888480308 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.704724906 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.172919964 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.960119277 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.707176866 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.711404517 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.711158841 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.701647454 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.823296443 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.702858451 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.707544967 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.623885373 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.939537153 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.795791531 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.746628156 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.009797948 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.7141519 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.704099441 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.73330956 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.704181867 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.705641007 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.716289037 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.208328348 seconds)
  done (took 123.510553171 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.700901313 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.042382245 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.865549494 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.704004508 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.981455869 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902353038 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.702411419 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.746305764 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.700754332 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.925299484 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.951810921 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.800748384 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.699658833 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.702154882 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.699046989 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.699758836 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.853872007 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.767938433 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.701285774 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.702450643 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.728718981 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94072385 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.818469043 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.703033793 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.727073126 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90848269 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.823581141 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.79956304 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.494789488 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.702435802 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.763225277 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.701461357 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.702889955 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.703157256 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.855315434 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.791777009 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.78440566 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.701812934 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.706020699 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.700091104 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.360673628 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.900633511 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.793132556 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.82887 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.952143122 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.902969341 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.478514044 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.703353542 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.439812961 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.866800082 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.930477456 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.931025449 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.818638372 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.702062115 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.047555308 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.703980825 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.704492507 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.95109874 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.919494199 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.793007499 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.701548268 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.701802051 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.701148092 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.940722974 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.700759092 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.793282978 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.702059459 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.700028052 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.79957763 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.795917779 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.927644722 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.909758992 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.728224274 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.060015075 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.221365875 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.947109796 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.763003644 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.948220066 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.701203394 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.702278723 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.778631489 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.537345063 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.954419967 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.94115892 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.942222252 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732367824 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.420820954 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.704015868 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.927183282 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.920700495 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.957765926 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.950306855 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.933686349 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.036306619 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.703120799 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.707624687 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.945822902 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.826048783 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.703070111 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.045924667 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932218895 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.224187335 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.729773909 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.002039953 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.83672927 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.703701764 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.332769003 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.704278513 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.930113427 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.74311261 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.70502842 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.706772256 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.918774225 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.689355576 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.705775662 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.360329181 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.764149244 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.705458845 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.935819747 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.705503532 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.970371067 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.705894584 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937309408 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.208772736 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.735291212 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.877181209 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.949766946 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.705215777 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.942598261 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.94405687 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.81775976 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.919051878 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.414172376 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.704452958 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987401481 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.709512756 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.706174814 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.873942344 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.707212776 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.845887156 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.704919546 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.996999011 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726156747 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937246608 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.707024177 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.954390071 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.738089845 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.754846446 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.709051106 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.825143048 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.710161634 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.632457852 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.861188582 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.710790377 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.705346407 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.263305548 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.704802031 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.853660981 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.930376273 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726583778 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.775515949 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.370219066 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.706335841 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.786370104 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.728460707 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.089340361 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.70516226 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.957319893 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.706537692 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 7.122834481 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.707422141 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.94006921 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.890982575 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.710474689 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.703928693 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.61245484 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.707567266 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.706937134 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.887838749 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.170863851 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.706936203 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.910263495 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707899631 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.835012213 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.707226169 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.780870684 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.039974562 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.707238149 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.708345295 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.709202321 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.708996533 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.710672483 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.91677273 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.731734411 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.199492641 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.844159244 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.978291075 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.02000973 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.949654117 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.747444492 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.713047159 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.95763974 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.708825608 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.766223816 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.707640957 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.730550709 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.933656991 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711105483 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.917411827 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.974278975 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.554306234 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.754597797 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.709202841 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.708520003 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.706209118 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.853192448 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788883056 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.70845892 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.710460985 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.822136268 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.825768308 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.915040938 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.711702918 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.770526212 seconds)
  done (took 865.810679473 seconds)
done (took 1167.214029877 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.711528183 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.707342525 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.710092291 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.710396941 seconds)
  done (took 28.478792984 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.712560981 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.712014668 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.711939377 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.711993563 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.714726339 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.712054331 seconds)
  done (took 11.91722913 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.73536492 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.706650853 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.711428299 seconds)
  done (took 20.793759247 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.785648461 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.088005339 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.840441906 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.117361426 seconds)
  done (took 9.474037478 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.715934681 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.71237896 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.714550386 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.711364081 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.71453674 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.712925449 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.713559115 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.714612819 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.716533616 seconds)
  done (took 17.069590865 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.770897503 seconds)
done (took 93.145588466 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.823003918 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.786216806 seconds)
    (3/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.125673176 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.819546901 seconds)
    (5/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.955994536 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.41380854 seconds)
    (7/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.724033199 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.73904133 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.847177535 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.955821477 seconds)
    (11/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.727125873 seconds)
    (12/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.922972216 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.393146813 seconds)
    (14/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.643116189 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.969383443 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.892909175 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.048311866 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.835114052 seconds)
    (19/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.807628472 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.754519725 seconds)
    (21/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.729743187 seconds)
    (22/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.47904698 seconds)
    (23/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.020878042 seconds)
    (24/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.858355824 seconds)
    (25/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.861323221 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.815387103 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.972702991 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.733583835 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.861926754 seconds)
    (30/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.750912703 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.727989327 seconds)
    (32/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.173063792 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.978473642 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.752612754 seconds)
    (35/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.658896788 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.73309498 seconds)
    (37/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.31739049 seconds)
    (38/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.183736829 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.627137397 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.906699675 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.102286905 seconds)
    (42/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.997932458 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.837548596 seconds)
    (44/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.728693522 seconds)
    (45/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.42180555 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.792573897 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.733465377 seconds)
    (48/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.825943531 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.730414497 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 1.95629649 seconds)
    (51/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.884464569 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.728913323 seconds)
    (53/309) benchmarking ("map", abs, Bool, true)...
    done (took 3.626125056 seconds)
    (54/309) benchmarking ("sort", Int64, false)...
    done (took 5.421582985 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.507997449 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.983232705 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.080926283 seconds)
    (58/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.86858788 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.88452681 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.751270878 seconds)
    (61/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.90989511 seconds)
    (62/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.731670742 seconds)
    (63/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.88521174 seconds)
    (64/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.808537288 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.817116933 seconds)
    (66/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.888404112 seconds)
    (67/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.736013314 seconds)
    (68/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.040011579 seconds)
    (69/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.857468764 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.752758635 seconds)
    (71/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.728933232 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.519144445 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.1968374 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.733362809 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.864152963 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.112382782 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.111808983 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.734643396 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.853993925 seconds)
    (80/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.23782703 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.632967529 seconds)
    (82/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.814031223 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.851898174 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.734294083 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.13290907 seconds)
    (86/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.097232913 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.929649807 seconds)
    (88/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.81545381 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.83361996 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.697563323 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.081975188 seconds)
    (92/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.812707884 seconds)
    (93/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.734496224 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.382894552 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.764301939 seconds)
    (96/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.754890052 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.732732836 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.904440714 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.985173304 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.670747861 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.762215202 seconds)
    (102/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.833328626 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.889508946 seconds)
    (104/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.903724515 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.735026744 seconds)
    (106/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.842005734 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.771352407 seconds)
    (108/309) benchmarking ("sort", Int8, false)...
    done (took 4.629617406 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.083318534 seconds)
    (110/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.896982652 seconds)
    (111/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.740818212 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.038782012 seconds)
    (113/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.734614116 seconds)
    (114/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.754366868 seconds)
    (115/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.86637915 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.667403591 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.86927935 seconds)
    (118/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.735931518 seconds)
    (119/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.851452041 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.223579663 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.478374055 seconds)
    (122/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.764987265 seconds)
    (123/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.733397825 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.999935647 seconds)
    (125/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.905950628 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.984523401 seconds)
    (127/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.513643045 seconds)
    (128/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.030694241 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.835589222 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.860601684 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.343583175 seconds)
    (132/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.946854483 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.984094989 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.845268141 seconds)
    (135/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.100807399 seconds)
    (136/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.045929014 seconds)
    (137/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.763081167 seconds)
    (138/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.810349249 seconds)
    (139/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.733252471 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.211450826 seconds)
    (141/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.561572413 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.738233664 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.820583055 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.280133918 seconds)
    (145/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.632414477 seconds)
    (146/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.04760658 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.044267848 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.670241282 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.751005034 seconds)
    (150/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.750758887 seconds)
    (151/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.223837593 seconds)
    (152/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.824899243 seconds)
    (153/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.111422025 seconds)
    (154/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.630778077 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.739045275 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.904714897 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.764676092 seconds)
    (158/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.811322733 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.737032461 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.874777577 seconds)
    (161/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.921937774 seconds)
    (162/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.993702498 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.055384916 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.759949703 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.736868714 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.752503058 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.070733745 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.8841269 seconds)
    (169/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.184521373 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.930533233 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.741471186 seconds)
    (172/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.537443202 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.858951121 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.733148313 seconds)
    (175/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.448434717 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.127398977 seconds)
    (177/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.736788205 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.128009689 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.819682487 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.9778709 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.546062322 seconds)
    (182/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.735458262 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.790879828 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.196150637 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.738853296 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.227403003 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.75129712 seconds)
    (188/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.992096586 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.87730043 seconds)
    (190/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.7353959 seconds)
    (191/309) benchmarking ("sort", BigInt, false)...
    done (took 8.187858201 seconds)
    (192/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.739958179 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.857412453 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.187870095 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.894786642 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.804222293 seconds)
    (197/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.77337527 seconds)
    (198/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.882993153 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.045376425 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.742152422 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.92361843 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.933464178 seconds)
    (203/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.751527124 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.115514556 seconds)
    (205/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.052022922 seconds)
    (206/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.000308075 seconds)
    (207/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.743186608 seconds)
    (208/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.38616091 seconds)
    (209/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.390550765 seconds)
    (210/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.740044883 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.217647639 seconds)
    (212/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.18209449 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.737640578 seconds)
    (214/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.113351781 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.881377309 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.846123104 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.296470104 seconds)
    (218/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.749108045 seconds)
    (219/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.901482373 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.384866924 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.926467898 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.736641297 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.851146184 seconds)
    (224/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.002823501 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.74636851 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.852433676 seconds)
    (227/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.768773186 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.970240644 seconds)
    (229/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.950529814 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.747470907 seconds)
    (231/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.038548066 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.748751657 seconds)
    (233/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.74025938 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.519014491 seconds)
    (235/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.943193442 seconds)
    (236/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.054797839 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.747664335 seconds)
    (238/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.916682142 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.864263672 seconds)
    (240/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.632609635 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.74286356 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.829685585 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.104926241 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.118753281 seconds)
    (245/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.748629623 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.741041777 seconds)
    (247/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.004361556 seconds)
    (248/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.808182858 seconds)
    (249/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.073819045 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.747501982 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.741191005 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.854807965 seconds)
    (253/309) benchmarking ("sort", Float32, false)...
    done (took 5.478643031 seconds)
    (254/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.967543536 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.082670835 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.846704386 seconds)
    (257/309) benchmarking ("sort", Float64, false)...
    done (took 5.470898514 seconds)
    (258/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.988416121 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.743475725 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.887843585 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.367217931 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.839148837 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.741460637 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.942013073 seconds)
    (265/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.359562308 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.871052003 seconds)
    (267/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.742842907 seconds)
    (268/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.889196428 seconds)
    (269/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.765962546 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.072967146 seconds)
    (271/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.431106639 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.756315514 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.757464473 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.069327139 seconds)
    (275/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.029681397 seconds)
    (276/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.857090328 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.745457874 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.823254268 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.03642364 seconds)
    (280/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.145555144 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.542333629 seconds)
    (282/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.075283473 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.745041845 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.175525189 seconds)
    (285/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.141300451 seconds)
    (286/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.836774892 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.065866034 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.745314714 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 3.387244894 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.509017066 seconds)
    (291/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.757592957 seconds)
    (292/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.955180714 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.094298765 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.742696058 seconds)
    (295/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.487325678 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.779712727 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.031468642 seconds)
    (298/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.853655042 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.83354154 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.746919431 seconds)
    (301/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.840893916 seconds)
    (302/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.744501553 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.953981393 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.061653572 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.904467959 seconds)
    (306/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.761179626 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.077624928 seconds)
    (308/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.942013908 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.855117188 seconds)
  done (took 966.479290129 seconds)
done (took 968.421025668 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.768176165 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765314285 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.746639581 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.768788062 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.860833935 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.79409467 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.759296286 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.749808887 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.799206407 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.796306977 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.744510724 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.790906687 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.746559756 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.746078349 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.747595117 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.76309642 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.058996603 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.777445703 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.765323213 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.760421428 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.765024433 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.744091809 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.796544141 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.791707497 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.75083679 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.752908791 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.751950832 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.765864775 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.860090018 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.750059457 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.753396687 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.761390498 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.05966019 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.776072996 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.747207857 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.768136581 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.759583981 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.75817435 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.751080237 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.779273743 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.141110444 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.786643349 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.74892498 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.747011797 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.748765918 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.755053265 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.747694507 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.759342738 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.763918757 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.765344165 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.136978856 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.802460821 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.751909617 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.75027575 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.76290597 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.749661358 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.75443621 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.766360121 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.767513537 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.765420848 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.04328602 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.786925778 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.752693016 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.76614208 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.7582992 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.174595998 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.786571171 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.757377342 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.143524908 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.797897314 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.175359568 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.797527061 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.75248695 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.76461095 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.782868811 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.063063186 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.777761661 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.750027155 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.758495428 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.749074307 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.765506167 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765721318 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.754046365 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.74995085 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.766625668 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.796783203 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.765262328 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.751124994 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.760683185 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.770651179 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.759648879 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.764651871 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.754519054 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.749069803 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.763095142 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.754569115 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.75242313 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.756950652 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.754571113 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.763160168 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.14453029 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.804740571 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.748427787 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.749081926 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.750593757 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.766068332 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.145962953 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.790322016 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.777357021 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.802618232 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.751609165 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.04677039 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.783674327 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.768248894 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.766440808 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.755099708 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.750284165 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.046473962 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.172189226 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.806364824 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.752948566 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.748609126 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.769106983 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.753190306 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.750043722 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.065777898 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.783373421 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.770081044 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.876877879 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.766408518 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.788632172 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.752258561 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.755390875 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.805387099 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.771616588 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.787185162 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.756956684 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.77028038 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.771136534 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.748379042 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.767387818 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.768088503 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.752956376 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.760409302 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.749965804 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.804244339 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.769085529 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.773276755 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.774928409 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.876406667 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.750151197 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.048864492 seconds)
done (took 275.826665101 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.834039573 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.752519835 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.846453929 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.752777205 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.844464775 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.828572639 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.755341763 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.754623357 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.754547333 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.252933605 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.753628923 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.757403355 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.755300418 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.753001417 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.825774203 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.753052395 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.752931114 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.198431804 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.753538014 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.835929243 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.755184974 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.748958939 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.752941431 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.24678808 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.753601381 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.754067105 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.834966698 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.754969672 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.197634362 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.754277581 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.750967841 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.196781714 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.835000346 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.777268317 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.766652942 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.758802962 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.847691721 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.762805683 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.822529351 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.82804718 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.845083251 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.787072348 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.751658795 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.755201131 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.757664174 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.758938913 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.755368204 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.788031088 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.754333533 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.762078904 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.200607105 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.76220484 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.760570915 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.758738719 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.755847184 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.784949973 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.755931075 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.755793026 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.839648709 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.758061488 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.826733501 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.249333164 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.255350269 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.755730671 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.757869995 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.758230277 seconds)
  done (took 177.546945972 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.822558478 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.832805262 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.820153379 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.759703108 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.803028284 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.823159486 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.756959793 seconds)
  done (took 14.299387487 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.762829434 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.755334296 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.803732169 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.804484704 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.756382061 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.91109932 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.756133038 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.767204248 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.760836956 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.784863059 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.756598525 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.754775501 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.762788355 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.755418567 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.805572089 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.768102797 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.872067694 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.758935051 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.756516877 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.903966366 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.765765201 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.76229871 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.779160354 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.769689443 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.756763564 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.765975691 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.332227757 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.756693549 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756551801 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.756838007 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.757355231 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.797128719 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.758130986 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.755081001 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.757783254 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.872541151 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.758283915 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756721715 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.756605403 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.757127132 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.758523442 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.758225129 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.756193842 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.756487711 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.756994107 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.78146005 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.756803176 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.756521905 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.757881784 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.757946152 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.783455188 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.75796784 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.755554678 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.763565697 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.800107652 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.765675821 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.758124628 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.759259022 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.757555205 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.757177269 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.905357572 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.807116965 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.759848637 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.80857524 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.757740723 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.758653352 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.756935698 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.758119184 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.845839457 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.759927749 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.808144166 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.758258756 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.917172525 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.78197811 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.759622193 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.762320386 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.761933765 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.760610349 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.759429237 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.766009637 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.759572231 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.762941172 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.766592737 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.764312854 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.760464141 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.872171159 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.897842479 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.756112906 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.759240238 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.766346422 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.758331436 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.803221219 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.757134836 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.761166608 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.814781423 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.874635672 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.787044254 seconds)
  done (took 194.802089611 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.767757736 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.764242994 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.761576825 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.77799795 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.760812201 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.761874763 seconds)
  done (took 12.278019046 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.75990257 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.763154377 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.758092481 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.759523036 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.759699188 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.760138289 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.760233479 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761629309 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.764579152 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.757980046 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.761721267 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.760824661 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.759879834 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.75909734 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.759679861 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.758283616 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.760184222 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.759819673 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.761894404 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.759400306 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.01675294 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.760015782 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.759140164 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.763302449 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.763839973 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.759285813 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.7751661 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.764172508 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.761122013 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.768629597 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.765583414 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.762731366 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.765760559 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.769526845 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.764799145 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.766787222 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.767042679 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.76201227 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.76217045 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.761301446 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.764098501 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.761889837 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.761072189 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.764173857 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.766732449 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.770145611 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.767240217 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.776859877 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.76277696 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.762508392 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.759519567 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.762033315 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.76406859 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.762318779 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.769606375 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.769011847 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.765672916 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.762372998 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.761998612 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.766574396 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.766697487 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.764563193 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.765791756 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.765283978 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.770648006 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.764169701 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.766763585 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.763593768 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.762046662 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.762678476 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.76453174 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.763991525 seconds)
  done (took 129.914253378 seconds)
done (took 530.541513233 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.004995916 seconds)
  done (took 8.692073857 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.798674241 seconds)
  done (took 8.547969603 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.241437532 seconds)
  done (took 9.934691611 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.777945981 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.804482318 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.773593011 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.760775975 seconds)
  done (took 28.831408875 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.020455895 seconds)
  done (took 8.709589688 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.789008801 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.759382969 seconds)
  done (took 15.309437252 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.843367631 seconds)
  done (took 8.532931541 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.065982419 seconds)
  done (took 8.766663776 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.773174736 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.782873715 seconds)
  done (took 15.269288386 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.765343197 seconds)
  done (took 8.455432749 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.986105085 seconds)
  done (took 9.780938246 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.784478319 seconds)
  done (took 8.547405905 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.786124567 seconds)
  done (took 8.478120002 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.815802973 seconds)
  done (took 8.50873569 seconds)
done (took 158.057416422 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.770071119 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.762286788 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.765369615 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.760304512 seconds)
  done (took 28.748127486 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.79908408 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.798205522 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.79918611 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.809850329 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.801483012 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.799844693 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.792920731 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.789886354 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.811517567 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.800583825 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.799664321 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.800411671 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.799924711 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.790353892 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.802617595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.800857728 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.809541584 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.799625392 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.790752753 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.801313147 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.765960232 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.809574073 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.803697644 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.766014134 seconds)
  done (took 44.834335745 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.957432295 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.837910335 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.919670346 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.818749257 seconds)
  done (took 9.22537748 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.816806645 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.821143451 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.829006598 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.867453096 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.893573636 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.828110979 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.790535681 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.784771018 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.772766847 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.82068675 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.893762754 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.812359435 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.903640706 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.764895328 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.946619581 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.764067523 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.765109374 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.817866613 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.869348604 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.881831754 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.767642456 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.815030208 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.821015802 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.814471503 seconds)
  done (took 45.555950027 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.766104664 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.775853146 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.775847205 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.769324464 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.7679049 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.769085639 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.775267273 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.770113495 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.79189833 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.769693557 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.766172388 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.770604891 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.773913457 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.768413057 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.769601737 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.781393102 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.782543587 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.768989033 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.771287079 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.773872176 seconds)
  done (took 37.151327521 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.765500381 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.612807366 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.11216371 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.019594673 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.768354528 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.769925249 seconds)
  done (took 30.741701585 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.779780856 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.775072077 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.770207492 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.824606334 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.90882429 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.776665344 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.768122811 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.779184894 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.815019201 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.832435928 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.786182382 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.793032463 seconds)
  done (took 23.305229552 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.768231932 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.769433604 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.76599113 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.779642395 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.77789593 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.775397743 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.776882337 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.766794689 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.779780886 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.787910018 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.776426587 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.780287864 seconds)
  done (took 43.004526013 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846505863 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.642919934 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223015488 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231936771 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289263373 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968764535 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.770406655 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851868224 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.768481299 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.038678188 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.120982708 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973718905 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01172743 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.516436908 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.769632443 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.258712232 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063835927 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981206565 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798509894 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386259644 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882125241 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288886565 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.44888496 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.883723507 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969306761 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.894067593 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.027202146 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.720201562 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81899099 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773418956 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778076323 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.77070295 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.041957706 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890009196 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841503159 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773875564 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.186755377 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.471420957 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.776403773 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.447940657 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.310293155 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88913979 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773209363 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766678191 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.695704569 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28550855 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857870455 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.773526967 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.468356885 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.771790665 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775987466 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844406491 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.770769975 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.579936472 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454867484 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.036944322 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.772870706 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773956363 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.322951986 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777170859 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385393434 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.702682946 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.864571 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.458470077 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227962727 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.929006544 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.771499035 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774522787 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.696717626 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.452623571 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890539097 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909233053 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.785905954 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411085375 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053573483 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.19529437 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824676596 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04322124 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.573158102 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.700967888 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988305934 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.717847178 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698178417 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.60431133 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.699217239 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985412254 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807361367 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.380908735 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811791921 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.855390304 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.777513155 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787961205 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774684395 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987836677 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.666708529 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774038754 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.07347277 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025558756 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786164032 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.858160716 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700793742 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.77148312 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018203854 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.977406064 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.016359169 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.258600832 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866787141 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.712204196 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.784200496 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.703534674 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.778461066 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.043811996 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834357793 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784208933 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89571701 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.720814779 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02624994 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764623261 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.871187909 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.137927793 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.014269928 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.122934947 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.024026871 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835446755 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.780112367 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.776066851 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.47090634 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390530598 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.992767512 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.787095768 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270222734 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778682582 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.775773757 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712965404 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.392982882 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.15278675 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.858468825 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989051285 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.73764227 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046069508 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701361191 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910151034 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.759070587 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.986333305 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.425377197 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.859757016 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023646986 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.027964249 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.014942582 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783133154 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792509596 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871192277 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793898484 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.205936605 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.019434849 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.776656011 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.777704112 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.472202775 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.834829111 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778550607 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.779322039 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302629989 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048309533 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.80059533 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.783343897 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.652697252 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.788440269 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836770541 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77911995 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783001314 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.292385386 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.278152599 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.783861939 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.415995586 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988893862 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780513636 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.457186977 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966530476 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.785690394 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044611185 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842923944 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.70520446 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.477761245 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.47938222 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778848002 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.706683906 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.779313873 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782059205 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78738527 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.966756308 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.049805681 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829014686 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.414638521 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.889162472 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780438187 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.782678383 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779315989 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.294667644 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792290856 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274425305 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.905120083 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907191028 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.793365028 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707540897 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.784739028 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783485577 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.778834507 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.726860915 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.831397889 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.421633679 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989261159 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024084145 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.184929557 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787068125 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.417151994 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.90006263 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.794415544 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.082132907 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305155446 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.884231825 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850265148 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.784594634 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.413244471 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.513767231 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329902473 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084646385 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097071622 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135875576 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.177028871 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.10245573 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.874273592 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008666673 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.302368186 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837814331 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872855277 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717845754 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791057318 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.428315386 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134539291 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792396465 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000198035 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077885208 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.160859909 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9147542 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98142443 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809149575 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.583639591 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.80743718 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.313530509 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798759893 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.229675041 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986053693 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863717691 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.083049456 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858624894 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.779450653 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121189551 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82469729 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.482461034 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.134227055 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.167503635 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.260076469 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008003661 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.77628175 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.220043385 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135826811 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.971249593 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.899503452 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709883131 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786574384 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786940718 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.795143572 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.754764594 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.619083137 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.020433617 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787018901 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010485834 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.894764179 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146362175 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.691699544 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.784734381 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783325949 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029153288 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454305127 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936185574 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.083927396 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.35619689 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78264825 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.709468741 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.707782947 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.482646293 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.792805719 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.751724476 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992235606 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.888613018 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.457786568 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.158062681 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093398872 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.026735706 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.794129884 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.054008465 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058665636 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.274280443 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805985218 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.881094312 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.098423421 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.475135063 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.999554665 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010567145 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312575456 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997634464 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243732268 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.756922659 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.781889335 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.987275947 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.999234148 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.150087063 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957303236 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.492095651 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.796211288 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149001072 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845825139 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.159885416 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.968674527 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.863658204 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790139863 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860927624 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787653041 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.789249731 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.789098603 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795776103 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.160831571 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900660198 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.795719533 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861054551 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805403737 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.362603711 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.786981969 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05524877 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131047938 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.117227823 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846134817 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.78465209 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790344748 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711570407 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908521807 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.224462297 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056738348 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.90766909 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.915669488 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80355748 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.098954368 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.050777692 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095193697 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057557684 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.669552161 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413040749 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.903826375 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.00228257 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791501821 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.989594287 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002669793 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09302666 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350127396 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.90655382 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.976975397 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05913928 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.148103312 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.787187719 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365065071 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.798850388 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18875622 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.82510253 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.15762765 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041111315 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789373589 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909425002 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.790709121 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.982952114 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.237706505 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.425309231 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136458429 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.636002356 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.790785014 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061187719 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116964824 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091628982 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862876753 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79303704 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.50079134 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920621212 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.646802236 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.008187541 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.789175925 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991189277 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.49812912 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.790764688 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058365238 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093305306 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.788462322 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.676017915 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817933566 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.790173424 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.002196931 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002642308 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037263006 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789932262 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.79820354 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.595234871 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062123827 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846121089 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71401183 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.785078582 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833471325 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016158467 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805843668 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.304234298 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.488374957 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067778795 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.697874007 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804991365 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.18487469 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162935548 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118384873 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.314901495 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005416866 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.346752378 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.643603114 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165373679 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.792896624 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.183732572 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16749835 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.791573708 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.288187638 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89869292 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.057790158 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111299088 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.801507994 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.490502266 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.826128576 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002650097 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145690508 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716188436 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788429093 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.837353545 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.790583106 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.789307731 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793037338 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.71366077 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221351019 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.628378033 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346294034 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.787906533 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.890498546 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.146799895 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.314762949 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898353218 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810317385 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795075676 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.507110488 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.080918997 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.033694302 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.282268431 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.881188779 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.793026961 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791986591 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.709124053 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970269649 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.976726711 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068742844 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.129628458 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.897376813 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793151982 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.999382284 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99339143 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.167375275 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921942567 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.90603991 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903875827 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.730446882 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.496753464 seconds)
  done (took 1617.916552753 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.803930951 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.840633395 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.812521556 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.908906844 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.87181954 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.885183733 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.884224494 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.851197944 seconds)
  done (took 56.576085941 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.793213051 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.947890679 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.79792791 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.794003734 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.792511934 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.795628836 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.979489037 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.806725716 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.79360288 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.799044177 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.793830464 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.789605628 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.068966396 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.815580535 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.794530971 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.796184861 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.794357234 seconds)
  done (took 72.930077458 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.794767911 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.030447386 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.824656187 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.795580889 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.776458235 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.806564753 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.828417864 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.802121947 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.793330065 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.042030712 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.094248697 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.800651673 seconds)
  done (took 89.109256526 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.806197719 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.796915315 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.797075132 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.797382426 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.797659423 seconds)
  done (took 10.72368237 seconds)
done (took 2111.534734462 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.024379623 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.989830825 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.035957792 seconds)
  done (took 5.745609625 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.930540343 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.982120948 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.094209278 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.102713546 seconds)
  done (took 9.83205049 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.092349438 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.154162879 seconds)
  done (took 5.965015652 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.105791345 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.824292086 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.196906571 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.791895116 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.797175546 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.791793703 seconds)
  done (took 22.102846127 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.790969237 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.791561399 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.792713372 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.791976364 seconds)
  done (took 8.887480931 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.789265525 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.474188177 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.796204648 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.804392489 seconds)
  done (took 20.582781836 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.936978366 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.907594912 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.989877092 seconds)
  done (took 7.552918702 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.935748013 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.02026949 seconds)
  done (took 6.67522257 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.948725879 seconds)
  done (took 3.666684402 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.818103709 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.060925044 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.291526791 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.836968244 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.429774375 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.098146788 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.130355293 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.023035058 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.241165029 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.27445983 seconds)
  done (took 24.923939845 seconds)
done (took 130.806951938 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.36911566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.822313555 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.998262673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.157522726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.032733103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.000319083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.007119113 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.143919765 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.83475421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.825760727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.160232933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.029092621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.959670449 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.814525872 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.967604485 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.812390517 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.024124499 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.206904104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.838287323 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.078502032 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.026850159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.7958034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.985656993 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.810648761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.028370482 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.948388763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.33920425 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.818957965 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.976856276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.35571041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952599919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.218144945 seconds)
  done (took 166.062976846 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.795443541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.796080701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.792592357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.794687146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.254966491 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.795393061 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.796215066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.792666532 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.240983544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.240541571 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.79660635 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.252752816 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.795171898 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.79389425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.794416667 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.795054756 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.425847426 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.795652103 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.796000037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.794183873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.792249841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.079121648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.795877104 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.093629442 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.41440277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.797859343 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.794366214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794630868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.794454955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.793738534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.795600747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.796406045 seconds)
  done (took 206.80985394 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.789473782 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.796004384 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.795107968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.794260508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.796051022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.795763021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.795066794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.793754193 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.552837756 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.548957436 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.796737492 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.796653271 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.798006765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.795741263 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.794964513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.794533919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.795203771 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.790847867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.796054389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.796354711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.799010814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.406260551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.796189116 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.391147754 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.796056057 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.796608603 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.795356785 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.796476089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.799872966 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.796693259 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.795119826 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.795230711 seconds)
  done (took 217.903126968 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.03518644 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.795034231 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.79717611 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.720630911 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.796927373 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.795802104 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.784461813 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.043206994 seconds)
  done (took 18.496804449 seconds)
done (took 611.005709772 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.18008834 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.015762436 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.980847297 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.825485553 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.06483135 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.866161397 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.819078894 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.885630681 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.63815973 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.896514873 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.482015031 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.842456175 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.572595963 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.854427477 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.945853793 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.883922672 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.405549617 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.508655834 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.992963889 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.882500522 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.001066044 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.722437305 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.900419993 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.660715169 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.598524935 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.780847174 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.832988041 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.408104754 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.831007081 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.980619712 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.484687435 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.083043745 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.832963898 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.814898928 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.8725443 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.852092863 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.014940037 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.829928415 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.950186185 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.51836931 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.887172612 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.548228686 seconds)
  done (took 99.676391625 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.807954445 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.80224732 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.803100475 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.803960761 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.812383324 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.804276933 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.803464931 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.803386383 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.802597382 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.803064727 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.804055142 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.813457952 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.804280876 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.814032763 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.80389642 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.803057172 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.803648847 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.813279689 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.80518458 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.805445973 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.805241108 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.805325794 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.800044109 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.803511406 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.804942243 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.804407496 seconds)
  done (took 48.683285255 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.798855136 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.972225404 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.047239993 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.821581279 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.801492697 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.804604957 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.818571969 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.806071786 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.803730912 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.801970425 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.891449063 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.80705315 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.819083541 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.052167366 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.817328751 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.800567287 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.799517788 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.800504798 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.982828558 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.81625684 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.824848601 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.808247818 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.820001479 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.815092065 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.80511197 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.802364747 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.805193633 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.292517055 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.815779275 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.891237611 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.861374665 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.829066905 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.237997336 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.05566736 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.85743594 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.813885816 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.803239597 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.893977425 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.807315843 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.80255596 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.821313892 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.806958092 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.04458162 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.32794249 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.817339739 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.801468449 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.30280891 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.903881995 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.843650407 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.811843446 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.049858862 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.819639628 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.803817038 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.804243859 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.84053344 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.808463746 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.802955649 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.159945348 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.815199138 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.820469176 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.808031372 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.804303987 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.987465771 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.812137344 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.974318921 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.811795406 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.808863687 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.808224452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.050867326 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.820699721 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.339479163 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.818397546 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.802519648 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.891598204 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.978600314 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.327531651 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.816828059 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.984867402 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.253907841 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.828029541 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.809997121 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.283886029 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.832144753 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.811638532 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.805620327 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.804150613 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.805539147 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.848935156 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.820207277 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.250400773 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.34192617 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.177680765 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.832405882 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.819463367 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.80473529 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.160793306 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.81150477 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.804425018 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.041339489 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.345694302 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.820176084 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.812058029 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.327109408 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.821425375 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.823553395 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.813651346 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.054426309 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.821432595 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.848223001 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.804002697 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.811918005 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.812014175 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.823556333 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.812632131 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.804670217 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.313002118 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.913323372 seconds)
  done (took 224.824728111 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.804866193 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.808466937 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.803334112 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.809178697 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.802678196 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.804138003 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.803583121 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.803241475 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.806455084 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.80360107 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.804256892 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.803237381 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.811005009 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.805592709 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.813505795 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.807829061 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.410761268 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.806733533 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.806315259 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.807281252 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.446857669 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.811325039 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.807036534 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.807468085 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.806199669 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.809828993 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.814648927 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.809857536 seconds)
  done (took 165.578030963 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.80752212 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.921065852 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.831437908 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.837560797 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.818435174 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.808564538 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.90676463 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.826319552 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.814350234 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.808776204 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.809252833 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.867994142 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.819736858 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.907105402 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.83992082 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.916293161 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.912149879 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.814865517 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.809631661 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.808799287 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.83729238 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.82134579 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.868659374 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.933715512 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.829033542 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.921824149 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.835736545 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.810412428 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.809510098 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.921899818 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.829555564 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.869102959 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.844878342 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.828373661 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.927481131 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.929038193 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.913493423 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.913353586 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.816657817 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.810603737 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.810829358 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.811178443 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.92305837 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.832152295 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.812416347 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.927224653 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.829746812 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.8118972 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.812504903 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.8104739 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.823882126 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.829463337 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.875054088 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.946526343 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.850935878 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.835351566 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.907780686 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.936948357 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.81626704 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.909204084 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.819617373 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.923331058 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.839546728 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.813760369 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.814100883 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.81557743 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.841433276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.917871578 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.917674856 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.81831732 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.909382942 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.8472518 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.818586558 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.811375639 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.812404859 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.924629364 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.929146728 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.848249676 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.847082599 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.843689378 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.822766883 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.812565355 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.815653574 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.82975291 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.814901629 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.926377179 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.931106176 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.818088327 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.811856004 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.813507224 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.812074042 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.836320318 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.933775983 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.855183932 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.921612049 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.8784979 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.889983882 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.832158864 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.825971947 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.818170773 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.87364341 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.831560927 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.825879995 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.106320949 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.873862612 seconds)
  done (took 196.638466306 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.21261216 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.866545915 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.86887859 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.130359736 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.166420952 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.727086883 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.86433256 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.862663555 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.889627201 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.044856296 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.93963528 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.8815334 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.850391189 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.836410879 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.863760606 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.88519764 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.873506511 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.219566098 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.069330775 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.001682481 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.852256563 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.130439368 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.168901074 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.442890465 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.917060684 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.269320946 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.428057819 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.997521291 seconds)
  done (took 60.010997236 seconds)
done (took 797.138812624 seconds)
SAVING RESULT...
DONE!
