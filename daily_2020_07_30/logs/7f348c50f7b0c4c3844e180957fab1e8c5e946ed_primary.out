cset: moving following pidspec: 15495
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.529865894 seconds)
loading group "shootout"... done (took 1.20831619 seconds)
loading group "string"... done (took 0.398938466 seconds)
loading group "linalg"... done (took 7.563355861 seconds)
loading group "parallel"... done (took 0.150762351 seconds)
loading group "find"... done (took 1.261808036 seconds)
loading group "tuple"... done (took 1.827047874 seconds)
loading group "union"... done (took 11.960156133 seconds)
loading group "dates"... done (took 1.242443256 seconds)
loading group "micro"... done (took 0.190297997 seconds)
loading group "simd"... done (took 4.107785139 seconds)
loading group "io"... done (took 0.983821572 seconds)
loading group "random"... done (took 8.200977647 seconds)
loading group "problem"... done (took 1.513062734 seconds)
loading group "array"... done (took 18.381244464 seconds)
loading group "misc"... done (took 1.440027669 seconds)
loading group "scalar"... done (took 37.431732223 seconds)
loading group "sort"... done (took 2.858977958 seconds)
loading group "sparse"... done (took 11.241127176 seconds)
loading group "collection"... done (took 16.455844262 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.482494822 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121507828 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124864862 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.113669993 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138607239 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116552698 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120914734 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082644294 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.90270087 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.13835089 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109446741 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420811051 seconds)
done (took 5.203108579 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.162550784 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084133708 seconds)
    (2/2) benchmarking "String"...
    done (took 0.075127483 seconds)
  done (took 1.286562576 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06096654 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126658715 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.062377252 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.062818428 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06279999 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062222857 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06213204 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06217474 seconds)
  done (took 1.628783657 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068531223 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.063693141 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.061690218 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.063473635 seconds)
  done (took 1.388247541 seconds)
done (took 5.672141502 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229608045 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.097538268 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.279309846 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.3861284 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.446391309 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.086642953 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070220933 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.065818847 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.123224473 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329249951 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.099461883 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.176076855 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085735636 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.170173564 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.950814727 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11484689 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080935198 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.11855387 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088203745 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12702673 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.403262001 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.073426541 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069889748 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065605552 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06336129 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.684975326 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658335131 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127670799 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080396712 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.098051474 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112068018 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.638348451 seconds)
  done (took 10.363078921 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089547698 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087152552 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064106247 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119825666 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.089626985 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065101496 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.0700601 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063311808 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086753399 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.11954369 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085574108 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.095066082 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061711711 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064717612 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.071291682 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.192818399 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075179614 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075675581 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.063760048 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075474489 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.102052431 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.073668306 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075141257 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076506326 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125993849 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168054813 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095122451 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095252584 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063869348 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07774799 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.112295095 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124474284 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064199533 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062784358 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117833662 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092793516 seconds)
  done (took 4.422559596 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.930036202 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086885421 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098796194 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.605362195 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062799123 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.148975426 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.237159315 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068220843 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.356358033 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.14030519 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.142559738 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.141621191 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.112012581 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06672655 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.206888919 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.109467923 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.352711498 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062819083 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.062193689 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.060577378 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063826244 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063242599 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059552896 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066899659 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.087717331 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.082519104 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.151461293 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.923089445 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.244056277 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064763104 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161589033 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.083299153 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.357176016 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.0670483 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079914409 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.393433571 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117921928 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062804015 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163045692 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.112067249 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060077746 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.112938073 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073301225 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.064732283 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.064295167 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064282973 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066818905 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076069836 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09828822 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065024418 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061714806 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158197647 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060317759 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061458238 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063413696 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145028659 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062373353 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138565298 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.059999179 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063801785 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.091341881 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063677187 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.08589445 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.097270818 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.34112605 seconds)
    (65/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.052346794 seconds)
    (66/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.063507697 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.908507208 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074751861 seconds)
    (69/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063062105 seconds)
    (70/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067043087 seconds)
    (71/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062747442 seconds)
    (72/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064855444 seconds)
    (73/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063204761 seconds)
    (74/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071068555 seconds)
    (75/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066601225 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065791071 seconds)
    (77/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105987604 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063422948 seconds)
    (79/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065664078 seconds)
    (80/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062315831 seconds)
    (81/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066992456 seconds)
    (82/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.093396937 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062901916 seconds)
    (84/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.460293629 seconds)
    (85/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.095212747 seconds)
    (86/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062323572 seconds)
    (87/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072970589 seconds)
    (88/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100464978 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06270242 seconds)
    (90/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067892218 seconds)
    (91/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062840795 seconds)
    (92/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062758441 seconds)
    (93/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061730508 seconds)
    (94/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063486795 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067176679 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082654641 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061078963 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.172669118 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.08891019 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065216497 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.107915709 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.025438514 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063459833 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062039498 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066868777 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.060378265 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066278427 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065613056 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061907225 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066246752 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064866519 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061674356 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.109295186 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063934729 seconds)
  done (took 20.946039861 seconds)
done (took 37.789377871 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244707825 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077476477 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077619199 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077830802 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077331854 seconds)
  done (took 1.778728396 seconds)
done (took 2.996319456 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.103439432 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059644012 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.095179158 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095565296 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063771988 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061118191 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094580434 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060677037 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094344098 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.096655686 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.09833263 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097402496 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061245364 seconds)
  done (took 2.302350408 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064944507 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077509006 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07950364 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059549245 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069524834 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078469786 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059439774 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077487801 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083549821 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076543686 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076383766 seconds)
  done (took 2.012657524 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06487612 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076513465 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07814504 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060755682 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068651341 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077152515 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058177171 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076332739 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.079838248 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076676736 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.076335181 seconds)
  done (took 1.991890218 seconds)
done (took 7.509046882 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064135355 seconds)
  done (took 1.24760024 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.519887213 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.635752822 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065415366 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085043828 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180415387 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096725046 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.225514652 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.069988026 seconds)
  done (took 8.237587746 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094674527 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065628619 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.063729156 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064915433 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.065137354 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065791646 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066080314 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065700915 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067051584 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065254581 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066367704 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066579514 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066899306 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065279707 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066914842 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06660448 seconds)
  done (took 2.370821965 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092754557 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092067885 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.070429842 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071223442 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068918332 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068392117 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070999533 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070362921 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067308612 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068714021 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071361871 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070155908 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069659027 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061406817 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070729391 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072657371 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067676594 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070692925 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07141081 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072137038 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070880546 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059684878 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068848746 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070533262 seconds)
  done (took 3.01915796 seconds)
done (took 16.073979895 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109508235 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071523138 seconds)
  done (took 1.378068669 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066387838 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067158689 seconds)
  done (took 1.343239129 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072077663 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057449518 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080711182 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070186713 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059340972 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058779285 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078721869 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059714416 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059230121 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059248486 seconds)
  done (took 1.864718922 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059755742 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068069349 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066499368 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068380205 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066236017 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060395416 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064063737 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060733358 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068904959 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05952441 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064729531 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079955334 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064050358 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081334417 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06392785 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065075287 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067120865 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064062782 seconds)
  done (took 2.405182328 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057446454 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059780326 seconds)
  done (took 1.338913648 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061834676 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060073807 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063068668 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063045259 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059899786 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059408893 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059976711 seconds)
  done (took 1.640195928 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404144347 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114115946 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33108275 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065600735 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.074625737 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24028777 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.05961386 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065923482 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065912219 seconds)
  done (took 2.676620731 seconds)
done (took 13.870712289 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075748005 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.079782764 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086667086 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416597617 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.087661414 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06245125 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109055544 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177972382 seconds)
done (took 2.332640747 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208696561 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.390713949 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.944619741 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06246997 seconds)
  done (took 3.620217392 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.317032558 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0796618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072995839 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064128372 seconds)
  done (took 1.767374889 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060643519 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068079598 seconds)
  done (took 1.355009151 seconds)
done (took 8.185174476 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060375459 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060441452 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.061253376 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086121044 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060713391 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06106652 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.06101298 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061061334 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060498567 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060581573 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060560298 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.060571053 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060653246 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06113254 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060885125 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060773411 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061359841 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060904933 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061204524 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060326857 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060749795 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060910548 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061322418 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060920181 seconds)
  done (took 2.740045926 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076393335 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062013407 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063465427 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064589217 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064975425 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065080052 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064996589 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06321605 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065138856 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062666677 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065145712 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065062206 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063000203 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065290822 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062888478 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065040449 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064816762 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062932312 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062800192 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065118848 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064611511 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063030665 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065412959 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064700745 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.065060092 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06534718 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06321486 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063457321 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064696163 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065578665 seconds)
  done (took 3.180830963 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.059961383 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056330141 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.05785172 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066261485 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056914593 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057046371 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.056999144 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056726585 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056665675 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058545062 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058243699 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057560916 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.05867886 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057745419 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057781905 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058525915 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061874009 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075340753 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058397347 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057862722 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06179524 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058064787 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057613707 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057932258 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058128794 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057499251 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057597255 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058022297 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057598951 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058584536 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057726928 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061587983 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062479532 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057947374 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066606733 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062308498 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057838563 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061373331 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059080918 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057721632 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057704492 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057442756 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057628605 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.058047418 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06664583 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058783748 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05904204 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058568713 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058211489 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057830163 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05805747 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060154497 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063008418 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059564266 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057528656 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.05931237 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057662425 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058804819 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.05767168 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057647934 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057695811 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060674656 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059485105 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058513599 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074948248 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059568977 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066621606 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057838794 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061614635 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060846263 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058358451 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073090688 seconds)
  done (took 5.542960578 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082180964 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084321466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062172503 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062332856 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05850325 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058440738 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066630261 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058257146 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062436235 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077447476 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058211291 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062215919 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062541218 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062061046 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059512625 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062721619 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067091645 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058618862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058585065 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062129287 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0584683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066030871 seconds)
  done (took 2.666828864 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134386848 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062532926 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.099288664 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073219324 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066110061 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073110534 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06358681 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064351655 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064245211 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064639426 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064700585 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064027644 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066811295 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064947531 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064504133 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064207722 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064684434 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064944068 seconds)
  done (took 2.529716781 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073192423 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062524469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.083763888 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062363135 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063344485 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063371094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068293977 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068888151 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063262168 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063589944 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.06890419 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063327777 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063641793 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06353952 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063171714 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063603897 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063166653 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063449879 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068624798 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067780597 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067926952 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068787688 seconds)
  done (took 2.705086881 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071509614 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062103042 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076424615 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064610192 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058476725 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059119529 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064152366 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062601746 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06366358 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061918459 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063153281 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058247444 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064536295 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062740161 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064742273 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063108088 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062194526 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062621199 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062242097 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058484043 seconds)
  done (took 2.515265526 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082849303 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060395381 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060113674 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07938123 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061293071 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06125207 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080016759 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061377314 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06124304 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082080795 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062039327 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06177989 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080259915 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07976404 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061458452 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080171215 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08017118 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079723857 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061505199 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061768771 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0827615 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061337814 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079659681 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06165368 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061733156 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061701185 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061491187 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079849377 seconds)
  done (took 3.198354035 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070532175 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061052567 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060993316 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060938061 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060697986 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060972335 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060900191 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060919903 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060721707 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062029761 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060787397 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060939368 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061172612 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060696928 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060742006 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060738031 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060670085 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060800244 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06137008 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061210214 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060777739 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061030894 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060787712 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06144563 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061233451 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.061160505 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061268712 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061172842 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060921614 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06142649 seconds)
  done (took 3.094228799 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07032037 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069931449 seconds)
  done (took 1.395500131 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059012196 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073335327 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057401871 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067300999 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067171289 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061515067 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068061374 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067106103 seconds)
  done (took 1.772031264 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064555806 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086495987 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060394211 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061324218 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064171097 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11620768 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074491649 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069525368 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074853388 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060982285 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061076866 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071554907 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059397558 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070488507 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061829769 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067170448 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065187319 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069690227 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070338454 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058444859 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06959822 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061017278 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058964249 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061231604 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06008733 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065343113 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073485436 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070079604 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066986128 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057666732 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.077483319 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058806243 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060382703 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067486487 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063838888 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058944267 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09283307 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059552954 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.0649943 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058453783 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06992823 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077378856 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071328719 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075484504 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060603438 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061407868 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058576331 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060868086 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061554269 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066865705 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.059079176 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064373336 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057813293 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060606702 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068201226 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058864283 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065332373 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067461519 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069876732 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067452232 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066056556 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072003969 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066360665 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068356332 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059517674 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076233157 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060959918 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069434175 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071418428 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060077045 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071657234 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058249103 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057475727 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058524775 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08884546 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060483838 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059873171 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058350217 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058565725 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060444115 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067230516 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064967939 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064771309 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06279471 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072682117 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066921013 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058565219 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066710992 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075228232 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060921561 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058473688 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073771216 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060941559 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058471026 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075058293 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066880616 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.06066908 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059728634 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060782184 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070933266 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060389214 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056929377 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065092392 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060264364 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.06183602 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063860789 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064827996 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058443349 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067017906 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064309555 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060867646 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057515919 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06195606 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059926354 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056963819 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066125002 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057871539 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07159541 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062986548 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070352673 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070735314 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067103025 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071962249 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057819509 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056371438 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.073875973 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.198084666 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060929234 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076520398 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059124122 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069024482 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059466701 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061387648 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066940141 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058020231 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061536387 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059304296 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065383979 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060428116 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061053163 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062066183 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065942847 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07000789 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060503568 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065987742 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059399328 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073110293 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067219745 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062376308 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063096647 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060207357 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070371676 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06411497 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066784235 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058092268 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059697335 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058906696 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067546472 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067484276 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060942818 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067625527 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062397583 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059509634 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.05882775 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060177125 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060984156 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063109079 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.05981643 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065080284 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066247422 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071834152 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070519766 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06607095 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.05789016 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058395606 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061258639 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058514665 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062535217 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066457491 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072267331 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069535518 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077964982 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059081898 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067078206 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060697684 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074217973 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070631282 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059838368 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064796968 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058145495 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060941494 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066907181 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06962253 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071808634 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071804019 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062784735 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.062442849 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.05842148 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072087329 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059021839 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065506535 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067096738 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064087445 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059278919 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061008642 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066687673 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062324092 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058727429 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072737034 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065873046 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058351286 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071218704 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058930096 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068555479 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058712561 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061465619 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062921356 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061247371 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06681602 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072473781 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057817912 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.05942041 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073048908 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060139627 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059537151 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.063794006 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071855266 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062206129 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064962032 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067734546 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066854131 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062210115 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066699115 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059891936 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066332164 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.06205735 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069005461 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058371925 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074707172 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057106397 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071462186 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058870345 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068329866 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058909852 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066708928 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059427117 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.072863524 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059808684 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058933161 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069078835 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056797904 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065785642 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057582192 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061745376 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06360517 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065853613 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060156529 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.20250995 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061591679 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067504342 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063485323 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067748944 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067803379 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063222992 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058839397 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066370804 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069134426 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065881648 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060517543 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061406469 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059886382 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067099729 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060777119 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059915554 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065700001 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062170699 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063799199 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060615906 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061244232 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060865515 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066436039 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067073147 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075112168 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065964013 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064586421 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067356642 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058931687 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072842446 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059182995 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064757474 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057543814 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067137843 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066887961 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058775084 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076168035 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061046909 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066111204 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071022563 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065997252 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061656314 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075984554 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064171632 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065698788 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065330982 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062084782 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064631071 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060562098 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065073113 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066995224 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068545253 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059621936 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065317916 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066240761 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060943267 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068958487 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061194122 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06592249 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060864521 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057915131 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06267183 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.06957057 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062605474 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062982514 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059553052 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057790675 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059456485 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067147023 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062428617 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065992846 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072406335 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057817846 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060285425 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058645284 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06421773 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07550692 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067827393 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064965759 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062619113 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057941347 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060807308 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061391274 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059266773 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063195455 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058026908 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058474342 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068404873 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060937755 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062206453 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059323831 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060204421 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066820032 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064318066 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059628874 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064323998 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058628676 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062962178 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058466983 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060784055 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062762389 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.05809954 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06122763 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067669756 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.0733079 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064601714 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065930788 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059627821 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065346247 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072271286 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067448142 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060076554 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066652134 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057659506 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075108215 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066365183 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065248801 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067022477 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059619098 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073967402 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062168309 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066733551 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07151882 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.05893482 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065998467 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057565451 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.07153513 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06139642 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057451469 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06475624 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064192976 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.202969786 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070612116 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061398034 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067449788 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065796112 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062547837 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.06114282 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061751745 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066581202 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073381707 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060176713 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065076052 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06554399 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066326962 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062496865 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070341136 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065627937 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06051282 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061079732 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06092901 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059483785 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069515156 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059778641 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063003327 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062420681 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058674249 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064606447 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073006009 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066850389 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067387715 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058680193 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058355913 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075093631 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061137612 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062865968 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065634237 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066954109 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070279952 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06681068 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074532753 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059631329 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064064244 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070468305 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060339956 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058986619 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061660976 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060979961 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066756937 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067450037 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064799002 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060652585 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064780087 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07027413 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060817349 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062637342 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064505634 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059456304 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068176421 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065484836 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065885058 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060916357 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058408663 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061490733 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06639715 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065026172 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067055333 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06026008 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067349547 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072679923 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065082944 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063579514 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.05903312 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063108381 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.0665436 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064675748 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058871374 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062981735 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062127107 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067514791 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067388004 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062376955 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058520136 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074500825 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066555239 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066721099 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061388717 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061112724 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059736148 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058923358 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069233728 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058992215 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061100627 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063070051 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061229215 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075336394 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065851171 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073455527 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060209306 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062846604 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058988982 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067177102 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062876103 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059229136 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068000892 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058259172 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072740336 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069853351 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068140887 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058782139 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062410849 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065923999 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071365836 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067015915 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066066843 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062763416 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066891678 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060501726 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068332995 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.058467502 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057606211 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067694234 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065593164 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.06924824 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058025757 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.06709844 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060370951 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064856688 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.064994554 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059763407 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059923154 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059703079 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.204573665 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063950362 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069098564 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063634826 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074922072 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060930739 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069603704 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06665854 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068906056 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070697954 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070545525 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066321471 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.05965033 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064742633 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066271009 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059922833 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0627621 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063754624 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079230491 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061045472 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060616784 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073346272 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067228188 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.058840708 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067121202 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062882578 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067856864 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060060704 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067786815 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064257431 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.060598996 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062756798 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062435211 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.05769721 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059503561 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059049184 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068007713 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062734899 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059571651 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076355579 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.06093735 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066603999 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068824416 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.063843951 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060528292 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057865987 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060605994 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069689123 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072062037 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061231977 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066295794 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06079704 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067210162 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057734869 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066462783 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065721427 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06594559 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058439428 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059230157 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071730476 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072858057 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062659769 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06708922 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066603638 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060680778 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079270885 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0664173 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060225729 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068811382 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061408017 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058443352 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058287575 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061048113 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07147395 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059239727 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062017702 seconds)
  done (took 40.284170906 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096063662 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059319507 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057667039 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058514362 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070845761 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060221165 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059048812 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060425019 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060200433 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061946247 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058907236 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058663542 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070886264 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073695372 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070545005 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063418429 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058556742 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059840277 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058772321 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060234864 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070085286 seconds)
  done (took 2.713080772 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065150585 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074209957 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072291018 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075934739 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067633917 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063929831 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071090337 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063887713 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071877147 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069309595 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07198368 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064027425 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069140609 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069240934 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069613068 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063967406 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071695047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067423999 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064169761 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071166215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064610706 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071352308 seconds)
  done (took 2.85268799 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059198047 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059038491 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065965343 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058438294 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058084197 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062273939 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.057969743 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061488181 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061719649 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061555528 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06592392 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058964282 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058246392 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062871718 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057806058 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059386457 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102390475 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059810332 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059299396 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057992561 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064458299 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066567372 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057801513 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058205454 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061464832 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062251818 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058640575 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061611273 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059349587 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061920716 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.05937657 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057982277 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065773777 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065376744 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061862403 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061727567 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060153088 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059326418 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058459929 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058495296 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065253143 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059717256 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058507552 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059856478 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066126906 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058328461 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057968 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065603111 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058198312 seconds)
  done (took 4.361889573 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070142625 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107423349 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064335803 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087945337 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072977667 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066175394 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064240702 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088945369 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059917082 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061011512 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074489589 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074559112 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061852236 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063640004 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066022423 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061941038 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06277353 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060788984 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065729478 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061630673 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065728235 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065960111 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.073145082 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073541475 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063099817 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061021185 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061396558 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063947056 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07338351 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066631299 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064394709 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064582374 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07352154 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067632824 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06206508 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061908223 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074401053 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062800447 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062490561 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060570793 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06222856 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063713244 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066378198 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075030647 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062811751 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06655616 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062361257 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059557672 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073748702 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06243817 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067179656 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07510488 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063904167 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062839064 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064075157 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073892368 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062312366 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06064123 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06255745 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073160949 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06013499 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063251568 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074165832 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061638549 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066788934 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074483084 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066898565 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063723134 seconds)
  done (took 6.049061117 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06820552 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089855195 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071101402 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070804684 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070093029 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07078902 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07052065 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070131709 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069522215 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070572276 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070511582 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109447594 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066091653 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075401138 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070233744 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069845761 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069912016 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07011708 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069846448 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069821912 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.0702678 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071053881 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07020737 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070781957 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073422058 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065159565 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069750764 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069856848 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070540129 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070202194 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073708213 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069994721 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069921915 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070711667 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073569377 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069897113 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059694803 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069864471 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070038893 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069846404 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065538118 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071056581 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069787383 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065543345 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070542714 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070086797 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071208068 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073795883 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079098508 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069921929 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069980686 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071200636 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070123841 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070211801 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071203402 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079342095 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070790136 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070958676 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07020567 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071047912 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070867466 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07949601 seconds)
  done (took 5.811574233 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07335727 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065664018 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078818174 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061219437 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058775332 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06850846 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058089825 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057314719 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065927959 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.06566588 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068133679 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068122474 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071537679 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069305041 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068553002 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071451063 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068969704 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068630554 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067187319 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068988007 seconds)
  done (took 2.716664348 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070079791 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075250906 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063708865 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068667391 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064184081 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068601165 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063289215 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065108476 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064885103 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064436263 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070093105 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070150441 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064871023 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068710445 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07001818 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068861443 seconds)
  done (took 2.440609504 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064088879 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067332712 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067677859 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060214627 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063722485 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059755527 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059954803 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058441916 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059000424 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072972497 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060267956 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071237025 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059834286 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058627305 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059529905 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065343997 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058917026 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060582588 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060048397 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065397721 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066402134 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061024358 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063544119 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059887128 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065055559 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067026534 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061887072 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063340235 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060052996 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060267448 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065351069 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067040141 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.05960597 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061074903 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.05922855 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059912852 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060177766 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060473761 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06570764 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060129006 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058591219 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064666207 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060268321 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061473498 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059350254 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.061041545 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059246687 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065768561 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060451213 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065107854 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060251877 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062711577 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060924328 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067454818 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063192382 seconds)
  done (took 4.792507214 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072568003 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064265581 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059013214 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05860736 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063463718 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064461019 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064447209 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06420423 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064652829 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058557455 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064376565 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063286639 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0642266 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063726088 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064405768 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064033592 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058264797 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063888238 seconds)
  done (took 2.515193285 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068294337 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062048942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067298405 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062151278 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062027069 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061814899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057874773 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057608284 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057606108 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061959741 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061920419 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.061475428 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057914575 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.061644565 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063420148 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063544908 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063036852 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058873814 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062987915 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058981638 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062828275 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058740247 seconds)
  done (took 2.721440802 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084768326 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080592348 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119841815 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076336323 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084220845 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.0690069 seconds)
  done (took 1.883327688 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086344644 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100221842 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063335897 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063423928 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074584878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067093828 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06755222 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06763392 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07429135 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072194076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067298506 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074543939 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074403617 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069412124 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074316666 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0760501 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066118661 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065895805 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062485459 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07795674 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067645191 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074742247 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06773684 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067261276 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067599369 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087714154 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078119013 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072371 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070045727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074464237 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077536412 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067342422 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074637559 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072643535 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063922023 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074761787 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068266747 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077885181 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074597527 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070422978 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06390696 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074816839 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074890697 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069821687 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078441544 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068284864 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069769708 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068033476 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068001076 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080749529 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074799156 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070225695 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075046358 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078527363 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07816043 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081119383 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072817072 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069909446 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073673515 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07167187 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068436431 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073715914 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06829049 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072277595 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078367117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069725761 seconds)
  done (took 6.161821726 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094474775 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064345194 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067847314 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073079936 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070034397 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067508039 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06762517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067797977 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067596706 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064298569 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102083336 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068458023 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070198112 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070239191 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067666095 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067840904 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067359084 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070085095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064556592 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080372312 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067547738 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070572186 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070018928 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069689402 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072748415 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078126633 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067681942 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067546019 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067732483 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067438811 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070252433 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067700419 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070120367 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.0640774 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069559563 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067974294 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067667643 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069992217 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067420952 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074850835 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069781734 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078112407 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067694126 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067739088 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072560555 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067404536 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067563554 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064311851 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067858796 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064280251 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072659591 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072888268 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072776831 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070047593 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067787233 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067897579 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067697477 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06784353 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067683102 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078504699 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069783143 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067584969 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08058219 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067604525 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067594277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070033404 seconds)
  done (took 6.03516824 seconds)
done (took 123.906245906 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204060399 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18060793 seconds)
  done (took 1.741624264 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07076559 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093978674 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07260149 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130745739 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066206039 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100140212 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099962743 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071271388 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066174302 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067815957 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067690941 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070630921 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133942825 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066093027 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06584648 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070231019 seconds)
  done (took 2.690994757 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100154288 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.178855693 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105748398 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065642861 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101962167 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073919635 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065897887 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076634042 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070124243 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068790854 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073806617 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071726908 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068746389 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071541767 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070267721 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073300102 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068858042 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07348402 seconds)
  done (took 2.859725116 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089348986 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083748819 seconds)
  done (took 1.558950571 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.149649392 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10010566 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139159319 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.315146839 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131280911 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.272623676 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128931612 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125461803 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106874679 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121401885 seconds)
  done (took 2.96849891 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097238544 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163889201 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297675014 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116053296 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072415755 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.08499893 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118262215 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078347901 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077723218 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077150166 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077430375 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076559426 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094820785 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073435476 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073415723 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073617763 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098174713 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073361889 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072821376 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073122363 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098056175 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066501512 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073831758 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072336494 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075128287 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075311208 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067764792 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066400705 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073540178 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072674786 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075974797 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.081460183 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07529922 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101081418 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070802847 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102357807 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072482178 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071170757 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072360924 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071149977 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074836395 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074651164 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074805435 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07347187 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067187567 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071686228 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067688738 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065937355 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076526908 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067608462 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076498828 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075888052 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101040662 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067654908 seconds)
  done (took 5.946781171 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103827678 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102367136 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067074504 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108431549 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099515519 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06553338 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100641164 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094025866 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102384652 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06474424 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064566339 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064623911 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073291089 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075644629 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111484559 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103434753 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066920457 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065235382 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102701957 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102562059 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063936529 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09610646 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09278665 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101883716 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06333342 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065099717 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063717264 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064492721 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070461271 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.072575856 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064448048 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.0739009 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.077748924 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072040812 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063569724 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065279364 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06544783 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074730736 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07513626 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075353946 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074084248 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064855087 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065373011 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066301014 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066439284 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064480836 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073560342 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075058706 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07437063 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06551077 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065644153 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064941185 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065448327 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074584201 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07330578 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075977225 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075328635 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065004381 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065040645 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06733255 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075550165 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075694731 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075229326 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066655014 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075123512 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065552292 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076654613 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07950685 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065337912 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065810681 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065176126 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0655621 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065722876 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072865081 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073236237 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066420313 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065604736 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065331504 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075496783 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073385176 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065458898 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0726009 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064833613 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065563715 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06603183 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065939137 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072904829 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074785695 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066259852 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065109229 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065064631 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064916401 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064336101 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073583501 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074317266 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074598412 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07349235 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065823295 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073979251 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073616551 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06609343 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073248136 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065195443 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065147987 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064886708 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072406662 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071615222 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.072674407 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064468443 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06414285 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072545213 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.207692958 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065326223 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074344404 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077435398 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075874501 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066165849 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080863162 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065762336 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076199401 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064780154 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07394345 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064306117 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0744283 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066105662 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065457701 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065680542 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074269023 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066502811 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065881841 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06615325 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06564595 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074465274 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077880234 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065053227 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073479756 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074578827 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064834879 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072508311 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06427534 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072332875 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064076558 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065972385 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065123216 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076897292 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065383769 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065953951 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065596571 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076272451 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063997104 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075495147 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07333194 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064947371 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079001747 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074374516 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.071716529 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076631295 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067106721 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065957942 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065464296 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065642198 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072164392 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072953171 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065884734 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065587595 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07309649 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.076872343 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064610518 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072888842 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074127435 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074125247 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064453814 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06518463 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077018562 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076177948 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07314855 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073791292 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075099967 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065904991 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073734493 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.072544135 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064339512 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07923109 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064488453 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078014011 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074695326 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072796041 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073322227 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.073239137 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.073576296 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073645226 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.076200593 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063550814 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063951225 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071706978 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063938033 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064339058 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07179345 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064774668 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064431826 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.076311208 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064494582 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074117934 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063454019 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072665352 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063005057 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06459101 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075837482 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064374246 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064127916 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073393885 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066071081 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073658454 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076212109 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.071143542 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063218208 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065425674 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072856042 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.071131084 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062729101 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064533705 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064983875 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071835531 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071270825 seconds)
  done (took 17.589372502 seconds)
done (took 36.752426427 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20306638 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154160359 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188388346 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113477926 seconds)
  done (took 2.141236482 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.094509972 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096253643 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077658632 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062254755 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.083323079 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062736583 seconds)
  done (took 1.903176472 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273411062 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194254276 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172185974 seconds)
  done (took 2.061394355 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214082528 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193702481 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457498077 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291144847 seconds)
  done (took 2.674114253 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.129716172 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.07869147 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061562429 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071060598 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.111045252 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.143527159 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.089226653 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.113333069 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071741598 seconds)
  done (took 2.353885494 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.131502543 seconds)
done (took 12.721580641 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100142624 seconds)
    (2/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.195672592 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069394962 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.274359757 seconds)
    (5/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.1891388 seconds)
    (6/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.174241529 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065703367 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.221660098 seconds)
    (9/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064554116 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.225784762 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083758014 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065351213 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074021454 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.188443734 seconds)
    (15/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.431027116 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190990739 seconds)
    (17/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.237811298 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.120568777 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08287574 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.196728229 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071867491 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064056607 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203719461 seconds)
    (24/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.093637653 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.061551753 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071907298 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.240040533 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111390103 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062525974 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087203033 seconds)
    (31/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.169118615 seconds)
    (32/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.075117402 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070535299 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074453161 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074192226 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.215047306 seconds)
    (37/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071898682 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083275252 seconds)
    (39/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10701525 seconds)
    (40/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07930306 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071881477 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062762166 seconds)
    (43/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.139065366 seconds)
    (44/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069064027 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061830787 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164830463 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154724976 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.075465559 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.204465363 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076844802 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.151413777 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 0.239887343 seconds)
    (53/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089189249 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.155382047 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.182578058 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060389881 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.128514274 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.062283317 seconds)
    (59/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.120908042 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071544333 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06820368 seconds)
    (62/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070413246 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11628423 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060365813 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069660231 seconds)
    (66/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.132968561 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.132423493 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059706997 seconds)
    (69/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.0609566 seconds)
    (70/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089952611 seconds)
    (71/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068537337 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.076423067 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070845357 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.087301096 seconds)
    (75/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.186658979 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.074952306 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071059075 seconds)
    (78/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06045133 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.131595206 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.079523701 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.079446517 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.219550914 seconds)
    (83/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.080791326 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127208486 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074602309 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06176212 seconds)
    (87/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.202108819 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.061825532 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072276398 seconds)
    (90/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065563551 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181796846 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070710177 seconds)
    (93/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074778402 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061237056 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.152171316 seconds)
    (96/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069937504 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070422564 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074469626 seconds)
    (99/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070762554 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068170233 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136015207 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.068250339 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.154926331 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.061901665 seconds)
    (105/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155939815 seconds)
    (106/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.065904823 seconds)
    (107/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.074030905 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.163838804 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091082273 seconds)
    (110/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.160834929 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.063702675 seconds)
    (112/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072782053 seconds)
    (113/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071689865 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117674652 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07374542 seconds)
    (116/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067012788 seconds)
    (117/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.172270435 seconds)
    (118/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.247861403 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070426044 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.178155256 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.168810737 seconds)
    (122/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.132724786 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.062164929 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.217220601 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062508383 seconds)
    (126/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.168115077 seconds)
    (127/309) benchmarking ("sort", Float64, false)...
    done (took 0.129694424 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064290859 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202868671 seconds)
    (130/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061855331 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070773597 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071999988 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.162261653 seconds)
    (134/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.075067972 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073164552 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.154881649 seconds)
    (137/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.073809291 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.062056975 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.075563918 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063155741 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070833969 seconds)
    (142/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.137225439 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115628207 seconds)
    (144/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073219224 seconds)
    (145/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.06192612 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062597356 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086572585 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084930215 seconds)
    (149/309) benchmarking ("sort", Int8, false)...
    done (took 0.167213299 seconds)
    (150/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.070839702 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062423972 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.061986064 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063687323 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062023706 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066077292 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06196195 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061514234 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1569125 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063834288 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06221215 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063578232 seconds)
    (162/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.201558331 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062371622 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062052211 seconds)
    (165/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066160534 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.061687383 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.061692675 seconds)
    (168/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060066418 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.060317696 seconds)
    (170/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.132350158 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.1296812 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.060463656 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.121352322 seconds)
    (174/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06300602 seconds)
    (175/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06367994 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14129659 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.062621566 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142546647 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064983263 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08794465 seconds)
    (181/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.134192544 seconds)
    (182/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06191704 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.061499988 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.156402733 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.068812102 seconds)
    (186/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061202069 seconds)
    (187/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06110673 seconds)
    (188/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.130085934 seconds)
    (189/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060388848 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.220401062 seconds)
    (191/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.079029407 seconds)
    (192/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.069986448 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063334007 seconds)
    (194/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06360707 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073570136 seconds)
    (196/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063632128 seconds)
    (197/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073926338 seconds)
    (198/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065420191 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06550707 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.061084986 seconds)
    (201/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066281229 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062816849 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062824907 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062260554 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129351808 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071142145 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087078327 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.06989897 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116214508 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062178945 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069967422 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063099286 seconds)
    (213/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.062186527 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063869295 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07203552 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074351706 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.165011006 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084090898 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073101534 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087261355 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071902844 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136424376 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141772442 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136597163 seconds)
    (225/309) benchmarking ("sort", Float32, false)...
    done (took 0.131702015 seconds)
    (226/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064178202 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07559595 seconds)
    (228/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062280702 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07091637 seconds)
    (230/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.142593914 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164556087 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062426956 seconds)
    (233/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061959874 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090131839 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069531096 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.062765259 seconds)
    (237/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.069367877 seconds)
    (238/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.070985961 seconds)
    (239/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.138581813 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089165129 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.063825816 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086197915 seconds)
    (243/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118024526 seconds)
    (244/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070688528 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.06170939 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.062315857 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062080164 seconds)
    (248/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06188676 seconds)
    (249/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.062313317 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062095194 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13015978 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.063850483 seconds)
    (253/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063364106 seconds)
    (254/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063029219 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071177145 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063752741 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062482803 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114808264 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063756813 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115830041 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17067743 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06552762 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090144361 seconds)
    (264/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.063865008 seconds)
    (265/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063910926 seconds)
    (266/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.062770376 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066259246 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.062944861 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110670007 seconds)
    (270/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.064198281 seconds)
    (271/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071393148 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068937508 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06208589 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085709387 seconds)
    (275/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063521235 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076466878 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107254741 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085785326 seconds)
    (279/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071129912 seconds)
    (280/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065148374 seconds)
    (281/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.062816683 seconds)
    (282/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.067076022 seconds)
    (283/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062781077 seconds)
    (284/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.062082082 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06974328 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.062148356 seconds)
    (287/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062352989 seconds)
    (288/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063384838 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063226254 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073689647 seconds)
    (291/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.06391965 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122201308 seconds)
    (293/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062883818 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088881689 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062435523 seconds)
    (296/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063744242 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11857746 seconds)
    (298/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062180356 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.067796765 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068171607 seconds)
    (301/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060265491 seconds)
    (302/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062884581 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.059794129 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.081195931 seconds)
    (305/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.061440571 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.131079152 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.059895472 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.059627078 seconds)
    (309/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.071846402 seconds)
  done (took 31.623807338 seconds)
done (took 33.065983142 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083864086 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086765308 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070295621 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084188553 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.0793444 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09501767 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072072541 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077001463 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079952879 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07834371 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077775004 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07055979 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073994642 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073330336 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070731195 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086486587 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077251233 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071781633 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071372228 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062673428 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071533684 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063358475 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.0623289 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069679314 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074571584 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070487305 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072785292 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072565013 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063043777 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063161117 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068168897 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071901164 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065289845 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076260171 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071842525 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.0712893 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072664877 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07608584 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06318032 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063552519 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072775367 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063529662 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071305532 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069407208 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067777625 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070132283 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07202326 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075751828 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086465418 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067186804 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074278516 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074157222 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075249495 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068780773 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068374352 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07176865 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069173061 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087001247 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072269225 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067713396 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072628958 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072416944 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069284089 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071799065 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071405432 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073633427 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075836021 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069462157 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073073636 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070226771 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063014772 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071166753 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068003969 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063173733 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073906206 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076072286 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062279114 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067528035 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071480317 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071707576 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062990056 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066579076 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06063306 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066134618 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064668293 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067125698 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066475319 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068470258 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061644262 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07168085 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070187204 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071008561 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062560035 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075958614 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062440904 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069110097 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063050992 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063142388 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062543644 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068509992 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062578509 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066773748 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071343947 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062359415 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067315476 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07610386 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062614145 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070557234 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062217357 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063195483 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074485287 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071883883 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061732333 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067619432 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062478904 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069129608 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062529347 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062695141 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062895697 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062652664 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067159257 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063246035 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06715586 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068184739 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076001022 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062892739 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067571101 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067099378 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062556635 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069732484 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063436877 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062591426 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061470796 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075493767 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066373843 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061987656 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067391071 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066688338 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070344247 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061486548 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070607411 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068212914 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.207440082 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069115054 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061039925 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07274788 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065418257 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065439272 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061390022 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062147658 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.060932827 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.061566726 seconds)
done (took 12.263622617 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062525092 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.090190643 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.070258969 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.078348654 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.073920628 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062057806 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066380681 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.0796707 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064817571 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.08083358 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082289423 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081427756 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.08848317 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061011082 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061495467 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.062843409 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06057053 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068024792 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077353429 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082365247 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.090135877 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061688164 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070297764 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076288608 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072211119 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.082229338 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06453369 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064548958 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.0659336 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.080069928 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087093237 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06368088 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064086677 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078450563 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077756426 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071449947 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064043952 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068274371 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063982927 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063057467 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064690387 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078391644 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067505534 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072600864 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06412433 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064283826 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064242977 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067559755 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074710663 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067672633 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072245912 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076199881 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066177614 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063959543 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062491715 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068520673 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063508126 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064415385 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063630636 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063940234 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063385215 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065479632 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064348366 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064073928 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066663522 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066721258 seconds)
  done (took 6.118010932 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.07927857 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089878038 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077687837 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078581123 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061604981 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.061647214 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.061828145 seconds)
  done (took 2.049571342 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062183131 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.075044674 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078272199 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079052033 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071864132 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081007584 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064230027 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093740928 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06270411 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076576208 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109917505 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081169948 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067310998 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075290085 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063365093 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071443055 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063322085 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070614746 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071155127 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078642999 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066616244 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088898743 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075003038 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062598832 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.083203468 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067036451 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062869728 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064401079 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065413969 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065169662 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065120782 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102934264 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068813066 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078462739 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06525791 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063876985 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070489147 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0676478 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067902866 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070206547 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07022271 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065727616 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.063097322 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065557766 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066741049 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068103892 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062613703 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06529592 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065199522 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076694817 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062821881 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.06885106 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067479555 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069421363 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069886342 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069125132 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071829333 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065530666 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07640354 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072007549 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065233734 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073387851 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073329915 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069874409 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072963095 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068257648 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068631349 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070291623 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065075371 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066233914 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065415174 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07322343 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.0642981 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066037826 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067486707 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065915786 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068625427 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081354622 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081042603 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07676267 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065595347 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065441803 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068294821 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080714691 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0695128 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065571232 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067467086 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062988936 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068466874 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065667974 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069893363 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065321247 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072643475 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06662088 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06790678 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07346302 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063699709 seconds)
  done (took 8.366965229 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065169508 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063835835 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066416572 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065023845 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065027459 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065753156 seconds)
  done (took 1.965598377 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.08589837 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065006073 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077907606 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065032385 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099693554 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072382335 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072953064 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073998651 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.07749178 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076799779 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072490214 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07623822 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071895342 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06666657 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072192085 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066628056 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072615016 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069054422 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076970413 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067536808 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078372866 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066889424 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067059301 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076673292 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067792481 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065766389 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065068281 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076301818 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076003939 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076802642 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066274488 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067966595 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072203761 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073421957 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072663003 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072402954 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06515711 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070633709 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067762959 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067809909 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074551647 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066782174 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067363413 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070502685 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074028049 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072441713 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07054194 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068669399 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072028913 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070508623 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070548621 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065613255 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067667436 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070522874 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072959196 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073792205 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.069865749 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071305703 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066701951 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07277316 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065283919 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067898079 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073744516 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.06789318 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.06928259 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07072635 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072511842 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066930236 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067363884 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064815071 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070259485 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.065171954 seconds)
  done (took 6.662289066 seconds)
done (took 26.688087401 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.970870501 seconds)
  done (took 2.492520996 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.558238715 seconds)
  done (took 2.123335361 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.643010931 seconds)
  done (took 8.197778488 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.301579738 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.34252859 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.713826173 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132752067 seconds)
  done (took 3.078117975 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.712379099 seconds)
  done (took 2.278259617 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228927505 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219241117 seconds)
  done (took 2.023480935 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.344559583 seconds)
  done (took 1.903699423 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.080920893 seconds)
  done (took 2.635071393 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.226457765 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157574267 seconds)
  done (took 1.950158629 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447364798 seconds)
  done (took 2.008999128 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.297513425 seconds)
  done (took 5.862457189 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231814757 seconds)
  done (took 1.831358845 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.229141061 seconds)
  done (took 1.79207902 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.728009217 seconds)
  done (took 3.284869899 seconds)
done (took 43.033372839 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078361012 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080992223 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080582817 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076612459 seconds)
  done (took 1.852193765 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070491579 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065976372 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070160161 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070748638 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.06786538 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068680759 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069054646 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065771086 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067265459 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065957254 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064876739 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065849276 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068857245 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065782041 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069108499 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.070134405 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065850282 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065963399 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068811146 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066265477 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069453034 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066006118 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064180068 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065493501 seconds)
  done (took 3.176926958 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073943726 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068488154 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070937223 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067286582 seconds)
  done (took 1.848028383 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072477124 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082430008 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084010276 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088553581 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072633545 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073057837 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080264862 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08142093 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061246194 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084579793 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064147005 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062652782 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062424806 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082495379 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080734206 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.059176232 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060670189 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073209004 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072017907 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074350153 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063507117 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061540423 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072640282 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072369715 seconds)
  done (took 3.309447703 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075902809 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062060023 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076099077 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08824931 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090283985 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061545849 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076556376 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089482248 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136421066 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061410736 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067257809 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061681058 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103258443 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061432779 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077415405 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107121863 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110281951 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065247674 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095555533 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06184385 seconds)
  done (took 3.204686481 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073085604 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065291947 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067289915 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063186806 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074580719 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071119285 seconds)
  done (took 1.992664828 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06379771 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063990578 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06297468 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063740324 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069776918 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064869247 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063584769 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064833924 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065396185 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065153058 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064658654 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063543193 seconds)
  done (took 2.349549174 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157026134 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065499074 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066092288 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064546691 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067408918 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061889826 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07711158 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065081495 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.080288299 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062299409 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062954647 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065767721 seconds)
  done (took 2.470870633 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096634261 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127682984 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094511616 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071163828 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168629596 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093896452 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089922673 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.122281763 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092693449 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068325492 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091401849 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132082612 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092287497 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095426048 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079055684 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122757564 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106820865 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085660776 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113524925 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081517289 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069726646 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133264321 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069724806 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092455164 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101159558 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097384904 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107368037 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129636244 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081448385 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.088527164 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081823877 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072384421 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104320879 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083202973 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.096732349 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092748978 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097478972 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084559973 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085668597 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118168495 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152207785 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097571679 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097043578 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130585246 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075419166 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.105798394 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078557356 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097062886 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101519353 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091028045 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072999122 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089299947 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103926714 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099523747 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079070035 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079041647 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116527012 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.098184761 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095578227 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07891688 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106595476 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.084463122 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104350954 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263649572 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137708287 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098987571 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13485913 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121102858 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093437665 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087083615 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.088596151 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074789287 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108796631 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096711779 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134715541 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109386895 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099784008 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09629279 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081814813 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107922301 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114616363 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094049905 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093886703 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14496187 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107796816 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090726343 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096215091 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.142101465 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071081305 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147536536 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088726599 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121449834 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096360628 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136408055 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08878168 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.081111784 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105619287 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101557587 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086655634 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099857047 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081986036 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111636718 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090025002 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098427551 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078680771 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088604838 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086181263 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.09627886 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073832927 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102397612 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114855773 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112068335 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.072734124 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10636384 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083768024 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075790012 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093054831 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140429103 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083193721 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074610155 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150178481 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092449412 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115979174 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107822666 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082393519 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266680476 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134800928 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09048715 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087743297 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07357713 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150230608 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073469885 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115765917 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079049044 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099154714 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102401315 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129328719 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135352415 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092699948 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075743528 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089884266 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.104725159 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086288964 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085201606 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076266388 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107653504 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125661236 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.099881857 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080295207 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092318153 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068606937 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114145661 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075718752 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084149648 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095894542 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.087610236 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089588765 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142047101 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084323967 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109473268 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097422446 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066967346 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091394536 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153579129 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081947256 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.109002088 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116415509 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083228895 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067665966 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.096049137 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072814256 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108763263 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092883661 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1059869 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075740991 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104058058 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.066248167 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072674625 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129798834 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101793051 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089322026 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131467259 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103070159 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088655862 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102599666 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.094940149 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095278761 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101570995 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.260817268 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104030685 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.07151934 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127433557 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089532915 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07480727 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085043603 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07738098 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074604622 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097994261 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113279805 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086210407 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097851094 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099952972 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087321438 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.10677537 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086087868 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076379463 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129633594 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075215006 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074470798 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088393562 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106688622 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088886745 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133887234 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076815732 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133695176 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089536354 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08007081 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11228743 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066642262 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067494616 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078607025 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08966068 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113442709 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076741415 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07661389 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116777357 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130386396 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095319994 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102901635 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068024422 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089182545 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133646927 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.112975927 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079350904 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107612474 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081935801 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128096748 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094221354 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11820739 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104067692 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108919584 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089529899 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.078619721 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.071522754 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085978147 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108842496 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08365651 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079781103 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.065279097 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071918223 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092689855 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090983122 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111946493 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086594644 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132535126 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069918135 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097408649 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.255084612 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105083365 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088160819 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093311559 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090507665 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089817887 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08875757 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089534337 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070974064 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124238187 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100475827 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075590441 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086306502 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092770373 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10357561 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106211352 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107829719 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090771229 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104411292 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119581518 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096633063 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079684792 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082115247 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090483152 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081741478 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078707217 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101691891 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10985509 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095908948 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106928842 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.092879715 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.090838797 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10494143 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090768892 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086346994 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.115850845 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151016762 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099829467 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102488764 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08566122 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107430988 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106104414 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114055474 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110885184 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109452937 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0705352 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074933954 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.06997248 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106683913 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078895635 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116516759 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074499183 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104265944 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094370479 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077413311 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064630131 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099294899 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091182564 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079839894 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120925076 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.111216307 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07093607 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08892852 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10471292 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082055689 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120693285 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.09835861 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097595982 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068843834 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086993727 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07012543 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260270165 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099820029 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076187057 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.074711867 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068219757 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1053267 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081672841 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10695884 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086789326 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098073114 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117285306 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130057806 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085003342 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094229602 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115571114 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110711665 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.080468671 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11046275 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132771298 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.117034075 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078161713 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.08261558 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103885643 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103715686 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099994142 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074275717 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076811246 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107299459 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111835643 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065820024 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082345962 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068166633 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082109234 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110585067 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094229363 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082990402 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118301849 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074486556 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108293365 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096380692 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123937803 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122751638 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146020415 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097569896 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085670862 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077586229 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124155102 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.071307794 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116199451 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111940885 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088349902 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068313584 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08422846 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.096348113 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.627660328 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109605965 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075585624 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136821236 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087706541 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115682422 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084840584 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117468341 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088896316 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100875357 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088985453 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278506648 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0813888 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108048121 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.175525944 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108489207 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104617779 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072044244 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084022907 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.071153781 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.076243854 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078770768 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086439965 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106522678 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082216984 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10273219 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077501198 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104465914 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087760847 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086235108 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.096781647 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078695439 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135838312 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085588725 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119222651 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104288151 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076608758 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072223716 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084324638 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098845993 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079708097 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092277878 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076505602 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073791727 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150839243 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100511392 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083204232 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101278869 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.089347954 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084999508 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089848078 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115192228 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110333915 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073046583 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.088694211 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10443463 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079315196 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07501354 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097422108 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069289593 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089638064 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099608415 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096847057 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089108691 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100593796 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076045358 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085392865 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107966564 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083590808 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075282156 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074708684 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074676705 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073918797 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101247377 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105838444 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11142963 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105868722 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088349719 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091105636 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.076521568 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.218418108 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230770606 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095574234 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102477152 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074462564 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.129023271 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086928488 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087303285 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094471585 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099014887 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151864832 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073687214 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108849061 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094354149 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109903725 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087627538 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107412272 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095883117 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091898174 seconds)
  done (took 49.813643279 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.089628388 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.146836439 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151033613 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078251958 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091159623 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116315406 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204819603 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188397296 seconds)
  done (took 2.765841131 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064109382 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077662182 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099974356 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080547136 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064412039 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065445458 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.206122712 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078379606 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062135231 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099539248 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072430907 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.064214352 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.409388825 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.061723087 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063416865 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071401122 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062809012 seconds)
  done (took 3.383845988 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.359776768 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603818792 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.340777208 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071165246 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.989506867 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084668533 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.324418213 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132939712 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076547113 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532925303 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36792503 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127247524 seconds)
  done (took 18.701891101 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071503995 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070552822 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074575467 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074633214 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069791935 seconds)
  done (took 2.045560812 seconds)
done (took 98.493815525 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076657466 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.161755301 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063350508 seconds)
  done (took 1.944285624 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.079639484 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077266416 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.077116322 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.075160499 seconds)
  done (took 2.001554655 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069800585 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071927109 seconds)
  done (took 1.827734523 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.241330332 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160811241 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088831305 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079185887 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076688085 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076800397 seconds)
  done (took 1.930515559 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067893525 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067562019 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068622839 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068650712 seconds)
  done (took 1.958114819 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064442093 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06202793 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064514349 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068153832 seconds)
  done (took 1.946399029 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.07987896 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079881615 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074175529 seconds)
  done (took 1.921197227 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.091602898 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092685727 seconds)
  done (took 1.870113858 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076212967 seconds)
  done (took 1.76400935 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08542838 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094680831 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149423514 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10884199 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14850542 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.132054934 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074226607 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075417939 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070360049 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068353467 seconds)
  done (took 2.694351392 seconds)
done (took 22.11041206 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07500854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368141126 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355395296 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081929153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667777725 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352857943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98640469 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087010801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.09473777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064396925 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080364189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.642976537 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977978867 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323147411 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963696677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321416111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.644909279 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064163605 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063403292 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064295412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971149427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063597443 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064138363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06400702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.68031729 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368875957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064588113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319455255 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065051969 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069418062 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355202644 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068028399 seconds)
  done (took 16.099367212 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06618124 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119012952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.06955432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0826231 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068025267 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068177136 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069704267 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067157677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105431556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064397158 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080610602 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064007526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068139117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065566899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083873189 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065115492 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06577449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065678738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064641714 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068216094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082444479 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064081978 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065510253 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065309768 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065197805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0775957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065732338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064263931 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065506583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067534617 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068374664 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067355042 seconds)
  done (took 3.995158956 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116385566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122836544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069386197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102698721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115335919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065751766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144816281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087438021 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11020975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064927055 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081225881 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06461428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099418998 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066387862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084884403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065335802 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066315211 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065356633 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06475575 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065769866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083083211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064563433 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06543541 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065532315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065557188 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079226774 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065918475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06504555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065159965 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0671342 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068902676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066463775 seconds)
  done (took 4.25453582 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065908129 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068779667 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075954763 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.077104154 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063170598 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065464702 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066365773 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.063006414 seconds)
  done (took 2.255046595 seconds)
done (took 28.307974665 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074096441 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063615436 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067407955 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083548585 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069273056 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066740376 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061273604 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071796637 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069821955 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069742646 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071064384 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064520189 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068356067 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063301903 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.06893942 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062805942 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069167281 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066987096 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.068012557 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068407315 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065465418 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068455889 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070947267 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067936381 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067724803 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067569395 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071908725 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068223093 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06334055 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.066037274 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064752016 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073328672 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069985877 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069643082 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063271553 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062946717 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067201867 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064929559 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.069117718 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.072220211 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064793303 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072078296 seconds)
  done (took 4.536215222 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080120102 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085128018 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078199446 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.07698004 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095393799 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079059387 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082711567 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073860229 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.072433934 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081773875 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069337223 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.076222809 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073721381 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.068019654 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072851762 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070362463 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.075454515 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069891039 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073555012 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073653982 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082803671 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06831817 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075693016 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07462511 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069679872 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075683453 seconds)
  done (took 3.68977457 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.069989371 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082837322 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090245765 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146965412 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110772544 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078273404 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078508094 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092651245 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09547079 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065969527 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069549491 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091289767 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090471383 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072129486 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106063257 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081991902 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081384868 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068094283 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072653495 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094413939 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084037366 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081358148 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090186579 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079977486 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063194842 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066246854 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070062198 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076924585 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07043499 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074834978 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068131445 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.066436247 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.064468834 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.074344911 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067565776 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062955535 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087217767 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075261599 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078163961 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10883393 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074160403 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066414804 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093348651 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12665641 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064935349 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068621684 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068771188 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077214598 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066540926 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093689819 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079472325 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065270823 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.066078172 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066062802 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066086503 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08085525 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066951565 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066843684 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076308316 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071471546 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087374657 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070584971 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084800247 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064863835 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075280187 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066320689 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066500813 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063824768 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096321889 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071679363 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113815408 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066157227 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063761423 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076948999 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075735051 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071249378 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064969576 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08339982 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076294839 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068870325 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076644319 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068331506 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068265477 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09698449 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.0655398 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064590989 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063883422 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.06866127 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068339916 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065732198 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079553121 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064884552 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068089399 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.07988295 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06534101 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065981563 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068450702 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067396389 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064799483 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078342525 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.06957421 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066312466 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07731427 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066077079 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068184692 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078589756 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072298817 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064256592 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067008268 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068428518 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066516396 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06911972 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068016404 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067618391 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072237799 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072731322 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071043151 seconds)
  done (took 10.575460275 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157782766 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148604753 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065575317 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141694198 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072117499 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.06930542 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.142416501 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.08311475 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064000657 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065463838 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063363624 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094306141 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.09109992 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.099294992 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068807058 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064140838 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087201089 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.096049696 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146317217 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142349179 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088876269 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071925919 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067916436 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067522544 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067376999 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07256655 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.079390406 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.071712298 seconds)
  done (took 4.303541643 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.07352599 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.088015756 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.068572726 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075543788 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.083524568 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066075206 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067867256 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067576271 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080902596 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075375659 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066099384 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070382587 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069764854 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068349894 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065721197 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07158169 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072537928 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06532204 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0698206 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071052629 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076216516 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090920673 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069826697 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065168445 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068135395 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06530914 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074553007 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078238584 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065691836 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.081393042 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063655309 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070294992 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079897801 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06633639 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065352829 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065718801 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065889898 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066082878 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066572083 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064297401 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064731228 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070846765 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064524768 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074214013 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079706812 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073157237 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068272019 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068632593 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068515559 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063408615 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068704801 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068412127 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068119041 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07298661 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069110606 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068601249 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069603465 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091588563 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072492515 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064999732 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065227336 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06419729 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068200134 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075803036 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082788287 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068626288 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064618477 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066012547 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071216424 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079857629 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.065328332 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07065884 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063692657 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066455895 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068596994 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068172284 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066905995 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063655162 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063784109 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064938076 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066560597 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065609337 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065404426 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067907242 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064340723 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064828228 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065867878 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.06735461 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074736511 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065523629 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069398614 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067377319 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064463589 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068057766 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071252607 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068318756 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079084704 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077440906 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066541882 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064394296 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.07923 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068518761 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065448997 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071976767 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07013536 seconds)
  done (took 9.093173238 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086453666 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067793091 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08235687 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089982633 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.075890721 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071444492 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076770503 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066730999 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08195248 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064970717 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074334832 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064765508 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077076115 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075595916 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066370583 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07405619 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066558383 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080853114 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078171758 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063235919 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072755889 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077028509 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077729674 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08017916 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079759904 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081202717 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078139405 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068588604 seconds)
  done (took 3.867439048 seconds)
done (took 37.766841838 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.794501258 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.059476132 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.779484758 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.019825343 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.84020655 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.092113238 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.823589899 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.774280078 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.993656308 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.827300029 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.125542739 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.26033108 seconds)
done (took 66.160523767 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.840960678 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.936540354 seconds)
    (2/2) benchmarking "String"...
    done (took 2.026929556 seconds)
  done (took 5.674405181 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.002764486 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.574458736 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.042306777 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.773682159 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.779272303 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.21996117 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.580770425 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.238515618 seconds)
  done (took 30.920876197 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.991586105 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.007683494 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.485155593 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.521889617 seconds)
  done (took 15.761212184 seconds)
done (took 64.004403796 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.819296417 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.774391551 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.785978109 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.801685777 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.786267551 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.777358335 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.78040645 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.777622665 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.808648125 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.896469959 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.7747933 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.791406281 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.779335417 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.823976181 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.401112799 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.827341913 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.786550016 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.782178168 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.801497675 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.781321944 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.785209926 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.937232697 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.278220504 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.97881057 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.38907447 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.987235066 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.222232311 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.199596662 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.784557249 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.775223527 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.828376052 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.954599723 seconds)
  done (took 204.390149238 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.776546352 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.920611143 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.951594741 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.800004465 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.260488655 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.954085655 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.879740793 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.299998945 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.783893153 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.805668137 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.070172344 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.777830646 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.091848142 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.718015279 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.812784056 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.875662325 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.023434818 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.068964739 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.815401425 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.928698528 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.803001771 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.928275202 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.885517608 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.024034844 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.808588233 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.874769505 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.792321625 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.786581111 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.963059422 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.996389473 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.790512873 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.818440155 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.956113934 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.64582982 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.791651762 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.798878835 seconds)
  done (took 170.994123814 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.96576568 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.785299769 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.778075697 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.834006183 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.901211202 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.781850991 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.443992403 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.787795644 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.155386584 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.787224152 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.778457032 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.778186237 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.779171836 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.791123121 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.857268302 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.782424167 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.794811626 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.779796467 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.803822063 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.783375298 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.777981727 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.780600474 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.779897233 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.777568376 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.778472792 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.779763558 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.013165246 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.023216452 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.780410937 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.78033825 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.819955476 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.797240126 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.896443506 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.7840312 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.874276362 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.835350692 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.897239567 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.783338693 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.996268205 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.852120476 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.779579704 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.778328424 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.842317986 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.792641721 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.7801386 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.784746907 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.785386093 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.843306265 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.032422618 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.78501923 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.901585393 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.267849159 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.783935431 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.779745725 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.779501672 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.372356682 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.784444236 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.78127816 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.786625274 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.786914454 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.780567574 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.780965599 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.16543471 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.85085149 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.021503811 seconds)
    (65/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.088868943 seconds)
    (66/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.787121777 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.105042323 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.904219432 seconds)
    (69/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.781258646 seconds)
    (70/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.781133721 seconds)
    (71/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.781551721 seconds)
    (72/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.787597459 seconds)
    (73/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.781545228 seconds)
    (74/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.784458086 seconds)
    (75/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.902487369 seconds)
    (76/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.790741764 seconds)
    (77/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.907411767 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.866070024 seconds)
    (79/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.903716379 seconds)
    (80/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.785590607 seconds)
    (81/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.792836764 seconds)
    (82/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.604446372 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.85492617 seconds)
    (84/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.817634967 seconds)
    (85/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.603130494 seconds)
    (86/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.785867387 seconds)
    (87/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.153828497 seconds)
    (88/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.559791497 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.787054546 seconds)
    (90/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.782356424 seconds)
    (91/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.793790753 seconds)
    (92/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.781833525 seconds)
    (93/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785321757 seconds)
    (94/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.783099656 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.861617796 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.782201399 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.782641649 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.784677711 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784303743 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.90409559 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.499177147 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.226558321 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.787937632 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.782114445 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.790353585 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.782011652 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.862120106 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.902951936 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.787732618 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.848860082 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.788768072 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.784021719 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.867609969 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.782654543 seconds)
  done (took 401.569752221 seconds)
done (took 780.694398044 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.352134126 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.32044571 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.417397121 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.337200932 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.311953835 seconds)
  done (took 13.457896159 seconds)
done (took 15.178405652 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.796561168 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.788193657 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.841670144 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.866627009 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.800062538 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.801549917 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.862789787 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.803280788 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.834420597 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.839634401 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.867590146 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.867648276 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.807245063 seconds)
  done (took 25.496822603 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.794450702 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.936067658 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.006724081 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.824927556 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.792802862 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.021546994 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.849131299 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.928366634 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.940057858 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.019873954 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.029504919 seconds)
  done (took 22.866320073 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.792549705 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.937709501 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.020350743 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.828126456 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.816213448 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.024027049 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.85547349 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.934482629 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.939512661 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.020390722 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.031953175 seconds)
  done (took 22.930016 seconds)
done (took 73.014909892 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.787658006 seconds)
  done (took 3.509063212 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.817390149 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.956463199 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.788341407 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.789879856 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.788800375 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.788999416 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.786812235 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.78965329 seconds)
  done (took 16.228946129 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.788959652 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.790668341 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.787965773 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.787984401 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.78866874 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.788625976 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.788555797 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.78978478 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.788554379 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.788900535 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.788513439 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.789963407 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.788584187 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.788613602 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.788485635 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.788078408 seconds)
  done (took 30.344237988 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.790029357 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.788027952 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.78820624 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.788045745 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.788568328 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.78885954 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.788735062 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.790174242 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.788991591 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.788694082 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.78940573 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.787380915 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.788605704 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.791965579 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.788650474 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.789949099 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.788263091 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.789773674 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.794759001 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.789482386 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.789821171 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.789573512 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.788691052 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.790270213 seconds)
  done (took 44.66919759 seconds)
done (took 96.483003485 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.549095892 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.776631955 seconds)
  done (took 10.04882545 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.794009972 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.791268162 seconds)
  done (took 5.314553241 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.79125397 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.790468207 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.792781696 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.791540465 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.790653945 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.793144747 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.792582916 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.792050659 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.791871285 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.791399547 seconds)
  done (took 19.643407211 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.791213975 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.79241317 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.793185982 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.79276054 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.792082745 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.792062442 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.792121014 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.792135112 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.791454619 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.79140595 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.790854199 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.792253868 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.792544667 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.79229787 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.79421998 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.793083031 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.791041427 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.793118929 seconds)
  done (took 33.986257992 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.791992002 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.792231455 seconds)
  done (took 5.30980635 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.793017452 seconds)
    (2/7) benchmarking "second"...
    done (took 1.792384234 seconds)
    (3/7) benchmarking "month"...
    done (took 1.79289539 seconds)
    (4/7) benchmarking "year"...
    done (took 1.79199764 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.793012105 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.79147325 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.792295567 seconds)
  done (took 14.273483921 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.793613046 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.951215757 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.016582051 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.654064753 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.793961947 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.795499534 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.138015375 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.79655088 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.798644076 seconds)
  done (took 20.465254786 seconds)
done (took 110.768425045 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.641224369 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.792409881 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.058498722 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.913115813 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.813001449 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.088864463 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.830106191 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.075980806 seconds)
done (took 42.941976229 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.858582069 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.792252236 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.820763517 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.821661695 seconds)
  done (took 22.163085594 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.804131943 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.124834147 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.816713877 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.603919313 seconds)
  done (took 22.097351934 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.188587021 seconds)
    (2/2) benchmarking "read"...
    done (took 2.142029032 seconds)
  done (took 6.063635841 seconds)
done (took 58.914223082 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794229641 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.794551409 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.794251403 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.793341482 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.793687115 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.795246933 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.794357171 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.794650288 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.794476131 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.795363226 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.795224847 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.794934291 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796201185 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796906652 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796007201 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798491022 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.794951325 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796237261 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795738324 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.795803256 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795366341 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.796006894 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.796289479 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.795999396 seconds)
  done (took 44.816882561 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.795739757 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.795229345 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.796889254 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.796385178 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.795767481 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.797576417 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.795896962 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.795569299 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.796457645 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.796090133 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794944721 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.796484019 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.796124611 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.796730281 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796436841 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.796901146 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.797077801 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797333671 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796554287 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.796887815 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.796639773 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796059597 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.798135202 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796073479 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.796395338 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796683758 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.796646719 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.797652151 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797801688 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.796936405 seconds)
  done (took 55.627736004 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.797683341 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.797574772 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.797854765 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.798187291 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.797679599 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.798458953 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.799619131 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.79847613 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.798279498 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.79726587 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.798096271 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.798624863 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.797461801 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.797724106 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.798268615 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.798560998 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.79812745 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.797979902 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.797710795 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.798146383 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.798267924 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.798980745 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.79880328 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.798599678 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.799516045 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.79841929 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.798143516 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.797972519 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.798932215 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.798226696 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.799746661 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.799270195 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.799276049 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.798126831 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.798818307 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.798443025 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.798613351 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.797943534 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.798544644 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.799448899 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.799393527 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.800387066 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.799020442 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.799251074 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.800252303 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.800120929 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.80143659 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.800041361 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.79998677 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.799792077 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.798946317 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.799869799 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.799294245 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.798968176 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.799541111 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.799494358 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.799827541 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.799833825 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.800467311 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.800404347 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.799563478 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.800745721 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.801857694 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.800763665 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.800949664 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.800757817 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.801361391 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.801539345 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.800805258 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.800712785 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.80134934 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.800734013 seconds)
  done (took 131.276819487 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.801607702 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.803118602 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.800876452 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.801909547 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801404188 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.801940732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.801832384 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801871095 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801634254 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800957002 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801993233 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.802286391 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801693888 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.801684654 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801451511 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.801947597 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.801011838 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801961109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.80263518 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.801386146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801751306 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.802450799 seconds)
  done (took 41.374708471 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802622416 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.801989909 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.802030012 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.802090944 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801931376 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802962704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.802850939 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.802332635 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802165525 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802708767 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803393271 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802462452 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.802407375 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80296269 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802555641 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.803523715 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803201515 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.803677641 seconds)
  done (took 34.184683362 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.803078197 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.803292386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.804168708 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.802931481 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.803203814 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.803660572 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804294962 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.804410111 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.804268629 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.804522612 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.805926039 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804321643 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.803403698 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80323317 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803137946 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.803904922 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.804174353 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803643458 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80407218 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80397114 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.80382802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804162158 seconds)
  done (took 41.423474029 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804064978 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.803796496 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.804676566 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.804310284 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.804490192 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.804824673 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.804431821 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.804532991 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.804441946 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.804422628 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804798006 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.805412335 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.805004428 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.804946876 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.804777379 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805725362 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804444484 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804927308 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80783659 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.805585942 seconds)
  done (took 37.836125145 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.805801176 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805926238 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.805891143 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805648654 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805643336 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.805664236 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805577707 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.805978375 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.806443703 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805793366 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806655132 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.806527381 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807350521 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.806468955 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.806478099 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807397756 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810161487 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.806863245 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.807259741 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80627659 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.808149538 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.808115855 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808057184 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.807698159 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.806894726 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.807220916 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807155001 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.806687419 seconds)
  done (took 52.334117311 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.807301875 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.8065484 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.806236369 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.808915689 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.808342596 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.806945327 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.807292278 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.806778473 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.807190219 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806328534 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.807621034 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.807116155 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.806907314 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.806402995 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.807598786 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.807381558 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807414256 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.80818301 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806729557 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807319875 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.810174811 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80751412 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.807164777 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.806682203 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807795136 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.807838937 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808454931 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.808425075 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807071387 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807827663 seconds)
  done (took 55.964815956 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.827991464 seconds)
    (2/2) benchmarking "in"...
    done (took 1.828298109 seconds)
  done (took 5.398256888 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.807965378 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.808345632 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.809184343 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.810641259 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.808753984 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.808631508 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.809612586 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809214719 seconds)
  done (took 16.214698877 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.8088913 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.815165783 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.809688709 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.810584314 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.809480901 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81723048 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.811311604 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.81096741 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.812339721 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.812023468 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.815577978 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.81457951 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.817908039 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.813818808 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.810298832 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.811185009 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810363302 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813075482 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.811473669 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.809848728 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812998896 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811373485 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.810488249 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.810057342 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.810655217 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.811774729 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.819928598 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.813881347 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.811956513 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.810880674 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.818480016 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.811982055 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.811156337 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812897965 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.810500243 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.811398035 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.819002555 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.811766905 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.811048574 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.810555082 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.813161868 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814076518 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.814581707 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.819725619 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.812922776 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.811277105 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.811000177 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.81328084 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.812059236 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.815362293 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.820336302 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812786199 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.812625385 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.811139217 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.817903309 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.812560111 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.811694159 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.813816101 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819368436 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.820327418 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.818580022 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.832250167 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.821420584 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.813061534 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.813038703 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821935896 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.836409957 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.814580991 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.815995253 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.813866713 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.821401719 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.814619683 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.813914012 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.815586024 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.825656124 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.821190206 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.814846392 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.815189241 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.814888078 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.813839067 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816664045 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.814674977 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815873802 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.813756338 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.823866043 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.837951633 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.81485517 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.816349144 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.816309767 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.817463365 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.820345058 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.818689939 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.815775892 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.817031203 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.817278395 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.818350023 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.815257037 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.816402449 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.815940909 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.824105862 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.815799476 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.816378254 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820234402 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.824253934 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.815643998 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.815849454 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818067033 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.816664647 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.823235809 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.818334795 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.818378871 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.821274142 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.819087718 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.821814124 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.818097862 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821710223 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.824858985 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.827481404 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.818185596 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.820658309 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.822402708 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.82011314 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.826666792 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.839472656 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.816445526 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.821499014 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.823763068 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.830881393 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.821210937 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.81619702 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.819142015 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.817445393 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.816129715 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.818646809 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.81713886 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.816366253 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.816877624 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.81726752 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.817765791 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.81849969 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.818421027 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.81896392 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.81982379 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.818387159 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.820112979 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.819060843 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.821362277 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.824940496 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.818968271 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.818259454 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.81824546 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.819705639 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.819296635 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.817428017 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.818639403 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.818322157 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.817244152 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.819415735 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.819398238 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.819770324 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.818386623 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.820114826 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.822621803 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.817603368 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.818171456 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.820164703 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819109638 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.818785674 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819833801 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.81991023 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.821546134 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818154681 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.822036815 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.818738697 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.820534293 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.823035242 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.82146925 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.820171997 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.822897184 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.830511327 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.82307902 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.828888937 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.818377393 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.82598342 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.819399613 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.821409983 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.819776379 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.821114458 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.819429776 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.820573563 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.820627518 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.826590473 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838860946 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.829961106 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.822657008 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.821504075 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.825897805 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.824993193 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.82573886 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.819700151 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820645977 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.822602178 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.820447593 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.820093066 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.820850471 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.822621643 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.820848512 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.820394478 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.824409 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.820707331 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.820635941 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.822057707 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.820748485 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.823584791 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.820769416 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.820258676 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.82173311 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.821343149 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.828548688 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824031517 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.821569768 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.822120338 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.825198091 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.82144524 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.822863677 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.823479207 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.825646873 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.821951646 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.82432368 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829441349 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.824553756 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.822489426 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.822233411 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.822724524 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.824796281 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.822192209 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.825996652 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.830173063 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.826388332 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.822725366 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.827023156 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.823072375 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.826154981 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.822551975 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824464056 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.822777779 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.824017498 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.822683441 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.822732488 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.829412334 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.823477469 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.824434897 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.823102561 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.824114858 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.824336964 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.825828926 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.824327174 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.826879549 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.832935805 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.829688126 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.824266874 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.826846686 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.82640527 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.824990641 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.828931601 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.825367752 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.835055093 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.833376445 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.8233208 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.823597242 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.823767397 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.826781335 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.823575319 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.823867366 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832797953 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.826300961 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.825651297 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.829121034 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.825360879 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.824701154 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.832004203 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.826202258 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.828125648 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827060207 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.826247274 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.827382942 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.825495945 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828633205 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.82474982 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.827026607 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.829627224 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.827720893 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.8262455 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.825460058 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.833523627 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.825586722 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.826046282 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.832293507 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.827432217 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.825169861 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.826110557 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.825291248 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.827542733 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.827037825 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.826092526 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.827122449 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.826561951 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.831584508 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.836164685 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.828909669 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.834561704 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.830494604 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.836148625 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.826020845 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.82668268 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.825666385 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.831100956 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.836457281 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.826228159 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.827556935 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.833736765 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.82907633 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.828356682 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.830412851 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.828280753 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.827415361 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.827377493 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.828623305 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.833260612 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.830826047 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.827736915 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.827878109 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.827965853 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.826564589 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.831114469 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.829229969 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.828505303 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.829146005 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.828428452 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.827973847 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.829678718 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.828180133 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.828211712 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.828705763 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.828986896 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836191821 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.8289669 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.829751674 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.833907701 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.830052 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.83778577 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.829837837 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.829207819 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.831541406 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.828872091 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.83128429 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.830444785 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.83033382 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.829895621 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.829980513 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.830616374 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.840881731 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.836352678 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.831969363 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.831067279 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.829438288 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.831057746 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839715247 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.853156728 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829770915 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.832034355 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.833247829 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.837321344 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.832746998 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837004439 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.833087825 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.837868952 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.831392667 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.829931275 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.834063153 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.841173222 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830725035 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.831394808 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.831577273 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.835800836 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.831692007 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.830639393 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.833758898 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.832442025 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.835826904 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.842277931 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.831686447 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.835525413 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834532294 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.83229311 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.831732349 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.831802213 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.833648612 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.833793417 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.833608214 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.831800097 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.833323125 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.838524646 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.83253691 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.835435619 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.841238508 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.831766373 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.831994895 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.832343708 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.833376971 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.834392625 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832292157 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.83217691 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.833878453 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.833289981 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.835070849 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836141967 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.840492454 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.834263354 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.83176574 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.832867868 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.836038421 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.832773955 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.832692118 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.832953788 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.840590874 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836648559 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.843145029 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.843498566 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.832167009 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.834282512 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.840267985 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.840908713 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.834196588 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.833040269 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.833630756 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.835557173 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.835310204 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.834446062 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834459666 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.834774646 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.838876273 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.833583214 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.833798288 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.834216942 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.833170459 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.837373501 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.836043805 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.83960929 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.835175461 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.834863824 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.83352649 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.835049675 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.836142382 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.836169281 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.83625539 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.834510916 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.83663799 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.837450668 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.838812795 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.834241016 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.835192277 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.836090296 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.833919219 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.833604354 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.8358266 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.835581922 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.835210318 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.838308203 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.842801177 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.835316842 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.839825814 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.837337225 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.837791241 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.83539724 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.834975313 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.835253468 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.835461382 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.843074114 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.835889325 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.835243289 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.835993959 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.83501283 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.840451593 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.836393713 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.840290712 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.835842358 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.835521042 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.838762195 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.839243441 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.845242919 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.83939475 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.83902215 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.844607253 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.841735443 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.839044737 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.836579932 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.8371941 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.837125996 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.836947006 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.840866443 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83834014 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.839760211 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.837347168 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.840641617 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.836847854 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.839636143 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.83822431 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.836653388 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.842274416 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.847413069 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.84604351 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.838291802 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.839743766 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.836858359 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.841950812 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.848221856 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.836857778 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.838943588 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.837259061 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839968842 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.840526684 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.845493512 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.846863631 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.84145513 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.837548579 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.843681173 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.855248163 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.841669399 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.848986787 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.869290262 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.840353135 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.838347215 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83941575 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.839120313 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.838611619 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.840252549 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.840450645 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.846520917 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.838599215 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.839077235 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.846635768 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.838347514 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.838398357 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.839108574 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.840158129 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.844786796 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.839301655 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.848531073 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.838727156 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.840407474 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.839686582 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.840156747 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.841570771 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.840258707 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.839611765 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.843389074 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.840980748 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.839696461 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.849255078 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.839720356 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.842017908 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.851169825 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.850508071 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.839187692 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.839686423 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.839456125 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.844958165 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.843449333 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.842755915 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843990818 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.848115154 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.844827055 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.849264691 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.840412103 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.841987373 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.841560386 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.841455153 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84066468 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.852622777 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.851790723 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.841172365 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.841623226 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.847057388 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.841841411 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.85016505 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.848451694 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841353334 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.84270048 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.841401084 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.841958077 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.841559971 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.842181854 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.847076844 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.849664468 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.842989003 seconds)
  done (took 1091.548571963 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.841616637 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841368969 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.842085717 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843072706 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842593575 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845078786 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842564437 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.843082275 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844007931 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.842137259 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.844090857 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843930556 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842784232 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.843336386 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.842771895 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844034298 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844184652 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842658317 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843114895 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84428565 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.842455919 seconds)
  done (took 40.480684515 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.843995918 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.843659409 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.843633606 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.843988309 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843892749 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.844527363 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.845305194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843783492 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.842393655 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844358241 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.843701529 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843173517 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.8435478 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.844169915 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844305044 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.844671943 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.843828423 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844965964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.841777031 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.84211678 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84248184 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.842520644 seconds)
  done (took 42.338247502 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.842953709 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.842714205 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.845521033 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.843219549 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.843567954 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.844019909 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.843387854 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.84417935 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.844067069 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.845416843 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.855382892 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.855615539 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.847341709 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.846849097 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.845054747 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.845307214 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.992463894 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.847143931 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.846048312 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.844198332 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.843649195 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.852746246 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.84608372 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.847729767 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.845900675 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.846819501 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.846414105 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.844552863 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.844367988 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.844974269 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.849247123 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.845190361 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.844442778 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.847170797 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.841557356 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.845885491 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.846266093 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.846271997 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.844360435 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.843879716 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.854461682 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.866872136 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.838219209 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.841616157 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.850111903 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.841337293 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.840333571 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843056855 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.8527317 seconds)
  done (took 92.387754773 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.836691676 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.835762913 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.834869681 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839581941 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.835429211 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.836470273 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.836877564 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.836316901 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.836656397 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.838186871 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.835390021 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.835055299 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.835918564 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.836288665 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.83791418 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.836469995 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837109742 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835694837 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.835758013 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.836360119 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.837995883 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.835401053 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.835672284 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.836143449 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.835845655 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837735081 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.835715324 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.83667366 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.834852823 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.836053394 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.835523329 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.836552366 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.836223527 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.836195983 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.83722699 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.83669611 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.837474902 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.835049091 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.835766911 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.836193518 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.836109038 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.835917573 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.836979792 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.834428411 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.834319828 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.834456741 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.834273859 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.83498771 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.834106477 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.833645204 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.834561994 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.833779241 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.834714716 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.833711135 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.833088405 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.833537442 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.834582294 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.834966953 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.835691056 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.833976323 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.833898464 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.834614214 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.833618165 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.834042618 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.8332745 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.833565356 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.833510812 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.834065784 seconds)
  done (took 126.586939721 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834861409 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.834043749 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834461147 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834659026 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833828968 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.834707709 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833551508 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.833934586 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.835315537 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834141351 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83524258 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.834765796 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.83406249 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835014923 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.834950281 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.83546695 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835323523 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.835468333 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.835357103 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836282679 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.834984002 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.836603032 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.83698635 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.834937948 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.834772968 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.835479156 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.835411366 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.835918275 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834258373 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.834969137 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.834800501 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.833978387 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.835099639 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.837551322 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.835141893 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.835185068 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.834770282 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835977196 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.835926249 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.83498079 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.835612996 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.835344961 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.835169937 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.837079703 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.835629944 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.835023357 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.834959585 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.835288049 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835250621 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835967161 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.834792699 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.835123127 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835679136 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.836184773 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.838858821 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.835109908 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835579947 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.836387872 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835621255 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.835227031 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.835864993 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.834735776 seconds)
  done (took 115.555596109 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833241924 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.835464636 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.834417275 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.830077403 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.829790722 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829705448 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.829963352 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.829591632 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.830926374 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.829826107 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828940435 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828282047 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829698314 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830751693 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827358921 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829650662 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827144394 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828075866 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828762688 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.828650605 seconds)
  done (took 38.366521322 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827494935 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.828656875 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.829049518 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829031728 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.827297516 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.827300956 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.828849477 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827656077 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82803464 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828974303 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827666767 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.827234594 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828052687 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.827351693 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.828569544 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828174685 seconds)
  done (took 31.009504986 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.827233844 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.827880577 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.830098999 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.8291289 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.827563759 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.827417914 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.828612925 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.827230075 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.828281491 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.827443498 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.827198613 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.829015315 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.826372909 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.826837075 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.827676608 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.826984402 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.827996276 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.826830497 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.828260169 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.831644237 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.828830733 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.827079584 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.826932343 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.826449128 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.827761205 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.828309092 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.827509892 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.82754934 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.828674031 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.827923535 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.828187816 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.827273168 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.82837889 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.827834708 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.827371948 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.829253429 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.826732063 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.82702202 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.827102132 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.827241874 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.826618391 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.827225574 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.824634431 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.825889707 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.827298268 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.825969911 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.826896768 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.82644783 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.826430094 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.825162991 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.825430257 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.827112934 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.82697042 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.825572663 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.825924486 seconds)
  done (took 102.267991207 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826109229 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.826581053 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.826282795 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.826378045 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825918982 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.825973386 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.825254589 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.827069825 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825495468 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.826108586 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.825363503 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.82490387 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827229975 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.824918583 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.82588179 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825535425 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.826423172 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.825160209 seconds)
  done (took 34.624915698 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.826079723 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.825380918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.826086567 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.824730571 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.826617868 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.825553403 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.826244213 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.82622018 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826134426 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.82605867 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825960113 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.825404976 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825460776 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.824932294 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.826154993 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826636036 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.825348242 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.825304757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.825801657 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82581008 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.825913595 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.826221826 seconds)
  done (took 41.927321139 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.82590294 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.82552446 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.839546428 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.846517606 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.844844232 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.855603996 seconds)
  done (took 12.7955065 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825507693 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824144076 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825787494 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82556046 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82569111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824629168 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825470743 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825910632 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825198241 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825756435 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825060143 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82596859 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825796227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825158473 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826025394 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824978191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825140314 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825632547 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825872524 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825917014 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82453653 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825295338 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82470735 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825812326 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827109025 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824987846 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825791971 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824968176 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82524961 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827727964 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826145321 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825583219 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825390706 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825864188 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825998086 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827420406 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825289213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826309978 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825168531 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825507279 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.827109302 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825179204 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824948006 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825409103 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825142781 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82758569 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826465765 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824387799 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825468876 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825455705 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825089505 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826613672 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825612074 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824744505 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825257022 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826199672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82586471 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825373187 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82614909 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825014161 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825401118 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826090926 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826696271 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825475931 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825202159 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825284469 seconds)
  done (took 122.251249209 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825629322 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825668754 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824445189 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825350625 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826405557 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824916628 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82630809 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825911604 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825200353 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825996459 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825543974 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827421868 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824783518 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825207883 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824735328 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824878896 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825744044 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826749545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824866351 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825644878 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82576925 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825771123 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827536755 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8252986 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827119739 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825812378 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826777439 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826493641 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828790625 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826055315 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82545553 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825931305 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826095821 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826205171 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825998589 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826294109 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827553823 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825981605 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827327828 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827326242 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82667031 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826086736 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825872309 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826324796 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830608816 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826592149 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826134364 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82638954 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826963707 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82701498 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828519663 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830147378 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827587308 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827270854 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82776176 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829904038 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828026268 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827576694 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827283897 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827451798 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828327479 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828185308 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827014248 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826861215 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828975433 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828400275 seconds)
  done (took 122.31902729 seconds)
done (took 2532.64645034 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.859920873 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.840145203 seconds)
  done (took 15.460175361 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.994950892 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.946730636 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.829887724 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.882568861 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.8309224 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.851564471 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.842437996 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.830471237 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.831150505 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.831385797 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.830453914 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.013409867 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.832617446 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.830451954 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.830172389 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.923106281 seconds)
  done (took 51.695506101 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.836395122 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.836173187 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.845886376 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.836432623 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.836063547 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.849883569 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.870046657 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.840951145 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.870381392 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.850203707 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.904499525 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.84980013 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.835405166 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.88543409 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.848812424 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.849186073 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.938648515 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.916304209 seconds)
  done (took 35.261824547 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.911784978 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.849621407 seconds)
  done (took 10.529606787 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.836552401 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.840255349 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.844372618 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.832656954 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.840660528 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.850618811 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.855819303 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.849790581 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.856075072 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.845577878 seconds)
  done (took 70.217089819 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.839742789 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.837903584 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.83984425 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.833315394 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.831908551 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.838796577 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.834998965 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.834597205 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.519162281 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.870850968 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.844373671 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.844837729 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.835039735 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.835198607 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.831697767 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.86266005 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.974415054 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.830642974 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.830188013 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.842233567 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.835046563 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.891328521 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.851358134 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.838874154 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.866633579 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.512275474 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.846497252 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.840368907 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.94356794 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.830604207 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.835280206 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.046729715 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.838464057 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.298711618 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.120338321 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.839382826 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.847033141 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.841479207 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.831278494 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.953086748 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.836230529 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.843205907 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.786307284 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.091288798 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.928892762 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.881941236 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.169331888 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.838900565 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.837334111 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.870140138 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.842893729 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.838945234 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.852752864 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.356555806 seconds)
  done (took 131.060726957 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.833648843 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.177517875 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997827689 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.83882821 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11632424 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035825453 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833815691 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87816069 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.834759806 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.058578293 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087030476 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.938077148 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834423914 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.832707195 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.834821919 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.832272074 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.986375232 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.902069969 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.834976963 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.832002623 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859416579 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074820088 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.955238289 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.837203835 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.860650431 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.043162512 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.952649767 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.936539706 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.642865763 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.831234284 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.89387754 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.835774043 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.8326947 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.833355379 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.986679435 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.924498876 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912989941 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.835390943 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833921155 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.833945978 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.489782029 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031383408 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.926571695 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.962987329 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.083535061 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.035823656 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.611907003 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.833375962 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.563682554 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994223634 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.061772472 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.060576378 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.954267912 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.837737458 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.092745416 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.834660476 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834373139 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.080884266 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053233752 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931558062 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836404001 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.836095352 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.833535403 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.070450363 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835140553 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.928718315 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.836871189 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.83670338 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.929036956 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.934287681 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.062314838 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044315597 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.864420747 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.183217184 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.332741535 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.079466564 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.899395293 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085930343 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.838841187 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834734185 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911582441 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.678465681 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.086722512 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.079937637 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.078557507 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868058008 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.555716476 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.834455684 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.059011788 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.05308139 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.094515847 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.079685245 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.071127021 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.15004773 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.835642531 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.835216599 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.058438296 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.957085104 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.841783081 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.183472066 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067096524 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.393985924 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.863342473 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142859853 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966044052 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.843410839 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.461862524 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.837936045 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.063560123 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.873729823 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.838460403 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838610623 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.05300084 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.824411867 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.835297309 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.709270585 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.896475797 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.840364322 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.066459192 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.840452761 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104247589 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838150856 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068412478 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.021866072 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.866588856 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.008157135 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.081382754 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.843611435 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.079989748 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.079420991 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.950821473 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109476247 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.716083216 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.841894266 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125249503 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840379124 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.837645654 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.005012564 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.840252826 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981109928 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.845146391 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.129875407 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858329253 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.06649052 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84531393 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.089843158 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868749813 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.88767921 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.841287556 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.96143339 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840009772 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.666251138 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994167235 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842870871 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840116856 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.392742369 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.83929962 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994543958 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.063749632 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859467391 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.909331166 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.496094027 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840013064 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925193998 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.861409695 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.224858598 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.840373689 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.089683933 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.844558219 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.839692112 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.841080873 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.073322934 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.076985939 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.840678114 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.839700685 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.742396575 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.839604542 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.839257127 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.0218097 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.178188405 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.841627064 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041504719 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844527816 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965749846 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.846899021 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.921039552 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171906427 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.839935415 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.841533255 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.840657078 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.842861804 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.842825038 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.046087614 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.865876055 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.378617539 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.97514486 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112997469 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.148706097 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.079841127 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.882772764 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.842718226 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09506268 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.843553901 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.902937502 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.84667509 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.861731798 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072662633 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.846969681 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.101123241 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.110755253 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.711672668 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886567453 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.844071733 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841404854 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.842613289 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.986646879 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933302198 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.845125958 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.841499126 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.955488716 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.963767833 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.055375072 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.844000156 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.908065143 seconds)
  done (took 896.406978602 seconds)
done (took 1212.396377921 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.842511346 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.848130076 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.851109806 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.848369634 seconds)
  done (took 29.165494297 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.844016624 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.844266757 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.843879153 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.845754447 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.845564491 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.845168924 seconds)
  done (took 12.843456638 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.932970437 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.848319531 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.848569586 seconds)
  done (took 21.404929474 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.919486838 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.255299035 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.987937903 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.280451634 seconds)
  done (took 10.21876063 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.84535922 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.843904593 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.846065761 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.84626086 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.846077264 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.846138613 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.847123528 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.845479473 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.846608719 seconds)
  done (took 18.389793442 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.648142947 seconds)
done (took 98.450133847 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.154080883 seconds)
    (2/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.726285388 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.914360967 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.151654511 seconds)
    (5/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.995256595 seconds)
    (6/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.946529702 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.950845183 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.846213829 seconds)
    (9/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.19123334 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.850819409 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.221090896 seconds)
    (12/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.847026212 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.883046303 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.020685642 seconds)
    (15/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.850475835 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.977633471 seconds)
    (17/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.185756243 seconds)
    (18/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.853634792 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.256475596 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.153028875 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.0155945 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.164378714 seconds)
    (23/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.30732917 seconds)
    (24/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.880103611 seconds)
    (25/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.158419858 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.872810259 seconds)
    (27/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.171811969 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.714538854 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.14030393 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.872684696 seconds)
    (31/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.289326838 seconds)
    (32/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.094395518 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.859522508 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.073464259 seconds)
    (35/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.934173531 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.143444712 seconds)
    (37/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.933012669 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.150537236 seconds)
    (39/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.74775057 seconds)
    (40/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.639207434 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.025198245 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.242513359 seconds)
    (43/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.94755307 seconds)
    (44/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.930788599 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.950826588 seconds)
    (46/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.940579891 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.035418815 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.505173636 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.850679862 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.302585696 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.063105702 seconds)
    (52/309) benchmarking ("sort", BigInt, false)...
    done (took 6.851795684 seconds)
    (53/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.361279171 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.065763954 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.620744038 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.141792371 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.848210098 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.531069172 seconds)
    (59/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.760907344 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.122611899 seconds)
    (61/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.928285358 seconds)
    (62/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.220309146 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.063079604 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.998721528 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.872631672 seconds)
    (66/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.947080455 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.927528461 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.9445784 seconds)
    (69/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.106569583 seconds)
    (70/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.874345944 seconds)
    (71/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.254359663 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.945239492 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.930136169 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.185534748 seconds)
    (75/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.596714882 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.24135291 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.867477952 seconds)
    (78/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.119521562 seconds)
    (79/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.144434667 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.850071033 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.645565443 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.877876849 seconds)
    (83/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.725839602 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.988345226 seconds)
    (85/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.850996581 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.125414662 seconds)
    (87/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.232987406 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.228076034 seconds)
    (89/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.850435793 seconds)
    (90/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.91184412 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.237762384 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.242252893 seconds)
    (93/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.035838834 seconds)
    (94/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.15298131 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.959817996 seconds)
    (96/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.875173579 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.980824331 seconds)
    (98/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.852665686 seconds)
    (99/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.852097506 seconds)
    (100/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.003242164 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.857297331 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.926994514 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.94677616 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.968180787 seconds)
    (105/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.034461029 seconds)
    (106/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.874890813 seconds)
    (107/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.975701217 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.849137274 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.827713407 seconds)
    (110/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.299420414 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.243336397 seconds)
    (112/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.868435506 seconds)
    (113/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.872207746 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.439811966 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.254863867 seconds)
    (116/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.908785132 seconds)
    (117/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.1279224 seconds)
    (118/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.639949918 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.872085571 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.147804914 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.856782655 seconds)
    (122/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.926793063 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.858531318 seconds)
    (124/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.660353934 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.129099932 seconds)
    (126/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.851672582 seconds)
    (127/309) benchmarking ("sort", Float64, false)...
    done (took 5.576152205 seconds)
    (128/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.84975013 seconds)
    (129/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.355371469 seconds)
    (130/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.332698 seconds)
    (131/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.881578248 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.103217039 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.851989425 seconds)
    (134/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.790637831 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.104350157 seconds)
    (136/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.957925242 seconds)
    (137/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.342717363 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.854902729 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.170709196 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.202113719 seconds)
    (141/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.882667792 seconds)
    (142/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.122159912 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.447074106 seconds)
    (144/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.95494891 seconds)
    (145/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.615353016 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.153524827 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.744337829 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.744259332 seconds)
    (149/309) benchmarking ("sort", Int8, false)...
    done (took 4.765877966 seconds)
    (150/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.941172791 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.090211607 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.024179851 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.099665669 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.989133456 seconds)
    (155/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.910822242 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.96163663 seconds)
    (157/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.871157837 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.111123546 seconds)
    (159/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.954188961 seconds)
    (160/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.237537235 seconds)
    (161/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.069888059 seconds)
    (162/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.141472228 seconds)
    (163/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.730612406 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.080957607 seconds)
    (165/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.93894985 seconds)
    (166/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.092826076 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.855129249 seconds)
    (168/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.004075977 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.937323878 seconds)
    (170/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.145578144 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.882661899 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.112688727 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.952798014 seconds)
    (174/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.093530118 seconds)
    (175/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.264432504 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.851991429 seconds)
    (177/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.852039361 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.923441535 seconds)
    (179/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.04293115 seconds)
    (180/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.877882679 seconds)
    (181/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.932106761 seconds)
    (182/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.054595456 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.956236914 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 8.398588443 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.883003823 seconds)
    (186/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.000145652 seconds)
    (187/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.643164417 seconds)
    (188/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.932265413 seconds)
    (189/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.065635798 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.856718 seconds)
    (191/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 4.298708229 seconds)
    (192/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.242309643 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.090951596 seconds)
    (194/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.862754917 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.860719061 seconds)
    (196/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.404193078 seconds)
    (197/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.368832819 seconds)
    (198/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.085277207 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.856207468 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.810870643 seconds)
    (201/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.014410035 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.175431389 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.198634375 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.256001427 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.892200686 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.921043799 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.799254511 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.883803497 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.857549089 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.011114671 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.085446172 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.186621833 seconds)
    (213/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.057256534 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.967860242 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.884784036 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.521916619 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.068039949 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.777808545 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.188454561 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.624231345 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.874992459 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.858191295 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.864683139 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.862139352 seconds)
    (225/309) benchmarking ("sort", Float32, false)...
    done (took 5.606241583 seconds)
    (226/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.198651675 seconds)
    (227/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.86171811 seconds)
    (228/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.005260693 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.885004262 seconds)
    (230/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.058314463 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.065321511 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.248911841 seconds)
    (233/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.12073876 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.528856812 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.882259417 seconds)
    (236/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.103210394 seconds)
    (237/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.864164734 seconds)
    (238/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.935651853 seconds)
    (239/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.948056779 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.639293548 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.86413215 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.391611185 seconds)
    (243/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.86358862 seconds)
    (244/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.881120788 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.021031002 seconds)
    (246/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.201765538 seconds)
    (247/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.010480639 seconds)
    (248/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.961493503 seconds)
    (249/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.230912193 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.990940108 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.862050107 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.262341295 seconds)
    (253/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.993824563 seconds)
    (254/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.011055114 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.988439002 seconds)
    (256/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.002246811 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.122804011 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.985608708 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.961927479 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.896555071 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.865809775 seconds)
    (262/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.866287135 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.570328582 seconds)
    (264/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.289415466 seconds)
    (265/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.333545749 seconds)
    (266/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.766313356 seconds)
    (267/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.919486636 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.890207977 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.995600395 seconds)
    (270/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.363045116 seconds)
    (271/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.882329686 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.877573601 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.038884453 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.976023714 seconds)
    (275/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.052753518 seconds)
    (276/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.435352015 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.996416962 seconds)
    (278/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.872243248 seconds)
    (279/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.883801041 seconds)
    (280/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.997619751 seconds)
    (281/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.033466186 seconds)
    (282/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.987786712 seconds)
    (283/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.554963689 seconds)
    (284/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.000804497 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.000929446 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.188018034 seconds)
    (287/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.256344356 seconds)
    (288/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.039416683 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.513487769 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.820708438 seconds)
    (291/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.203619842 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.985043858 seconds)
    (293/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.863486065 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.475453534 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.056794436 seconds)
    (296/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.986730797 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.999107469 seconds)
    (298/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.494157854 seconds)
    (299/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.863530623 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.889298228 seconds)
    (301/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.942601312 seconds)
    (302/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.755093685 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.026820041 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.999397923 seconds)
    (305/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.4672848 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.108875755 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.071338745 seconds)
    (308/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.125562328 seconds)
    (309/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.51663839 seconds)
  done (took 1005.85273026 seconds)
done (took 1007.712621984 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.893974199 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.881973759 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.864641202 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.88664866 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.977468878 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.907909897 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.878128741 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.869701784 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.917216001 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.916920453 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.865324738 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.907283287 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.865149312 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.867560107 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.864530079 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886623183 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.170029538 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.88839806 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.887327904 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.877669655 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.884227291 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.866844088 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.915497076 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.90677069 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.868317321 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.869819707 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.86951736 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.885528166 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.979222385 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.870928104 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.869918112 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.880746177 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.166357153 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.886874641 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.866628602 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.885542187 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.877204124 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.879385437 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.87416025 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.901381505 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.302548265 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.870675343 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.871812791 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.869566592 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.869637421 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.874476508 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.867567559 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.877548605 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.882996714 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887854567 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.296782466 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.889999621 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.872171499 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.867990803 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.884257329 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.866387539 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.871358252 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.885852157 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.890027482 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886545388 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.157106406 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.898866698 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.872067898 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.890136309 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.877607424 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.332476528 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.872254866 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.877009025 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.299677285 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.880053973 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.33445414 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.880899375 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.873246378 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.885091608 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.899739358 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.166060981 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.887243236 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.871018356 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.879638489 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.867101326 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.883092612 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.882375669 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.872355059 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.869671197 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888479813 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.913470482 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.882975285 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.872086154 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.885171617 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.894168865 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.881430303 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.88521896 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.87443964 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.870998358 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.884220495 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.87557768 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.8752704 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.876073129 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.878345825 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.885842671 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.302470677 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.893721085 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.870725345 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.869769043 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.872769064 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.88668519 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.300503228 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.875710927 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.89627599 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.924108534 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.872866067 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.158627688 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.896713878 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890783686 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.885870149 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.877168707 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.87173087 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.161171125 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.320538911 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.892410458 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.871129507 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.869947095 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892168662 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.875184602 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.872610949 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.173887793 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.895639423 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889254802 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.995681399 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.887893693 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.906973781 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.872053759 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.879757502 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.916780876 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.89185072 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.906303832 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.875821455 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890985082 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.890728236 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.872152988 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.886357054 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.885445133 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.87151859 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.881921743 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.872313516 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.919548732 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891309294 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.889408507 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.895671202 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.997249341 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.872061203 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.162065312 seconds)
done (took 294.077325658 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.948575143 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.873684844 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.990111853 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.871400783 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.960706316 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.941798066 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.870864119 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.872794159 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.872505364 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.396074221 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.872930901 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.878235304 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.875476679 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.872320901 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.941286415 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.871666922 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.874094897 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.312536534 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.873453733 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.954740152 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.871984427 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.874182443 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.871010687 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.40196093 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.877077492 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.870974327 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.95133881 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.87282452 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.320169284 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.874625239 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.871860412 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.342022397 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.952072627 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.900450704 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.880512636 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.878829595 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.959882127 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.883225397 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.941415196 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.94017201 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.992532162 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.908292066 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.874049862 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.876394498 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.876341654 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.87823406 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.876122079 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.910139466 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.877669095 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.880384611 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.34397346 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.88382779 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.878670683 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.87517238 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.876613236 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.903924318 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.874898591 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.876300337 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.958916271 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.878433524 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.943087925 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.374880012 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.372484537 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.874977663 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.875379226 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.876820338 seconds)
  done (took 185.682232556 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.940665143 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.946218633 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.937730076 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.877264269 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.923799421 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.941140667 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.877335088 seconds)
  done (took 15.246543516 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.885444297 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.876838495 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.928756197 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.926838165 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.876556369 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.053288811 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.888397625 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.883884709 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.906203301 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.879840098 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.51793681 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.930055037 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.888215601 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.87824439 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.890068943 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.934832891 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.883675212 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.878901225 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.995332323 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.026904538 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.883993626 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.885872461 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.906527957 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.888329502 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.878625871 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.881060885 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.879979758 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.888088627 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879882671 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.879803093 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.8802739 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.932082856 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.880614825 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.879783454 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.880700116 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.881309996 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.882561843 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881392604 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.88048108 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.879625524 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.879259557 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.882784296 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.880275951 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.881486621 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.880293945 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.906527851 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.882444731 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.885714526 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.881089468 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.880197651 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.907802721 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.880057543 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.880132223 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.884033829 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.925617003 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885788162 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882075172 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.881083332 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.878565352 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.882438559 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.882499644 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.032100498 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.930910009 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.880602638 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.932474254 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.033319696 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.882291231 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.883538674 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.882536682 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.969266651 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.88169907 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.933078021 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.882298091 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.995469639 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.882317225 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.061083057 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.902971454 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.886623846 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.885961635 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.885042763 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.890939118 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.880827936 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.884616748 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.889415013 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.886116885 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879330632 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.883323651 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.883824641 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.888981325 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.883559587 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.934440386 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.88492395 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.883399292 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.023945197 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.886346545 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.999261083 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.911065465 seconds)
  done (took 207.058262269 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.89027601 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.890302747 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.884945427 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.899256011 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.88599871 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.88447058 seconds)
  done (took 13.141421987 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.883779098 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.886450185 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.88583832 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885442578 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.882901987 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.884841862 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.885440626 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885603817 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.887071874 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.884939356 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.887891674 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.884060106 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.884687391 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.884204148 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.883926387 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.883060382 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.883417276 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.881665454 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.884774359 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.881994667 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.090079281 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.883355727 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884941391 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.887078568 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.88553021 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.884898295 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.896262794 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.882895327 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.883747393 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.889136188 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.884179363 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.884767842 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.886231616 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.891592615 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.887357936 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.885354003 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886078347 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.888873588 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.885627415 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.885369449 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.889482086 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.887497959 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.886439829 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.887749641 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.888173187 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.892321486 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.891368226 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.899074596 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.885575843 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.889754356 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.888358528 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.885766249 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.884336636 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.889166081 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.891442805 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888327953 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.891599017 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.888280254 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.885290007 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.886566758 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.890178422 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.888217798 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889625664 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.889470276 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.89060575 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.887950753 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.890479801 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.890409483 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.883879526 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.884271081 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.889673273 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.885853493 seconds)
  done (took 138.874796682 seconds)
done (took 561.817733953 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.803490234 seconds)
  done (took 9.620059 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.040171888 seconds)
  done (took 8.86005381 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.336643322 seconds)
  done (took 10.153473152 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.888357963 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.919289349 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.897447511 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.888558429 seconds)
  done (took 29.418097182 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.908862484 seconds)
  done (took 8.72560909 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.897259538 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.88933211 seconds)
  done (took 15.641822598 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.901127532 seconds)
  done (took 8.717415451 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.243840455 seconds)
  done (took 9.070964132 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.887624275 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.891404855 seconds)
  done (took 15.616847395 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.892030272 seconds)
  done (took 8.709430449 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.117253942 seconds)
  done (took 10.018689146 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.893864625 seconds)
  done (took 8.751796256 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.954033774 seconds)
  done (took 8.771403909 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.03158684 seconds)
  done (took 9.84843153 seconds)
done (took 163.742659743 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.891003087 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.887560759 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.88755234 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.885235125 seconds)
  done (took 29.368878166 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.922403125 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.922220337 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.931107298 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.922369362 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.913862837 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.913114761 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.922633288 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.926601943 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.91261914 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.921134654 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.922418264 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.919595748 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.922308449 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.931354061 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.932163988 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.920131658 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.922221916 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.923649998 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.913121503 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.932349471 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.921176641 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.922755207 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.888071518 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.889761205 seconds)
  done (took 47.886259798 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.078757569 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.959634332 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.0417269 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.942892887 seconds)
  done (took 9.841280234 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.888291714 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.95318886 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.940459336 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.93717328 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.941832212 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.992480592 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.94235347 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.027363065 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.017670333 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.017125435 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.897307399 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.911501081 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.914122493 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.937571509 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.996279564 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.890872784 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.889990037 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.006579759 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.950637749 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.075520465 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.890093488 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.945882098 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.941042971 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.942519863 seconds)
  done (took 48.666513474 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.89069805 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.898265848 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.897573232 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.891483579 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.892519366 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.892512673 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.898323175 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.893269454 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.914487419 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.893473952 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.890950448 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.893244636 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.898023575 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.892489638 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.891335125 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.905520717 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.905609188 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.893745459 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.896024549 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.898998644 seconds)
  done (took 39.748720318 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.889583736 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.737876362 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.236068627 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.143199221 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.891063629 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.890238545 seconds)
  done (took 31.60870705 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.9031826 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.897829257 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.891988367 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.946382485 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.032244732 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.899730447 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.893798251 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.90140211 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.938052315 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.959469283 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.911527973 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.921111527 seconds)
  done (took 24.918591705 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.89237144 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.894631131 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.894798166 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.906283616 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.903753242 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.899843953 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.899186093 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.891081479 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.905848979 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.909138815 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.899598514 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.903229961 seconds)
  done (took 44.624092653 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.598433996 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96768946 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892985421 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.76644342 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391980576 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.445276617 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.786129181 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.654822512 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359050139 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.819705927 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.094617606 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.891217723 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.977513087 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.892922854 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164193398 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.273355727 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087269403 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135976221 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.586259499 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923247152 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.095254444 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117739404 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.183223752 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893531209 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895418694 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.895959032 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416613452 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.692949372 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.927365019 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.175386064 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13647838 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.842983239 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950927747 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.898547196 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.908359703 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897906437 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898765123 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168149579 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.900422636 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146118313 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968718943 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143458375 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898429076 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314025234 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.600765419 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.207175776 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.012733585 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895039665 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898323086 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893959155 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.820414552 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978394458 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.897133226 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900703592 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.595324581 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.894880028 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969642051 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.896648592 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09933007 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.703443431 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583965383 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.898254213 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897066529 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470344359 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9892879 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.008317889 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.658954037 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276641722 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.308480227 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.993264173 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.897658348 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896986151 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.004882486 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861994408 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.602620588 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932548122 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033039986 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.91356535 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535822645 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196375933 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.335085356 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.456300046 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816341136 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179068116 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.570123989 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.880781053 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113365386 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.746518923 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.822371158 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120275389 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930643174 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900513437 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.160127865 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.659801424 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005947735 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.909311772 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33174643 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915409202 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.903011685 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898865084 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.110435461 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274140718 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927582647 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017872104 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913611264 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.980695598 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8239908 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.911522074 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.899902219 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.801975745 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903239029 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808547931 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.940973808 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.544766042 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.938999482 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.839396348 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902296515 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.988015678 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938358541 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.856365597 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155731914 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.203430193 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.587065581 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835070196 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.026787951 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.279952887 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123127383 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907708714 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.114445449 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440070871 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.334870858 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944736024 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188096083 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.961147349 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192657216 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324930234 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974902431 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.666935313 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.699815561 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.118048081 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914418113 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.90032488 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.903807015 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906554886 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834670597 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.53993008 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.285589458 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.063960529 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.114582701 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.185898634 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.893644057 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824366643 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20331183 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03800022 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.890276774 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.558779311 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.271059936 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.697151892 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.925925523 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.011301954 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.055397337 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.85943161 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914393662 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979270861 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917359771 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.91905976 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.26890337 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.259924882 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.903558029 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.905992284 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.850456352 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909342344 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.904928316 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.434306725 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870035607 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904453701 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.912450099 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.776604169 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976090211 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905052168 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904651391 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.437476557 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.404739854 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.907143463 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.561310066 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.916024939 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129671457 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174035159 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.278759665 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029253749 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.602270851 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.338283237 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.014591802 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.602817304 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828363915 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.903401187 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.843013693 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906402355 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907873487 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907688638 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.090224966 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.178579648 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202597289 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.371758604 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968339716 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106430953 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.609754351 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85780411 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.905011245 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908846709 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.906063594 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904450975 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.412970661 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.197701078 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.98723802 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931130819 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.9105878 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033091397 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.91518323 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830073847 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904850815 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905419495 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309027546 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.928975588 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.852673339 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.226355743 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.782638052 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021617056 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95283753 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.916621107 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910675201 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.619066175 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.946685981 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832442574 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309591544 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936371721 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.670253939 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392029649 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492330954 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207778975 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222731985 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.233844837 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.971901815 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.120675898 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.99115816 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96026726 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.996745429 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842728258 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.830349968 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.56337698 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24464376 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171806233 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913745179 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121773671 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.608739302 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134897433 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935781521 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.56061441 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212272695 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881043519 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922044277 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.196896095 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013077983 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988522263 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910039141 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863383586 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253997409 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947874732 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.608456795 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921833705 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.25872122 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.310685778 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.973409295 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.279010874 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108337742 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.909740573 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259761861 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.08024543 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944294015 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.911792979 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.896432912 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.123357564 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.485601305 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.750066083 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917326631 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.038860389 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201265012 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.813641477 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.910230805 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.03687785 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165214009 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908585281 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.288405742 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275148967 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.012511406 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96590506 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135013216 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.559255027 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207067395 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.461024531 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.395007996 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911873801 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833801898 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.609091133 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.1108824 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.909365975 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.872343568 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131146988 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142432314 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.590255554 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127852382 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150937111 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.920139534 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.180278884 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9805724 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.006197518 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.232121384 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.343384743 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.156911073 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135861131 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449661751 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.125856771 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.411451077 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.077824906 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.912688104 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114067586 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13030758 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.125663974 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.296887573 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075938118 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.622428258 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.917540662 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.119314955 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213854849 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970535454 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.304077471 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.075589308 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.994617121 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915953011 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975459542 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918319615 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919100186 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.28702465 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.433653875 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.925133303 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987961244 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.005798963 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.4186026 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.914393824 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.916303047 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181841035 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265773679 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244274838 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893221272 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911248927 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916760418 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039302173 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.837159021 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916414649 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181465309 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.914180334 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336923527 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.055109081 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928727603 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.228082306 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.294007438 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.558756443 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.870321691 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918207081 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136697175 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224691475 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.068225633 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.023142778 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183844641 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.261264787 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.947554641 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.297627391 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150057051 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915830515 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.788216475 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.915496895 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04702609 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.109548175 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188880658 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.42186594 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.621638716 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179158619 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.782604686 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917110388 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.677624973 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183357407 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.18521331 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.963920953 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979261173 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91877188 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.321819838 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.63213781 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04719553 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.784041055 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845081341 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.919413354 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.253146435 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.155770246 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.623749982 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918172435 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191283775 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217700554 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186595136 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.966747097 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.784208708 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137084608 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919541191 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.929480435 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.177674665 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138522976 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16195149 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920450415 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918227323 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.72252607 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845958384 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.914395026 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966193001 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138802905 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93271952 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.422313436 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.609460329 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192668424 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955154899 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908690709 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177156748 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.4260188 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.465462739 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908135593 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123425087 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.869270283 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199525825 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.90349151 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312004914 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199795275 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.90127814 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411838206 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.140200432 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165312729 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832079039 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906019456 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110006015 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.739048225 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.898600195 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.898647144 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306659314 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123189106 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.632703868 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448829159 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.895290771 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.896550981 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303617679 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918982329 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31107193 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917165344 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905456 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.407599199 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.580280824 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.172552414 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129056025 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393272026 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.481507263 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.888065136 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.882768236 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88393715 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800775911 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.235819377 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.065116605 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165650962 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910113311 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290857963 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90628719 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.222557082 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024374246 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.04730824 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947519729 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438389395 seconds)
  done (took 1674.624550933 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.934607602 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.986366719 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.940914466 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.911740636 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.918444988 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.928242753 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936511862 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.918413578 seconds)
  done (took 57.314736477 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.91004958 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.916857382 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.909550977 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.910338409 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.905807877 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.90551259 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.058975003 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.908849163 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.900160985 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.901760789 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.90265412 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.89394913 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.17238884 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.911377721 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.895824595 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.891296898 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.899879853 seconds)
  done (took 74.63490642 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.897137632 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.125547566 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.954322329 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.896675277 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.829091842 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.897695279 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.922454476 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.906071161 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.886978488 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.107951741 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.182972688 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.891754315 seconds)
  done (took 90.318567945 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.886930198 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.881586583 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.881917226 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.883546581 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.881330876 seconds)
  done (took 11.22803617 seconds)
done (took 2186.636245901 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.113234895 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.939185097 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.973721582 seconds)
  done (took 5.719632758 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.025863732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.073095698 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.186837698 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.945462668 seconds)
  done (took 10.044820879 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.183539924 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.260080358 seconds)
  done (took 6.248392539 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.229545259 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.882220668 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.289073759 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.879870107 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.881111314 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.879656833 seconds)
  done (took 22.451297824 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.877202607 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.878890183 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.878317193 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.877661147 seconds)
  done (took 9.315580293 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.877991777 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.586167563 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.877859848 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.885552161 seconds)
  done (took 21.030024813 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.023777687 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.99212083 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.018175104 seconds)
  done (took 7.837126473 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.021519063 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.71890977 seconds)
  done (took 6.54286198 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.024181405 seconds)
  done (took 3.826589 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.905562537 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.148041922 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.377589391 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.41747882 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.550239535 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.63472887 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.167096442 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.096993311 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.297089389 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.298847679 seconds)
  done (took 24.696463791 seconds)
done (took 133.037494009 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.214983346 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.890194984 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.080906612 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.233125292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.098335352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.120845581 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.096412939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.224364958 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.899498172 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.889475031 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.23102407 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.096139109 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.042838896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.888864779 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.048247215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888374081 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.193731131 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.226924025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.915318426 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.13311146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.099784212 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.879722795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.078909005 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.887697594 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.097363096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.055919645 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.421343411 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.886225508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.058556766 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.429324765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.030718275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.283343005 seconds)
  done (took 168.425581096 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.879354781 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.87752817 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.877762988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.878472896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.430778964 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.877985592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.878014294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.877887182 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.332359014 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.316405808 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.877813718 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.433198813 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.876154843 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.876750332 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.878421669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.878221886 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.511426235 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.878730815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.878247215 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.877770073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.878114612 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.251656673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.878178721 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.27223635 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.494314814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.882005457 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.876962001 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.87665987 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.878013003 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.882705668 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.876378672 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.880476241 seconds)
  done (took 209.92901624 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.855652152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.873784133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.876640514 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.874376064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.872521642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.875072698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.874748166 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.871594376 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.706129276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.694631106 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.870745471 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.872730661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.873710583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.871549509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.872094881 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.873113851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.870853576 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.87078436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.870124027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.871176124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.867620455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.536147 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.871223565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.557269838 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.867208759 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.867648163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.859527847 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.856593174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.861595726 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.854417804 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.853423365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.852723804 seconds)
  done (took 220.604950109 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.09507511 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.853592358 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.855226674 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.771554559 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.854147954 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.857305896 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.838415575 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.096172157 seconds)
  done (took 19.005196092 seconds)
done (took 619.781553306 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.221435693 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.686854962 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.047215627 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.89389672 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.150557357 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.931887772 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.881601451 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.955704967 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.804940233 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.956707092 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.541728734 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.903569558 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.639379548 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.90389652 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.006496505 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.936526932 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.422527284 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.521638641 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.015655397 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.962766542 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.055429365 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.810866017 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.948129129 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.753463519 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.543697846 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.842536323 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.915917168 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.415045882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.882047863 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.035499598 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.574507067 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.203558162 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.88425726 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.866158316 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.914073809 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.897271185 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.12266741 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.876876652 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.986876294 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.57904617 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.936153975 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.614624374 seconds)
  done (took 102.822767281 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.850536337 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.846376648 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.845606181 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.84574131 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.854945311 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.843397162 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.844207846 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.843582087 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.843455508 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.846958258 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.841562792 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.849994638 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.840565183 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.849512659 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.844619046 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.840826224 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.8401109 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.848290558 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.840132225 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.839645684 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.840209968 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.840403214 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.835013794 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.840559467 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.839512485 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.839856436 seconds)
  done (took 49.719166432 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.833670508 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.99159987 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.086403113 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.85304854 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.835025293 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.837275688 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.852856191 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.839883843 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.83708258 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.83644049 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.938969318 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.840645114 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.854556399 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.08612244 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.85185348 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.835176768 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.834342234 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.836155122 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.999804199 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.853395288 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.854654022 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.83970257 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.85541802 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.849666347 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.83732928 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.836403164 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.838689264 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.31455364 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.845422499 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.940061201 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.930689763 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.860163621 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.253905743 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.095227519 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.892042303 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.844729183 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.835426485 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946555157 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.842590757 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.837022795 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.853547001 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.842205727 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.083741318 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.363400707 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.853936297 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.836556835 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.32441186 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.956194735 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.878024084 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.845244823 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.088559616 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.852161706 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.838183437 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.837371456 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.872683311 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.846697343 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.837031843 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.200911852 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.852822327 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.854221558 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.843260089 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.838882162 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.001802332 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.848338371 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.991902106 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.848076934 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.844415439 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.83719326 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.087350472 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.853292165 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.380356089 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.853889031 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.837277773 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.940584812 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.997980674 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.351522692 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.851322052 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.010372174 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.278820939 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.862753376 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.848197635 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.302286448 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.866916846 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.84596916 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.840070555 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.840151553 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.837258922 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.88287617 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.854440925 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.283622286 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.377117818 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.220300368 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.865834538 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.850478432 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.841678609 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.202285025 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.847907339 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.839713208 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.082678195 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.384543914 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.856256145 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.848329916 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.355875247 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.853811972 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.858462685 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.848145365 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.096156133 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.854921159 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.883175913 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.840676564 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.847521888 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.843281642 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.858969365 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.848042319 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.841673308 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.348217557 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.966846464 seconds)
  done (took 228.891635136 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.841226339 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.836234114 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.840566704 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.836638181 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.838267642 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.841871433 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.838234575 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.838584875 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.840461876 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.838926015 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.838777266 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.840152081 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.839858337 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.845281496 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.884728667 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.842247473 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.442655893 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.840283543 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.839140236 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.837437528 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.479971572 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.845563328 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.840963768 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.837528426 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.838476957 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.840691106 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.843779137 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.88123557 seconds)
  done (took 166.619943977 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.841754461 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.953678516 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.856506033 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.86932338 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.846227911 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.841320512 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.942280668 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.856367602 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.848187221 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.841667327 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.842177482 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.901931462 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.850082617 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.939766348 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.869589714 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.949587312 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.943953914 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.845357984 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.842948154 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.842776466 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.871535016 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.851175015 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.903241887 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.96759016 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.862106528 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.955317291 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.86479808 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.843429979 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.842389489 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.956327463 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.862253971 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.904245354 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.868922054 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.860298987 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.960189748 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.955688403 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.944003474 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.94411623 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.844847021 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.841210303 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.841354757 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.842136855 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.952853888 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.865149516 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.839515621 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.954922734 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.85436279 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.838131668 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.838445943 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.836753819 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.848371654 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.854647621 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.90007457 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.963514841 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.872970888 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.860350823 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.933522931 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.958647081 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.836232114 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.935043495 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.839398702 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.94892796 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.851404053 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.837261392 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.837493473 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.840282769 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.865701801 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.943404678 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.938152211 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.840085632 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.934737741 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.869562306 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.844316176 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.836811105 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.837222419 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.950234746 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.952627668 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.868522255 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.868763014 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.864297607 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.848315075 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.835497289 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.837613332 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.85206581 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.841558325 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.949959677 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.953396222 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.839969097 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.835804775 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.835779412 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.836671149 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.861038656 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.957525594 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.869070609 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.946307063 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.898995773 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.908826877 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.848033844 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.850414097 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.841623715 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.899602171 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.849150999 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.849462984 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.126123113 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.897065882 seconds)
  done (took 199.46686962 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.21789352 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.885231342 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.893514306 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.153114654 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.223773297 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.847156132 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.882173167 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.887005337 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.919692648 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.113690559 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.963159051 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.904648998 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.870037977 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.857780925 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.882293439 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.922022079 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.890653111 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.22054704 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.097099516 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.393378323 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.86974266 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.166053317 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.218223117 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.452024324 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.929755528 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.292359861 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.469380723 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.036749973 seconds)
  done (took 62.230114723 seconds)
done (took 811.532465399 seconds)
SAVING RESULT...
DONE!
