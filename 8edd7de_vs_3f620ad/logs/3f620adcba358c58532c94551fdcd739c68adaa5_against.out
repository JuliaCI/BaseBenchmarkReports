cset: moving following pidspec: 4723
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.425153186 seconds)
loading group "string"... done (took 0.582913932 seconds)
loading group "linalg"... done (took 7.309001634 seconds)
loading group "parallel"... done (took 0.158242097 seconds)
loading group "find"... done (took 1.172158079 seconds)
loading group "tuple"... done (took 1.797816399 seconds)
loading group "dates"... done (took 1.259814219 seconds)
loading group "micro"... done (took 0.226011871 seconds)
loading group "io"... done (took 1.01757867 seconds)
loading group "scalar"... done (took 39.565665745 seconds)
loading group "sparse"... done (took 12.232282811 seconds)
loading group "broadcast"... done (took 0.921763646 seconds)
loading group "union"... done (took 13.21011509 seconds)
loading group "simd"... done (took 4.697482668 seconds)
loading group "random"... done (took 9.294404224 seconds)
loading group "problem"... done (took 1.74939431 seconds)
loading group "array"... done (took 21.066426709 seconds)
loading group "misc"... done (took 1.746803104 seconds)
loading group "sort"... done (took 3.369826444 seconds)
loading group "collection"... done (took 17.625816227 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.509254169 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125540649 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118608598 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119514956 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146990146 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112284345 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123948334 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085341355 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.816534996 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14971149 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118885963 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432731989 seconds)
done (took 5.108716924 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172900856 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083855276 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082321684 seconds)
  done (took 1.236638847 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065188646 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123215794 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065800885 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066769597 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066979345 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066430506 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066189239 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065956436 seconds)
  done (took 1.592324976 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072803651 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068696055 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069244167 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067844491 seconds)
  done (took 1.348890195 seconds)
done (took 5.497099509 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.799658073 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.208160592 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188380913 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412200454 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133216592 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159514001 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648863843 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.30270074 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189336591 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08039033 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105455515 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.329747841 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108975289 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634521585 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076245324 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090518418 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136148931 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427117459 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067252887 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081563411 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088172893 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128133114 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08844876 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074064415 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146870855 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067995392 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136892672 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080372947 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066188136 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213245389 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171926346 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.647912025 seconds)
  done (took 10.199834857 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096852081 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098267608 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068913173 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122932995 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096774422 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069412657 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071066749 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067184647 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087356394 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128436898 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089470699 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102264471 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065267129 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06897302 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084769081 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204051232 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080329042 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081731517 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070245052 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07626156 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108117046 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078285086 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077787663 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077498761 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129126976 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179996656 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098654499 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096975015 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069147234 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080802128 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115603162 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126966449 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065298881 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066068181 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124584806 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094343331 seconds)
  done (took 4.52718182 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.004347511 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14406795 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091084648 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134430268 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064691029 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109338644 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065647074 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080902398 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21039584 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.371442421 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.595734504 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111226444 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104701985 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067297816 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068162149 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066583185 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.488766689 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096987168 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107160465 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081223582 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070006605 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068572936 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363095612 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070540608 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063780972 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068178851 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057515849 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125772521 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068237391 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.947716245 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127549162 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066235404 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100435174 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165808997 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090955014 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141103195 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066304377 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.195086904 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153274393 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071505836 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.112648863 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065674912 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084580464 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064992546 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103656986 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113630886 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065454756 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066544644 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162872733 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064879104 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080224597 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.634991836 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153645621 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078889393 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066855264 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.25743602 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088489232 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069461529 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064559745 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17791846 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134918095 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067489845 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066928245 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067884721 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068944032 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359716598 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066074637 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.851290219 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070347255 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076288197 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069036167 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072587391 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064483723 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073073552 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072796471 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087972823 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066117096 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075270552 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066222465 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065799037 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06657234 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083629808 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.375819908 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066663841 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0680391 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064551373 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088544378 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096016959 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066036972 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064870101 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099113096 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067545282 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065413589 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105834177 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065619153 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082606301 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068483276 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112386711 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06671877 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.180165286 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06877898 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098285722 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063649885 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07032434 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098973187 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081195338 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072537506 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.417515163 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065562604 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064901941 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067971664 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065523108 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067312381 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066580898 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07965888 seconds)
  done (took 20.910596829 seconds)
done (took 37.711205968 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238020066 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07463676 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074412343 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077665857 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074290152 seconds)
  done (took 1.705760744 seconds)
done (took 2.849719114 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123674766 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099947579 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064225755 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097511554 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064362605 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101991775 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102094186 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081866699 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100275141 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063782741 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097348734 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064426872 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063897905 seconds)
  done (took 2.291292874 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083810095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084807818 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070202175 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083647591 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064152919 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082977352 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081456249 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089414273 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082172464 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072461649 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063564415 seconds)
  done (took 1.997646588 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083440219 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085039544 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070108723 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085638495 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063721228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082528483 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081901644 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086355033 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081947769 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074566199 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063806948 seconds)
  done (took 1.995252496 seconds)
done (took 7.417527756 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077999783 seconds)
  done (took 1.206548261 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.60210323 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.163922544 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081212109 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112306243 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189271831 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118725593 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.270160354 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085348239 seconds)
  done (took 8.935291623 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089186469 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.083618173 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070300798 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071765486 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071818133 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068656167 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070817799 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071137022 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068371087 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069167341 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071151536 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07187193 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068979981 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071424588 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067958487 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069156334 seconds)
  done (took 2.362562804 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092568925 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09136049 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073756221 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074796675 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07169116 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071795277 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074005743 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073184259 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070466686 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071738931 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074325885 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073389439 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071340201 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064428947 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074058934 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075009006 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070390862 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073673412 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073643947 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074238968 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074349957 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063631838 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070856019 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073714844 seconds)
  done (took 3.008873969 seconds)
done (took 16.650006472 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114795357 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07138475 seconds)
  done (took 1.32218714 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08272542 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084223952 seconds)
  done (took 1.310371524 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083598136 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064850096 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091798001 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078843479 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06622848 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065770288 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089132612 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066165883 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065780016 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065504262 seconds)
  done (took 1.881934042 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068528067 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078608451 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070508105 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081358711 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073334186 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063881993 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072305194 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067361177 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078358012 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06269527 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071853223 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08305176 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07111728 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084844745 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072574975 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068754785 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070407546 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066910404 seconds)
  done (took 2.453261143 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065411224 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066967208 seconds)
  done (took 1.280982091 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066268736 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064183035 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066630748 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065975746 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063289911 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062323872 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062921543 seconds)
  done (took 1.597763369 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.382780806 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11247144 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311993021 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07097298 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081527328 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257749331 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065469404 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070553442 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07034736 seconds)
  done (took 2.613533761 seconds)
done (took 13.609840153 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079929146 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087166381 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095988369 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.377094903 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09141788 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066264724 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113677332 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.195225645 seconds)
done (took 2.268061382 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211879793 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.629583546 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402241324 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205073478 seconds)
  done (took 2.389762736 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341582888 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088555379 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060217492 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068243377 seconds)
  done (took 1.721749173 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066157978 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069354991 seconds)
  done (took 1.292705383 seconds)
done (took 6.775099453 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066095077 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065893749 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063865597 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067486195 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063124969 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063800001 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085556937 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067970293 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067819226 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066784485 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069776567 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067766807 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066383341 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063650449 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063706958 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065943942 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063445708 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063585367 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063684861 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06340864 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066129759 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065957532 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063594305 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063693765 seconds)
  done (took 2.783626741 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085448346 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066047458 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071861565 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071319779 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069626414 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07109304 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070914139 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065523119 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071489959 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06858481 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069443336 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070143746 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068097157 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069694795 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068678188 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069790089 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071426685 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065898429 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068271279 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07012053 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071590328 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065946031 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069708092 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071155771 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069300233 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070731714 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067968648 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066112985 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07145113 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069684959 seconds)
  done (took 3.26414023 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069908573 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063455601 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064202633 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070692472 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063431738 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064967454 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063438291 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064105649 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06384617 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063135624 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064802266 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063074373 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06340475 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064690261 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064047265 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067028601 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079763196 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063474089 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063461277 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064364237 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066719746 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063906171 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063777915 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062874692 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063304549 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062920929 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063592524 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063163466 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063489062 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063250762 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066413332 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066758169 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063189755 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070502004 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066582556 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063345232 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067238955 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063095061 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063667259 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063385911 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062799213 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063362991 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063374694 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070363235 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063514164 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064657782 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063257493 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064229623 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064056982 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065672433 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.176784717 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062798428 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065148015 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064256072 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067069345 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062688711 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063796588 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062685637 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064446586 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063386887 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06264743 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062412507 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065379923 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063282969 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077573962 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069738153 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062874468 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064372604 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063884898 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065567506 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064666063 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076829992 seconds)
  done (took 5.967643819 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09038719 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087766597 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065787515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065173917 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061640757 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063628448 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06999339 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063805172 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064889537 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08170962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064327674 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064839862 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06489371 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066882189 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063961762 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064681115 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072209801 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061555842 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063888531 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067446334 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06394473 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069920763 seconds)
  done (took 2.683356432 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156881576 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070076255 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105243331 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07534485 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069525782 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075385281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069624828 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069692627 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069655312 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067521597 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067441007 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070060608 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069501516 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067400277 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067166642 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06735367 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06976463 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067287324 seconds)
  done (took 2.549422679 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07730119 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067079983 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086928505 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06627187 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065850346 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068280454 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070421715 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073939403 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068184882 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065622106 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074407578 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06799864 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068201535 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065710896 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067837907 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065577945 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067815848 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065457866 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073752841 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070354039 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069454928 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073941648 seconds)
  done (took 2.71585828 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080439291 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06801192 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081471607 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068249177 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061577055 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064198196 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069976727 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065600654 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069879077 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067253647 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065451652 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063960961 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068439426 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065117695 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068678204 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065756484 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06729915 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065284387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067372673 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061216479 seconds)
  done (took 2.533765097 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086206989 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06734937 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067290477 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075180262 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066965261 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066933979 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07443404 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067203371 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06717724 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087972635 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066883116 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066418268 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075024624 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071939082 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066784387 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074453145 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07506238 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075063592 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06684031 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066574792 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088190108 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067047102 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074299821 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066551426 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066780763 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066550549 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066640752 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071818632 seconds)
  done (took 3.179585487 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066059008 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065987894 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063469002 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064396742 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06413336 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063873457 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063736624 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062801481 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065516913 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062936983 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065732512 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06558093 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065629197 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065886817 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066170974 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065668809 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065803304 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063532205 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062971446 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06346798 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065759379 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065468973 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.0657555 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063293504 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063373572 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065758344 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063363841 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063346584 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065588745 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062977758 seconds)
  done (took 3.120575983 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075213848 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073082888 seconds)
  done (took 1.330940195 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062666807 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08137354 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062972415 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069558443 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069750277 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066507471 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073669327 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069311562 seconds)
  done (took 1.734946592 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081331592 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077689222 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06776589 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080163189 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.0765477 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08289107 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133948954 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067019135 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072869817 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063724575 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079214554 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065246458 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07210609 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065995074 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071370542 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072347568 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063539482 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071922945 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067698185 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064396526 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06725388 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075521232 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068688411 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061804048 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067170451 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087862863 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078089409 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06580329 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069129424 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073670608 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071802144 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059769511 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066069539 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066446713 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064116449 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07545773 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080590656 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06893626 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074732968 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066584473 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076480661 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060760063 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07078923 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072247155 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076318068 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065954676 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066608609 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06130537 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064271371 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068270866 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061183418 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06828568 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060684705 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072410025 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069868119 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077285345 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064394033 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067231456 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068553892 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068893313 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072297258 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067621008 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068372346 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065459237 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075850219 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07023929 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075070492 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060922103 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059873264 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063690456 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075620529 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090244191 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072501165 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066644716 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067048142 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063850927 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069350367 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067410646 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071969198 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072651336 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065554235 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070828635 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073013717 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065619572 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067693857 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073769096 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063624952 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068060686 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063119301 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081238967 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064027373 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062892466 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063411221 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075453395 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068371337 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064075564 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062616556 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071491894 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058799837 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065005147 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065735306 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065796191 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074605472 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069195629 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0693925 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073491811 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072561793 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065306106 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067456752 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061587232 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065309547 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064411928 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072294069 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059072362 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067361763 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065572732 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065334154 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072352563 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062554999 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.0644212 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.196117762 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074087412 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065776908 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064024952 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069897566 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067242343 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06970491 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075022147 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065455421 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061901265 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062248207 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070190285 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066188372 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070557335 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07091217 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069564694 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061462721 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064304351 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072098591 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075631952 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067624044 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067624482 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07241322 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067186454 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066144658 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072913102 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069387153 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065274296 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072481748 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067405172 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061181385 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070016871 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069534985 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065142426 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069905192 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070053286 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068889931 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06778199 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065149011 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074136204 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067594951 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065834853 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067057435 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065177946 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077345722 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068699614 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061356131 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063649643 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075688083 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063650084 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065855186 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065433121 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068478572 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06666092 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064311133 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065896338 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068419332 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076106476 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070575627 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067221197 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071636355 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077970906 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065909588 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067822722 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065957513 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067038521 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067574082 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075177002 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071486045 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071020412 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06813543 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062551519 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071127326 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072683348 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064504586 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063911583 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065234784 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069978155 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071652653 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070200843 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066497493 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064891805 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067055188 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068866869 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068955144 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065368353 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064875066 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072681675 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064002612 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07252248 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066503792 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075919717 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069225549 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061000329 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068652108 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063198791 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071225716 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06040793 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062963745 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064139998 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065597231 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063744596 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067225111 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058839409 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071426429 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071927544 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064905761 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063787082 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064301579 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071352019 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066987127 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068794796 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067936368 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071258779 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074992708 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064410535 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06805171 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07472563 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064657959 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058724343 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069826578 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063561413 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063589819 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06345709 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062958055 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.195105589 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076412506 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073666762 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061762988 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069690381 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065502435 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065850195 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062807772 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070892579 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069651371 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06818256 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074468032 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067922033 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06641267 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071279069 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066924359 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067989518 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067785357 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070228735 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066936466 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069184382 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066142649 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070343154 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065650736 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06438465 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068485292 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066286371 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066473984 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07221485 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065822493 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066821952 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068828142 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067342755 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067192129 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066995544 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065592132 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070121576 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066929648 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068171575 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07054928 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063278404 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075584673 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068742285 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07641831 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068752034 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064078625 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073283615 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068351401 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07254784 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067595042 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067519478 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068128324 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066701793 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068354961 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073898697 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063745531 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076964317 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073223071 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067190415 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069305867 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066853248 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068208801 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064734375 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067242789 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066837971 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066499997 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06618384 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071636725 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068441407 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066774325 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068142064 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066808894 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066385501 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067314231 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060430466 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065355691 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065761312 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066107952 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075440835 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066271779 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065673878 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0651251 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067578002 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065496825 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063076293 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074578067 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075368315 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066982466 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073757619 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065434119 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067524242 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076951008 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060278497 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064232092 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063998045 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064347233 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073449813 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066516047 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075151861 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065879065 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065629768 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063366381 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066354339 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064110476 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.05990564 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063030641 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068533844 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063866738 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064538096 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065639926 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067671472 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065846344 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073961852 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064324142 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065932406 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065340914 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062239845 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064322639 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064428918 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067582688 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065938304 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06290468 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062365299 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064526323 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065665446 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06672813 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067455394 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066464922 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.203989372 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068131695 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070253637 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071394332 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062562292 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070295058 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068350902 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066677716 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066687639 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070719458 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070203323 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068248645 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075419057 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067298747 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068145713 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067449988 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064924259 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066673421 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066778863 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066611074 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066372838 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068334468 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074889733 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064849594 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070157226 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066884178 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067263383 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073388332 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067609721 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069558235 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073962806 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066917769 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068459229 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074048503 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070976667 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069798925 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068067342 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068444951 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073324554 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066332807 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073714063 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067618412 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067363418 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068603373 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064721441 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066850051 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066976349 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066076164 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072828655 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068371603 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066105088 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066048688 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064959789 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067922451 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070615437 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074280723 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069539273 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069954289 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061649606 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06351414 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067605702 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064496145 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067805832 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068735487 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072566452 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06874484 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066379863 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065432361 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075604218 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072128213 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070283775 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06354592 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06965911 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066712027 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067811571 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067047756 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06613738 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067155568 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070172151 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067702117 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06533366 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072797181 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069813721 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06719679 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067778767 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066775035 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065892576 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060797501 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066827757 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067892149 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071251482 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067941274 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065614484 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076589301 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063889205 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066630671 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068974203 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065064546 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070191983 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060885829 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067451453 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066820902 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066458782 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060530974 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065084251 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063383053 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067541142 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064771483 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059950929 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075331472 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073849394 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067892433 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063986965 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063645249 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060240309 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059962917 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064155506 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06578506 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066568881 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074725006 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063949601 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064208523 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059857927 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064913204 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067302308 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068017068 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062064256 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.05998457 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063794823 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.199808695 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073379414 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065942643 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067134365 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070516916 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06875464 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064167413 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070670315 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063543888 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070985997 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079849452 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067479229 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06769779 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072830738 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074927274 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067962316 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062401253 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06736823 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070049447 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067470782 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067581516 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068764076 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081541793 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069246067 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065492607 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065659584 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068774316 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065664982 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075177602 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067794405 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067364056 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070691695 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068671649 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076328048 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06962972 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074389809 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069883401 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06987639 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06575528 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067514931 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06403196 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065161782 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067781088 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067033561 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07116902 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075222026 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066006963 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077224106 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075304093 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068887496 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064295849 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066230859 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065426025 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061645957 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068308644 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065168876 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06436752 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064238818 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065125898 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067934571 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072103128 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067191973 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068200756 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06593516 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060440306 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068564846 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068242627 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066805137 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062742764 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066552249 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066834166 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070085226 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069380276 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06342856 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067449245 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067541738 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067260123 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061108732 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072640941 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064999558 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068227435 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065215315 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065856746 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066547131 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069572815 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071053382 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066947308 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068650356 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069555506 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068139332 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063333119 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06326871 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071442351 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064114099 seconds)
  done (took 42.337168774 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101599392 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063220728 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061867339 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062147669 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07403514 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063018743 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062186264 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06346738 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065100879 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067408775 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064484474 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064467867 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073340134 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.0810095 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076324679 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068773701 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064149692 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065168216 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063811263 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065383172 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072925351 seconds)
  done (took 2.742416879 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073857642 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078568968 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076856146 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082412773 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071059645 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070735015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0757613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070899906 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07946273 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072891336 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078688411 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070915122 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073277369 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073645269 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073086368 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072269582 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080085969 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071509393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071840914 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075872608 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070996031 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076035985 seconds)
  done (took 2.91288176 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067719574 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066154757 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067906162 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061076982 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065862072 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061277346 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069441358 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064392489 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.078205773 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065068246 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064621541 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065308915 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068036549 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061492251 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06613596 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063943816 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109046507 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06882409 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065736783 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066275138 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061322126 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067172844 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060829155 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061551738 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064729871 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068904845 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06631772 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063702929 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065246577 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064465249 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065609533 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06312195 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067122848 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066018042 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064483832 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064233742 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065078735 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065710834 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060791278 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063688322 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066588477 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061415011 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065803761 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066507471 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063710055 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063300106 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067099247 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065165218 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060694866 seconds)
  done (took 4.511089785 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080112919 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111024961 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068627263 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088813315 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082823169 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072824899 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069351724 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090318612 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063044474 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063937623 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081432266 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079661333 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065797651 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070184993 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072295899 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065576283 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066570402 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064319542 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069411237 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065712362 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069344257 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072194717 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080374936 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078487843 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069696287 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064415057 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064901513 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071717438 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081060744 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072399423 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072002431 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072668237 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082621178 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07292197 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066393367 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068641644 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083142503 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06695694 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068366316 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063692368 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067827187 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069980422 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07278011 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082788098 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065974719 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070621304 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065585372 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062805712 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078009582 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067577353 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072921696 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07936586 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069003383 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065734966 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06984499 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080130692 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065359629 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063680436 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068343507 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077762839 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062934033 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069258924 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078864265 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067244072 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07270683 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079635415 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070516155 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068803337 seconds)
  done (took 6.336170507 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075763658 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09525497 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083908858 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083612007 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075010432 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075114904 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075380058 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075136112 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074971426 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080284993 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075533704 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115522521 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071009669 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077830103 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076027591 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075543409 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075256353 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075437731 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075117216 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075250577 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07524254 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083228846 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075289928 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082733669 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079887331 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070848306 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075380059 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074867154 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083068939 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075681749 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07914722 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075277946 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075030104 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082807529 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079419089 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074802033 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064685077 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075061523 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075114685 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075006769 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070182878 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083194342 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074524138 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070640965 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07517345 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074688489 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082732923 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079399699 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077658322 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079465035 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075129859 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082900583 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075044875 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07555926 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08267741 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086488459 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082798334 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083276201 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075500166 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083182606 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083621193 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08635891 seconds)
  done (took 6.156258794 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083909438 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075354784 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082807534 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061644731 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063878799 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071903313 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064067769 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063843082 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07406952 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073682272 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076785055 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071681727 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074543423 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076398193 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072216966 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074681407 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071529848 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071712281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074074774 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071813848 seconds)
  done (took 2.747189859 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074820046 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083160621 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066563097 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071348892 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068753699 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071134023 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067820349 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06887374 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066755653 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068742871 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076986233 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076497934 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067721365 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0734142 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078082695 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073679522 seconds)
  done (took 2.445051588 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085179599 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074203722 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079842403 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06615782 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066946802 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062304533 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065180722 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06109613 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061962994 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078257976 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065255567 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076197548 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065429646 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063928401 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062056243 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070998563 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062083075 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06280534 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065537188 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077743495 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069901635 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064155037 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068679434 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065219676 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068427739 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070422708 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06539728 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06592839 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062608734 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065573265 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068448559 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069294374 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062781238 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063350471 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064293927 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06253876 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065360962 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065851685 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070666332 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065464514 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063632017 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067741609 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065464402 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066878897 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062311457 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066284982 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061728417 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068360702 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063771701 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068813824 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06540153 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068121957 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066810195 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072659737 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068180496 seconds)
  done (took 4.98561181 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079762441 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069456828 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061893552 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06403554 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068410604 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067283242 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069268213 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067267609 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067147223 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063734083 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06737691 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068674772 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067193118 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06950005 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067204481 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069557 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061635203 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067405667 seconds)
  done (took 2.518481562 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070413057 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066214103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073456122 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065817411 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065184313 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068428518 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061781957 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064258507 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064760776 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065737977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06541139 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068032173 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064829352 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068644802 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065330393 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065568356 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067955656 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064589764 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065308394 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061444931 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067687118 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063985548 seconds)
  done (took 2.751327236 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093715394 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082391838 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139784305 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078743837 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084167585 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070964702 seconds)
  done (took 1.847991322 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090853272 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10211765 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065582041 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069346144 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075491024 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06942937 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069661823 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06964904 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07810257 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076276219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070136253 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07850006 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078460161 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077917858 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076121141 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075689113 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070128776 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070299578 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065733217 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083962071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069861425 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0786023 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069918218 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069711439 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070091561 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077906887 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078779641 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076332879 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070379953 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079980251 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075663309 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069654538 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078690172 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077011697 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06954078 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078674972 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069828512 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08411977 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075538833 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077829889 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068796546 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075774763 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078161536 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075075712 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078434402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069956284 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074599523 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070057676 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069903435 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085938832 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076184421 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077595014 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078287768 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078544451 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078209623 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085802077 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076021949 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07783183 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075692674 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075762431 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078051094 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076153663 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077499 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076476862 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076146567 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07789177 seconds)
  done (took 6.30109799 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103997738 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066782889 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070061715 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075594151 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078063434 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070285826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070211619 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069890364 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070065921 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066710624 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10854176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070501793 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078674312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078150904 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069862188 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070521291 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069731706 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077626086 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067022067 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085972451 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070485848 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077968112 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077816843 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077812966 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07631329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075665686 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07037385 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070091066 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069851985 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069659089 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074683045 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070006855 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078185696 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066715791 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078000252 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070561848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069647518 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07481952 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07026101 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076347012 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078347795 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084674205 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072209662 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072099432 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077487059 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070659107 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07019692 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066652331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070049846 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066923746 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076403158 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076164364 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076017355 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078205884 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069865269 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070039047 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070242424 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069995615 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069774752 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075353182 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0782413 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070200049 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086092431 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069913016 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070091974 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07814041 seconds)
  done (took 6.213209718 seconds)
done (took 127.826313077 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184943771 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165562543 seconds)
  done (took 1.644061405 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068816843 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099422885 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076999783 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127954986 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066652409 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100150575 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099633187 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077833684 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066294711 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065870489 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066223538 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068564606 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131294992 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066306548 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065917789 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068816448 seconds)
  done (took 2.622889645 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099645798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163439579 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102199841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064589469 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099233457 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072355 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064827592 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075781623 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070963941 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065280748 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072806349 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07022514 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065122548 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070119759 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070399973 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072252007 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064887071 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072416262 seconds)
  done (took 2.745266188 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098375167 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091124043 seconds)
  done (took 1.498137459 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163768603 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106494882 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146948464 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.353735594 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169421948 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.130849904 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.135175097 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.131398921 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120769503 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125274486 seconds)
  done (took 2.889593198 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099691508 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154507722 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267515915 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117126792 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072499368 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094558832 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118505122 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077644703 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080519409 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080626086 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080365046 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076275826 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099790691 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073129477 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073792319 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076531808 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104082756 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073070363 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074948722 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076699729 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100857019 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066016513 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073858958 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073018543 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078009101 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077528058 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065506763 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065438475 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076636298 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074708642 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076530812 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093463978 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077252303 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106381877 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070793285 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10839482 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077513425 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073636698 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074448725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073604458 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078619256 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078723268 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072010421 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076668656 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065311194 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076064043 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065464874 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065415047 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07822175 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066658859 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077858177 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078357533 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10680083 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066771521 seconds)
  done (took 5.938989206 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103068957 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106310002 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072117938 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.114040466 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102903077 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071885821 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10300079 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095640143 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104714255 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069685306 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068485055 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069795906 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082169449 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083274763 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115382544 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107858178 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073286888 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071408746 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106477343 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105211427 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069082849 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097253652 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091874594 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103338033 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067425815 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070128931 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06794937 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069826496 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076707123 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078647697 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069568427 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081157098 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085215069 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078158728 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067171503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067672394 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06821066 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079889061 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079409611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078894843 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077476906 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068088015 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067950674 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069419973 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070156528 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067860321 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078982312 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080954527 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079010263 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069643034 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070158162 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067910127 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069382025 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081032684 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078001121 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081677235 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080237024 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067930076 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068124674 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072202201 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080857837 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079044381 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080207226 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069898717 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079301191 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068235277 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080066208 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085492355 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06854912 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070103059 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068663388 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069099043 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069268931 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078213921 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078046829 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069495561 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069517327 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067544651 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079842489 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077744305 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067658851 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076113894 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066202005 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067648328 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06885283 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069478019 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07691691 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079323388 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069031017 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067209645 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067776941 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067545277 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065211192 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075191656 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.0781218 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077583067 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077052085 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068600647 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077382206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077432072 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068946406 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078085161 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067043014 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069228901 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068196761 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076825904 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.203888498 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08063428 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070200564 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069348746 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079034436 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082611189 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069282185 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079039173 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081101018 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08001089 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068997551 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082842299 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069423744 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080743226 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070054278 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080541325 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069080649 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080072356 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068654502 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068198372 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069315332 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079946623 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073025572 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069192833 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07043987 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070780716 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08081562 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082619137 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071445971 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078501909 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078508844 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070683892 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079427 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068981521 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080024014 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070160522 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070058522 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067301689 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082934754 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068979311 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068817531 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069278298 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081292978 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068666681 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081243905 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078485121 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067995727 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081544868 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080283937 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078881948 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080700755 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071084579 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068909956 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068272042 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069787157 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077862092 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080421199 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070443023 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068901622 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078029584 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079628535 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067583758 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078415341 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078569588 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.0785534 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.0686352 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070032614 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080573766 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080920798 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078715999 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078840714 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078582326 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068948718 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077631515 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.0790001 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068233529 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085876216 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068615883 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083142041 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079427906 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076806554 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078689121 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080121021 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080956302 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080098691 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083087738 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068145625 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068061392 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07977333 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067809898 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069003519 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077804905 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069167757 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068812329 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081921379 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067812317 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077939194 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067067929 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077474261 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066323781 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0691983 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082107491 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067517761 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067980587 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077761923 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068356869 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075406719 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078824324 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076263302 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06648306 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068678664 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077439637 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076640993 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066365252 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06639353 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068090177 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076017229 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074842759 seconds)
  done (took 18.458315081 seconds)
done (took 37.113734553 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215164932 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154302142 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186982154 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119450165 seconds)
  done (took 2.098310329 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118947929 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102202419 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093195474 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065511489 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099281529 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06508727 seconds)
  done (took 1.895913755 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314492051 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212780532 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189842852 seconds)
  done (took 2.06617136 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204535696 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191800086 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.42263326 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.266077654 seconds)
  done (took 2.545598329 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145965337 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090150846 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067042444 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083859961 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.134433312 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160773586 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101575999 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126324736 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079195668 seconds)
  done (took 2.394743506 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150532647 seconds)
done (took 12.537243611 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.214440718 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100221195 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.109711547 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.121745171 seconds)
    (5/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090408027 seconds)
    (6/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.184259178 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100368238 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.126809799 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071532 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.242507974 seconds)
    (11/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198225099 seconds)
    (12/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.229814297 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078460527 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077029125 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073984843 seconds)
    (16/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.153426287 seconds)
    (17/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.204652756 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089921495 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205270185 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.194402367 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072839533 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168058935 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.200992964 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070955361 seconds)
    (25/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.113500733 seconds)
    (26/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.102296961 seconds)
    (27/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.148058456 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092706352 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14321171 seconds)
    (30/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.191671906 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09493452 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093841063 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074790534 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072528626 seconds)
    (35/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.163845355 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.209242837 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089853722 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071733887 seconds)
    (39/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.195002142 seconds)
    (40/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.07373236 seconds)
    (41/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071703676 seconds)
    (42/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070210266 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081789831 seconds)
    (44/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.163452698 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076194735 seconds)
    (46/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.189567971 seconds)
    (47/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072790284 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.21359539 seconds)
    (49/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.073456728 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075271478 seconds)
    (51/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.192348417 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085653072 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063523205 seconds)
    (54/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067785247 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152726234 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.186873385 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.155321102 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064471689 seconds)
    (59/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050405253 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066776178 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073169631 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.049915831 seconds)
    (63/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.062111257 seconds)
    (64/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096405917 seconds)
    (65/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.121715814 seconds)
    (66/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100834817 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051558076 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066594833 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09004245 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073327853 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182928726 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08916997 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089339508 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093090425 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.091697455 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049900909 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.180889896 seconds)
    (78/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.09759482 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070863851 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 0.06522076 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051026885 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075562359 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07226984 seconds)
    (84/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09761494 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07528561 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071836704 seconds)
    (87/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.060693427 seconds)
    (88/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.22047531 seconds)
    (89/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054798565 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061236006 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066251051 seconds)
    (92/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113615229 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076753806 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.163890676 seconds)
    (95/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.163725176 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078592862 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097412666 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066607467 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.15720224 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.207282789 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052437975 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051763055 seconds)
    (103/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163546498 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065919358 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125243327 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066363457 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077221713 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066069552 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053227561 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072457708 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05191259 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072980288 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073970437 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069136385 seconds)
    (115/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062933704 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.182438014 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14045282 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076919221 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182572983 seconds)
    (120/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077495027 seconds)
    (121/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074635278 seconds)
    (122/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100577099 seconds)
    (123/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073103361 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177720754 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066714672 seconds)
    (126/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074159071 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064304168 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147465623 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.137909904 seconds)
    (130/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.16149567 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074374158 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13896365 seconds)
    (133/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155475137 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093155694 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072680947 seconds)
    (136/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072046719 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.155750299 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108332987 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172388233 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071280281 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071958408 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05142723 seconds)
    (143/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155961211 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050378534 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095619588 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072027394 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052006009 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066168838 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074959495 seconds)
    (150/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090276834 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138246211 seconds)
    (152/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051108221 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051795013 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070886483 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092544025 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064968166 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072796143 seconds)
    (158/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089376477 seconds)
    (159/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101637659 seconds)
    (160/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069701347 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110819356 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172200175 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092308498 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051009501 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090492048 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087820538 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.380777724 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.119784654 seconds)
    (169/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05062266 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073287639 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051934763 seconds)
    (172/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06762182 seconds)
    (173/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068815518 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.073026564 seconds)
    (175/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079077383 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072353807 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079876388 seconds)
    (178/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072162578 seconds)
    (179/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060497264 seconds)
    (180/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051335493 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072757502 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138339603 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100541999 seconds)
    (184/309) benchmarking ("sort", Int8, false)...
    done (took 0.141677256 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065967919 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136624324 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050158421 seconds)
    (188/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051795912 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052282502 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079596894 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085119563 seconds)
    (192/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071854593 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066785758 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.09822583 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060133424 seconds)
    (196/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0641625 seconds)
    (197/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062866827 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071774254 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069423621 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07082921 seconds)
    (201/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.228909144 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14649548 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076001488 seconds)
    (204/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07586477 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076678764 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069634647 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093950064 seconds)
    (208/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065574218 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052052632 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090036805 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111838917 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051945629 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068475649 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052814418 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06437528 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091903639 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095865031 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078839243 seconds)
    (219/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051255522 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074879837 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073802782 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141570467 seconds)
    (223/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065737669 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152197209 seconds)
    (225/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051665575 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065529934 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071410514 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073105182 seconds)
    (229/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052259089 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050638607 seconds)
    (231/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052068326 seconds)
    (232/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052351434 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065516781 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064983265 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065709579 seconds)
    (236/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060889 seconds)
    (237/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062220077 seconds)
    (238/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065367649 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051376841 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065983701 seconds)
    (241/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064275234 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052302318 seconds)
    (243/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07498671 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065964096 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052100926 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136666974 seconds)
    (247/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067772358 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092271005 seconds)
    (249/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079962114 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075154844 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065921983 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089053887 seconds)
    (253/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063194017 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065819782 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052287828 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08834052 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178134391 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06492178 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064650594 seconds)
    (260/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100757419 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072277377 seconds)
    (262/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050362874 seconds)
    (263/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07096023 seconds)
    (264/309) benchmarking ("sort", Float64, false)...
    done (took 0.131433951 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083770567 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050698754 seconds)
    (267/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060776564 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072835216 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064878235 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064727932 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050608297 seconds)
    (272/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105435837 seconds)
    (273/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067258409 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06486997 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.154189735 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06321872 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090922114 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113560695 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088537128 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072179121 seconds)
    (281/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060512756 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050596456 seconds)
    (283/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072439592 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072898904 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063532686 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064113371 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182109231 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067165408 seconds)
    (289/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061851228 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066059787 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072844999 seconds)
    (292/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071534864 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050829366 seconds)
    (294/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194632766 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071494729 seconds)
    (296/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069101385 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092697223 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066449406 seconds)
    (299/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189907611 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050748447 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065178103 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070942515 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051347034 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064974065 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050469691 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050904607 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080368335 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064752563 seconds)
    (309/309) benchmarking ("sort", Float32, false)...
    done (took 0.132316786 seconds)
  done (took 30.875408571 seconds)
done (took 32.239189687 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087573839 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094139837 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076398064 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094740447 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081672598 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076607038 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072649676 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079224876 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080367355 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082361634 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078863457 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054651291 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074166026 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074492904 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074689914 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091545815 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078220692 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072823284 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073234604 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064250148 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072996923 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064915983 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06682745 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053859224 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078759045 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071737744 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07168686 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074222629 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065505009 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065713763 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069263228 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073213213 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065023537 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078608756 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072316397 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072877825 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075009608 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077075906 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06734952 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065670405 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073977371 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065075007 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072899986 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073748095 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071860814 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071663232 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072909345 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.0781035 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09133589 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067626885 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074835414 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076302826 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075735754 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073470926 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069615492 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073129747 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070927504 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091690516 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073507101 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067238082 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073686474 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07445204 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071210059 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072842363 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072949401 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075197609 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075417845 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071329044 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074557425 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071536791 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064708554 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072580078 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068837674 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064752715 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075663629 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076910883 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064127128 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071273996 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072394341 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071385253 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064390279 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067200338 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067282425 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071765568 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066707883 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053990028 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068986528 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071345522 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064086306 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073239277 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071416546 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07251731 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066650629 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075302155 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064682413 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070414373 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06510327 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064807925 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06676666 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069297131 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064521412 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066654122 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073954554 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066546029 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071027368 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078163534 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064679733 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071366332 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064067443 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063971796 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078656543 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073906999 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064442616 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066850955 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063686768 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072250764 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064043123 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064482654 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064781502 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064340619 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070765694 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064581184 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066186317 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071779336 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077258116 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064184556 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067869387 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066623195 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064548251 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070221744 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06413879 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064327737 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066686112 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060475183 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065960374 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064171983 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071847473 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202041515 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074648953 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068338963 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075353591 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071473118 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072800648 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071265911 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065177824 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059067777 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067126212 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067992312 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067736087 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065679702 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066975435 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065809031 seconds)
done (took 12.40210298 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066437207 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142522584 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099207054 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096050355 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08562362 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066122438 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075954099 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100960434 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067452118 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101696853 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087368795 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084962973 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112226419 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064212781 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065611781 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069305549 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067424904 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081261637 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100828661 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086744347 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116651308 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065325048 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094527444 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089096166 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08723706 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101524927 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069638561 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069726753 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06974183 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091081857 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086666725 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069608564 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06668958 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097407868 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092608429 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083430676 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065995552 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082111305 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066307407 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065584921 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066920415 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097846911 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079971737 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080501485 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069648702 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068758472 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066628967 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082900521 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088821207 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078391447 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086102215 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102520561 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068758267 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06519715 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064213924 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084947707 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065011333 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069023963 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065467735 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067678909 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065866411 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069011314 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080928052 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08213426 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068917014 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079788445 seconds)
  done (took 6.751237856 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083422958 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091257316 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084173102 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083790531 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065403822 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066116588 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065683921 seconds)
  done (took 2.001576473 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066655716 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088932278 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08956677 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089024151 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085414541 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087883294 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075636004 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066351765 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080374812 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067140183 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087022574 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102596881 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066471877 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072056425 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090736867 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06605584 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090084376 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066022695 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068920544 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090091243 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067753542 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082277173 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06941313 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066282219 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080470724 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066746952 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114034722 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070544153 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06796739 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069972278 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064288988 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108095426 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080583065 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075283627 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06671674 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080904895 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080690692 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064513824 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082890581 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071572099 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080485684 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066737187 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067063407 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064440774 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070885762 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077048075 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067182512 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067153583 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069140796 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086434127 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066961264 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080263852 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069641939 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069220013 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067566372 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069982799 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07678538 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066675272 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086816768 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067216921 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083255361 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082519007 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080304922 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082900002 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06847498 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080141831 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080443002 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069137697 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068239357 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069923173 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083054177 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065162148 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068279808 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077235125 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068817943 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090052132 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089801524 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067984965 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075827646 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066525446 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066433233 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066444153 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090168266 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068763199 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066024956 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071059507 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069112273 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065071029 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065403187 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070177606 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064301235 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06759747 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069299259 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069357672 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069110353 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082742756 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068403917 seconds)
  done (took 8.724770677 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068271841 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06813331 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069298585 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067715581 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068722215 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068004895 seconds)
  done (took 1.894633652 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093207838 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069785307 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080718073 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07212674 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105676201 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087168933 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087801117 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07813813 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084224612 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079150276 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086814488 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088606601 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092639445 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072631128 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086761399 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071577061 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087437824 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075894721 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078449887 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073357749 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087015501 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072662498 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072958134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081874292 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076341813 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072039918 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066804406 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079071009 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078482984 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078903683 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072805528 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076016153 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070566182 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077991378 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087189004 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070785415 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071872755 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077190354 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072768989 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075538213 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088469584 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07359792 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074569316 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078284676 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077906921 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070436389 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077166425 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075509833 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08688153 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077078474 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077088645 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071382507 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075098345 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077591981 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07017488 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078027959 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076897931 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087866246 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072120609 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069937914 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068714942 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075491455 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077254142 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075677128 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078475903 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076714117 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069947201 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073763706 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072538416 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071638054 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077710659 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068834521 seconds)
  done (took 7.057171057 seconds)
done (took 27.880130976 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537384934 seconds)
  done (took 1.989993118 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.615502637 seconds)
  done (took 2.091468914 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.555391706 seconds)
  done (took 8.028911088 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402964152 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.4994769 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.724862195 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1330773 seconds)
  done (took 3.270181711 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.697274737 seconds)
  done (took 2.180462562 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.215082111 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.203063824 seconds)
  done (took 1.912915524 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376529736 seconds)
  done (took 1.854600639 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.131988966 seconds)
  done (took 2.613000103 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259612166 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176029847 seconds)
  done (took 1.915960524 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.481862099 seconds)
  done (took 1.961379009 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.879932918 seconds)
  done (took 6.361036241 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212967348 seconds)
  done (took 1.739774502 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243170429 seconds)
  done (took 1.725360328 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.760794864 seconds)
  done (took 3.246303314 seconds)
done (took 42.370220658 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079077693 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080900796 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080213888 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078375164 seconds)
  done (took 1.789787991 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07628074 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072677079 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076532169 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072123176 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07653894 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073276321 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074112361 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076567218 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072558023 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073002787 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072255511 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072791782 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07440077 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073958094 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070715069 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074882985 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075856817 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072048296 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075076871 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072119079 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070408898 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075449119 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075378799 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071681873 seconds)
  done (took 3.258000175 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078590437 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072817932 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074490626 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072639621 seconds)
  done (took 1.79393154 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07853188 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09578005 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09013239 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078025303 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092455246 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086371763 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068969602 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068454847 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070084568 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077557817 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068303665 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096426469 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087849134 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076942988 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079406524 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065325092 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068150347 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087223036 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078489714 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077779127 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070131601 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077739715 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067712274 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08912652 seconds)
  done (took 3.388555652 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077710484 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105859797 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077691054 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088866773 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091434521 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064956594 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074275235 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09106992 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126058393 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065534651 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070395463 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065210714 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072341597 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064631314 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075900552 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10701866 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110717901 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068318323 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09700463 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065850853 seconds)
  done (took 3.159157931 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072086581 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069504924 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065024647 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068761762 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076458902 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07223015 seconds)
  done (took 1.926735424 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068069145 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066959227 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067270938 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066488607 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07098913 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066226709 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065348794 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066751156 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06697164 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066168602 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066122092 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064940281 seconds)
  done (took 2.298561224 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200748445 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06788464 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067915774 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065130789 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070011108 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065622849 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080081 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066833945 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090703392 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065922317 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06623709 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06812119 seconds)
  done (took 2.472472421 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209263709 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075760903 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240094399 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140290438 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111223461 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115624138 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104290787 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114288724 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142695489 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101497351 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169129935 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168828199 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107781362 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137527187 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088200531 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100009046 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155884786 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163985155 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105630215 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167190608 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14680349 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12619725 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148304192 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106478444 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106104604 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122929131 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070910561 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079724155 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171936188 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133646954 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146030727 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111210649 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093261862 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176585589 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172414031 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141032725 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136349498 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084048833 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105402225 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13423806 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200004753 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0880656 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161238484 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107530903 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218488414 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135283272 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121061398 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120457939 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10688257 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090825365 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145545459 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187489481 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139444422 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087619975 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113859024 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114873779 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117048347 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10396042 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184128439 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16369819 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129302077 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071704049 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100006883 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155935067 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134148547 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108867253 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126629947 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092747854 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136625843 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156751415 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120704681 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147681355 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130255091 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089098141 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119912982 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141132744 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128669233 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162046917 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123856883 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07200949 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124017851 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101532448 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079616434 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145419227 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074186898 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176088864 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099415021 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108580453 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114469321 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10907157 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10860161 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161158112 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144522563 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100953359 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06422624 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24681555 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123001378 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149635366 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087206448 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109581524 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118344302 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07833732 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139497176 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075134695 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123629767 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076813914 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129703027 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130420387 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077056616 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123347105 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103223228 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101420832 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134282843 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16223461 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087736355 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081536542 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170859338 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122298538 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104684555 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144378109 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158397193 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101911253 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101851334 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151233513 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180120697 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088961213 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164598354 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107644164 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083333039 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08790897 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124251166 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112014848 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124184604 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08135172 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118729046 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168996272 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073877716 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09516544 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133179761 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078345344 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080186855 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10534559 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105435772 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095246206 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099614015 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103638366 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137073263 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123159242 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104607656 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122699175 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097090435 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317508988 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088688107 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103039078 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104606084 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069841761 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136955235 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159405934 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078890097 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165912974 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122706834 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10582674 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120881278 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084509539 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141305982 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079680093 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069596449 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145458925 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111294583 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109887188 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153525341 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107175443 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127465883 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119422269 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136614653 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131624455 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130429584 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104968609 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088369082 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112477243 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126039807 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072670069 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091960183 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079660195 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104954322 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096657793 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082840466 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143087168 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124542405 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100946814 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111722587 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096349257 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147843108 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075740344 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127849548 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119424779 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095385961 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152526847 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15401789 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132214997 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098735535 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136838226 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069654878 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073344589 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088269837 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121725313 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081321397 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081185175 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261841624 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150124774 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130517691 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138516098 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113275247 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121077118 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157114784 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06961139 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117784066 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14914277 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12130526 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104514972 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090120102 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099399725 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143922537 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10900226 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186490497 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119126932 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124809711 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153768976 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10088233 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079148053 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102934524 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13789847 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104946255 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145418762 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099682734 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088575349 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11005802 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074851441 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099337315 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126865684 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120438541 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135527083 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115610917 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133427346 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077698371 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11649091 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120458299 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122199239 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063480923 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119782079 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162375676 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094330804 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118486007 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153575643 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078622671 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12595885 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1758678 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144667971 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084183164 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253464098 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119655177 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129914494 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120910418 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14204672 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109771757 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13829357 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109856193 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08567455 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087753006 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097151156 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104442214 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095696041 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108288179 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116063968 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09513409 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133130977 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105297869 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110199298 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11970774 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098136654 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090346539 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097239877 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17836458 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119991792 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172323241 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099527563 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14648086 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165035249 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074689893 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079370603 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07829508 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139876484 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084268819 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131029851 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09922529 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107112833 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124163068 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144201085 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095401372 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068249338 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109015986 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134285706 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113579223 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098675758 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104809929 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163541014 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100672722 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079058735 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113363738 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106037026 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102825374 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173061956 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061197131 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097181003 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075699681 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079213797 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125370031 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296637968 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080648942 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103430701 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120385255 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114178486 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129139374 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101307093 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100634319 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116431713 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15154082 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129124429 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089743292 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112594506 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147033483 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158900411 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10581263 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09621852 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175835726 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154416658 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161524883 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088880905 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115778626 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114617787 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108808608 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139008455 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082692203 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164692519 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081559208 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137360557 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104511193 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090333706 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130367582 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099948064 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087943286 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149131289 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1177666 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082680319 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077694285 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118892292 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119416394 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106419453 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074504654 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138816121 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072968739 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132452695 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160442242 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080228203 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107559454 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095750662 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079377643 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106714996 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101882483 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087111287 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239406637 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177904435 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088551472 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152346881 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134200393 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112877667 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136457345 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102310547 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640406246 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077647208 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153703573 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116979844 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175262228 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100680671 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119214158 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10929749 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124951208 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146958376 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105046768 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182686049 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132775891 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116460834 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079234984 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102225848 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105374363 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08929613 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107275961 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113777511 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116704302 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094390472 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116030542 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125716863 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081456633 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095710046 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157602766 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117051884 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143866385 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141818961 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084993391 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118706429 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137855758 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079182321 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122051777 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152368128 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106047407 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098387858 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080540649 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101064117 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159797232 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072784138 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158479009 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264855005 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110845803 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1140446 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113649111 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132428698 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108241144 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122790859 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093497603 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111443891 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113267056 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081900127 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076776274 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106794995 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112367186 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098118203 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097886094 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098737802 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152837264 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071803011 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09897769 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104966113 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14707998 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176054744 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088639458 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082187008 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119956396 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113721051 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114473776 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12191498 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078857354 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08188376 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081737262 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077508612 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108776875 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11274653 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104539417 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111522452 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164584306 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082452438 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232574796 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095469027 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105268008 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069194031 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077992045 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096416756 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09909465 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108416387 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101424369 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159833729 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094899157 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089131566 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092091252 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073425501 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082514976 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128630152 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108476875 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117791912 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097934992 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061300151 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107779741 seconds)
  done (took 58.920761262 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10925059 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082846649 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095620288 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144916957 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122817007 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202642218 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151817936 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188895166 seconds)
  done (took 2.733797508 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067769836 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094324075 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101573895 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082267283 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065804371 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067571234 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23248246 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080108956 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066027698 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088673902 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077764919 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068093445 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426001685 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065244894 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066456281 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060497644 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068511903 seconds)
  done (took 3.380396448 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.38348536 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.612894124 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.380672202 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072498257 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.472838022 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08953844 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.159917979 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129576181 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07248273 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535563873 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702287358 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123388828 seconds)
  done (took 18.351045466 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076025969 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069886248 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08388643 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084259919 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073237975 seconds)
  done (took 2.065531012 seconds)
done (took 107.055928019 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081691138 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384464319 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053493598 seconds)
  done (took 2.081683934 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083225524 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085621189 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085703737 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084031668 seconds)
  done (took 1.957247206 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074315352 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077382322 seconds)
  done (took 1.764430817 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236498725 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17186702 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088358343 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084177102 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079893802 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08020835 seconds)
  done (took 1.860246705 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072627723 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07591272 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073192179 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077373924 seconds)
  done (took 1.914273254 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077654504 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052096555 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054688897 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058236863 seconds)
  done (took 1.856340425 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087301485 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080169036 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079077425 seconds)
  done (took 1.862661817 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103552653 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086135 seconds)
  done (took 1.80539569 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082214656 seconds)
  done (took 1.700129551 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098683819 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.1054554 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133434817 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11274959 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141288785 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111112182 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08601885 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086710324 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077262831 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08745493 seconds)
  done (took 2.659156811 seconds)
done (took 21.654483288 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079588042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.463750442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361377334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091229267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669404201 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356854191 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.985112633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093539601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115604984 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067875708 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084822794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648676842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97635457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.419649063 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964332341 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41836217 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650351852 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068361089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068118924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068128883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.972192915 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067759225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068172083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068601086 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648304075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372979303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068653288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.419996945 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068520164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070031598 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355626395 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068242232 seconds)
  done (took 16.503530597 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071212076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122308405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074363234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085166999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070786982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069871106 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07189076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069177295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122361576 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068415054 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08562897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067976421 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072282128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068662864 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088022234 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068332901 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068888583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068610033 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068154778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068334326 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087288971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067756987 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068539572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068619227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068614949 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080805711 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068649937 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068034485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068327592 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070347871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071585649 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06876703 seconds)
  done (took 4.035378983 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119282074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129678588 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074495281 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106019535 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115359629 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070492148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149077003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093377487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130578404 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068283909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085369131 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068365317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102772931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069072607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088656319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068580816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069185331 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068850285 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06853437 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068819287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087730206 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068546927 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068674193 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069274613 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068771512 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082431659 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069279872 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069460635 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068825295 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070896749 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072207508 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069563394 seconds)
  done (took 4.312640897 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073208038 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076263821 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084208399 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085391968 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070248811 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072634323 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07465693 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070114717 seconds)
  done (took 2.23952896 seconds)
done (took 28.712187028 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080123426 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068975442 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073216142 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083437291 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074160142 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07876311 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068007215 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075837923 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073106529 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073214112 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075216556 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067290025 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071736947 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067194661 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073997208 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06820038 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079416973 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072230052 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079613381 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080335473 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070693175 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074001535 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075631395 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080024972 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079899069 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080079944 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078678288 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073832641 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069894574 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071354998 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078101428 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084682516 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069103532 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07990517 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068398073 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068489028 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072468039 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068605546 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080134163 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077768347 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07047734 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077536269 seconds)
  done (took 4.754242237 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088187543 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093822094 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085614175 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062342996 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067081596 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065624789 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090035169 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060129765 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059603983 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088949076 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0554597 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060077327 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063560442 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053735764 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0627859 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056491888 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062537346 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055651539 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060816681 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059511855 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090148379 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053682587 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077865857 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063214258 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056098597 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061602555 seconds)
  done (took 3.396479149 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074648599 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087647524 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.101770494 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130382606 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107650028 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079762468 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08157377 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096639096 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089406677 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067855486 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071773381 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093606137 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092427112 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074615701 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068839436 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088268896 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08484863 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070009125 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074724787 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097232026 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087796344 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087703413 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100200341 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08431705 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067570079 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070554331 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072248555 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083180484 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073002191 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077676881 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072105776 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071733263 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07016316 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080068128 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072368892 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06959026 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093453334 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078256441 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079459734 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068903379 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07148866 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069246106 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093124756 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133431937 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067240929 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074522492 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07609975 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077315135 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067727888 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088090566 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078831044 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067372762 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070583234 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066921959 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06739468 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081592478 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069579587 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069636738 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076770206 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070515115 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.092248048 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071984369 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083927328 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066875638 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075279177 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066590884 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068448822 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066148738 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095733174 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069020268 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112160806 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068729378 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068481615 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077034903 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07547731 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073931476 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067974104 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083245867 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07857335 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071325608 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076456069 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071047896 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070563825 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091854384 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070286901 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069075361 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068733699 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073770958 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070425581 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068951542 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081078016 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067714024 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070546862 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084705472 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067201766 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069038184 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073907387 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072211523 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066931639 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078905693 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072480558 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068152311 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076977481 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067720391 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070739978 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080710468 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073643615 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066347703 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071964795 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073785293 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067846374 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068898315 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070047959 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069038655 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076114666 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074096686 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071679071 seconds)
  done (took 10.696326985 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166640727 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159693167 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071516144 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150052076 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077005807 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080032591 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152091878 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096176694 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068296447 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068634841 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.0687666 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111557771 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107092475 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117166648 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079277528 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068557643 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084762087 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11605987 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154343753 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147999559 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085723705 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077478049 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07094835 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069642334 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070850342 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079222572 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086158386 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077459325 seconds)
  done (took 4.433898904 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082912892 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100600675 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07530825 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091443904 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091695881 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068041391 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070594534 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070032085 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081847084 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079093547 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067900657 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073482941 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075253083 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071585524 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069092849 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075887119 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076124998 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07006024 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071704663 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074056208 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078610202 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092992044 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072101847 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067347415 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073316898 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067422277 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063890988 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085562148 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068252747 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095547936 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066123226 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076761724 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082632961 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069355936 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068223098 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068135921 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067829805 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067900309 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070004369 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066580427 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066598242 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057240684 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067019823 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079388769 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075429259 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056056802 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072953638 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073472306 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073013562 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065427491 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070721885 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07040823 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071201806 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07540971 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072850713 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073693651 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069027246 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074204969 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.0769642 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067653862 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065112529 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066031636 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072488138 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065710834 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076461981 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072725053 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066370602 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067512211 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069528039 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074501639 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067417163 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070977735 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065446679 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069825959 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072721825 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069603282 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068772317 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.0666061 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067755803 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068079555 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055016108 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067849891 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053271796 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071019431 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066645447 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066334699 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067596903 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073092482 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080327644 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069069688 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073589052 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069034657 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0670537 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070921456 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060541176 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070768498 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083631362 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083099237 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067977746 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065539621 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082875646 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072579095 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067148502 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055751282 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075767826 seconds)
  done (took 9.198534677 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091752876 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071082086 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086844668 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093590842 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088173108 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076200685 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078523877 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070263761 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084671257 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074887697 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077689343 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068787189 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078571243 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07831729 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070751113 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078735135 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073079588 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085508596 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083111026 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068995779 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076629858 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081092093 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091595349 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08295708 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081510592 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082977024 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091166247 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.073024597 seconds)
  done (took 3.917730609 seconds)
done (took 38.030160756 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.716858923 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.899539267 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.714642929 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.101456643 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.79283351 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.942579124 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.732836453 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.70620885 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.978963759 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.741581908 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.919268893 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.834031363 seconds)
done (took 64.731772897 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.780598702 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.844760344 seconds)
    (2/2) benchmarking "String"...
    done (took 1.977297201 seconds)
  done (took 5.468880629 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.989613226 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.267717356 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.963236712 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.706232509 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.712225762 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.046415049 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.510551884 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.235571805 seconds)
  done (took 30.091400133 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.828635093 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.937505843 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.386840691 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.420063996 seconds)
  done (took 15.262919021 seconds)
done (took 62.321551261 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.701452521 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.755148273 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.714933323 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.68327559 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.761817094 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.722651651 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.081792555 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.972765774 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.704355627 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.686202818 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.70458679 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.14511957 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.708592667 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.145406533 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.70415736 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.713490766 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.740419957 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.209391711 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.862698461 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.715880846 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.713491868 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.90006045 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.710663469 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.712921243 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.75471458 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.707583852 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.161331795 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.711253801 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.33187478 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.704569696 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.734363052 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.717426667 seconds)
  done (took 202.938302157 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.701504597 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.92369864 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.966871998 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.724821181 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.291576773 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.886152093 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.824672916 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.433212705 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.705998874 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.727059641 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.98809182 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.705205784 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.042635156 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.65375949 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.733172445 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.799240958 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.01687416 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.995841903 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.737999293 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.882544464 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.706517277 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.881521945 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.854535276 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.921620612 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.709094927 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.807454216 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.719366865 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.72665026 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.89479154 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.975429276 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.738542641 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.737026842 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.899267258 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.577096671 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.711409222 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.710114793 seconds)
  done (took 168.956508754 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.089190627 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.705142538 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.705481174 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.705200438 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.711736229 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.705308611 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.826843298 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.832183922 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.299277284 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.110067702 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.759315684 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.537091987 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.70868599 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774570391 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.719009016 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.708497869 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.720830684 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.731008365 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.708649525 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.708382356 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.828826028 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.721416017 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.93980845 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716102253 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.707283633 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.712981086 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.076825682 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.706808709 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.713676152 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.949647546 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.708714278 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.706492363 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.593505665 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.826013214 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79472468 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.710461998 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.712470666 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.707600935 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.927475271 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.706943749 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.707967993 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.70784625 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.709924189 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.707960563 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.876436626 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.709606473 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.829061297 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.710355919 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.210930257 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.708304012 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.70809933 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.631069636 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.39452559 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.709608747 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.708720274 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.710679477 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.707975461 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.709074436 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.712951913 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.515064179 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.783365674 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.70945961 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.711241068 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.714461961 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.709449901 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.89619879 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.709315311 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.765630475 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.765238867 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.833455434 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.831311373 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.711064464 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.709561518 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.777306097 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803563063 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.708864694 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.708185794 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.708873026 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.710286133 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.790677461 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.710055131 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.829422197 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.71652942 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.71029006 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.760463408 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.779746415 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.710109817 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5980866 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.711666602 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.709985499 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.015841381 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.77634991 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.710840048 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.710067862 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709760725 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.830844685 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834952152 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.485451973 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.713190736 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.385952571 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.883225158 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.901230709 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.710958531 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.710976516 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.978422975 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.713181404 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803459878 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.715902457 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.712880307 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.710073666 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745411114 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.711530409 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.767223347 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.714657516 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.084386973 seconds)
  done (took 396.523098338 seconds)
done (took 772.2060836 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.380454524 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.338879903 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.461647813 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.358779779 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.328907976 seconds)
  done (took 13.521052381 seconds)
done (took 15.17163317 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.806962823 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.8057145 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.736351706 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.804711167 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.732440674 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.802581201 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.783340265 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.73964142 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.768317739 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.738241689 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.773045582 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.736267797 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.725894009 seconds)
  done (took 24.60598702 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.947702977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.953980887 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.787034734 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.959511285 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762110063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.95895999 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.881672378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.866870091 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.870663096 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.731080622 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.726812349 seconds)
  done (took 22.100196821 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.952345439 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.955899684 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.794512468 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.958936432 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765138411 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.954525346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.882868268 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.871333269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.869088735 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.729162422 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.727117477 seconds)
  done (took 22.115554921 seconds)
done (took 70.473077382 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.720044404 seconds)
  done (took 3.373231246 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.746719952 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.90205098 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.727710564 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.724492643 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.721644212 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.723102665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.724802588 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.721884211 seconds)
  done (took 15.648726626 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.718915918 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.721195374 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.719697913 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.721288055 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.72171604 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.719413103 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.721731451 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.721714668 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.719512651 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.719285279 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.721114822 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.721371902 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.720129173 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.722243355 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.718966768 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.720328014 seconds)
  done (took 29.185028807 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.722191067 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.719410891 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.720439516 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.719715918 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.720061149 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.71986401 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.720673195 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.718603883 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.722253982 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.719520574 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.720570853 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.719715481 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.720572037 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.720058548 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.720309213 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.72077343 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.720985129 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.721727718 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.725264377 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.721759026 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.72129511 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.720748585 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.722267165 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.721487205 seconds)
  done (took 42.958448388 seconds)
done (took 92.818324931 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.643445626 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.118689467 seconds)
  done (took 8.420891427 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.726607872 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.723360461 seconds)
  done (took 5.150093204 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.724452551 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.722957078 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.723588245 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.724315057 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.723395139 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.724618504 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.723592417 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.724493935 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.723527325 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.725276772 seconds)
  done (took 18.896905204 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.724340679 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.724673347 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.722758324 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.725081944 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.724956474 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.721344399 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.724061501 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.724002149 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.724052418 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.72336283 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.725107691 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.722526063 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.724542296 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.722735883 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.724219853 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.723078236 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.722656764 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.721714777 seconds)
  done (took 32.682792481 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.726214742 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.725977071 seconds)
  done (took 5.110263348 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.722493412 seconds)
    (2/7) benchmarking "second"...
    done (took 1.723160996 seconds)
    (3/7) benchmarking "month"...
    done (took 1.722518372 seconds)
    (4/7) benchmarking "year"...
    done (took 1.722695191 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.720977068 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.722588081 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.72317915 seconds)
  done (took 13.716654054 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.726534984 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.881128319 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.948992551 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.40079074 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.727027833 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.728517078 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.670170131 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.729327734 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.731369024 seconds)
  done (took 19.203196119 seconds)
done (took 104.835867203 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.583557453 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.722742991 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.079608583 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.781386806 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.767002959 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.019082713 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.743539121 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.029266063 seconds)
done (took 42.384173704 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.736015212 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.290236185 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.328761838 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.237391844 seconds)
  done (took 12.515887806 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.706647082 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.257833912 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.761372616 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.31681762 seconds)
  done (took 19.724722834 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.10079327 seconds)
    (2/2) benchmarking "read"...
    done (took 2.071141124 seconds)
  done (took 5.836547102 seconds)
done (took 46.475046159 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.729048616 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.728691911 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.724799689 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.728054922 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.725177027 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.726141298 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.724428592 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.727115176 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.728125723 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.728688009 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.726990359 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.727829003 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727893278 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726426854 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726534619 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727378253 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.725440108 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72601827 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.726474466 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725702873 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.728898165 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.729046466 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.724434602 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.726189872 seconds)
  done (took 43.106711095 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.728306635 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.72782057 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.729197053 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.729521774 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.726500808 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.728972914 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.729872133 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.726533058 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.730206063 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.731439102 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728404622 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.727765545 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.729760799 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.729592055 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731626459 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.727293777 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.729116717 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727789046 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.728997974 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.7269577 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.730500288 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727188667 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.726844741 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.729561864 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.728810706 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729413716 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.729355092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.728670686 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.730813925 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.726989116 seconds)
  done (took 53.52615345 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.736212515 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.73969632 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.73014589 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.730408789 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.730481332 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.731333018 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.730238687 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.731169826 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.731428105 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.730757006 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.732922494 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.731746542 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.730830347 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.732176786 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.732290817 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.731222048 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.732150905 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.731031207 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.731622874 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.732554672 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.730849776 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.731797254 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.730979233 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.732769116 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.731144726 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.730584615 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.731097635 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.73052436 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.731906698 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.731085526 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.731966328 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.732950971 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.7317894 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.731850975 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.73169266 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.732476812 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.736342155 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.73855113 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.731927589 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.732575076 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.735167284 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.736091025 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.735726818 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.735461944 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.737723719 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.736059305 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.73621998 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.736805414 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.736440439 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.735380215 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.738956918 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.737357931 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.736562085 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.736243341 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.737130497 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.737093084 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.736753943 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.728594821 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.728330949 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.727354201 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.729914148 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.727784079 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.728199887 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.727476036 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.727737498 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.727655492 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.726804436 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.728516736 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.728011088 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.727595626 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.726596706 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.727797968 seconds)
  done (took 126.391061935 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.727318523 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.722808933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.719263595 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.720032768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720417455 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.721034317 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.720594832 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723824075 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718131371 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.720642341 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72081765 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.719352917 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719295306 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.722065018 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721779633 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.717924641 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.721554746 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718295521 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.723053035 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.721156778 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721041878 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.716473681 seconds)
  done (took 39.517288513 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719079099 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.722824881 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.716141797 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.722325433 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.717051334 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.719210203 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.719282563 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.721748495 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719423136 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.717659367 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716286974 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719209251 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.717300476 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719235038 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.719474546 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.717888428 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.720414121 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.717423614 seconds)
  done (took 32.593455775 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.719077502 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.718597323 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.721122885 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.719129042 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.71841277 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.723180499 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.717591834 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.722997314 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.722202431 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.718872156 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.723446103 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722279633 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.721865168 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718403176 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721068249 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.720267352 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.72189689 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719834987 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721537496 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.718249897 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.719804905 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.722582802 seconds)
  done (took 39.503325199 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724517395 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.721104416 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.719742585 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.720408185 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.719113634 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.722312937 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.72535457 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.720683231 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.722053235 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.723992763 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.719030742 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.722575091 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.722521325 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.721874216 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.719328298 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718321601 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.722078871 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.723850903 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71980456 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.71967771 seconds)
  done (took 36.081318033 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.723335784 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.722096013 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.723699479 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.722622416 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.722518228 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.720988448 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722770673 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.72210294 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.720775154 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.722438153 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.721661872 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.724655835 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.721148318 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.722261681 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72329774 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.721622689 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.721967363 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.722616126 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.722668133 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723394174 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.723478071 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.72214391 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723245766 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.723191355 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.721398828 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.723555584 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722707467 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.722341317 seconds)
  done (took 49.883663709 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.722901041 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.72226266 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.722416095 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.717523995 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.717882574 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.719581492 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.718431207 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.717421539 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.721579603 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.714402339 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.716282719 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.717091713 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.717991061 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.716764799 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.718881072 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.71652422 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715795999 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.713554866 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713324381 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.712874175 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.717679333 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716248736 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.715730068 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.713917239 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711856739 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.7148755 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712943367 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.712398377 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715044449 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.713066726 seconds)
  done (took 53.150035343 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.735305183 seconds)
    (2/2) benchmarking "in"...
    done (took 1.734009728 seconds)
  done (took 5.114729836 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.712451698 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.715277937 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.71497781 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.715433843 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.712578909 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.71448001 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.714247619 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.712238357 seconds)
  done (took 15.356513105 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.715873901 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.713495062 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.714182123 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.715397104 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.714566079 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.715771532 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.720207957 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.714129465 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.716116165 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.716188643 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.723003357 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.723954496 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.720411355 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.714537277 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.713196768 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.715259214 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.713973758 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.713090381 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.71575204 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.715529614 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.714669174 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.716234502 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.717299458 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.711226249 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.717360426 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.724641078 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.71702667 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.717743692 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.713086201 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.719527615 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.713841166 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.711057222 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.714870389 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.715460508 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.7158852 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.715589747 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.724439787 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.715156249 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.721500635 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.71458876 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.714723329 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.713218873 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.717782657 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.716955868 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.718159663 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.713603681 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.716001273 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.713095801 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.715503648 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.719842157 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.722236885 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.71438512 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.713180638 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.721777993 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.717342906 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.722130735 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.714238441 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.719420217 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.727294706 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.728480586 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.726353234 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.726031432 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.716318927 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.715485592 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.730065287 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.741456627 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.719829735 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.711041261 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.712062112 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.714661222 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.72384226 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.728037489 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.725435785 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.714749741 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.71526402 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.71415057 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.718459029 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.715560811 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.719864877 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.717699097 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.714074457 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.715264863 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725734557 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.738437622 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.714390351 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.715160099 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.713737571 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.714933227 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.716774987 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.726223949 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.713044269 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.714783902 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.713539516 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.718520577 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.71488721 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.712917079 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.710725253 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.715584788 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.710704042 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.716549083 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.713519376 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.713613393 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.723256977 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.711256631 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712048057 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.718194712 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.710304826 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.710418877 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.717887292 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.709224234 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.712522471 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.713707961 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.71827257 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.708482354 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.714504502 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.719640612 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.711411218 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.713388429 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.709871237 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.711128485 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.721791657 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.740495154 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.711524361 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.710332508 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.716070046 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.723690472 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.711460292 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.713537313 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.713151388 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.707376096 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.708325153 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.711098873 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.709897682 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.711004653 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.711382628 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.711047171 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.707408573 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.712358606 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.710235869 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.710088394 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.71163294 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.711947175 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.711122007 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.712751929 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.710493971 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.711808987 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.719430024 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.708954373 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.711810259 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.711301135 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.708775892 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.710558772 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.713841635 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.710683597 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.709732444 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.709943415 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.709731407 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.710661275 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.710541107 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.711554217 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.711628177 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.711965611 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.71619109 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.713232416 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.715132372 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.70977316 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.7061537 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.71098818 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.710803133 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.710613082 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.709976275 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.709788527 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.713753733 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.719906417 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.70922321 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.711797301 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.713019653 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.710000914 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.711663279 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.712144543 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.715470079 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.721195463 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.710281141 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.717704589 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.712127383 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.709262683 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.711566872 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.712621545 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.710568042 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.711345753 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.713305734 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.718393271 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.722280125 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.720445144 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.710226763 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.714477283 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.712252205 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.715169458 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.715228005 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.707287568 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.710067308 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.709036534 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.708577922 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.709455834 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.711824462 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.708800979 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.709974642 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.710624494 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.708463299 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.707553078 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.71256903 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.710495365 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.710077032 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.706699647 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.709033295 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.708915217 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.712467836 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.708437845 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.710663051 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.712627873 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.709058379 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.708019449 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.718338093 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.704736293 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.709350727 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.711222883 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.708905399 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.708342636 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.709014658 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.711112572 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.710155456 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.715112952 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.708574585 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.710633443 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.716736874 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.708305795 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.709784283 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.713103074 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.708210129 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.71042777 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.712643808 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.716381619 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.709045207 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.710005212 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.71120831 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712013473 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.708775623 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.713717296 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.706987251 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.707934986 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.709502574 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.711452599 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.706887245 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.711203769 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.709823823 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.710838937 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.712762675 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.711237251 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.708742836 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.709850341 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.709332328 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.707894803 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.709479873 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.711772268 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.715319763 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.713100681 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.706967718 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.711591984 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.709496207 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.714264804 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.70947347 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.709877082 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.709902929 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.719927792 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.715766241 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.715824313 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.711040272 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.709492382 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.714383856 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.710634553 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.716951473 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.708542319 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.709608793 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.708844944 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.708595928 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.706405447 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.712129091 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.707623806 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.712209477 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.710206441 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.713054032 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.710301553 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.711949738 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.708483508 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.708424024 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.708431255 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.707795626 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.709091843 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.71101687 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.7111624 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.708755684 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.710829996 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.71497704 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.709138215 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.713136333 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.708980846 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.708315178 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.709253352 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.711089169 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.709247387 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.71199932 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.715407844 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.710896236 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.71919662 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.709601575 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.720238651 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.706864153 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.712291449 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.717280628 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.707545141 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.709405339 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.709718675 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.709215656 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.71586442 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.709101999 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.710689911 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.713712016 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.709370685 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.707863386 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.709312217 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.710212587 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.709831723 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.710183726 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.719858562 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.70962331 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.710405667 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.71360015 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.704846177 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.709934386 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.711911647 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.708936778 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.711509555 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.71143945 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.71103507 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.710360102 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.711362392 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.709621249 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.710852775 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.709183196 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.708341778 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.710326602 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.718680175 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.709578898 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.713676255 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.710571651 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.718210941 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.711725491 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.71380466 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.710425746 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.71158259 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.710682487 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.710378883 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.715133914 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.710623449 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.711866186 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.711447176 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.712541598 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.713162238 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.711962391 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.712784047 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.710895039 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.710765868 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.711931202 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.720765441 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.730929661 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.711561898 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.713943205 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.708871346 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.713305446 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.716207261 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.715417016 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.710547266 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.712928922 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.720851201 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.716540833 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.711923454 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.710853874 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.713750123 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.710932019 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.711687752 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.711584196 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.712626712 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.712046685 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.714931415 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.711047677 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.71517592 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.710959883 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.715863879 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.713273646 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.714301155 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.721143313 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.71443353 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.714873677 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.715091465 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.712540575 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.712885351 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.713888556 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.714470854 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.713217398 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.713885424 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.71483626 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.717649572 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.719320002 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.714958385 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.713838971 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.715932378 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.714635094 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.713794378 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.712575521 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.713785142 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.714631369 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.716475597 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.713835291 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.713418111 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.712807897 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.713980433 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.714279888 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.713935948 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.716436462 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.718956582 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.715291266 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.711431226 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.714727245 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.713578698 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.715132733 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.714587939 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.721272955 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.716398434 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.725504113 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.720807848 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.718734555 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.716708804 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.717983308 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.720979667 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.714490898 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.717127306 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.713692949 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.715522836 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.717623803 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.716932359 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.714220198 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.720620353 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.714745601 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.715872552 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.723973891 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.720134748 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.713961586 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.716147031 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.719284651 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.715510501 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.714171165 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.716756574 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.7182497 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.721450568 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.715631687 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.716795435 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.719484668 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.716259093 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.715791394 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.718962269 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.717179413 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.719765798 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.712781599 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.718949388 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.717743907 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.715356308 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.714429035 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.717399607 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.717297514 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.719995201 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.721161742 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.713940767 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.719094139 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.717047275 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.718029715 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.718904276 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.717829467 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.713902749 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.714747237 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.716878806 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.718651351 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.718212116 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.721093509 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.7163366 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.717776988 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.719862939 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.719727331 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.720067149 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.72702705 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.724253483 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.714584938 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.718580625 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.721641261 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.720454004 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.718507193 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.718794408 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.718249501 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.71911294 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.719354127 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.716463125 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.717046896 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.720284968 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.733212672 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.715921446 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.71916895 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.718006834 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.721411113 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.71687548 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.714713969 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.717913354 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.721008605 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.719993455 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.724704738 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.718007423 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.725049503 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.717268629 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.720727996 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.723378204 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.720229744 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.726516798 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.722117768 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.721434401 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.717730879 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.722058949 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.733561851 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.717591966 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.727411992 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.746847313 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.719069029 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.720732864 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.719845309 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.720070266 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.717748977 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.723185071 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.719497095 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.718590253 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.718892137 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.71845973 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.720247478 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.724114084 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.718930404 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.717641894 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.718240414 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.718695355 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.720214413 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.716781494 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.719018832 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.718888486 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.719516043 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.720325217 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.722915166 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.719437813 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.731579891 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.728187157 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.720724489 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.719678964 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.721795333 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.725552501 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.721801928 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.729573436 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.729038194 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.721176771 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.719555142 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.721918819 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.721210721 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.718400219 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.722710786 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.720459819 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.722654546 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.718683087 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.733612771 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.72671276 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.725034893 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.719306213 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.718513027 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.718284857 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.722187412 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.720989777 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.721879512 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.721936308 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.722212933 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.725242643 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.720776237 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.723245331 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.723394326 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.728472253 seconds)
  done (took 1023.927010164 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.71988536 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.719403035 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.716566157 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.718738301 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718655174 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.717329309 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.717207458 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.719500603 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.718108275 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.7178835 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.717838137 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.7171959 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.71995828 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.718147363 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.71864098 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.715609672 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.718659385 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.716459034 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.717935787 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71663149 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.716461461 seconds)
  done (took 37.728026176 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.72274805 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.718913997 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.717492492 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.722409613 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.718586605 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.721633698 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.71740307 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.721135468 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.723196138 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719017156 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.720539545 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722382163 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.716618501 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.718724778 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.717969414 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.72285133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.721420415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.719100545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.721031357 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.72052664 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.721805303 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.718722307 seconds)
  done (took 39.496379808 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.722789675 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.721728509 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.722632109 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.720094433 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.722269157 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.722608926 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.722040692 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.722629191 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.722549009 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.722748163 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.722226494 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.725787504 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.72681553 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.725979991 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.724641457 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.723377611 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.867975943 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.723915807 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.721549599 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.723736396 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.719858656 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.726332004 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.719164534 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.71961804 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.722567006 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.723088722 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.72243299 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.722280105 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.722127423 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.724148402 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.726801547 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.723904232 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.723253743 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.725594155 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.723634328 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.722867912 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.726073941 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.722953545 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.721174588 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.725181557 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.733281415 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.741139671 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.723953929 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.730713203 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.724042663 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.724956671 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.726534124 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.731497461 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.723104194 seconds)
  done (took 86.285389771 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.727162425 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.725758168 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.722376763 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.723403942 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.725453984 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.723560577 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.723218724 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.728195475 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.723938835 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.720771618 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.72525129 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.72336223 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.724268471 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.726252281 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.724990145 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.722377694 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.723004335 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.722564284 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.722612535 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.72339161 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.723693156 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.726120991 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.725775962 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.723329001 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.726748814 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.722894584 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.72365943 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.726753204 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.723387218 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.723621814 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.725016174 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.726034793 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.725505982 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.72275092 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.724336231 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.725564752 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.725594376 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.724988752 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.726470443 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.723673384 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.728059478 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.727852838 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.728084721 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.725790831 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.724934744 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.725265526 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.725602633 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.72532964 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.725673121 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.727226677 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.726338095 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.725826954 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.727693719 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.724239522 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.727792516 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.727617763 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.725866877 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.726466306 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.728857868 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.7253565 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.726402231 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.728188529 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.725260153 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.728044428 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.727691548 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.726021592 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.725769654 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.727510942 seconds)
  done (took 118.981288157 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.729941798 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.728855884 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730075403 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729951916 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72921567 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.729071113 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.728501699 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.731541402 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.72903952 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.729743296 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72929751 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.730245175 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.729074552 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.729227398 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.729356606 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.729108188 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.729471561 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.730972456 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.72981509 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729817399 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.730377634 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.729485896 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.729685648 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.729527389 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.732292921 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.732238661 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.729611968 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.730895944 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.730620449 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.730039433 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729953141 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.730062847 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.731980776 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.729638012 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.731135721 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.729750982 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.730855011 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72886454 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.732567342 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.729071143 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.730932676 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.731203204 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.731725485 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.731835774 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.729903058 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.731353927 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.73203033 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.731942194 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.732090669 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.732043938 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.732290896 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.732177446 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730164473 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.732619841 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.731815645 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.730013359 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.73117877 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.731342042 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731801862 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.732545197 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.731718464 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.733329566 seconds)
  done (took 108.957204737 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730529356 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.730109406 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.728807613 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.728879185 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.733382506 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.729134569 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.731361403 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.731141177 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.734625734 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.732149038 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730397571 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.729357005 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.729898314 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731916348 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.730997943 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73210963 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728745887 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.730077191 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.731442624 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.72941514 seconds)
  done (took 36.277532112 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.732234411 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.732072766 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.728608947 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.729727291 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.732557515 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.732300141 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.734673459 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733394902 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731592039 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732254706 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.732607911 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.734796179 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731276059 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.730367336 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.732126259 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.731948924 seconds)
  done (took 29.376715716 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.732524785 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.733267332 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.734020348 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.733644019 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.731772598 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.732586232 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.733945269 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.731589574 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.731611843 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.734889135 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.736777477 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.735913108 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.736321705 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.73264163 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.732196346 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.735033407 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.731958288 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.732810929 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.73354731 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.736599408 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.732998505 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.73281834 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.736481276 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.734368727 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.732371997 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.730553394 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.733233154 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.732988056 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.731449062 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.735573822 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.733422465 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.730366008 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.731701366 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.732423354 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.734840302 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.732163641 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.736927394 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.733179817 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.73386792 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.735118175 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.736309766 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.734352315 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.736648945 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.735647007 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.73498677 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.737594076 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.733770453 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.733257074 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.732868548 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.733263024 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.736586415 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.73770889 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.736720879 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.735843258 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.734880284 seconds)
  done (took 97.036548527 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737389858 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.736170948 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.734300086 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.737991054 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.734552689 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.733825807 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.739150852 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.735568656 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.733287073 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.737242321 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.736184696 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.735422014 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.735915421 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.738919945 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.736625402 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.740292454 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.734461592 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.734678737 seconds)
  done (took 32.917535426 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.73883618 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.735537505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.73769878 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.733362471 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.734506869 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.740299876 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.736012681 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.737117837 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.737837144 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.733600441 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.733749298 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.736305114 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73681221 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.738362621 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.737193794 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.737749036 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.739724823 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736152293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.736085753 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.733482849 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.738985689 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.736911624 seconds)
  done (took 39.87323105 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.735148611 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.736431994 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.752361147 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.753116782 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.758440776 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.766702995 seconds)
  done (took 12.171686971 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735624486 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.739332279 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.733868369 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.73832373 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737425269 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7373084 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.735043092 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737583253 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.73802055 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737313944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.736843632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.739748996 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.738265488 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739178891 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.737311724 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.737143612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.736577351 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.739334339 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737014042 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740168843 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738062423 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739294042 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737372993 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.737814317 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737534121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737870004 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741828184 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.738128736 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.737372562 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.740387349 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741051689 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.738315351 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740358907 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.739029867 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74160856 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739212115 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738551493 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.744625794 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743780774 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.737670613 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.739018823 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742407212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740029909 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.736857829 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741433638 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.738139429 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739530684 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740804707 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73979191 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.740794655 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742097458 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.739579581 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.740783294 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742960209 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743715779 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742440257 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.73989747 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.73796885 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742529887 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739947638 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.739144452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740519399 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739316874 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.739385688 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.743429773 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.739545484 seconds)
  done (took 116.464106654 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741077577 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.740382706 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.739656054 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.738579982 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.74106563 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740672432 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740430563 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.742075324 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74121181 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.74073913 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742042165 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740196638 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.74236691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.741023028 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741080242 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.739187521 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.742321532 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7392584 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740789219 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742856635 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.741185371 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742957704 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741492579 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741565177 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742787973 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742952003 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.74012945 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.741417103 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.742536635 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.740397474 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740704695 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742321582 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.742063541 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.74217196 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741127513 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.742602298 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.743422245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.742474063 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740735533 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.744362322 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.741722966 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.743513664 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.740657707 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.74156901 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743809766 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.743535495 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.744031542 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.740285674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.742664102 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743616296 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.741690684 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.743856751 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743887958 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7429754 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.74138231 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.740944396 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743717179 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.743425557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745061119 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.743727428 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.741659626 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7428861 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.745784131 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.742631447 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.74278838 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.743890208 seconds)
  done (took 116.64643379 seconds)
done (took 2392.023314596 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.833915362 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.749855891 seconds)
  done (took 15.257256172 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.908072936 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.857953179 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.744238865 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.781385418 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.744185643 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.767848199 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.747148827 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.743316252 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.746801868 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.743598909 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.744457068 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.930071016 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.743799447 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.744639738 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.744703804 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.840249441 seconds)
  done (took 50.23020441 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.748564011 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.748827067 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.758124163 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.752700032 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.749086712 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.760144063 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.781439501 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.754207313 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.78313501 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.76103085 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.816922401 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.759103253 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.749251361 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.798527442 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.762051814 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.760788928 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.843570259 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.823400839 seconds)
  done (took 33.589146029 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.826964076 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.757779799 seconds)
  done (took 10.266568255 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.747327374 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.760814498 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.77899565 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.74553358 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.754393916 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.756003479 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.754713207 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.7519957 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.748375804 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.743623502 seconds)
  done (took 69.24608592 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.756642107 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.750383142 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.750704343 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.749276723 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.741432857 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.745882376 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.749894323 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.747977013 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.42505188 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.783510531 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.758719303 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.756492617 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.749969431 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.75306868 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.747322803 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.773386145 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.885889443 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.750417566 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.748183889 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.757795919 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.753267887 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.823499496 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.763406041 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.75366331 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.780321976 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.43015055 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.757360356 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.758526408 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.87770192 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.748972964 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.753803862 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.752531048 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.75453847 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.141487762 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.038152702 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.747962173 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.758235514 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.758381851 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.750163528 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.862006012 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.754628279 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.757548113 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.662280103 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.016632233 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.863338016 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.793170098 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.142026277 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.754834237 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.75356346 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.781094053 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.756508621 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.753963918 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.764971668 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.260919146 seconds)
  done (took 126.144005159 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.746267304 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.009905682 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.902262455 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.747871579 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036149832 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954485536 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.746089143 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.798371087 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.747844662 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977907609 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.964576106 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.854909306 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.745772969 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.748718159 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.745189743 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.746414548 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.909185692 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.820882256 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.747898226 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.744124657 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.77993278 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996032719 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.875537344 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.746914538 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.768412249 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.959742129 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.873503556 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.855522561 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.227254463 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.748562523 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.812950106 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.74662466 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.746034324 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.743953072 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.906140771 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.844257474 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.837370524 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.747127553 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.745779802 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.746232875 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.428420203 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946213062 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.844909813 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.891336623 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.000539948 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.95287914 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.536980004 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.747345128 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.491179881 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.91581695 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.988313207 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.982512061 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.872322347 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.748070714 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.017520441 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.7482731 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.74621134 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.984772831 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.990800175 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.854120544 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.748037185 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.750360503 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.74748362 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.995383969 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.749946994 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.84537371 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.746623283 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.746097356 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.848292571 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.858138767 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.973084263 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.961958746 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.784385383 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.039149375 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.217616831 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999426761 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.819278235 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982792439 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.748767948 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.746974849 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.836377261 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.597169957 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.951270653 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.99946672 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.005501499 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789124898 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.472107362 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.747746214 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.97990732 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.974281533 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.00520179 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.991198774 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.902522331 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.054441957 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.748432885 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.749289478 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.980279903 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.888151543 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.751257581 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.115750013 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.987442846 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.307173586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.781612072 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.091731633 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.885354176 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.750887918 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.392028592 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.748218981 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.981336144 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.793338105 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.750188324 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.749524594 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.971304225 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.740335412 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.751573726 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.570594806 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.814394431 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.751859771 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987978237 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.74889301 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.020403206 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.754037116 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991434018 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.233406761 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.781388602 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.927078805 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.99387544 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.752834297 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014983045 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.998586596 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.870475645 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028333353 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.676348286 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.751238983 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043022712 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.751109411 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.75134984 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.925737984 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.751608304 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987942361 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.753759111 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.042451017 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777632727 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.908460049 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.754519206 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.014936156 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.787927291 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.804968788 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.75430377 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.885455658 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.754932115 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.645416323 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.907659899 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.751951715 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.750655902 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.297448492 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.751334359 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.911674436 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.987063008 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777289213 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.829184506 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.422628121 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.752124533 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.842438621 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.780820318 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.095914068 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.752163953 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.966826023 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.754449942 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.287963881 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.753042402 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.999228344 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.989385503 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.755691234 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.753702283 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.669996065 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.75348555 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.75444243 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.916887277 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.572367059 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.75494137 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960425869 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.757821716 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.887203775 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.754941791 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.828150724 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.107107583 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.753062873 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.755915875 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.75575981 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.756141476 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.753057214 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.968052028 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.786202361 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.274429189 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.8964756 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029054634 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.076025276 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.008839611 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.80089814 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.759378645 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.00305543 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.758765469 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.820094437 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.7578878 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.779646293 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989268301 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.760029092 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.970396955 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.041946886 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.685832983 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.806462705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.75642504 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.755212903 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.673430988 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.912240642 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850622609 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.756811892 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.756707486 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.875880273 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.883295235 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974880055 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.756919917 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.986305167 seconds)
  done (took 877.351041406 seconds)
done (took 1183.758529595 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.758053255 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.756461466 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.746115607 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.756298674 seconds)
  done (took 28.70925339 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.763412694 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.760901468 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.761245105 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.762459127 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.762407215 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.762028081 seconds)
  done (took 12.263499795 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.79413973 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.752709971 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.756938937 seconds)
  done (took 20.994769528 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.832152275 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.171264808 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.870708631 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.200377252 seconds)
  done (took 9.766008042 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.764061541 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.763467978 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.762121967 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.764357449 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.763113257 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.766083572 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.763033814 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.76462605 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.764116885 seconds)
  done (took 17.567204834 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.090003578 seconds)
done (took 95.083851656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.055655736 seconds)
    (2/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.756206362 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.829285189 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.734962557 seconds)
    (5/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.383492549 seconds)
    (6/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.815075539 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.462377623 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.150953868 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.916326565 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.743670584 seconds)
    (11/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.372506286 seconds)
    (12/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.248338709 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.803175478 seconds)
    (14/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.758100569 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.861676527 seconds)
    (16/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.896265999 seconds)
    (17/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.316657812 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.049916774 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.104665631 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.942347295 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.029311854 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.759491268 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.12288525 seconds)
    (24/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.82078273 seconds)
    (25/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.995380577 seconds)
    (26/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.926177989 seconds)
    (27/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.762387936 seconds)
    (28/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.765617301 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.76067951 seconds)
    (30/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.054345909 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.785736781 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.437141098 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.262707657 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.012939033 seconds)
    (35/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.915309049 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.125756042 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.132916841 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.862611162 seconds)
    (39/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.220678546 seconds)
    (40/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.678581325 seconds)
    (41/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.840993388 seconds)
    (42/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.823645043 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.267582028 seconds)
    (44/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.977671081 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.764386155 seconds)
    (46/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.973387917 seconds)
    (47/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.787718341 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.736693478 seconds)
    (49/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.35428174 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.872903275 seconds)
    (51/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.744102753 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 3.997024738 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.112167551 seconds)
    (54/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.827299758 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.057711004 seconds)
    (56/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.743336154 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.695177144 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.985952564 seconds)
    (59/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.12244179 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.818764625 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.064471395 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.856864972 seconds)
    (63/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.860369542 seconds)
    (64/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.759456934 seconds)
    (65/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.890874352 seconds)
    (66/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.10491997 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.162661717 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.762217082 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.862149732 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.78829304 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.761589868 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.036230016 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.973208855 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.397921469 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.766465738 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.850604562 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.139217436 seconds)
    (78/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.889840616 seconds)
    (79/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.987850671 seconds)
    (80/309) benchmarking ("sort", Int64, false)...
    done (took 5.423986047 seconds)
    (81/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.119359003 seconds)
    (82/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.849168817 seconds)
    (83/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.786719909 seconds)
    (84/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.888089453 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.053532106 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.016967141 seconds)
    (87/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.036671789 seconds)
    (88/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.273532097 seconds)
    (89/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.750763094 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 3.656790685 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.148708774 seconds)
    (92/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.088946271 seconds)
    (93/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.869229771 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.868950819 seconds)
    (95/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.335461926 seconds)
    (96/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.839666437 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.811463599 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.093442145 seconds)
    (99/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.37970373 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.742864784 seconds)
    (101/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.837036072 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.244537929 seconds)
    (103/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.948446568 seconds)
    (104/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.102468792 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.749408297 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.125585172 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.8864386 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.763719073 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.702812165 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.98136531 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.747757243 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.084357601 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.773561073 seconds)
    (114/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.745046902 seconds)
    (115/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.063121826 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.063845279 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.767873437 seconds)
    (118/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.787198912 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.765847857 seconds)
    (120/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.771863457 seconds)
    (121/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.843797047 seconds)
    (122/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.904577234 seconds)
    (123/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.852445804 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.762808479 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.765060977 seconds)
    (126/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 9.002812157 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.788393471 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.873324252 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.208899188 seconds)
    (130/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.228473132 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.788187118 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.860327119 seconds)
    (133/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.864832357 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.826762246 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.026842039 seconds)
    (136/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.165072472 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.867021554 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.391044559 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.952312757 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.984925199 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.031926942 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.749696071 seconds)
    (143/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.874527443 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.958135863 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.775345537 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.873520052 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.231561991 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.825888555 seconds)
    (149/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.818164507 seconds)
    (150/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.846862521 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.793005967 seconds)
    (152/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.908612411 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.240622632 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.787082536 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.55789487 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.996668565 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.791078491 seconds)
    (158/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.792971508 seconds)
    (159/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.900235568 seconds)
    (160/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.887970999 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.440621395 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.864180698 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.675323412 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.076744572 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.772810119 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.705178114 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.85223786 seconds)
    (168/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.754535356 seconds)
    (169/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.917684171 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.787617297 seconds)
    (171/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.206954362 seconds)
    (172/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.989430581 seconds)
    (173/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.830506033 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.962315595 seconds)
    (175/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.337184021 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.806469348 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.956590503 seconds)
    (178/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.791411019 seconds)
    (179/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.94317027 seconds)
    (180/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.100631307 seconds)
    (181/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.788220273 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.76768698 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.841314077 seconds)
    (184/309) benchmarking ("sort", Int8, false)...
    done (took 4.780189553 seconds)
    (185/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.886978175 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.767217946 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.064817878 seconds)
    (188/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.324875727 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.751417315 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.459142155 seconds)
    (191/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.79175346 seconds)
    (192/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.850615768 seconds)
    (193/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.90457559 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.841003322 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.270445666 seconds)
    (196/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.768899722 seconds)
    (197/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.944893993 seconds)
    (198/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.268238816 seconds)
    (199/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.98098917 seconds)
    (200/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.796890945 seconds)
    (201/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.767734658 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.796620913 seconds)
    (203/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.798889739 seconds)
    (204/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.778684185 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.803360263 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.771567769 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 4.126828487 seconds)
    (208/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.766215678 seconds)
    (209/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.995792183 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.695695312 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.852830594 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.139007419 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.853718809 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.237766768 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.834093956 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.575704804 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.761305054 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.892619683 seconds)
    (219/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.962316415 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.401389694 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.990195596 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.788262087 seconds)
    (223/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.281955918 seconds)
    (224/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.884595235 seconds)
    (225/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.699755836 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.094666723 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.792418753 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.794624982 seconds)
    (229/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.904641495 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.069913301 seconds)
    (231/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.35222095 seconds)
    (232/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.755113595 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.761671761 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.81546989 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.108908308 seconds)
    (236/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.941600512 seconds)
    (237/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.066388989 seconds)
    (238/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.174658101 seconds)
    (239/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.882535974 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.01509929 seconds)
    (241/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.872372168 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.15818267 seconds)
    (243/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.267781379 seconds)
    (244/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.562404478 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.918904896 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.870342261 seconds)
    (247/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.880250474 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.172851631 seconds)
    (249/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.690289636 seconds)
    (250/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.861007911 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.473094556 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.688700657 seconds)
    (253/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.104193505 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.555467603 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.854318333 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.015745349 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.774506398 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.859961537 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.15413846 seconds)
    (260/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.107185428 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.799614587 seconds)
    (262/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.01689324 seconds)
    (263/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.785537061 seconds)
    (264/309) benchmarking ("sort", Float64, false)...
    done (took 5.569797356 seconds)
    (265/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.602766847 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.932579888 seconds)
    (267/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.275527541 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.135586484 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.111274292 seconds)
    (270/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.864571263 seconds)
    (271/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.961274421 seconds)
    (272/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.995789869 seconds)
    (273/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.87928324 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.473664845 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.840282895 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.3269293 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.408144213 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.901873183 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.77414605 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.848408525 seconds)
    (281/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.949614183 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.0175508 seconds)
    (283/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.806971244 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.854219486 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.8546179 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.890755164 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.771551809 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.286972348 seconds)
    (289/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.156029554 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.777679312 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.572984675 seconds)
    (292/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.879606492 seconds)
    (293/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.160271061 seconds)
    (294/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.757835483 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.808901708 seconds)
    (296/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.792719187 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.836439159 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.858390064 seconds)
    (299/309) benchmarking ("sort", BigInt, false)...
    done (took 6.774113436 seconds)
    (300/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.036563899 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.014264434 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.796394426 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.759290251 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.109991646 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.975873971 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.959530858 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.603046816 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.00365128 seconds)
    (309/309) benchmarking ("sort", Float32, false)...
    done (took 5.488266409 seconds)
  done (took 983.826920019 seconds)
done (took 985.579500491 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.813781415 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.805915069 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.786262089 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.806846493 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.90137719 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.819529462 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.793905413 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.786563651 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.832278392 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.833989946 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.788514338 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.817852427 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.791082183 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.792442635 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.78484431 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.805111033 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.099674923 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.816735459 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.80756569 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.795777797 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.806993735 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.790555186 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.834335545 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.817589504 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.790527579 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.787489885 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.793808265 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.812647405 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.90498226 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.796061286 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.790622194 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.803424215 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.100431585 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.809605961 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.783775574 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.813030846 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.803458321 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.79512925 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.790728553 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.825478938 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.237935274 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.797163819 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.794817535 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.790245297 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.787608747 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.79010088 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.795063283 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.796374827 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.805461229 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.807684523 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.234420019 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.813902852 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.797891295 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.789204165 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.799527842 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.792943438 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.796301867 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.808359063 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.813134438 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.808958146 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.092608637 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.817131893 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.790753991 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.811259218 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.799968892 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.275770576 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.789058906 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.793535687 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.237912055 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.799377401 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.273767595 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.806915907 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.791341152 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.80853796 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.828203564 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.104674193 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.807629218 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.788010259 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.80168314 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.794448485 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.798779431 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.807600073 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.795499689 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.791264682 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.80919663 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.821110955 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.798245745 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.794821421 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.798469028 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.815262158 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.802768942 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.807889731 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.792382489 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.78597179 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.799108969 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.797814035 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.797383742 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.79919564 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.795342622 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.79932351 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.237507741 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.817397914 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.787249992 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.787314252 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.789491628 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.809947184 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.239610021 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.80223628 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.812825948 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.840493433 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.793407957 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.096781609 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.824175811 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.812141893 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.799272653 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.793842737 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.786957775 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.093911829 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.265238737 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.816080184 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.792125968 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.79455383 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.814062509 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.793032176 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.788439929 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.10700473 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.81595491 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.811007752 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.917267003 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.803388817 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.828942163 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.795971426 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.794458425 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.826559756 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.811973198 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.830466157 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.798031197 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.815019925 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.813445985 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.78978408 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.808659686 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.804899052 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.795780227 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.800882328 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.788002889 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.825036381 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.811395393 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.812659882 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.814889711 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.918537488 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.791317958 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.095559163 seconds)
done (took 282.141755645 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.86104474 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.783261532 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.891567632 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.789888961 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.877811629 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.875009983 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.786573639 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.787939051 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.787704069 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.160802208 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.788343371 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.787963742 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.787116699 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.789869176 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.879614715 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.792523624 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.789240609 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.125861051 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.78995339 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.864025781 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.785363483 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.789535533 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.790216293 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.165984076 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.787568608 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.788568805 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.864427693 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.790931395 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.130152647 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.786502337 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.787007733 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.13305172 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.88294769 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.808104457 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.801279645 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.80033152 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.874359444 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.792858483 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.873224738 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.883476996 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.889378195 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.831119267 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.785104546 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.784236942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.793697687 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.791580131 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.790227918 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.821747531 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.791645102 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.791686538 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.125745441 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.803975963 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.791021926 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.790323302 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.789840231 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.823176406 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.792066302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.793241474 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.882118004 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.79311917 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.855999203 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.167115583 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.164076665 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.793475596 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.786791644 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.789743322 seconds)
  done (took 179.041876772 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.861164217 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.866299989 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.860446327 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.797856872 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.842381727 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.861960067 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.798457743 seconds)
  done (took 14.606508219 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.800926799 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.794579829 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.843345594 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.841912823 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.793682386 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.942996512 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.793651443 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.803108784 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.788101726 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.844813022 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.793137002 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.792526787 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.800202225 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.789727604 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.840693306 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.804839323 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.908765144 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.795524175 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.793671518 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.945105517 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.791889368 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.801708174 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.847935366 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.805742606 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.794590802 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.799349994 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.387626893 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.793734702 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.792548427 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.794567743 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.791761358 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.835412829 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.796174293 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.792263459 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.792431662 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.910966007 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.796463051 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.793028613 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.794186311 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.789427201 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.797564295 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.795443618 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.796024253 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.792817405 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.794254166 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.819588541 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.7955939 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.793225372 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.793827938 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.795576107 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.845095645 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.795940764 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.792832434 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.794165134 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.848514574 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.800138047 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.795092645 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.794378257 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.795805584 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.793234937 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.94722576 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.843376338 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.794918 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.843500779 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.797198235 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.795991875 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.795011587 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.796264848 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889587653 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.796549988 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.846057245 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.794469363 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.956612834 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.822609807 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.799183612 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.802204088 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.802474192 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.797474054 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.797609774 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.80433839 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.793776318 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.799646824 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.805347024 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.794632111 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.794588348 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.908294393 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904452489 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.793580435 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.810163557 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.806706188 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.796517351 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.849934893 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.797636407 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.794098405 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.852129937 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.912594563 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.853230579 seconds)
  done (took 198.556390338 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.80494581 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.806100769 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.801376297 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.813173176 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.797666064 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.798625515 seconds)
  done (took 12.546003024 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.801348684 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.799652511 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.798453293 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.797315337 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.79906933 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.800798129 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.800662752 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.798893585 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.801533451 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.799690398 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.799700721 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.799041529 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.799537217 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.799128011 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.797044004 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.796997688 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.796783883 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.796056167 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.798120577 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.796495351 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.950207713 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.79629976 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.799203367 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.798461705 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.800764288 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.79830676 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.806733659 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.799008473 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.798215723 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.807210549 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.800066608 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.801261747 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.803469008 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.804503723 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.802508218 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.798607805 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.801357173 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.799094776 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.797683664 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.798967089 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.799655346 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.799750063 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.798610649 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.798846665 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.800973254 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.804149908 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.803695983 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.807668991 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.800224192 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.801163725 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.801678926 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.799587662 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.799526837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.801071808 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.802867076 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.803533285 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.805071277 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.800863179 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.800097283 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.801227934 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.800094619 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.801034642 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.802344442 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.803760956 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.798694269 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.799355882 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.800205872 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.80535797 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.80056257 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.801041968 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.800568881 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.798405956 seconds)
  done (took 132.507567957 seconds)
done (took 538.989741368 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.870316945 seconds)
  done (took 8.596595395 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.962172463 seconds)
  done (took 8.770237845 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.337922659 seconds)
  done (took 10.065125186 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.805534902 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.80649068 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.796793578 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.79871018 seconds)
  done (took 28.945499134 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.161455374 seconds)
  done (took 8.888446238 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.804355104 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.791914234 seconds)
  done (took 15.3878132 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.860292604 seconds)
  done (took 8.588411799 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.919502179 seconds)
  done (took 8.654707422 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.809877993 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.829037493 seconds)
  done (took 15.380812246 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.781132796 seconds)
  done (took 8.507941967 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.49457509 seconds)
  done (took 11.230314559 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.802376371 seconds)
  done (took 8.547866065 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.8749115 seconds)
  done (took 8.603589752 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.912847517 seconds)
  done (took 9.641869379 seconds)
done (took 161.536280627 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.79923769 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.793777641 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.795284262 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.794830695 seconds)
  done (took 28.91026695 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.83717088 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.834482291 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.838241601 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.845777091 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.841252351 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.836616279 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.829020076 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.827810582 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.846740938 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.839886044 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.838359524 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.838301703 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.849772704 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.827828188 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.839589645 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.83886218 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.848811068 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.838427968 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.830408823 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.840102726 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.804449453 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.849211832 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.84083141 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.805808737 seconds)
  done (took 45.798835372 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.005423504 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.877091342 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.957102199 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.856622169 seconds)
  done (took 9.426519369 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.857479963 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.859055438 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.87063431 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.90922624 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.941706176 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.86673759 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.82847733 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.828562628 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.813099157 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.859768993 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.93566554 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.85347181 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.944175052 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.805412884 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.996933408 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.804493169 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.804422116 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.857723976 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.909916885 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.934364097 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.806016747 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.85743218 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.86206647 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.854748345 seconds)
  done (took 46.59309687 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.804310193 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.810221836 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.80866184 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.804733613 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.804072695 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.803626487 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.810616826 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.806398683 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.82482012 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.80580226 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.804191407 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.805215313 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.803819959 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.805081183 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.804853217 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.81851747 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.817227764 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.805004303 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.808271105 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.811981259 seconds)
  done (took 37.898997414 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.799358826 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.658163172 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.154728765 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.057187351 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.801657287 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.798816003 seconds)
  done (took 31.001905885 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.820726239 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.81118604 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.806441152 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.861030354 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.943111456 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.813846502 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.8054985 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.81613445 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.848516459 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.872484758 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.825471199 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.832200325 seconds)
  done (took 23.790929078 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.802161411 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.80135912 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.800199721 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.816030022 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.818231125 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.814425202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.813459903 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.800478418 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.817843653 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.825311477 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.813439318 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.818333458 seconds)
  done (took 43.476589549 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893240829 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.691862732 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.842363042 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48641597 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.273789538 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013283992 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.316795654 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.147789085 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.807368893 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073954349 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.802695354 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906566077 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.056585499 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800855953 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.825603215 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.277053547 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095502015 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031598436 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828725477 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530829153 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851517509 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.340949098 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.6088272 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.857428733 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014945313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.930722867 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.065389399 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.763733378 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937305744 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.841806781 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815197615 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.804568764 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078086436 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185277932 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909179748 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813614797 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.42509254 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.524633417 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.79542072 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.561672109 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.535543685 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.915948504 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812132232 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804557147 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.73958465 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.302547278 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189089742 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.810585028 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.516591937 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.804369199 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.814822979 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892352826 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.809801539 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.621381988 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723454629 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.081258169 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.802294234 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812036576 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.372853198 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883758605 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.336022683 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.778867122 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.999584405 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.550628465 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194826869 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.952703134 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.80761525 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809716039 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740033908 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.555629096 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858588668 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952156097 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.825954898 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455981352 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110615987 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.829969582 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.748524261 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090509907 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.007867517 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.784244869 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038697549 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.760114978 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742223139 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.671960731 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.740970978 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077336553 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845763339 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.442482099 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852350296 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147343533 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.819415292 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82383215 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813245814 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.032177545 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.372191889 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807008881 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.588314773 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.95261714 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82798742 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145277933 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741912096 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.809639029 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06239791 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.017839401 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.037795355 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.31609566 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968729679 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809021352 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.886989626 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.727165206 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.857170717 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.08031437 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867346126 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903358922 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865579802 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.766453512 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108035552 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835906951 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.974396836 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.852886274 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93636514 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.138822824 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.104219797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873707878 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.817616333 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.80857369 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.624224283 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.362334485 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.07438338 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.810251332 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297283331 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.85698049 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.808081264 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.746301079 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.403127261 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.843141366 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.786523147 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035467837 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.757564425 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122006727 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.743506181 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955919613 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.921650086 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.031853301 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.453612805 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.880675568 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068854669 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289546023 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.259532561 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859146295 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828761298 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931030328 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834051371 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.221243574 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102528514 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.814648817 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.812909266 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.570424096 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.805016668 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.814049677 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.816193923 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563154937 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085770088 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835062238 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.818306182 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.703068284 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.825128564 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877715257 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816314487 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.820810718 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.354792428 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.523210265 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.816865169 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.432200505 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034101655 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821029663 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.545937921 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923054328 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.895638978 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.090550027 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.873224021 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.745931483 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.52324912 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.503935033 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812325356 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.748158538 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.81223222 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820868731 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822732228 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.198490785 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089203868 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856034896 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.55345787 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.853831276 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822196716 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.817913353 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.811350748 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.352276217 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.899708543 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347988327 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.860752913 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949708367 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.826334341 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.747345598 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.817094829 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.818781905 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.813447327 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.769283665 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864691689 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.561746895 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216964097 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073022719 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.463348353 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827278899 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.589385592 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.871303244 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.834381052 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.588878913 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759289915 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.858729675 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835011354 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.825054065 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.573054149 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.52311657 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377875655 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125946085 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122479673 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253859697 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.304646063 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.119556119 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151614801 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049966275 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.344636308 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88131919 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15911474 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.759032494 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900902808 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.459173708 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159347055 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827703615 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047046069 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197406978 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.664279893 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.838545227 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027895866 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852435883 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.728355222 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.778329121 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.019953196 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957145237 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.538279465 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010765316 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155810604 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.471659419 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.920652918 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.814556059 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.505219151 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905461987 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.52930479 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178484002 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.540770144 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.735192825 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283856126 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.826017535 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.263229195 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168121093 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.147994519 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.940506037 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752726246 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.828704129 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.827591138 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.817448812 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.812589684 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.683382944 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.06857778 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826587978 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054126396 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.261603467 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114105937 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.727708046 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.82207141 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818371232 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117084229 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.603503046 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986048321 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.240907226 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.342443879 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.822243393 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.753667971 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751375083 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.511876892 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.825979084 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.793906791 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040653323 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.005081744 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7375004 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324279659 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06532911 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074505515 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.833031263 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.09609907 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095742918 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.517549648 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84255722 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.918835233 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.457900515 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.920326947 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.088486537 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.054188224 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571043706 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048268938 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.881382323 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.637763129 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.818279026 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034978578 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.088648388 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.694170016 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043132788 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.543037792 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.825011233 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139215083 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878022575 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.741759936 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965028262 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.0143202 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829785277 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904777076 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.830464877 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.830638559 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.831589805 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865685891 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.749098465 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937387337 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.834268195 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910308017 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921368236 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.349633016 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.825326984 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100893736 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179839338 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151276238 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881120907 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.820572736 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828773245 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75635563 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958479253 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.268003356 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093647107 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.952526497 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.120627492 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845998695 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.48291971 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.184215757 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064828752 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096274768 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.717935124 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823524952 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.864233821 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.089959005 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835257085 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.034366732 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.05013742 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139086652 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.293185947 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.067136584 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189091638 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.096742974 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.193549367 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.821325776 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41283575 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.825117305 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.510542435 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.870197529 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.739827594 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085066049 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835387671 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221656879 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.845885907 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.023190453 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.339937309 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.580549223 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111896593 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.814275243 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.884555318 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099228885 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.219808058 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135618537 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895534741 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834338983 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.528494479 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960117138 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.681378788 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.094222221 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82418947 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035237348 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.534481762 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.834056568 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102802707 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132205782 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.82177454 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.713475458 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832641891 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.834139923 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048547872 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093274415 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078514861 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.835075541 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.832707572 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.639262029 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099150698 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882246016 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758516584 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.826983308 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92331819 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074085206 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844593977 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.342745681 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.534884661 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121462211 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.744356752 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847144212 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.32240366 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.186967311 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144900349 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.367022344 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051408818 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.384921413 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.788537971 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128216729 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.828824265 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.500693771 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130051161 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.829975104 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.439515967 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866170525 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.095150001 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144150363 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.837086957 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581671396 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.792646867 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048005595 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377213139 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762676328 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83243172 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.886508064 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.823893601 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.953642982 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832143235 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.72790235 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824926056 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.551484335 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315376198 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.828746293 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.807613451 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.527386862 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.443305184 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856170254 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980277046 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827449506 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.535533775 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.114363474 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.07695105 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437761394 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.830615667 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.826373036 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82411976 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.752401213 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.021805032 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.208492194 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122086628 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.270923869 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.861157123 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.828914791 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.039714523 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041791753 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.738742924 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954147194 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473895743 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863493441 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.586397522 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.504864948 seconds)
  done (took 1658.458878641 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.841137037 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.826520519 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.827250166 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.889416424 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.878126305 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.922844834 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.910401512 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.838965512 seconds)
  done (took 56.692085161 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.823154478 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.022594404 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.831387167 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.825665571 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.832159173 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.824303027 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.993926339 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.833850011 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.830739275 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.835022061 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.825133132 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.823204878 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.145631987 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.847990628 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.825156739 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.815128422 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.8310321 seconds)
  done (took 73.541823031 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.828297169 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.042898714 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.862942303 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.84135399 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.77957094 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.84163413 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.820066203 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.835540641 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.831225478 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.04388368 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.457164574 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.837466274 seconds)
  done (took 89.780218233 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.838148495 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.833081954 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.832056811 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.832042239 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.832676174 seconds)
  done (took 10.929456289 seconds)
done (took 2158.055418211 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.075368797 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.058396162 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.056730887 seconds)
  done (took 5.872850362 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.979520001 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.023853408 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.144655136 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.151237063 seconds)
  done (took 10.06011486 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.122416327 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.221888327 seconds)
  done (took 6.102826627 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.229665945 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.834338934 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.229275956 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.828922895 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.82704758 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.825780054 seconds)
  done (took 22.245366186 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.835951757 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.834868063 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.83161084 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.833398472 seconds)
  done (took 9.094335813 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.815329092 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.507537093 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.812525916 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.825686939 seconds)
  done (took 20.719758063 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.580632654 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.228814781 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.575389915 seconds)
  done (took 9.14446253 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.381854599 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.083607126 seconds)
  done (took 9.223678608 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.098682272 seconds)
  done (took 3.861951481 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.967359354 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.110386097 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.40643248 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.396096983 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.481814518 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.009118631 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.19946702 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.087535687 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.249815688 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.300781011 seconds)
  done (took 24.974083478 seconds)
done (took 136.425155153 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.371158789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.220147559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.044355649 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.248425727 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.090180634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.044671589 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.03509069 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.228945226 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.702446863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.697084579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.231493625 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.066819662 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.976646436 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.218085712 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.982380881 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.217361789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.066026242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.252610566 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.886550354 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.096887448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.038202388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.852332208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.08402111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.84737632 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.066609604 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.997210215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.400763532 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.219577724 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.04695095 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.418480201 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.997133998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.247132758 seconds)
  done (took 168.657118471 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.734190482 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.836192185 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.833706426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.834075067 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.056697532 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.854316031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.833800764 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.833810524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.974183116 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.952098725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.839906823 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.061834561 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.842874836 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.833309416 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.843860333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.834391675 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.131529977 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.832071266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.850268377 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.855319937 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.860790807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.995140341 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.858452552 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.023076695 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.126888126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.853108463 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.834210473 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.855735933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.840706579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.841763219 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.842729641 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.83459178 seconds)
  done (took 206.203267599 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.836866088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.847166471 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.835386197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.835594475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.852891177 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.836486604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.835406205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.834468851 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.528746481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.520749714 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.843606057 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.858217891 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.847156258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.834218169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.839836534 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.836432068 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.842574691 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.850427143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.843647392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.844368701 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.849746173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.651290859 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.842411186 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.672106854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.840384074 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.83890475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.840502777 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.845644029 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.859565939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.845882895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.845690115 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.834516455 seconds)
  done (took 219.74770699 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.03331105 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.844834953 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.844388097 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.773878936 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.841358522 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.842974134 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.80176841 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.03284748 seconds)
  done (took 18.796731276 seconds)
done (took 615.181713746 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.302167555 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.141854168 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.024339259 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.864807123 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.1169554 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.901494488 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.860449809 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.929949324 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.594681924 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.931565236 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.550841451 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.884215615 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.645737972 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.885217537 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.986511368 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.91828111 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.457199622 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.542597376 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.045508272 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.931933033 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.049805878 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.801959436 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.942955437 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.614566189 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.670584979 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.840407613 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.037767496 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.457400768 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.877859816 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.02814776 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.610898959 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.244976411 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.874982785 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.858733023 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.915917353 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.894009567 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.215691689 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.87355437 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.980636477 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.603947535 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.934885364 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.480691399 seconds)
  done (took 102.093108487 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.83307063 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.831059481 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.832541996 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.831442654 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.83527976 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.832012902 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.831326055 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.832256949 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.832518035 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.833517018 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.830235948 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.834612816 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.832846096 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.832796288 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.831919919 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.83173909 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.831982472 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.833595846 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.830699215 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.832895062 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.833230859 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.831740108 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.845187877 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.83182924 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.832114389 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.831662159 seconds)
  done (took 49.43530093 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.847099647 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.011378227 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.101493582 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.865882622 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.845325529 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.848859268 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.864553622 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.849582168 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.853882223 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.848501117 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.95545789 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.851915183 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.866513314 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.099880918 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.862367526 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.845208629 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.846230902 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.84793482 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.025977663 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.862008643 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.865604701 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.850958397 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.867900974 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.860426903 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.855111505 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.846732444 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.85075991 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.327373 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.853468395 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.958805794 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.904759529 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.869202708 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.26964078 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.104467642 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.903632904 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.853124901 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.848473959 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.954283237 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.850710584 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.852227953 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.866344724 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.849972521 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.102410228 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.32361775 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.866415926 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.847313937 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.339150125 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.964109196 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.887261612 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.868407774 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.096721247 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.8651671 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.849874391 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.84931596 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.892440067 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.858643213 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.849836532 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.188123413 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.860081145 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.866864604 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.859140174 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.849300991 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.025716791 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.85636714 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.012110618 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.858883512 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.855696289 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.851506046 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.101794964 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.864186957 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.339943485 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.861659615 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.849035041 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.955308327 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.014641384 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.366204609 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.861273074 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.025479151 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.287449423 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.871820659 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.855121779 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.319848459 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.877533315 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.856639599 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.850791485 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.851056286 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.851489383 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.893357547 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.868755823 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.262655319 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.335666919 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.201366875 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.875355832 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.864433964 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.849554889 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.189523277 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.856846626 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.852112225 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.092064159 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.340929371 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.862757167 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.858012777 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.322609791 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.864638483 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.869386615 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.857415743 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.101838681 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.862886846 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.892514276 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.853389274 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.85689713 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.853351878 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.869522996 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.856211056 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.851296203 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.309128384 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.975679711 seconds)
  done (took 229.84344415 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.848225426 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.844941401 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.844250412 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.847213018 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.845998254 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.849704503 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.844472971 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.845260919 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.851322579 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.844390496 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.843347089 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.84471045 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.845656026 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.850234508 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.880522945 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.852695712 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.456228376 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.845556261 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.848263104 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.846682278 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.493940939 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.85215111 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.847716347 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.846569097 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.849398326 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.847567868 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.854157118 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.871189972 seconds)
  done (took 166.823063696 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.856272636 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.967992323 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.870802984 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.881630474 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.860097394 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.851118905 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.87682884 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.866917994 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.858102449 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.851543134 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.851341956 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.911389034 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.865197316 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.952397993 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.88200577 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.885048946 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.959336524 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.860149349 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.85251194 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.852045338 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.882180512 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.84630406 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.913149569 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.979374217 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.868773623 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.968008576 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.859276157 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.854573849 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.854719109 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.971821025 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.86737203 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.913109293 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.881438955 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.872287979 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.973713947 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.972809395 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.961433316 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.884663035 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.857352012 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.854301384 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.8543301 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.845549239 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.970681263 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.871883585 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.855682881 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.95976427 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.873216433 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.856219359 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.863295838 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.85355905 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.867881407 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.870919739 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.921705966 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.985834533 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.885955124 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.878576257 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.880118601 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.135767113 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.865117899 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.955819422 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.849443292 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.972390365 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.875694638 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.845163591 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.857370581 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.860955016 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.882661963 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.884785346 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.961146726 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.862204621 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.956728831 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.889492771 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.860780777 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.854042073 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.857455535 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.97399418 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.973788434 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.891569574 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.894002636 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.885221928 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.851028346 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.855755882 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.844723907 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.873155942 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.859039662 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.970989088 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.975835982 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.864164325 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.858506798 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.856022588 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.85698951 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.880940232 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.978599115 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.891766456 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.952679667 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.923050678 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.929054701 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.870624583 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.869446561 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.859279064 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.916918195 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.86966322 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.868082898 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.184376675 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.929356975 seconds)
  done (took 200.961560846 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.339983357 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.911486242 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.914052548 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.182242399 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.274370568 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.743759886 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.902823309 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.906229364 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.931349061 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.098562668 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.982319288 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.92646543 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.889789588 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.879001367 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.904544891 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.925878611 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.914386335 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.220301355 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.039683174 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.020652213 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.888507479 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.22051254 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.222663597 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.344172579 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.93982689 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.251087514 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.589326636 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.154878934 seconds)
  done (took 61.306042739 seconds)
done (took 812.234695194 seconds)
SAVING RESULT...
DONE!
