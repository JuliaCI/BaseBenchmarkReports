cset: moving following pidspec: 13549
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.285667656 seconds)
loading group "string"... done (took 0.630637588 seconds)
loading group "linalg"... done (took 7.275919318 seconds)
loading group "parallel"... done (took 0.155684518 seconds)
loading group "find"... done (took 1.144427373 seconds)
loading group "tuple"... done (took 1.78216798 seconds)
loading group "dates"... done (took 1.306461159 seconds)
loading group "micro"... done (took 0.220382254 seconds)
loading group "io"... done (took 0.952573821 seconds)
loading group "scalar"... done (took 37.592789574 seconds)
loading group "sparse"... done (took 11.782419429 seconds)
loading group "broadcast"... done (took 0.938869777 seconds)
loading group "union"... done (took 12.298972605 seconds)
loading group "simd"... done (took 4.543833454 seconds)
loading group "random"... done (took 8.913241967 seconds)
loading group "problem"... done (took 1.862395253 seconds)
loading group "array"... done (took 21.122218173 seconds)
loading group "misc"... done (took 1.696107476 seconds)
loading group "sort"... done (took 3.356577062 seconds)
loading group "collection"... done (took 17.180111041 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.508120533 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12406244 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.117799724 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119118638 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145713914 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.111511367 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123838547 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084555693 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.794149944 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149223201 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118206436 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431807621 seconds)
done (took 5.091488749 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172140008 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082595568 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081609631 seconds)
  done (took 1.246491303 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065699536 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122508568 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066568494 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066106505 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066549375 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065763928 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065871812 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065759009 seconds)
  done (took 1.602786795 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073259033 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068915807 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.0685602 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068258778 seconds)
  done (took 1.361185329 seconds)
done (took 5.54323804 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.791703406 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20831135 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194782176 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41161269 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130764822 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158225629 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638963495 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329828024 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189099109 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080450342 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10489095 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.327048034 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108807347 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632370749 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073433108 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091405616 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137186398 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.419385896 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067105886 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082206454 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.0886741 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128327848 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088741941 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074870232 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.146374271 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067685815 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136980307 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079418579 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066324942 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.2129958 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172267521 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654339892 seconds)
  done (took 10.215823103 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096552486 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098015157 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068825693 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122911323 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096194901 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070015288 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071429929 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067170327 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086702676 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128109819 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088974984 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101659252 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065752279 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068509995 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.0847453 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203936931 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079902517 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081612756 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070536607 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077822282 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105572703 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078522812 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077403097 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077431542 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128580277 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17986186 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096647031 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097092152 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066592646 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080065984 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114980966 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125450018 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065067057 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066035915 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124646913 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094115202 seconds)
  done (took 4.524318841 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.00406541 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084859671 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143148211 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090032341 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135039709 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064432953 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108591157 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065200885 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080799633 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210334458 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.371005143 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.587914563 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11072292 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104268882 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067300812 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068452866 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066706329 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.478962956 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095329265 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107642175 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082277282 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069872411 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068318057 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354540122 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067820458 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063505038 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068215162 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056836429 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124941868 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090672953 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067712145 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.945384389 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126336246 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065938875 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100946695 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16211141 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08732013 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.276090848 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068860666 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064547222 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154473508 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069568121 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065787122 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084200353 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064022367 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103184907 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113184459 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064645824 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066872312 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16197643 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064491442 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080082256 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.641915578 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153931378 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076524164 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064064672 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255196985 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087308585 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069247721 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064740263 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.199566586 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064418349 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132082959 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067405801 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065617886 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068486238 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068977425 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363064299 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065828032 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.044380152 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068972335 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075519221 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068887818 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069075859 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072694524 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07267781 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087301212 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06651849 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074952903 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065900054 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065867742 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066231824 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08319565 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.374341759 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06594838 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067709426 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064066926 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088509233 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096323253 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06581793 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064486264 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098971547 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067386956 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.064894755 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105944579 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066462488 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082463554 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068651636 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112737286 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.166539643 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093408052 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065210891 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096082606 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07042669 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102314703 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080614363 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067746734 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.416251754 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064958242 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065238267 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068054554 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065808649 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067501654 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065754013 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079765106 seconds)
  done (took 21.089431446 seconds)
done (took 37.916725282 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238695763 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075326744 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077226688 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074079946 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074219987 seconds)
  done (took 1.717727172 seconds)
done (took 2.876025157 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122083387 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099855566 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063609559 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097050013 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06420131 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10161937 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10080377 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081088872 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100471292 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064182569 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09744064 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06405752 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064030707 seconds)
  done (took 2.295001837 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084172927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084042598 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069795992 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082936886 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063616452 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083033281 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081387207 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08917441 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081399045 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075065254 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06347241 seconds)
  done (took 2.008573531 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08389584 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084630484 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070150914 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082312172 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06359923 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082558702 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08176427 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086057117 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081768079 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07410001 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064058766 seconds)
  done (took 2.003748374 seconds)
done (took 7.453091418 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078001975 seconds)
  done (took 1.213884784 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.598076779 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.181844178 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081325904 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110917689 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187617129 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117454123 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27037133 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084982602 seconds)
  done (took 8.953416042 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102439673 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073235698 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068406601 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070466757 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069138645 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068404179 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068290671 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070409462 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072075848 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069341483 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071532794 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068924149 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069169694 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067617571 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070574051 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07084426 seconds)
  done (took 2.372870727 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092249554 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090415549 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072979262 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074356443 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071578054 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.0714015 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073610294 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073079703 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070294894 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071707258 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07410576 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07309467 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071185487 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064001869 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073302675 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074823756 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070493809 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073158427 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074149232 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074064052 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073880148 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064006905 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070917915 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073958276 seconds)
  done (took 3.021286923 seconds)
done (took 16.706993963 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11597555 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071754114 seconds)
  done (took 1.334938148 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081377648 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082317596 seconds)
  done (took 1.317225042 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08324625 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065403537 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091485134 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077933373 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06569046 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065237544 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089300753 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065623549 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065150529 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065415996 seconds)
  done (took 1.888530543 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069681654 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077801074 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070379461 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080481652 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073293531 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063255526 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072202479 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067066295 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077680182 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062133947 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07087433 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082012447 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070725576 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08370205 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071854045 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06832637 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070166372 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066910225 seconds)
  done (took 2.456394261 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066875944 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066645639 seconds)
  done (took 1.29651919 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068499936 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064181158 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066357277 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067048008 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063078886 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062077088 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062530609 seconds)
  done (took 1.612665638 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385628109 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112565478 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.309577717 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07055632 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081242381 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257316709 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06611329 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070435887 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070384299 seconds)
  done (took 2.62871548 seconds)
done (took 13.699996979 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081114702 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085917428 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096353338 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37513989 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091561372 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065834849 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114218126 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188906813 seconds)
done (took 2.270981199 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212256725 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.62997125 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401098864 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20459107 seconds)
  done (took 2.402887072 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341465087 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087394593 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058048091 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067109169 seconds)
  done (took 1.726703144 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066818701 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068806065 seconds)
  done (took 1.304651008 seconds)
done (took 6.817815782 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06731524 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06622989 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063458737 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065971014 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063654004 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063966254 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065712003 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085377498 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066008448 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066893774 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068267146 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066033721 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063437577 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063519431 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065522037 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06318513 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063353358 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063431558 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066218089 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063454291 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063252292 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065683798 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063222528 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063200931 seconds)
  done (took 2.77891718 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087563536 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068620724 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072735555 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072107375 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071299884 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071779444 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071431019 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067247952 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072037591 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068961521 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070912193 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07107186 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069111303 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071726982 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069297322 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071416037 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072343295 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067523044 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069215883 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071353028 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071852408 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067709133 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071126322 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071592732 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071185745 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072676239 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068671096 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067687816 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071933562 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070970275 seconds)
  done (took 3.312612092 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070331555 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063829532 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064289483 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070597138 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063582552 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063751019 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062955956 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063548164 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064520971 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062920857 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065028133 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063187311 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063004228 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064493607 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06431258 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067272861 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079044983 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064302804 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063592314 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06362945 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067003319 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063031784 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063297826 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06278674 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062624493 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062930449 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063828836 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063295959 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063777159 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062917482 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066231753 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066837716 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062783512 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069710922 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066919567 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062850712 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066634109 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062464706 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063372389 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062891113 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062328238 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062440421 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062684529 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069561675 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062854745 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064580799 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062610484 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064803038 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063702595 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066671683 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.176881362 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062500035 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064983337 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064317847 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067591553 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062346578 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063496146 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062312951 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06403042 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062665013 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062575049 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06317557 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065455865 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063797157 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077741046 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069962208 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062325226 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064405342 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063263336 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065562206 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064301364 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076207764 seconds)
  done (took 5.968277251 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092178247 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087727213 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065834073 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064769449 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061633136 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063714696 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067350671 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063300728 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065050419 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069756335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063992401 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065227403 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065014518 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077468781 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063623051 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064635297 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069751417 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061453317 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064585908 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067028704 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063948232 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067389584 seconds)
  done (took 2.689112003 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158396116 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071127174 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107885691 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073956104 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068524501 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073618583 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070404657 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070201848 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070395603 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069405387 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068983022 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070426347 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068564209 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069321224 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068983105 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069380715 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071011633 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069039531 seconds)
  done (took 2.574640397 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079481618 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066853845 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087159272 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065671852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065778516 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067666223 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070509484 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074000606 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.0679608 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065621722 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073732395 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06769229 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067507848 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065470327 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06769805 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065272739 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067934461 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065558829 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073692104 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070312251 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070548929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073595413 seconds)
  done (took 2.725356322 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083613575 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069771803 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085358846 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07274278 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061078793 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063665597 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070396275 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066972709 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071008527 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068230284 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066981481 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063873916 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070483486 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067103046 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071032971 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067155784 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068132953 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06706674 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068384258 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061222415 seconds)
  done (took 2.572400464 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088361282 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066855798 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067796969 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075616793 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066682586 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067021198 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074574526 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066754035 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067104409 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087372285 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066713884 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06674936 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075199249 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071680372 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066757303 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074563279 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074619441 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074383995 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066569937 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066390271 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088046099 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067046106 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073786074 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066881814 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066461225 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066496916 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06632856 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071470795 seconds)
  done (took 3.186579808 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067467906 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065617893 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0630642 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063551167 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062841785 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063531487 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063028268 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062802301 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065251441 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062905207 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065156382 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065419699 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065867886 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065177797 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065494992 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065411315 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065408599 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063034525 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063226813 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062876511 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06556682 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065759169 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065176308 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063381654 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063482818 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06528165 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062695035 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062752728 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065752919 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062919754 seconds)
  done (took 3.121452859 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077436755 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073558505 seconds)
  done (took 1.344743575 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064514188 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080828583 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063417101 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070052946 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069788063 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066739818 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073147913 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069486294 seconds)
  done (took 1.745724798 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083607296 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076977687 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067501918 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079738641 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076102174 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082380171 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134150824 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066700602 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072366286 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063668765 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079194527 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064986534 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071426805 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066098061 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071074153 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072436846 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063456969 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071909493 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067417981 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064653533 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067161005 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074380918 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068694372 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060895058 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067208984 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088362557 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077033297 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065896464 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068783362 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072968866 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071736632 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060184925 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065645562 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066242342 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063604081 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075161837 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080478743 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068563435 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074816014 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066491368 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076115193 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060531877 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070284382 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071932957 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076124717 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066322776 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066257413 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060948802 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063469756 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067998836 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06125278 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066751906 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060364388 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072816878 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069452066 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076710206 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064248239 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.0671818 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068408207 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068969703 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072371951 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067500592 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068241145 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065076133 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075378191 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070050509 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074464934 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061112064 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059689177 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063948518 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075414977 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089837759 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072188374 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066509932 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066536119 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063734583 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068873965 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066505222 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071128312 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072137722 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065254147 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070702322 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072787657 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065943189 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068062744 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073358952 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063625434 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06847078 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063450931 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081278654 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064742312 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063585489 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063129524 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075626121 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068287408 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064900641 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062769291 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071571867 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058933543 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065162774 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065211914 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065144951 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074555133 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068725732 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070015985 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073003773 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071963101 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06502093 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06754582 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061946069 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065153877 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064149553 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071451158 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059048506 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067240763 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065966652 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064949399 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073263154 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063104741 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064626575 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.196699901 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074022208 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066667655 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06387511 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070236802 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067089755 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069698797 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075186399 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065678182 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062306729 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062053987 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070510289 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06617355 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069751191 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070852519 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069889924 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061149874 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065202243 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071626939 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075032597 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067193548 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067743173 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07300236 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067722007 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065615499 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072852271 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068825761 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066224339 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072034566 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066995779 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061199882 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069204968 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068945107 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064869482 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069946471 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069073704 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068685235 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066749656 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065214681 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073678176 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067720792 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06520924 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066591274 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06486872 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077057459 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069067149 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061462384 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064063004 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075533959 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064354387 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066135719 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064942996 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068610391 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066511278 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064461389 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066053748 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06821284 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076681315 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070138818 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066288017 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071079259 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077418169 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065840314 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068318028 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065419307 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067157258 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066553597 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075171261 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070928799 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069737262 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068739223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062605198 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071075217 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073319783 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065040478 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063518349 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064878292 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069721012 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071428413 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069849119 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066672148 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063936636 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066539074 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069026872 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068498009 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065082854 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067412353 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071637765 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063396493 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07279361 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066162897 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075485707 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068908229 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06030313 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068087596 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063733596 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071305134 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060415178 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063265991 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064451848 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065921891 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064574923 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067754666 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05890799 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071340491 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071863857 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065322332 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064770122 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064155261 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071167546 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065984654 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067878598 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067862251 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070201357 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074808645 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064195227 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068107374 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074777564 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064447537 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058891339 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070180277 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063123016 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063403913 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063915751 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062931936 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.195647999 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076824222 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073975058 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061566172 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069408485 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065170916 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065699333 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061979445 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070731452 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069576005 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06761083 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073377964 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067572706 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06673097 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069988511 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065684207 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067387515 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067590417 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070082345 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066689782 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068417261 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066015183 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069237194 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065723667 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064095045 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068007997 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066498774 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066924052 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071686973 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066471657 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066036996 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068721809 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06726399 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067185927 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06670942 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06559186 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069204037 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067275113 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067121211 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068767903 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061678116 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073610278 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066805617 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073788782 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067309242 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063712709 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073168639 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068419577 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071895721 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066746798 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067546821 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067230077 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065630129 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068452395 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073765519 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06496787 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076974977 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073728899 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066927334 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069101467 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066372684 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067698109 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06471553 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066985719 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066161858 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067453035 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065124995 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070789921 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068114554 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065922856 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06738335 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066624414 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065912956 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067100753 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060253345 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065035935 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064902273 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065719224 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075078383 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06606838 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066113562 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064660895 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066722953 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064608124 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062351891 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07362082 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074444254 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066293889 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073202181 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064861693 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067458497 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076614179 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059995746 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063868709 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063379569 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06399255 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073069199 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066150485 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074467414 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066017043 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064723832 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062771851 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065812805 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064232644 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059751155 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062956668 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068619889 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063952765 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064381092 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064619913 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067179103 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065966588 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074389952 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063796936 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065408302 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064499802 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061900793 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063659385 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063856015 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067557982 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065062892 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062330188 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061681814 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064436592 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065281482 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066469142 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064324594 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065894972 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07086335 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064238817 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067464736 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067088204 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059455021 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06742356 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064086787 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0640061 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06366537 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0681128 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067877986 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064867789 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072943982 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064150278 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065193697 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064253065 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062648239 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063632385 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06395372 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06431152 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063645351 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065935914 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071601517 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062093756 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067080607 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065243745 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064792018 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070866807 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064944159 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067456311 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070764282 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064761527 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066240731 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071833901 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068066155 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068120707 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065262377 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065868242 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07033404 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06332224 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071131283 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06505473 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065325065 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066243787 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062465203 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063620701 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063839069 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062936874 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069314424 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064068 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062576622 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06327535 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061420853 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064835144 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065758245 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070482051 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06616601 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066896823 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059215853 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060573387 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063836758 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062380554 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065587647 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066068057 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069868426 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066239264 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064439778 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063003027 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072414081 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06937583 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.066873653 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062139714 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.067338983 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06425097 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066295445 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065052023 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064170641 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065397529 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068044734 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06541681 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063129976 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070327293 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067029943 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065042172 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06525932 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065503187 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064157612 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.05880355 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063892364 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064999918 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069321888 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065854126 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063322124 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072878862 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061973597 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063976097 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065945033 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063585419 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069298152 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058630514 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065368399 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064533085 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064333812 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.05891514 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063506069 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062082636 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06582977 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062838383 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058694119 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073470915 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072221896 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066239643 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063217258 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062689339 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059426255 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059025839 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063822953 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064619344 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065886333 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.073770617 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063329681 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062657135 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059615662 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063847668 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067174485 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067779537 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060929266 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059717019 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062804201 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.308169672 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074694853 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06682586 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.0676792 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071070188 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071403885 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066364715 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07243366 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065272514 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072430176 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081442499 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068538173 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069058108 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074291017 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076665211 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068926122 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063034712 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068352664 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071024129 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068614564 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068252726 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069307149 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08254132 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070045193 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066948867 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069442904 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071085021 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066812775 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07557551 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067921258 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068352509 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072590784 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0696424 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076862916 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070066743 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075385886 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070741932 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070877035 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067313065 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068209005 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065146792 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066439003 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069206697 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067906256 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072720603 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076165896 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067174546 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078437637 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077155965 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069820776 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064290998 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067016212 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066895051 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061955393 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067803738 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065200872 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065493924 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065629896 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066570137 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067682854 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072187488 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068357425 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067472969 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066309203 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060795074 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068730981 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068827883 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068169405 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063012394 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066295583 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066850249 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070206108 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069337726 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064279866 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067639708 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068424867 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06716398 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061498043 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073168907 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065851256 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068417783 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065684267 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066663088 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066867639 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069970876 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071141678 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06730299 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068647004 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070193858 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068339431 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063501103 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06369497 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071343086 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064112402 seconds)
  done (took 42.015996972 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103453557 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064017125 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062368649 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062151977 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073381452 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063010151 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06202243 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063223615 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063014577 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065277006 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061837727 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061982282 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07060067 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077917327 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07367743 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066635295 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062154526 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062859628 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061872315 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063027948 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070668119 seconds)
  done (took 2.758421522 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075865216 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070288796 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074199602 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076499186 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068041332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070886678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073665486 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070629539 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076436749 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067489203 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076238834 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071111604 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06745955 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067495711 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067680333 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071287535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076655041 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068037833 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070546945 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074328757 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07115173 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073612407 seconds)
  done (took 2.890021132 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069162104 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066748198 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06835679 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061437199 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066072243 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06153861 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069800781 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064041594 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069707857 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065457042 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.074871202 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065359551 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068039472 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061111669 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066403196 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064156183 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111290083 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069486545 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065907345 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067274564 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061851908 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06817133 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062189976 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062372286 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065752675 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069744139 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067094703 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064318212 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066016615 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065813714 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066505059 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063902649 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067534733 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066630323 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065518245 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065063512 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066341682 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066445826 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061409066 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064176712 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066695776 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061865941 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066267301 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06727212 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064178851 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063974662 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067997426 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06611642 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061107492 seconds)
  done (took 4.582180586 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081457632 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111961376 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069648381 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090234993 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081293008 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073376959 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070681286 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089964724 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06343857 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064212188 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082688659 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081372588 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065704823 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070333075 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073482186 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065458146 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066829234 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064887265 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069385304 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064874411 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069792359 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073358434 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080960275 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080517778 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069671736 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064604219 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065121469 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06985601 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079618434 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069870992 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070391705 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071638919 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081783925 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072929172 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065200903 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067909925 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082952386 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065909151 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067792424 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062991082 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067482054 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069777893 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07274277 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082602799 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065216035 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071846925 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065104112 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06214452 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079162303 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067413024 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072826282 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081050141 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069631871 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065948796 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069816457 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080886343 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065061496 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063236215 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068223653 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079393849 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062587377 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06878176 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080198757 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067171794 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071736915 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080999561 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071859715 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069009321 seconds)
  done (took 6.381600773 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079498987 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.074760078 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082843533 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082144443 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077001668 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073934124 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07363787 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074186194 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073892465 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079078765 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074372007 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095535255 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069713608 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075931202 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074224538 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074450846 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073893509 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07443166 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074151159 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07411133 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074699615 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08223835 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074300714 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082179232 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09881032 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06964083 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073900265 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074132428 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082097875 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073864495 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079372408 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073700034 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073870878 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081810127 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078691215 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073464367 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064648358 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073330734 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073413538 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073693237 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069392157 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081831235 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073387637 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069100872 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074060308 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073606926 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081655826 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079081843 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075748529 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078540089 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074091604 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082214091 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073837479 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074292172 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082101668 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107317842 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081395343 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081361761 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073639888 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081599851 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081349629 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087576809 seconds)
  done (took 6.138406747 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08526996 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074980519 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078094385 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061277359 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063654716 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070950445 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064026425 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064492842 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07388182 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074094742 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076352899 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070046983 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073378149 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076757182 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070050517 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073075522 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070034347 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070352932 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073655746 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070365713 seconds)
  done (took 2.773107177 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07699034 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083428846 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067190649 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072376945 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070127027 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071971347 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068254652 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068944353 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066751969 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069380413 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076141826 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075725584 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067284629 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071804768 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075557475 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072329308 seconds)
  done (took 2.483068384 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081320272 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075009469 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080224193 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065616114 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064569995 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062572414 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065816753 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063707321 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062328325 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077515503 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065247492 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.06881962 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065289171 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064465514 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.0620062 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068851615 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061410547 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062505152 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065145539 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078097568 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07814448 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063821971 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066911173 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065710203 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066016575 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071580974 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064798777 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064690671 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063376632 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066003077 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066640192 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06902911 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062375598 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06319242 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06376249 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062618622 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065128864 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066445058 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068897766 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065458664 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063751356 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067095972 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065730709 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066700521 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061966513 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066298316 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061855824 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067850016 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063302493 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067100377 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066043382 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.0676363 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065825514 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071974079 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06788706 seconds)
  done (took 5.006198836 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082184685 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0704576 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061820603 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064446986 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070437555 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068769526 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070388284 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068689195 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068746472 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063441139 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068917189 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069741835 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068987898 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070371734 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06868907 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070363874 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061658914 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068724821 seconds)
  done (took 2.578508021 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073157729 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065525303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0727082 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065655872 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066317989 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067834839 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061782728 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06426294 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064242827 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065340105 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065383561 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068151785 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064192526 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067916783 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065961111 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065666132 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067501293 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064254453 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065158934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062313477 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067670989 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064278791 seconds)
  done (took 2.790909289 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.0968481 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082942006 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14034732 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078558 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.08371429 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071374729 seconds)
  done (took 1.891006705 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094133792 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079381289 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066966037 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088999335 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073320196 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068279683 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067484065 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067781784 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076056213 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075583924 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067888613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076050632 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07668995 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075961416 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073921518 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073482861 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068713477 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068321833 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067667693 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0849211 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068081223 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075853998 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068451226 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067595761 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06848608 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075734901 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076677973 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075529313 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067765046 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076036301 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072835626 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06755469 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07616915 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07605771 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069572945 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075998355 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067977299 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084817529 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072854453 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075929607 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069028306 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074061747 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076338682 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072287254 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075618916 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068178621 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072207949 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06814127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068381985 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085289588 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07360951 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075347867 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073855496 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076641871 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07710748 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085846123 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076117289 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075693369 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073840584 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076324885 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076221956 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073200855 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07565985 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076314761 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074292195 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076236299 seconds)
  done (took 6.244368478 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08326517 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.089140138 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06762735 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076702361 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076253944 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067807351 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068317895 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067836394 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071182398 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067854916 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109256025 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068432997 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075742514 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07628792 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068419307 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067880377 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068565381 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075932948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068679278 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085987527 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068030193 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075880077 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076157539 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076313973 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0756858 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073179504 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068129309 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067998582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068580939 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068233572 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073302163 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068481545 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075924073 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067929358 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076229704 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068430447 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06840576 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073105065 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068570451 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073420702 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076284415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084309207 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068397069 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068136786 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076080885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067941601 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068251512 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068328052 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068356715 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06835471 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076260112 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075862181 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076401143 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075892438 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068755492 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068862682 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068202315 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06847373 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068358722 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073528154 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076042611 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068569862 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086353558 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068581283 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068927907 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076296144 seconds)
  done (took 6.177806146 seconds)
done (took 127.899376555 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187229839 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165637991 seconds)
  done (took 1.690908887 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070143662 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098769532 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078191138 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129546603 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066412014 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100605836 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099162893 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078679164 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066448799 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066475996 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066829306 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06857862 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131415069 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066198839 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066281566 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069030957 seconds)
  done (took 2.677313612 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100960135 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.164710792 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102661248 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065610435 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100851671 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073053404 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065228792 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074796599 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07134888 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065044021 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072918469 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070801759 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065160373 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070975359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070858699 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072867536 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064564309 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072746774 seconds)
  done (took 2.801514678 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100138086 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092034259 seconds)
  done (took 1.552477809 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.166635746 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106861031 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146535124 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35328556 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166824402 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.129643716 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129337369 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129979409 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120970629 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124235051 seconds)
  done (took 2.929774961 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100844174 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154717365 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266674192 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117527272 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07223194 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094565598 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118432192 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078011699 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080553313 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080347688 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080131892 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07651069 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099740568 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073365014 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073844376 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076233507 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10402351 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072690919 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074856216 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076082186 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10093142 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065372144 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073478338 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072443114 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077222163 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077536369 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065502773 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065016384 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076391882 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074246226 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076441304 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093428674 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077222282 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106234733 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07083934 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107462377 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076273981 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07380146 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074364834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073290626 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078637962 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078493793 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072217699 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07615624 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065232718 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076108023 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065275964 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065246456 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077786477 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066979133 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077450821 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076737888 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106393806 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066729968 seconds)
  done (took 5.979975299 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105711048 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112059085 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070818447 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1131306 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103096442 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072328659 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103643574 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09566665 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10463921 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070407927 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067870686 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.06993647 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082285092 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083193816 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115369804 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107378722 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073580484 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071208174 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106639553 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105817313 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06902264 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097734594 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091165284 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104597573 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06715117 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070603224 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067852685 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070012557 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076522076 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078158511 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069545114 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08085954 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084907061 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078232567 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066923379 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067824217 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067845452 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079345103 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078895391 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078685421 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077298476 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067419012 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067829928 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069201626 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069434695 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067752685 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078083533 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080141043 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078235661 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069305426 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069457292 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068331593 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069361586 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080222104 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07767275 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081053465 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081657188 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068364335 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068568425 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072476977 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080981505 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079305033 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079578577 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071941231 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078910936 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068751857 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079875752 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084598216 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068583984 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070118998 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068497216 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069748331 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069713284 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077771757 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077730131 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069216597 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069064498 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06814763 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079944227 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07809876 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067431306 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076472146 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066681185 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06757124 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068941431 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068714502 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07671521 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079644979 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069457136 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067824048 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068867054 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067877721 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066082474 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075942336 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079750069 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078636798 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078024475 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068560667 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078962645 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07835083 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069412469 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078780994 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067340108 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069492532 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068686734 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077035478 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.205199823 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081077817 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070010879 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06846098 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078883387 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081338657 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069894365 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080211797 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081377276 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079589777 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068848015 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081111889 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069524888 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080422509 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070182068 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080122018 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068534354 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079548498 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069413698 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068144935 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069713891 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080991855 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070719719 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069365562 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069392107 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070825659 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080707184 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083735797 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070208361 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079015766 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079516674 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071078855 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079759531 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068767145 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079916708 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069731765 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069822016 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067024862 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08180645 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068154228 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069109347 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070237438 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080870741 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069484306 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081019615 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078556693 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069050933 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081384619 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080362256 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078263045 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081593916 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070210657 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068753454 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069208515 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069771671 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078479268 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079584878 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069896602 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068602037 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078055936 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080553631 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066883661 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079030412 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07878076 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078465269 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068416904 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069294938 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080167311 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081020778 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078440848 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078673668 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078986408 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068590783 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077859937 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078742096 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068073585 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084689973 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068100875 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082733848 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079229117 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076481567 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077998126 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079955601 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079756498 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079578777 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082821418 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067446873 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067357086 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079421551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067689476 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068887476 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07719665 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068913209 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069071341 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082468068 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06802999 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078996973 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067695863 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078594659 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066552277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069175845 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082899501 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06808911 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069353501 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07832028 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068636219 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075976441 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078779101 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.208236836 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068970807 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071061271 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080706626 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079734761 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068479939 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06862284 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070451815 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078875524 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07897197 seconds)
  done (took 18.679684462 seconds)
done (took 37.679257838 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210256348 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155061212 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183058183 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118517326 seconds)
  done (took 2.128356259 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120436823 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101538661 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095128543 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064763011 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102193954 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064544434 seconds)
  done (took 1.942576658 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317803803 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211488416 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188280969 seconds)
  done (took 2.112053921 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202909699 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190398609 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420080846 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264574339 seconds)
  done (took 2.587843961 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145055007 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088903365 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067024756 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08320158 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133978656 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16024997 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101082225 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126181172 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077906755 seconds)
  done (took 2.438065577 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149407095 seconds)
done (took 12.755827804 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134396975 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.222693968 seconds)
    (3/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.111475528 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.124890287 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100582317 seconds)
    (6/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.184616697 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101353302 seconds)
    (8/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07831484 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083017559 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103920746 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090501841 seconds)
    (12/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.197488833 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077877101 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069089234 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07303116 seconds)
    (16/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.213849356 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091358012 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073991859 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.188382648 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 0.14255055 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076023627 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146692982 seconds)
    (23/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092207569 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197716729 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07359892 seconds)
    (26/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098260359 seconds)
    (27/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073534544 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140723772 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072767029 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.19614233 seconds)
    (31/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076760112 seconds)
    (32/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.187601352 seconds)
    (33/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.1103706 seconds)
    (34/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.142657063 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.212703035 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.184280193 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08997207 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075615162 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074171042 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.101351823 seconds)
    (41/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182293907 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137851036 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119310198 seconds)
    (44/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.170883063 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089627142 seconds)
    (46/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.160225179 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094026675 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065168051 seconds)
    (49/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071528204 seconds)
    (50/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080374882 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07398138 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.112408895 seconds)
    (53/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071754944 seconds)
    (54/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071937486 seconds)
    (55/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071329175 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050498982 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.179970605 seconds)
    (58/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076620418 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080070845 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064923034 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06770885 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064101985 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078052713 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07316431 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176169173 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.240311408 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.084924689 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08955334 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076772398 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.113054257 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205309138 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12373851 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089887681 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093319239 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.194420179 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.185878049 seconds)
    (77/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066777568 seconds)
    (78/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.200914231 seconds)
    (79/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110717394 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064244594 seconds)
    (81/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067993793 seconds)
    (82/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.112842061 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092812047 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.344585298 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071427645 seconds)
    (86/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074808155 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.164592284 seconds)
    (88/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075181442 seconds)
    (89/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069896364 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 0.13316187 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178209993 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074456969 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15468474 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110692488 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.185047577 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 0.067498475 seconds)
    (97/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052121069 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073811652 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076868584 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172890977 seconds)
    (101/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061267106 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075460778 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143718356 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05082157 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065884714 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.089645007 seconds)
    (107/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098192671 seconds)
    (108/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052141838 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071535849 seconds)
    (110/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100917553 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.155578315 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073450206 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051167831 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091665056 seconds)
    (115/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151653179 seconds)
    (116/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083524979 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093852732 seconds)
    (118/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08151778 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076437681 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072282895 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051136189 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140421292 seconds)
    (123/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075905391 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065320973 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050537912 seconds)
    (126/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156287993 seconds)
    (127/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06216274 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06673125 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112351861 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116312834 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06526245 seconds)
    (132/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100793042 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.138431968 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053209132 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074058804 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050710754 seconds)
    (137/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051296648 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073387096 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183970735 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066831629 seconds)
    (141/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119949399 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.07113204 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091581213 seconds)
    (144/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050694264 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07211219 seconds)
    (146/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05194462 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08195995 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064914282 seconds)
    (149/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051186064 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072159066 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194648211 seconds)
    (152/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071704775 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128855448 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096510942 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091377847 seconds)
    (156/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090613027 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.203600493 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051637662 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064965964 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072887844 seconds)
    (161/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05050081 seconds)
    (162/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061312991 seconds)
    (163/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072356049 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071018508 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073114787 seconds)
    (166/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050537227 seconds)
    (167/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061248057 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15388561 seconds)
    (169/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073042698 seconds)
    (170/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061594398 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.29372125 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169400779 seconds)
    (173/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19408125 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086283146 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.161710715 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088821276 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070087521 seconds)
    (178/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075680453 seconds)
    (179/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.181206867 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06607582 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065200117 seconds)
    (182/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071902681 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075853017 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071538469 seconds)
    (185/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099565379 seconds)
    (186/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049814819 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065633162 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073895494 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064416309 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064107818 seconds)
    (191/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066606309 seconds)
    (192/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066299924 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110965991 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065610295 seconds)
    (195/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116824413 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051449664 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089745948 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086236141 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.29043094 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066001937 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094715832 seconds)
    (202/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079335058 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.217723568 seconds)
    (204/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052574634 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075986353 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051445688 seconds)
    (207/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068036422 seconds)
    (208/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051466749 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051309417 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128506688 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141778077 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066002826 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075573144 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073424724 seconds)
    (215/309) benchmarking ("sort", Float64, false)...
    done (took 0.1329375 seconds)
    (216/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07330364 seconds)
    (217/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117641397 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069149764 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071059701 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051886408 seconds)
    (221/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091062582 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067673241 seconds)
    (223/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052045774 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065920183 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053703601 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090078649 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064821811 seconds)
    (228/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06529813 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051852075 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052478091 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053236705 seconds)
    (232/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051245325 seconds)
    (233/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07030928 seconds)
    (234/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078458778 seconds)
    (235/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068641912 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137448943 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184918103 seconds)
    (238/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061457328 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074765608 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073053027 seconds)
    (241/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07934362 seconds)
    (242/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067370669 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06116823 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073457325 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05059766 seconds)
    (246/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189701324 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140185518 seconds)
    (248/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081990501 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052265091 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065108201 seconds)
    (251/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050769637 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071669582 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064996325 seconds)
    (254/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068812192 seconds)
    (255/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052891483 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064752477 seconds)
    (257/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111578289 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050562386 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050722388 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051768925 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07247812 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072596762 seconds)
    (263/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050996768 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065300433 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051596666 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073724746 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066507282 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142277823 seconds)
    (269/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061242685 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051565638 seconds)
    (271/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052200885 seconds)
    (272/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065692666 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06794663 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064837117 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128109218 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093897659 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107896886 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051198699 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051765212 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064550666 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050575792 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092983199 seconds)
    (283/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064103475 seconds)
    (284/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088066084 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073492821 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089691063 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06398012 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065740708 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063617832 seconds)
    (290/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050847377 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182021157 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072890567 seconds)
    (293/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051325295 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050109041 seconds)
    (295/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.050918183 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061421908 seconds)
    (297/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050022499 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071374283 seconds)
    (299/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051608283 seconds)
    (300/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052906904 seconds)
    (301/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065934966 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091908628 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070733594 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05131936 seconds)
    (305/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070217013 seconds)
    (306/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049887338 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085983514 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065239102 seconds)
    (309/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073433965 seconds)
  done (took 30.906329289 seconds)
done (took 32.317098726 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088181342 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09379214 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075057586 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093899461 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081283675 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075949375 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072577662 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078782341 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079919593 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08189672 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078310069 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053895431 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074185029 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07408828 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074466739 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090935055 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.0781088 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072897321 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072888261 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064558213 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072907859 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064978839 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06726809 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054385017 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078335056 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072079832 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072150765 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073728347 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065328343 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065648136 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068891229 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073499356 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065129842 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078050024 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07187565 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073202641 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074352167 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076717281 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067083047 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065548344 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074345428 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065444928 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072681809 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073969113 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072197114 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071119932 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072979759 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07817226 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091034116 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067634166 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074347514 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07571552 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075679807 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073119699 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069258158 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072840754 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070496401 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091379197 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073151902 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067584778 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074081483 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07412602 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071109836 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072390848 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072564954 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074709199 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075181817 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071123309 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074239907 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07126227 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064679346 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072357836 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068522294 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065366636 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075543704 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077269335 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064008588 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070800051 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072667844 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070805992 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064369168 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066762087 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066454935 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071467241 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066969711 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053407679 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068972812 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07182603 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064097156 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072997972 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071496961 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072452023 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066589911 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075382586 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064505016 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070271152 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065004211 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064882498 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066753268 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068837832 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064649125 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066619205 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074647448 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06674665 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071334908 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078402118 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06499588 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071821998 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064032514 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064054151 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079125721 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074724736 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064659618 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069743107 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063941403 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072451209 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064100562 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064755436 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064668176 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064789748 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071424037 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064897699 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066889038 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072522274 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077777939 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064980196 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068646594 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067293855 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064828946 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07091691 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065200037 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064695136 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066016073 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061169026 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067162811 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064835229 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072020505 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201421565 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074369489 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068027305 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075111346 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072100866 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073643216 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072035575 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06451609 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059071785 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067826711 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067902113 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067897606 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065598726 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067427737 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06526166 seconds)
done (took 12.439692177 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069406462 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14375733 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099252418 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095992573 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085934753 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066589388 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076278658 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101242006 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067632419 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101523661 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087956924 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08523605 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11239016 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064631081 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065747952 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06945746 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06736795 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081618085 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101519595 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086389196 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.11609963 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065229986 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094738952 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089369074 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087139161 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101721559 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067069209 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069792626 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069511398 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091212633 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087096444 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069702985 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066236033 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097318956 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092687309 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082871965 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066525837 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082354204 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065861664 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065279764 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06767758 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097643611 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079567547 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079599807 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.0700483 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069332746 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067221567 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083392185 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088725558 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078364824 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08622055 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10286842 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068323952 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065348867 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064659177 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085079806 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064916736 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068377348 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065573075 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067567659 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065046275 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068901119 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080822875 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081363484 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068995864 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079516051 seconds)
  done (took 6.785155587 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086657514 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091414502 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083789832 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084175086 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065900689 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065903536 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06595628 seconds)
  done (took 2.042139217 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069912739 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089445627 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089572888 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089161114 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084776268 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08821842 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075942121 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066406407 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081009993 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067368877 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087378561 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102525991 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066562833 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072888767 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091007416 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066212065 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090804499 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066189494 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069093484 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090636702 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068091264 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082510253 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069533967 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066895299 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080543217 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066451697 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113491877 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070501292 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068233204 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069374369 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064122149 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108006137 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079820089 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075730324 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066136307 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080470096 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080872463 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064637417 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083147787 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072031394 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080484654 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067036891 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067498118 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064502208 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070790917 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077204843 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067765102 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067411571 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068778757 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086216981 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066602383 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079977246 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069624484 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068751477 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06739257 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069840984 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076473373 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066980278 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08573268 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067326328 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083563161 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082318624 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080310242 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082252559 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068638367 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080077013 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080310106 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068682376 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068044043 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069224124 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082833588 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064457325 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067367477 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076706861 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068447876 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089768343 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090051073 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068227186 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076025549 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066868994 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066799643 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066329635 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089431691 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068784417 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066531919 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070445688 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069259581 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064575858 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065156774 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070182349 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.0644963 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067397843 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069095834 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069163276 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068716622 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082671765 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067867194 seconds)
  done (took 8.758522918 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070807499 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06838185 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068925494 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067190927 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067119391 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067391025 seconds)
  done (took 1.930583004 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095342443 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07026099 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081031445 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071775844 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105491485 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087181435 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087249547 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078398628 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083595993 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078899076 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087071324 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08903255 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093495534 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073043372 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086925289 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071637659 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087063609 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075639647 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078627808 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073065415 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086730924 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072625378 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073545424 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081607673 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075625648 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072323536 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066691334 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079175606 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078669028 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078179687 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072517436 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076629719 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070548123 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078086785 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087317497 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070976469 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072110895 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077371724 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071866768 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07574017 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088194711 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072884718 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074220407 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077303158 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077687444 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07088777 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077216779 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07551282 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086323246 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077155018 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076898183 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071269087 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075688936 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077577059 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070441793 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077801792 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077468168 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086805082 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072458816 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070283814 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068766438 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075500375 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077502485 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075451155 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078250978 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077173924 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070038561 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072255988 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072582095 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071341341 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077525499 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06889956 seconds)
  done (took 7.088370131 seconds)
done (took 28.093395082 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.534646609 seconds)
  done (took 2.017916539 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.616469224 seconds)
  done (took 2.125176879 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.596550659 seconds)
  done (took 8.101295932 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404508619 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502330355 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.7362702 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132605208 seconds)
  done (took 3.326506121 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702132149 seconds)
  done (took 2.221990886 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217033714 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201177241 seconds)
  done (took 1.947678549 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.383246065 seconds)
  done (took 1.889771137 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.152661274 seconds)
  done (took 2.663394501 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267362526 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179356041 seconds)
  done (took 1.960244997 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.483557852 seconds)
  done (took 1.993915778 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.877460804 seconds)
  done (took 6.387932782 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223122837 seconds)
  done (took 1.77610101 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244439498 seconds)
  done (took 1.7540286 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.692958226 seconds)
  done (took 3.205218305 seconds)
done (took 42.890666004 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081937534 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080729698 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080322945 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078073911 seconds)
  done (took 1.818202791 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078826301 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072480924 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076218535 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.0722214 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075832352 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072493179 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073942056 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076509082 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07220798 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072763468 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072340162 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07207092 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074531243 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073837313 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070757521 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07524065 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075257582 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072206832 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074844459 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072092439 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070044704 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074819484 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074275696 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071351391 seconds)
  done (took 3.282775103 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080144964 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072279925 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074991262 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071523521 seconds)
  done (took 1.822512509 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080356329 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092343624 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088731536 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077647306 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092973038 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.0863853 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068929789 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068328529 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070051548 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076813429 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067887775 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095864535 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087713259 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076350005 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079655704 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065032192 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067581644 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087356153 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077494748 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077535309 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069207437 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077033012 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067473806 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088541226 seconds)
  done (took 3.405165633 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079542484 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104570959 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077282319 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088363501 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090891072 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064773152 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07474136 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089870616 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125790676 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064901422 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06983724 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065423589 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072153781 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064298906 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076156988 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106498044 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110754995 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068186957 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095934189 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065107847 seconds)
  done (took 3.184060615 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074712646 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068968002 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065004849 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068435348 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076391508 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072292762 seconds)
  done (took 1.954701362 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070072694 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067031093 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066851143 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066399239 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071487195 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066725348 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064963957 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067134728 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066954236 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06611726 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065848456 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065034221 seconds)
  done (took 2.329862937 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202398895 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067877152 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068684157 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065295847 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070174653 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06597112 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079575628 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067133637 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090678764 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065904124 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066155388 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067746576 seconds)
  done (took 2.503957854 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210126939 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075757614 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240221243 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139132401 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111084462 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116047208 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104264953 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113858095 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143774217 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101260558 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168404815 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168895125 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107862855 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137878248 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088882119 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100030405 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156303154 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163356911 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104731984 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167060367 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147415654 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125272155 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149959284 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103514201 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108416064 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124059915 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070559881 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079838219 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170517084 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133295527 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145153611 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111334072 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09272187 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176111578 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171673759 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140871802 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136730458 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083725896 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104416821 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134304692 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200602954 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088450234 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16290517 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108469841 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217110513 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135896035 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12109283 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120679725 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107044066 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089885006 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147575304 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186494348 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139193779 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087198481 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11391376 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114889404 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116106371 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103989239 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185301093 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163308975 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134708346 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070565685 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100345973 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155517849 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133405966 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108679153 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126172526 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093595824 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136458768 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156573701 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12048082 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146618535 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130836096 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088448529 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122508465 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140469853 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128609446 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16118466 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123288606 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071621482 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123906503 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101694196 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07962222 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145113567 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07418941 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175194573 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097944908 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107872197 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113997622 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109025508 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108659051 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161210615 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145469645 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102160185 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064840368 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244156301 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122588 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147850425 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08760328 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108805584 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118981905 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078218637 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139449922 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075140911 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123946022 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077638028 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126310305 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130742096 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076640623 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123349674 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102892496 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100976295 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134194244 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161303336 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088723911 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081267647 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170245086 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122393481 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105388027 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145989417 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157694051 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101649365 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102559619 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149089257 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17965638 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088896168 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164495387 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107482999 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083109507 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087748528 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124336928 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111868887 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123760669 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081307073 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118177046 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167734742 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073882741 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094947189 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132994749 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077905716 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079734368 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104584577 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104724044 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094828708 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099247488 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103954963 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137320215 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123408404 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104519372 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123909647 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097772109 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31650092 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088673757 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102439239 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104280189 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069877556 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137588278 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159755642 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079710937 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166172776 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124175311 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107249621 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1198913 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083660247 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141163436 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079485881 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069831264 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145996272 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111434992 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110876488 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152195837 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105203731 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12825987 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120595043 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135256128 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133276907 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.1313658 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104698158 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088453102 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111439796 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126911689 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07277739 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092344776 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080516503 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104265791 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096403494 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082438498 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142590261 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124824907 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101203986 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111888129 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09628303 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147700718 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075650637 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127304367 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118713972 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094787045 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155249348 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152470255 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131518892 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09870399 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136086763 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069877308 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073390255 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089049652 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122682406 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082139434 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082400512 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258938983 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150345613 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132071267 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140033391 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113514702 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120516929 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156460261 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070363038 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11641754 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148570452 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12272412 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104845945 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091308669 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09971838 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144275467 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108553779 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18492881 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114782247 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123809828 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154022533 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101155617 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079533419 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103009666 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137089946 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105569598 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144744353 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100218136 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088058349 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109377873 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074443805 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099572578 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127027383 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120355648 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135181744 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11546493 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132815475 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076531538 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116772895 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120393689 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121947267 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063086098 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118908161 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161310993 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093713372 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118422602 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152946538 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078542276 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125575478 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175398427 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144350993 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084218359 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253165602 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121140178 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128782178 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12117313 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142118855 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109712307 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13818433 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110461619 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08605877 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088338054 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098169989 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105527926 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095628704 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107802953 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115550804 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095686577 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132724982 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105413021 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110559708 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11832421 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099331481 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090597959 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096564478 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178408589 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118797477 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173194768 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099367225 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146940116 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165027748 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074359879 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078867352 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078165041 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140432175 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084628128 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130407869 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098827279 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106910475 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124484084 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143283837 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095193066 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068189574 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109401887 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134538242 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113858338 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097679471 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103876839 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163065061 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100178922 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078875028 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112876801 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10507253 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102487702 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171414292 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060720218 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098008825 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075817811 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079707273 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127197597 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295700311 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080392594 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105176117 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120464278 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113360518 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128762327 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102646499 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100203684 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117465045 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151972131 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129451178 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088992093 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112500073 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130800077 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157834231 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106296617 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096779462 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175933689 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153083927 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162106119 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08909959 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115764955 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115454049 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112408302 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138895389 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083314991 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164147271 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081906969 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137082135 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103982923 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090351646 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130968014 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100405493 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088130895 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148941727 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117746492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082341042 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077610439 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135453007 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119708098 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105507349 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074019628 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138031965 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072508251 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131677759 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158939058 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080340929 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104477133 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095507964 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079010464 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10653055 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101524681 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086353515 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.23899974 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178051112 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087844681 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152121566 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134698791 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11366059 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138523386 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10288881 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641109085 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078204524 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154900189 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116666563 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176314058 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101189978 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12026897 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110006395 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125284759 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147434091 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105613411 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181970792 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132762647 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116972115 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078833364 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103058124 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104903259 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091035142 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107354628 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11438478 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116563934 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094601358 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116481895 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125640744 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081454837 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095891998 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156931185 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116990986 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143934021 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140299414 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084701455 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117841016 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137038073 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079051382 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121056125 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151923831 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105786728 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098206594 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080049521 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100925636 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158524492 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072737339 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160265881 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118978482 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252633605 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114131148 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113548697 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132456965 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108705786 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122102987 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094361983 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110347106 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112880915 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082481877 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077130989 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106546125 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113515848 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098367228 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098784373 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099392495 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154529883 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071561805 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099619274 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104505375 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146420422 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175175075 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088811163 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082457689 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120883944 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112703142 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112971306 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122299319 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07909602 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081062115 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081424598 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077316648 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109237806 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112573967 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105340466 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111359686 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164570297 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083238164 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230169447 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095350785 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108044471 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069325574 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077934561 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095933036 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099069042 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107830879 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101363656 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159164431 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094285265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089209122 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091488381 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073014754 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081999735 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128307977 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108771243 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11774613 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097829345 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061560743 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10749356 seconds)
  done (took 58.923918663 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113245088 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082989375 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095918586 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145337418 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123345053 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204836562 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152297099 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191611432 seconds)
  done (took 2.761785531 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071000467 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096029245 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102557031 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083247126 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06607061 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068613237 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.228897194 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080900315 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066335302 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089637197 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078682586 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06866781 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425938424 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065651059 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067502434 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061474335 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066832193 seconds)
  done (took 3.410398316 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385168567 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610573426 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.38081786 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072453576 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.45191275 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091108322 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.134168745 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.130552357 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072473297 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535625193 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.705019282 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123435527 seconds)
  done (took 18.322300302 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077493346 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069209501 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082762616 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083544198 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072655919 seconds)
  done (took 2.013418142 seconds)
done (took 107.286761292 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083818166 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.380665583 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052835932 seconds)
  done (took 2.089573344 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085186111 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086157234 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084733191 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083075326 seconds)
  done (took 1.978211443 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075841613 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075453702 seconds)
  done (took 1.782171148 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233827388 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167275027 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087113364 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084453281 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078910247 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079311863 seconds)
  done (took 1.884327076 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073738052 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075178834 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072775724 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076257098 seconds)
  done (took 1.93298183 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078253297 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051915428 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053734263 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057188855 seconds)
  done (took 1.877791169 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088552825 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079422245 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078466032 seconds)
  done (took 1.883298895 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102566136 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08521142 seconds)
  done (took 1.826796502 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084132134 seconds)
  done (took 1.722462934 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100248657 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104387051 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132952807 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111567148 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140057194 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110041573 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084964974 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085888327 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076681625 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087149824 seconds)
  done (took 2.670811633 seconds)
done (took 21.851089276 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080371202 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368317584 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359960458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089972389 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668428172 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355648917 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987598709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092345088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.114641786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067476677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084006165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648097456 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976595922 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325012481 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964339317 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319468654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648141532 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067773398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067049254 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068020584 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971320923 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067442817 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067603902 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067743244 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647288485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372319333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06774718 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319230745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067646962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06921739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354627592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067769349 seconds)
  done (took 16.106489543 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072419721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120934431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073459818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084363753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070358836 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069392855 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071029904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068906526 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121653068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067071592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084368475 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06694177 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071529605 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068073692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087792144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067678857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068396517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067468435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067432436 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067573304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086531819 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067324244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067526944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06805981 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067045469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079528805 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067696979 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067691677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06789056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069426731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070454779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067761822 seconds)
  done (took 4.029229834 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120671924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074398225 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104325029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114134944 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069277825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145892299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09257621 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129733009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067862494 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084259023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067489272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101954956 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068133081 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087624956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068402357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06867405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068622998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06765581 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068120965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08748452 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067892833 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068047776 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06860556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068080443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084585892 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068292577 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068516355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068029848 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069735979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071693493 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06854694 seconds)
  done (took 4.304912154 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075300579 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076641058 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082519519 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084322284 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069473386 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07232896 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072792527 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069591696 seconds)
  done (took 2.255532983 seconds)
done (took 28.336038796 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081514146 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068615235 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072506219 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082142721 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072932631 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078833617 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066883881 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074910234 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071887728 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072756374 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074922743 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067027378 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071170109 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066844079 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073373487 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067327792 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079236453 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071791916 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07870287 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079036032 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069645343 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07328408 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.0748145 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079290426 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079194826 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07891004 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077591457 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073084903 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06916499 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070397019 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077222935 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084238539 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068333951 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079060079 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068134091 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067860105 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071958791 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067836792 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079476855 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076960842 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070116896 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076051386 seconds)
  done (took 4.732741732 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090057124 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09212982 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083750283 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061464213 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066735015 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065940702 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089273166 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059764193 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059259969 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088158377 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054943747 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059141314 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0627976 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052747279 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059791702 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055809241 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06154703 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054976891 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059680823 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059465284 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088591793 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052928555 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076880165 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063239348 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055488723 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060740506 seconds)
  done (took 3.400816901 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075555675 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085790677 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08963757 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128363382 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105125662 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078347671 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081054149 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095111692 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088521546 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066164558 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070972697 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092758456 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090840802 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074218956 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06710825 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086761795 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083550206 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068690848 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07346506 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095806153 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086884554 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086068408 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09869921 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082901091 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066541117 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070077243 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070759563 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081235073 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072607939 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076758733 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.082360955 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070546656 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069437409 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078877327 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071008661 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06877259 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09184581 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077313918 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077737724 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067378434 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070276621 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068118331 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092262638 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131345343 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066243849 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07350562 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075040052 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076251264 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066598412 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087116773 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077900554 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065882517 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069860566 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066118747 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066511934 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080499418 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068760496 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069162791 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0758022 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069339463 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091152572 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.0711345 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082819982 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066451323 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074073113 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065629306 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067766038 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065492801 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094422399 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068235799 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110635819 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067629221 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067862611 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07571221 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074205996 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073255305 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067621758 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081949973 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077382772 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070507497 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075295457 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069945624 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069410768 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090696366 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069072694 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068299967 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067715319 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073057105 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069481752 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06822782 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079883175 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067461881 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069609934 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084098502 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066231848 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.0678384 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072823579 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071704029 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066873101 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077576061 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07154664 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067704173 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076331573 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066419407 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069686228 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078995233 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073093278 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065823932 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070848946 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072666453 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067514551 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067734442 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069649322 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067958823 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07481642 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07306719 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071238184 seconds)
  done (took 10.590150998 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164516661 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156986028 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069718266 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148957331 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076028618 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078624409 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150891669 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094569497 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067304683 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068048973 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068291956 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112498869 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106152156 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11587984 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078404533 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06766079 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084085509 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114633222 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152209236 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145997812 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084601507 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07682137 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069653258 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068487676 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070004239 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078072333 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085046677 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076506448 seconds)
  done (took 4.426403275 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082259127 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101104425 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073813245 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090478763 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090936964 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067567901 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069369138 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069104145 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08048335 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078273446 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067624003 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072858251 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073886143 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070522851 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068277483 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07414274 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074422732 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069358981 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070917264 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07287275 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077424342 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092280604 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071075236 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066599032 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072060913 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066130083 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063727525 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084664661 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067287751 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094169182 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065445735 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075085023 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081288862 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06808218 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067121208 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06676566 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067498353 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06695044 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068899927 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065709501 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066179029 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056872957 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066026264 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079131396 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073744965 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055749369 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071861984 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072232123 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072109838 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064601952 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069807744 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069723561 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070396347 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074572173 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072306966 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072105396 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067852536 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073630325 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075851054 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066699432 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064171605 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065861258 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0719985 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06501387 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075558441 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071532071 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065466865 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066937591 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069604489 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073848844 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066431796 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070711194 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064674841 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069005647 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071861826 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069058198 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068052035 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065740325 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067084427 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06741923 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054416878 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067218028 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05273781 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069879859 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065818095 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06604879 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067146522 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071912667 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079339405 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071434604 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073085952 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068028096 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066050638 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069858222 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059830439 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069938673 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082802815 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08221604 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067004138 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065587366 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082014155 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071635592 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066450168 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055256016 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075243565 seconds)
  done (took 9.135275336 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09068406 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069938926 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086195439 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093870499 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086996821 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074973782 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077536062 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069239668 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082755317 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073996841 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07729309 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067745139 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077396113 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076918129 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069831836 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077372406 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071939341 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084213801 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082377804 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067957235 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075996031 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.0799791 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089953208 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082044053 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080532921 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081548267 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089604119 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071967119 seconds)
  done (took 3.907157706 seconds)
done (took 37.84087742 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.73942852 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.897652379 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.724808809 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.098391378 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.955234087 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.778374082 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.840583319 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.721654091 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.7788081 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.757620332 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.932921464 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.902286089 seconds)
done (took 64.790867582 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.760116577 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.864759027 seconds)
    (2/2) benchmarking "String"...
    done (took 1.994161877 seconds)
  done (took 5.519635674 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.010117181 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.320949444 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.972603397 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.721719758 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.724978286 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.063355603 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.528082234 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.250480228 seconds)
  done (took 30.244856112 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.833468963 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.944566847 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.40107789 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.430844743 seconds)
  done (took 15.318486215 seconds)
done (took 62.596625165 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.725575243 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.745899763 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.72457427 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.705954916 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.779380474 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.727720967 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.034630205 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.785884196 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.722574663 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.706844542 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.720563044 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.161079553 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.731497695 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.084261709 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.720021578 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.72929833 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.720369194 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.25612701 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.882823919 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.735580528 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.726426382 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.760523028 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.724122308 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.72809283 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.750121301 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.721309744 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.163981429 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.735787222 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.348746414 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.720539427 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.755862333 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.235954002 seconds)
  done (took 202.432513801 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.723866215 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.871907001 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.916140289 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.729607669 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.188457444 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.904454659 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.844192663 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.217001466 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.726470487 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.736797774 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.031904022 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.724151837 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.022997285 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.725343729 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.753703101 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.802279838 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.017832477 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.027406411 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.757347148 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.902705473 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.739283069 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.013991738 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.990703216 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.987232026 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.76481841 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.795580787 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.88785563 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.729706646 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.915093394 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.004502924 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.761591488 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.740249586 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.942885226 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.600456536 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.733035598 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.728123604 seconds)
  done (took 169.622752713 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.104107702 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.725075712 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.724415127 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.726672239 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.725903211 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.740041899 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.724729231 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.846797726 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.84897812 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.342534884 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.305257418 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.776978712 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546815655 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.72276448 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.794885984 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.737544235 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.724593543 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.740533848 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.753872747 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.724450473 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.72614661 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.848225266 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.740589194 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.804220505 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.732513356 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.726882075 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.731775967 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.099745131 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.725430884 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.726219459 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.730742086 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.986573051 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.724429214 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726338089 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.611044494 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.352154562 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.817892605 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.726610755 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732165047 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.725450361 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.946517835 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.724813499 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.728826645 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.732815582 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.725667712 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.88495983 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.725212618 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.850692082 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.724937471 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.230897425 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.727087533 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727565495 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.787671854 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.404539449 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.724526894 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.727473008 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.729966639 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.727185325 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.72665182 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.733187591 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.753750484 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.727835454 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.79807678 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.730770093 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.733013553 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.733812174 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.729848445 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.838781335 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.7283879 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.258492045 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.787812383 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.858288804 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851625788 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.728608101 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.798321766 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819067938 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.726165234 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.729052191 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.728160972 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.727827159 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.81006775 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.726224875 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.876608875 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73555052 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.731931775 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.779555088 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.798001702 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.727837287 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.634068032 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.728129235 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.729155961 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.040399711 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.79697667 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.727010066 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.729865865 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.72915192 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.861880766 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.851480126 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.521121532 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.730756658 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.579887734 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.729757027 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.876993926 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.728605291 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907339669 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.727210599 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.811281513 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.733216879 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.732067515 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.730598723 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.763355064 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.729863204 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.792650332 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.728699529 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.106426429 seconds)
  done (took 395.929693574 seconds)
done (took 771.805136534 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.39861507 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.354686813 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.46726444 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.379573032 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.350660023 seconds)
  done (took 13.617928684 seconds)
done (took 15.285771766 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.820564942 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.825859323 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.756014776 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.822979675 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.75367116 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.822723268 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.801051628 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.757335456 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.788764623 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.758511776 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.792497215 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759321683 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.745543625 seconds)
  done (took 24.873941133 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96703588 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.992924487 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.802771565 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97349131 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77800297 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.978514424 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.894817702 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.88517458 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89275581 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.749273518 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.747344926 seconds)
  done (took 22.333107767 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.972246961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.970869232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.809759031 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979310314 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782422668 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.973858172 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.899687697 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891657055 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.889545428 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.74767125 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.747042305 seconds)
  done (took 22.334395383 seconds)
done (took 71.2129295 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.740798516 seconds)
  done (took 3.410112765 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.768157484 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.924576233 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.747723734 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.745564705 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.741989079 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.742685207 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.745655526 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.742827653 seconds)
  done (took 15.830238651 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.741357693 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.741310774 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.738789465 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.741820454 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.73923698 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.739754674 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.739252291 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.74290408 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.743025521 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.739036642 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.743025448 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.739709582 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.739121449 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.738884267 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.741980022 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.742059551 seconds)
  done (took 29.523375871 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.743305571 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.739640576 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.739308332 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.740972701 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.739127063 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.74051956 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.741481146 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.73966327 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.739474955 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.740303453 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.741201113 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.740219053 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.740402174 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.740576033 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.740030352 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.741157054 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.741174067 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.739410043 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.744675889 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.741674827 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.741291734 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.739938061 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.742126306 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.742327604 seconds)
  done (took 43.456523335 seconds)
done (took 93.890857235 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.612228152 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.103969724 seconds)
  done (took 8.388012621 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.744868702 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.745619693 seconds)
  done (took 5.197773099 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.744057021 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.743870355 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.743702142 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.74382245 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.74445517 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.74324318 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.743596786 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.743716867 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.745660744 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.745413035 seconds)
  done (took 19.114046173 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.746257448 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.745158004 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.742602805 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.744109712 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.745234507 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.741774438 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.745959472 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.743413499 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.744611738 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.739563054 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.743344566 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.743084604 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.745379677 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.742605901 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.745490031 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.743295588 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.742188224 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.742389662 seconds)
  done (took 33.059529164 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.745559874 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.743520855 seconds)
  done (took 5.163368242 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.743623145 seconds)
    (2/7) benchmarking "second"...
    done (took 1.741240281 seconds)
    (3/7) benchmarking "month"...
    done (took 1.742502311 seconds)
    (4/7) benchmarking "year"...
    done (took 1.741992209 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.741370158 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.744809791 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.74263615 seconds)
  done (took 13.873572499 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.745399835 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.904632461 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.982993268 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.380351396 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.748169393 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.747443091 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.717734751 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.750528622 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.751840129 seconds)
  done (took 19.403501418 seconds)
done (took 105.871417497 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.57326826 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.738907683 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.104845181 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.830857468 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.756115887 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.036919642 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.748026456 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.047337228 seconds)
done (took 42.512946372 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.834400277 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.299224633 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.328291147 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.174758649 seconds)
  done (took 12.479756747 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.726089983 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.262508525 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.77166472 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.340972643 seconds)
  done (took 19.79903249 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.108678703 seconds)
    (2/2) benchmarking "read"...
    done (took 2.08636005 seconds)
  done (took 5.877014476 seconds)
done (took 46.669636679 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748382311 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.748226523 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.744473619 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.746805272 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.745292579 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.74578794 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.748433382 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.748522232 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.749023827 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.749466471 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.749883948 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749270418 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745181579 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746536428 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747453729 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.746912632 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.746060849 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.745268857 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.748158141 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744750519 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746757993 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749743595 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.745082595 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.747836267 seconds)
  done (took 43.610367481 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.750535461 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.747903155 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.750014739 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.74935928 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.746970255 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.750019202 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.75000246 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.746449392 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.750821905 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.751431348 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.748312226 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.746919785 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.75096606 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.748195838 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750369227 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.746280454 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.748521569 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748284806 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.754742472 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.750147672 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.753534249 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747304427 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.747823863 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750577775 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.747598663 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749764922 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.750514548 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.747882431 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750548111 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.748275216 seconds)
  done (took 54.159077705 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.756244639 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.759993095 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.750566007 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.750877892 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.751253624 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.750347374 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.752862055 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.753447202 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.750977224 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.751233995 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.752988605 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.750627594 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.750753663 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.751874195 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.752988312 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.751909878 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.751993152 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.751721034 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.75190802 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.75214712 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.751513054 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.753555236 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.751192365 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.751240421 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.752532876 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.752147655 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.753771302 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.752018172 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.753320781 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.752799318 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.753739265 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.753942725 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.753629546 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.754568389 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.753181829 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.752905313 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.757537447 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.762565141 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.752357479 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.753112095 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.753435688 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.753354649 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.753170102 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.751159803 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.752703624 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.754581335 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.754156176 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.753896112 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.754281752 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.753684635 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.753499681 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.753076132 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.752989341 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.752831856 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.75323004 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.754119106 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.75405972 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.754717995 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.75455761 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.753125595 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.754762906 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.754509196 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.754373025 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.754433565 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.754072562 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.752837949 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.754776688 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.752739394 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.75224124 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.752094996 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.75439319 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.752841177 seconds)
  done (took 127.916617966 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.755463901 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.751111246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.751914982 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.751344823 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.751219786 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.75463649 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.751548312 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753642744 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75219348 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.754911019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.753930792 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.751547278 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753063556 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.755559835 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754782753 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.751561246 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.755514234 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.753386028 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.754677078 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.754348853 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75420348 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.7543894 seconds)
  done (took 40.258427755 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75465987 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.75698668 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.752313825 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.75599218 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.753970381 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.756583515 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.755863699 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.757153635 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757250535 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.751822579 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753995172 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755013352 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.753783558 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.753354606 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.751682638 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.754492859 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.754597771 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.750992659 seconds)
  done (took 33.265047276 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.752365344 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.753789094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.756300537 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.754008555 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.7532875 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.757210778 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.755387052 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.756513701 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.756678318 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.754760824 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.754680828 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759083033 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.757381844 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755180356 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755861504 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.753761608 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.756647913 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75536347 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75861961 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.754994309 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.7547034 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.756298215 seconds)
  done (took 40.308157716 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.757887447 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.757266821 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.754223625 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.75598335 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.755399419 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.756686337 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.759725157 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.755967085 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.757883692 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.756533485 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757447313 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.755512145 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.755408001 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757422312 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.755503832 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755483553 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.758358453 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757517857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759863401 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.75787531 seconds)
  done (took 36.826974936 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.76188089 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760866269 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.75953868 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.760324389 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760329759 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.761661782 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758345469 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.759814276 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.759074773 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.760940469 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.759327951 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.761005273 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760144773 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.759979052 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.760429199 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.758821188 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.759822029 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.762542803 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.760208685 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76090624 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.75949471 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760726913 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.759482372 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.760816961 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762027698 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.761182921 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760696327 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.760839922 seconds)
  done (took 50.979833858 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760770891 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.760204237 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.755557089 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.75667454 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.75627563 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.758047469 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.7584195 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.758822941 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.758308678 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.755268495 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.75835867 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.760059433 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759287456 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.760352242 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.762590417 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.761171423 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759767842 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.757987636 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758483607 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758330155 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.760560637 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762368568 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.761465585 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.758223233 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759864069 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.761551242 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758195252 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76170617 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761284174 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758941373 seconds)
  done (took 54.47070262 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.781972044 seconds)
    (2/2) benchmarking "in"...
    done (took 1.781836734 seconds)
  done (took 5.254433764 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.761019762 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762944775 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.76211554 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.760671868 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.759694828 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.762764874 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.762685989 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761095573 seconds)
  done (took 15.784850617 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.76164075 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.761437884 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.761985946 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.762884773 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.763754125 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.761691106 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768153315 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.763790829 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.764779679 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.764154085 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.769258491 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.772158261 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.764036808 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763267961 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.763085414 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.764517392 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.762762825 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.761434819 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.76102065 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.763381235 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.76393786 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.764734634 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.763868277 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.759923502 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.763560653 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.773189351 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.76895138 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.762209447 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.76374888 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.767596605 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.763521108 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.762284888 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.763680694 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.764461474 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.763345638 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.764768999 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.772139913 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.767215567 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.771240755 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.766843119 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.764168111 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.761846771 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.766098399 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.765894879 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.765260806 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.761814892 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.763237046 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.76261971 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.763582006 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.766964 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.770357976 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.764998982 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.761043063 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.766073015 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.766547437 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.772751827 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.765375968 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.768707763 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.774383761 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.777608408 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.779230171 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.773820698 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.767655564 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.766291826 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776953158 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.792083957 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.770617113 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.76090327 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.763889839 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.766545073 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.772437794 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.779030698 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.778938212 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.766260022 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.768243409 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.765569351 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.767829145 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765692474 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771746469 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.768432144 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.766014243 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.765119181 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777631215 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791651543 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.765746215 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.767420171 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.765133428 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.766467342 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.76886304 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778763578 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.769956113 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.767862349 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.766656795 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.765621035 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.769222847 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.768455412 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.769551016 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.76771977 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.764997633 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.77014877 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767895714 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.769450659 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.780384036 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.768219727 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.768560565 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.776353154 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.76858321 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.765460531 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.774371929 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.768389068 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.766657213 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.767908977 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.774028806 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.766351954 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772156128 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.781900765 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.768214254 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.769290411 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.769014453 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.769046977 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.778348893 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.797804941 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.770383894 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.767053903 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.775010891 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.78457365 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768550363 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.771240673 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.767654754 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.767327543 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.766171948 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.770067874 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.771042311 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.77032051 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.769010994 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771289669 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.767648481 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.76869431 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.771077017 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.771107275 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.769920303 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.769749619 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.77244382 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.772735957 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.771440811 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.771958462 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.776836958 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.770462841 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.771930807 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.771497604 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.767757123 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768900409 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.772730548 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.770499587 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.768245866 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.769525288 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.770427572 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.770119185 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772614727 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.771183262 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.770136868 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.770162082 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.776208073 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.770969931 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.774677336 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.767878417 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.766771114 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.770711813 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.772625128 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.770440016 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.770046118 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.768350984 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.773282986 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.780887511 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.771335794 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.771849194 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.773211427 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773421697 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.771100542 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771608059 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.774358282 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.779844644 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.771107154 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.777870639 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.773344926 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773598421 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.771989877 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.77193614 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.76979216 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.771413398 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.774583555 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.780090899 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786844417 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.784945661 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.77679498 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.780347449 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.777860123 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.779921052 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.77993678 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.774688411 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.774196615 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.773387966 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771676218 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.771938153 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.772437474 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.773393366 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.772857731 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.7746115 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.77211513 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.771999226 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773678127 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.773481657 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.774334066 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.76980301 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.774331113 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.773990503 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.775524029 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.773806261 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.772184514 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.77355075 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.773981132 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.77278844 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.779708507 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.770410498 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.773230685 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.774842285 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.772962365 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.773342825 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.772949401 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.776821545 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.773379475 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780130068 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.774449066 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.775872385 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782407158 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.773259123 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.77407839 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.776905202 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.775427387 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.772052273 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.776767875 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.783829835 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.776396875 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.775784058 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.774875977 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.775439161 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.775754401 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.781775869 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.771348943 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.774423898 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.776061216 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.778269432 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.774890874 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.775963458 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.776308211 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.775815624 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779031628 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778676955 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.777674735 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.77768574 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.777005196 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.777130902 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.777798744 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.77943176 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.786226734 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.781254758 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.77923515 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.779597596 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.779367799 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.78040989 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.775356353 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.778561924 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.776705988 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.791256665 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.78918317 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78325425 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.777191871 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.776768976 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780986468 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.778719785 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.782172359 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.775592886 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777651987 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.778517481 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.777166951 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.77652164 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.779875731 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.779520117 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.779763986 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.778633572 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.783233868 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.777681189 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.778428046 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.777345917 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.779736945 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.777260068 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.778778525 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.778899805 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.782122319 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.781459165 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.777514166 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.777385375 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.785994339 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778030193 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.778848171 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.778597986 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.77890242 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.77569959 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.78099228 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.77897924 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.782235976 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.788729718 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.782730855 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.789727085 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.780977081 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788912532 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.780975424 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.784071457 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.792070439 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.779030831 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.780867223 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.779973637 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.780002188 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789666695 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.781746683 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.783289815 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.785796392 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.780631297 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.780144951 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.780223844 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.780325364 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781973001 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.781723131 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.789194399 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.782982094 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.784877877 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78469066 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.778179092 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.780691911 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.780047458 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.781879416 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.784582017 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.782594225 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.780019299 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.778968836 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.782640929 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.783057306 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.781287269 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.781592335 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.778780475 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.782143783 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789251649 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.784826628 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.78665665 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.782830344 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.792046987 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782891048 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79250352 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.784336842 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.783089804 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.781606077 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.782368664 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.782158285 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.782024686 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.780245827 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.782835541 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.784997288 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.786966455 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.783435339 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.785155024 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.782611223 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.784509747 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.782309724 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793118719 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809985392 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.785691973 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788853156 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.780986454 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.784341159 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.791002273 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.783067578 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.783319959 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.785753361 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.797715466 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795571294 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.785125053 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.785150293 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.783640255 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.786305326 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.78280792 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.78496841 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.784518893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.784797925 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.784917579 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.784585543 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786004445 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.7850295 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.783900788 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785157211 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.786457552 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.796471214 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.784761706 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.784451318 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787161188 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.786029313 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.784418192 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.788439851 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.788067551 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.78495052 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786493618 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.784575358 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.794020703 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.792749638 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.78782408 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.784939063 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.78635856 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.786109599 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.786484284 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787183693 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.786734142 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.786397727 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.787763043 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.787877569 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.788472507 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.783682604 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.78514873 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.787037303 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787345354 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.78822333 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.796399439 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786547959 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.784732609 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.786838578 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.786455997 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.786248425 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.789015184 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.794644883 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792659578 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.799791184 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.79842645 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.793377238 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.78737296 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.790862617 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.795173644 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.787497362 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.78808291 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.788278107 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.788234753 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.788769943 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.791132056 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789215194 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.792648576 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.788832183 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.787899484 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794728308 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.789973953 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.786660802 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.787975168 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.79111151 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.787257383 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.78488068 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.78803276 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.786953197 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.794304505 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.790546743 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.788081899 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.788786382 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.786107204 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.790584525 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795026175 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.788132327 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.789821702 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.787499484 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.78928773 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.789180145 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.791007192 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.78634654 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.789492471 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.788955424 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.793255644 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.796723243 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.786023257 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.790975452 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.788562729 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.790143418 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.788493042 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.790722345 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.787441626 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.786031533 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.788542659 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.788349554 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.790787331 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.792847552 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.78996872 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.789372209 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.793890307 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793225757 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.795931275 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.805750751 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.802316677 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.789496264 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.792041497 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.792678332 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.794062075 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.788983368 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.791453553 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.790246995 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.790917347 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.790799229 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.791070449 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.789038786 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.792542861 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.810117521 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.794336999 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790165145 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.791701145 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.794635352 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.791451878 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.788783921 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.79027729 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.793537097 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.793591643 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.801290389 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.792364939 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800756433 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792382459 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.792883707 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.795969428 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.795802227 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.80164699 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.791856391 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.791428303 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.792292729 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.797519694 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.811375069 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.793924076 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80452681 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.826494274 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.795432336 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.794881689 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.794792193 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792500138 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.793106128 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.794573012 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.793240013 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.794152691 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794805326 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.794385177 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.797434396 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.799607093 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.796049635 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.794850765 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.795122702 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.79457558 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.796683695 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.792688638 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.796836874 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.795331728 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.795303523 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.797104397 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.795778669 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.796066664 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807799491 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.808219771 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.795533678 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.797045178 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.793500904 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.798152857 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.798379703 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806703426 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.805960221 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.796004428 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.79590253 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.797648149 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.795365477 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.793067926 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.797452567 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.796045946 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796177283 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.794804954 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.808216578 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806771512 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.799316848 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.795296018 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797604259 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.796815144 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797882596 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796520998 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795399627 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.798364195 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.798104259 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.801079342 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.795972698 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.798518364 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.799981971 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.806695195 seconds)
  done (took 1063.191544743 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.796620871 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794552901 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795416331 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794049392 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793783832 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795553135 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794938156 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795793703 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.796335028 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795508542 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.795629432 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796144249 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.797664119 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796612392 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796776917 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79653775 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794368249 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.794877711 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.795325579 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.794773666 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.794812639 seconds)
  done (took 39.431744965 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.798507617 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.795558414 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.794249798 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.798974275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794960459 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796925177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.795581262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798964721 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.798119132 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796644226 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.800481728 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798596683 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.797304474 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.798628188 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795776663 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799663162 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.797767153 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795306489 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.799940141 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796998069 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797450014 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.796947296 seconds)
  done (took 41.269134366 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.800759684 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.799784767 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.799490058 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.798184112 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.800924848 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.797029217 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.800595293 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.798886284 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.79936319 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.800480377 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.799274009 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.801834841 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.808997847 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.807549705 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.801936094 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.80102813 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.943262937 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.799113756 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.801401298 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.802740203 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.799451997 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.807210843 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.799297595 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.799374246 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.799174089 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.800457946 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.801300002 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.801002579 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.802180749 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.803104728 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.805754237 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.801040293 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.800713148 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.802006508 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.800257226 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.801643443 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.806692981 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.802779428 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.799109691 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.801888057 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.813247176 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.826873877 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.802451185 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.806963296 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.801507895 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.80184115 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.803685511 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.810011586 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.799366759 seconds)
  done (took 90.190907356 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.802848377 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.80183202 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.799013632 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.800936056 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.801047272 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.802010669 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.803428282 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.801108724 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.798693476 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.799158177 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.801125129 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.799629786 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.800788711 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.801413768 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.802004475 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.79785339 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.79945377 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.800607869 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.7999868 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.798905099 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.799010926 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.800811408 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.802214392 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.799075505 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.801161033 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.798584422 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.801674456 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.80073048 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.800792715 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.797840698 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.801226335 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.800952897 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.800367907 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.797587079 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.801548364 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.802359583 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.799871554 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.798234265 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.801148578 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.798350999 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.801587098 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.799323239 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.80167655 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.800962255 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.79728181 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.800006884 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.793521705 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.793619754 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.795396221 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.797685111 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.796885618 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.795690843 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.79417923 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.793953217 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.797081385 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.794405869 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.795438085 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.793758299 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.794909126 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.794492404 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.792339259 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.795489356 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.794483146 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.793766785 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.792676866 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.790221635 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.791360368 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.794816567 seconds)
  done (took 124.0218315 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79298499 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.793075108 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793257906 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791834603 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798268335 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.789820846 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.790372999 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.791556364 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.791396734 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793283047 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79342386 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.793599715 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.793239631 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.791803629 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.791800202 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793578689 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.792425057 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.792107603 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.793009125 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791072453 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.791493823 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.792765153 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.794344301 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.791943032 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.794726395 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.792087672 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.793067611 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.794630205 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79427149 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.79337932 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.793743523 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.795040382 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.794532408 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.792491713 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.793302833 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.793691816 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.794693511 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794162635 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.792448093 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.793793612 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.792917803 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793165801 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.792993779 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.792555859 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792777979 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.793400424 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.793590386 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.794660183 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.79384578 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.796950574 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.79422632 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.793715422 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.793958924 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.793583083 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.796304841 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.793835191 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79356751 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793721217 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792961589 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.794036911 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798507305 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.795685249 seconds)
  done (took 112.91290744 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79460168 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.794327135 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.794092506 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.791758063 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.793365058 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.792043577 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.793135944 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.79338211 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794459373 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.792835513 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793210358 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792305955 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791521407 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794064676 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.790105102 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792352494 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790650872 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.790992752 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793351817 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794454584 seconds)
  done (took 37.57775748 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.792827688 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.793793616 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.791546879 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.790746585 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.796298599 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.790576554 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.793949688 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7940608 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791051762 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795683417 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.793205955 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.792497169 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790975635 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.790212153 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.794082835 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.791193668 seconds)
  done (took 30.403993594 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.788866665 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.79113104 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.792839168 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.793637713 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.785308223 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.787566073 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.789296513 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.787317835 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.787940546 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.791367882 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.787202804 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.78777004 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.787565349 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.788457077 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.784720806 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.789789492 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.783752926 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.784607904 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.786246917 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.787842863 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.788200708 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.783810272 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.787434812 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.786235567 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.783184012 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.784293428 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.785488829 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.783163143 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.784114107 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.785167271 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.784135087 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.786492692 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.783289813 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.782466642 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.786467702 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.784604134 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.785970881 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.788744956 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.785752515 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.787945864 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.786752082 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.785987614 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.786616109 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.789254478 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.784413333 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.788117226 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.785267194 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.784491319 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.786561369 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.784189668 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.786016727 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.787834938 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.787961666 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.786978901 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.788901886 seconds)
  done (took 99.989000858 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787652454 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.787832637 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.784884174 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.787776877 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.788585006 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.785110048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.788334415 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.783859674 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784138308 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787628144 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787304723 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.788097887 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785758401 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.787941138 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.785468731 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789094396 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784333425 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.786104372 seconds)
  done (took 33.873444879 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.78601374 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.788685477 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.787393604 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.78398324 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.784460027 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.788962849 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785149248 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.791732954 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787275688 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.784344235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786401426 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.789864435 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787364419 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.787594137 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.784379804 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782760956 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.787309733 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786873889 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.786715246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783190838 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78609561 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786930031 seconds)
  done (took 41.019714977 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.786074805 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.787890419 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.800933464 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.809452934 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.807739569 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.823694704 seconds)
  done (took 12.529281913 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783388344 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786197367 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783601201 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.785648294 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78706144 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.788807986 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784067442 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784204249 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786118684 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785165978 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783751249 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786292394 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78602181 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.783180054 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784483175 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786552032 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786420444 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780882048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.781425388 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785409345 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781642011 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.784352249 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783479183 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781576543 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78126553 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78072435 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.783978957 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.784152591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780005736 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782233765 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781267724 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778827007 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782863923 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78334211 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781782916 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781573648 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780088222 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.784221512 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781954269 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780660323 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.779904219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782285118 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781762497 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778373022 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.784342442 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779571834 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77817668 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778502415 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778732425 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.780839407 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782731641 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777041823 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781462724 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782084386 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780132103 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783932067 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775015125 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777723062 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781081088 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777959708 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778982552 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780337435 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777852476 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778333011 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780160765 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777989057 seconds)
  done (took 119.330935758 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779321823 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.775987798 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776462103 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776312559 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777322899 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779851876 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775300987 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777452738 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777247281 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778457789 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780611604 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779873796 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777073173 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776818957 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777551149 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776429613 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776226695 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778066798 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77607401 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779616462 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777596981 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776058776 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779124706 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777477207 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776959209 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779340169 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777321053 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777673096 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777391426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777741704 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777482751 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777311765 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774559317 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.775368352 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774191252 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776504462 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776268649 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775096806 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775372714 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779957915 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776978694 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778241558 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776535157 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774914121 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775599553 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776415077 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776498039 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.775890032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774746302 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77503072 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779110056 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771896728 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77504012 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775361076 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774204789 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773788639 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774743797 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774185388 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774444855 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777694279 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.773403465 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773269754 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779170299 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77624081 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775561273 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774890062 seconds)
  done (took 118.965159706 seconds)
done (took 2469.220281485 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.803180614 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.843815512 seconds)
  done (took 15.353043266 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.938067601 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.891722501 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.776905287 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.77344977 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.7711967 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.77353338 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.786505327 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.770995613 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.771644698 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.771550524 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.771856983 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.961449299 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.823098618 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.774900465 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.76990894 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.865223801 seconds)
  done (took 50.701693041 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.77539708 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.776985133 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.787652276 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.774871131 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.773030863 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.785899508 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.80911259 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.782012603 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.808580448 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.785891268 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.841341275 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.785623849 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.771324986 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.825721665 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.787564483 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.788284339 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.867170773 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.847216169 seconds)
  done (took 34.074942821 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.851918498 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.778195553 seconds)
  done (took 10.340992774 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.77254199 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.765426601 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.798381399 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.787115937 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.76549304 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.788787512 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.776475993 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.781605041 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.768008171 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.788072104 seconds)
  done (took 69.498737093 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.776246202 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.774597537 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.77168921 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.770178872 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.763139217 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.766138543 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.770246127 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.765155922 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.454430444 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.806497898 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.778204332 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.777102608 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.770256212 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.774183354 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.77127496 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.795234497 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.884183613 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.76949035 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.767800877 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.777304176 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.77127065 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.82308676 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.78495018 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.770728914 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.803155181 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.455592623 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.776056663 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.778142996 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.884615191 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.773349749 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.768030925 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.771155197 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.773400184 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.16683642 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.05762645 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.775473893 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.779036386 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.778967369 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.770425134 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.899616085 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.772056355 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.774445878 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.690401925 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.031103156 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.869077931 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.81625794 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.195056469 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.775007357 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.774497315 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.805045392 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.774617263 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.775784939 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.785725179 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.281042707 seconds)
  done (took 127.273127288 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.767369897 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.033674763 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.923288416 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.772415709 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056171193 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974933396 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.769397478 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.814370972 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.770587958 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997140602 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.92979258 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880044553 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768215646 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.765712417 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.766132443 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.762491622 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.926994643 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.839834058 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.766738383 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.770753204 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.798041564 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.011723852 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.897022953 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.767753004 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.786751477 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.983464613 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.892133019 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.874730997 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.962428767 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.767566706 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831299996 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.769602051 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.765882694 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.763607615 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.927414988 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.863345001 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854837228 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.76822637 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.764894449 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.764716569 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.439866507 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.964648542 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.871024313 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.912755744 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.013762158 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.972687122 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.559547087 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.768196869 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.503976354 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.933950334 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.999701817 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.999306401 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.894330559 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.770953752 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.280528996 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.769967385 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.765620622 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003417555 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001094835 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.870829143 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.772570583 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.768777628 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.767780189 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.017862548 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.772375262 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.863383531 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.773479762 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.769096629 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.865043048 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.873091069 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.998100887 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.98520408 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.803627921 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.086609126 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.249125003 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.019521745 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.838631372 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004322451 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.7704279 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.767847578 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854716726 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.612319097 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.9275335 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.018717971 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.028207334 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809856986 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.492758164 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.767945055 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.999225676 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.99580274 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.071312783 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.011120923 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.919715979 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.964858013 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.76946405 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.769764104 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.023094065 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.906308251 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.77141714 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.13171191 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005206859 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.347068014 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.799200765 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.07962566 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.905014477 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.775747765 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.412279954 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.769787058 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001146081 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.814321524 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.770109601 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.770091923 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.992642928 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.84910384 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.770626272 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.416216308 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.836723274 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.772317067 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008329506 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.777685067 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038420383 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.772012019 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012640022 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.144522389 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.803900613 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.00102489 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.010158135 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.774461803 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.018938481 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.019752212 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.891673829 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.993277089 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.391912646 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.771784198 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062742602 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.776471379 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.770995023 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.94381143 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.770580569 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.946957713 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.773959086 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.108159497 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.795776768 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925710532 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.773374262 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.034324433 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.807021381 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824419728 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.772903071 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.900707605 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.77191243 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.639949544 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.925948565 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.774151129 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.771177161 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.476998222 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.773749249 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.929044743 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.005043924 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797199768 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852061369 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.447733393 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.772422422 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860932689 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.799235687 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.127673784 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.774105447 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.931940375 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.774779803 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.308102719 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.776880477 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.017499259 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.957425486 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.776552634 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.772554443 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.681555304 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.77292412 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.772428756 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937562724 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.627859339 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.771873403 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.979756676 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777968351 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.905301838 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.778865044 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.848765269 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.128646167 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.774482701 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.771730987 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.774793633 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.776642992 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.776228015 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.038054868 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.803453572 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.298003094 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.917011193 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045355634 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.097669387 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.02803423 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.821261626 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.776713916 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.02174184 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.77560738 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.840631473 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.776842735 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.800182559 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011874107 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.77728022 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.986963031 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.05601775 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.716549314 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.823474741 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.778242924 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781103894 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.717562305 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.926528434 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.870738625 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.774153745 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.775988913 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.894342208 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.904673509 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.995089737 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.776711794 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.891384733 seconds)
  done (took 881.171341792 seconds)
done (took 1190.11857358 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.777517572 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.777904735 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.766233246 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.780472989 seconds)
  done (took 28.814850529 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.790893453 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.78359967 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.784749596 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.784936883 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.786131502 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.787405743 seconds)
  done (took 12.42996682 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.836153125 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.776324541 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.776767172 seconds)
  done (took 21.105724891 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.850893601 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.187994625 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.892508309 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.221715023 seconds)
  done (took 9.866036908 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.785509337 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.785580934 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.784698948 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.787644195 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.792334585 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.789800693 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.787382687 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.786736833 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.786854361 seconds)
  done (took 17.801988302 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.226423801 seconds)
done (took 95.958312848 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.786384743 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.864081691 seconds)
    (3/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.880103642 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.500616411 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.612413859 seconds)
    (6/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.945786562 seconds)
    (7/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.948141391 seconds)
    (8/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.799682222 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.913177329 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.531953513 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.692574721 seconds)
    (12/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.178377502 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.828868973 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.801627607 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.809512558 seconds)
    (16/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.965457453 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.698796214 seconds)
    (18/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.819693488 seconds)
    (19/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.988127358 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 4.797422822 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.059315574 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.014379701 seconds)
    (23/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.331806048 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.785853353 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.866362745 seconds)
    (26/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.911000463 seconds)
    (27/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.817147745 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.783749308 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.809381365 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.245807548 seconds)
    (31/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.925606624 seconds)
    (32/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.063840566 seconds)
    (33/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.912797402 seconds)
    (34/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.72682007 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.029688452 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.993455636 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.991239 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.783698074 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.275597736 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.210968962 seconds)
    (41/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.787024006 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.786285252 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.774473906 seconds)
    (44/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.376907752 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.109883443 seconds)
    (46/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.045593354 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.836727613 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.170244754 seconds)
    (49/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.888108089 seconds)
    (50/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.295407951 seconds)
    (51/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.923658219 seconds)
    (52/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.926268462 seconds)
    (53/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.813353732 seconds)
    (54/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.801832296 seconds)
    (55/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.189880012 seconds)
    (56/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.089179744 seconds)
    (57/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.959982579 seconds)
    (58/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.788825803 seconds)
    (59/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.822693155 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.793979166 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.267832593 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.025889829 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.465049966 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.905302813 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.017708308 seconds)
    (66/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.772083335 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.138978092 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.085244135 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.08213694 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.866876422 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.772759975 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.922834879 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.765411187 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.486333059 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.783748567 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.227561496 seconds)
    (77/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.845855719 seconds)
    (78/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.267938022 seconds)
    (79/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.286691314 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.086237122 seconds)
    (81/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.858051618 seconds)
    (82/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.919121154 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.792501439 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.74375861 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.854601104 seconds)
    (86/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.811990012 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.248417964 seconds)
    (88/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.269300783 seconds)
    (89/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.890122376 seconds)
    (90/309) benchmarking ("sort", Float32, false)...
    done (took 5.644016833 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.791304058 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.873209861 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.096112538 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.682943678 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.062968769 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 5.466941448 seconds)
    (97/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.267604727 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.267050444 seconds)
    (99/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.991834071 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.007238753 seconds)
    (101/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.963480593 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.020027754 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.787557416 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.423585886 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.027027964 seconds)
    (106/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.800595534 seconds)
    (107/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.917439979 seconds)
    (108/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.353849502 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.981026008 seconds)
    (110/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.934925628 seconds)
    (111/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.099318043 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.004912869 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.159078339 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.900693445 seconds)
    (115/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.895341908 seconds)
    (116/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.609257675 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.588450591 seconds)
    (118/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.366697558 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.921645573 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.041262692 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.097801735 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.792655053 seconds)
    (123/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.905762888 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.12675156 seconds)
    (125/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.892261819 seconds)
    (126/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.884228673 seconds)
    (127/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.084484705 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.788892535 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.898617225 seconds)
    (130/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.976222167 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.269370164 seconds)
    (132/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.961951636 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.239964925 seconds)
    (134/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.1275296 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.815579673 seconds)
    (136/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.983392765 seconds)
    (137/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.090389551 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.047755201 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.787348095 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.799721411 seconds)
    (141/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.792286057 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.003957931 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.197323819 seconds)
    (144/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.829519972 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.054018352 seconds)
    (146/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.343545675 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.612482958 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.071590304 seconds)
    (149/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.77585497 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.914440134 seconds)
    (151/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.773635293 seconds)
    (152/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.623291215 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.830948499 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.774112515 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.468555521 seconds)
    (156/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.884092181 seconds)
    (157/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.775793235 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.855233146 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.032008782 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.817336651 seconds)
    (161/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.997116653 seconds)
    (162/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.079885696 seconds)
    (163/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.820753113 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.878288029 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.814679318 seconds)
    (166/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.398149354 seconds)
    (167/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.04119407 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.902999879 seconds)
    (169/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.806020528 seconds)
    (170/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.096152149 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.008384287 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.792355244 seconds)
    (173/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.491170924 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.720668829 seconds)
    (175/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.995632407 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.772567719 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.888524563 seconds)
    (178/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.791423609 seconds)
    (179/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.206483667 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.79443451 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.566648294 seconds)
    (182/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.81807687 seconds)
    (183/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.800129539 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.816255856 seconds)
    (185/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.925716084 seconds)
    (186/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.879085702 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.79473202 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.593233379 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.091208483 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.128228011 seconds)
    (191/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.899451772 seconds)
    (192/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.878768199 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.864885305 seconds)
    (194/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.521610739 seconds)
    (195/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.865869128 seconds)
    (196/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.845826158 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.116864029 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.701970398 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.903807951 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.851463358 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.590553432 seconds)
    (202/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.92355869 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.782188086 seconds)
    (204/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.798188574 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.900200935 seconds)
    (206/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.7368877 seconds)
    (207/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.546612748 seconds)
    (208/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.986280672 seconds)
    (209/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.987643342 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.904114513 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.79324017 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.041001689 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.520237116 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.004233886 seconds)
    (215/309) benchmarking ("sort", Float64, false)...
    done (took 5.58759064 seconds)
    (216/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.91463178 seconds)
    (217/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.332307947 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.856490808 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.812585476 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.184939246 seconds)
    (221/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.822246568 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.84363663 seconds)
    (223/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.135720383 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.798430867 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.828712276 seconds)
    (226/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.824143863 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.933207828 seconds)
    (228/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.194959119 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.164211595 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.11619981 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.777919248 seconds)
    (232/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.583358356 seconds)
    (233/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.885954143 seconds)
    (234/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.7938651 seconds)
    (235/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.945302713 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.676094324 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.963155299 seconds)
    (238/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.979049383 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.823461376 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.881234102 seconds)
    (241/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.308112718 seconds)
    (242/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.883010426 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.974610459 seconds)
    (244/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.820100437 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.146173629 seconds)
    (246/309) benchmarking ("sort", BigInt, false)...
    done (took 6.795817941 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.817156036 seconds)
    (248/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.72784191 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.823173309 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.283135642 seconds)
    (251/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.955027201 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.148086502 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.88842671 seconds)
    (254/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.863392533 seconds)
    (255/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.7803181 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.916897825 seconds)
    (257/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.131385453 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.089141075 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.17571712 seconds)
    (260/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.15742015 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.825889366 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.821368625 seconds)
    (263/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.090715553 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.08084476 seconds)
    (265/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.284576299 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.159930634 seconds)
    (267/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.881388791 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.796556836 seconds)
    (269/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.993195679 seconds)
    (270/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.266897457 seconds)
    (271/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.274026804 seconds)
    (272/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.801856508 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.983456215 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.938075752 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.906404123 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.811216262 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.505407197 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.253447392 seconds)
    (279/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.777142819 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.953412806 seconds)
    (281/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.185953036 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.858621256 seconds)
    (283/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.920130172 seconds)
    (284/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.81386077 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.878620631 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.019289736 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.883260061 seconds)
    (288/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.797092021 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.996068232 seconds)
    (290/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.904213255 seconds)
    (291/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.800728778 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.608020172 seconds)
    (293/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.130197732 seconds)
    (294/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.983440501 seconds)
    (295/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.94819967 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.008154775 seconds)
    (297/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.905900637 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.83581742 seconds)
    (299/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.785096397 seconds)
    (300/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.762323566 seconds)
    (301/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.693433952 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.950333714 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.818170455 seconds)
    (304/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.124902098 seconds)
    (305/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.825697278 seconds)
    (306/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.871101161 seconds)
    (307/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.825006649 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.43561807 seconds)
    (309/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.807683369 seconds)
  done (took 992.038717982 seconds)
done (took 994.004120871 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.830590887 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826070453 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.809351612 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.830443137 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.920244959 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.838016251 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.825587472 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.810948997 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.857206026 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.859247904 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.807363249 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.839002899 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.810953735 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.810708246 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.808810684 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.823116378 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.119060422 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.837775931 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.827584624 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.820776327 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.827532292 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.808565533 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.861910651 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.837497652 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.813975379 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.814388689 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.813620326 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.831706336 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.921330703 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.814609331 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.814221443 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.82288376 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.118542681 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.838550381 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.805476131 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.831791766 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.82240654 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.820718614 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.817202641 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.844310245 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.259895821 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.816148697 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.815016184 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.814106775 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.812465973 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.815121445 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.813952671 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.818532957 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.824975029 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826868438 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.260550465 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.833600762 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.815571534 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.81213003 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.825278368 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.813107732 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.817936838 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827414149 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.831613338 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.826942704 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.112407267 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.841557202 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.813506576 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.828740083 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.821248825 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.295189068 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.812769177 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.815884221 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.260676491 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.823597934 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.298518543 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.825857381 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.813730992 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.827341213 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.846083298 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.123500712 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.834798314 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.815203895 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.820759274 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.81300318 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.822814514 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827972139 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.818492344 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.81432313 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829029856 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.842753667 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.826570099 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.81625198 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.821963151 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.832452032 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.82133469 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.824218898 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.817259857 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.809476395 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.823302305 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.820725097 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.81662385 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.818686345 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.818536974 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.82529776 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.258124352 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.836173155 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.812776816 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.810184731 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.813546255 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.82878363 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.255008904 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.820238998 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.837594104 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.862903862 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.818049083 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.114479059 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.844601115 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.834922169 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.823983332 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.819040037 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.808805086 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.111609419 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.287501345 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.834086957 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.81689225 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.81295719 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.830569393 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.818074265 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.811728844 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.124796561 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.841870651 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831223411 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.937359395 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.828224211 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.847633344 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.815595304 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.820266882 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.846585422 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833296679 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.848205426 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.819555341 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832406198 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.832617918 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.812764484 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.829208423 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.828063451 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.818149033 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.825118989 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.8106989 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.847673746 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83037381 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.829608144 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.837973548 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.937717052 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.81836553 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.114172083 seconds)
done (took 285.428706768 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.885953915 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.806252364 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.911526229 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.814510245 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.895363836 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.913455312 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.809883022 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.811681489 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.810659466 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.189563459 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.815976141 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.812543103 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.811816585 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.811332701 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.895633706 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.814492696 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.812189148 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.153775717 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.816372433 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.885960553 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.811615421 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.812896117 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.814266059 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.21128937 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.8140709 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.813709607 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.897794973 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.814868503 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.151822579 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.810514821 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.808905835 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.153108003 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.920177268 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.833899962 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.826434837 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.821587514 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.909755962 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.819831469 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.910633724 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.897269558 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.925954977 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.854714208 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.811850822 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.814825086 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.820002936 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.81733022 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.812854041 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.845553828 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.811451083 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.812639488 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.158521552 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.82561975 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.822753622 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.814533022 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.814545703 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.843319463 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.81468389 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.817627628 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.908483571 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.816466279 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.882501571 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.188709025 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.219536482 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.818109228 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.812826997 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.814348818 seconds)
  done (took 180.773497651 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.883253145 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.891012651 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.882972699 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.820468463 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.866503923 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.885188593 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.819239476 seconds)
  done (took 14.791175773 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.822850907 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.817568142 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.865495739 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.865398102 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.81653885 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.969390254 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.817097502 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.828805619 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.81521008 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.86913761 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.818452367 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.817451862 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.824160701 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.81046689 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.864173477 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.828676976 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.932261003 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.819094693 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.818562947 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.968497994 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.814358529 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.82400834 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.871293276 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.82888785 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.818375667 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.823752267 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.401407414 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.817284283 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.816446144 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.817844814 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.815911473 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.860530615 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.818865689 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.81824347 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.816326597 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.933566958 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.818300864 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.815404112 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.819291062 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.811515544 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.818684576 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.818973507 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.818509821 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.816217973 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.818402971 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.844456071 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.819971926 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.818459656 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.818013167 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.82007389 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.876152295 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.820138846 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.815782162 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.817780802 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.873616687 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.825393266 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.821655343 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.816656588 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.819658308 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.816816739 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.97077405 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.868598333 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.819918935 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.868497158 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81975446 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.819573853 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.82036408 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.820483431 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915212771 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.820976159 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.868324733 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.817704856 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.979467883 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.843146599 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.8209095 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.823353852 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.822844478 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.820142812 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.819501949 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.827004163 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.82013658 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.822531857 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.826929201 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818382019 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.81725036 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.931355982 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.929096181 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.817634169 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.833961795 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.828620567 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.81898084 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.881892579 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.821967881 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.818787218 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875015951 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.937675533 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.877232057 seconds)
  done (took 200.877364299 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.82545198 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.829185482 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.822050022 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.836336552 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.822470804 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.822301201 seconds)
  done (took 12.70457085 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.823186911 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.821765286 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.822176178 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.822351756 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.82197165 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.82433429 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.824392763 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822950395 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.826399605 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.823887953 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.823529622 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.825609061 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.824104408 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.823736734 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.823315339 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.82418293 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.823307703 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.820687325 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.824403445 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.822575216 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.969429302 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.824048337 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822778876 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.824064522 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.828271843 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.823445881 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.831756086 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.822919672 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.824894679 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.831220828 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.82768116 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.823299046 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.825418805 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.829019741 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.828791894 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.82719961 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827473524 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.825342684 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.821559961 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.82478866 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.826593457 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824732031 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.825824955 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.826683116 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.824977768 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.829401407 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.829420787 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.833073522 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.824861139 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.82621551 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.826483519 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.824931515 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.825943595 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.827550245 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.827669013 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831433651 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.829874566 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.825985704 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.825489033 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.825975051 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.82741437 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.826411458 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.827573876 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.829314304 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.832008241 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.827669037 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.826183917 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.831129329 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.824877753 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.825884665 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.827839428 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.824697944 seconds)
  done (took 134.35663484 seconds)
done (took 545.25925071 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.913792415 seconds)
  done (took 8.664324811 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.964544766 seconds)
  done (took 8.814313905 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.418061972 seconds)
  done (took 10.171596895 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.822339284 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.837853733 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.818277767 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.81945261 seconds)
  done (took 29.059405379 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.872851954 seconds)
  done (took 8.620411216 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.833385443 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.820191485 seconds)
  done (took 15.438629198 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.892616548 seconds)
  done (took 8.644943917 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.943787481 seconds)
  done (took 8.700082779 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.831420769 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.856283988 seconds)
  done (took 15.453304044 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.80443297 seconds)
  done (took 8.555873103 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.565189064 seconds)
  done (took 11.323719693 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.829141876 seconds)
  done (took 8.599501122 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.909729056 seconds)
  done (took 8.661836593 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.993860026 seconds)
  done (took 9.747397683 seconds)
done (took 162.206502263 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.823018279 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.81743945 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.819056391 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.821115487 seconds)
  done (took 29.031930776 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.860691266 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.861376388 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.861368023 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.872115797 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.863462607 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.857970438 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.852663808 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.851956798 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.869771254 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.8639884 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.863352586 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.863480778 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.859900436 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.851351034 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.863140855 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.864400603 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.87206807 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.862893547 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.852351779 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.864143278 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.829626571 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.870893355 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.864215441 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.82819021 seconds)
  done (took 46.379466011 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.026338509 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.89874608 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.980430881 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.879586502 seconds)
  done (took 9.539359386 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.87903998 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.881019626 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.893190379 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.931822456 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.956076112 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.892260584 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.855162042 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.850492546 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.83623002 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.880895122 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.955297266 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.875165995 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.976478053 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.828086592 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.015782803 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.827169723 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.827364314 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.879453064 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.930785284 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.945609425 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.828999665 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.880945962 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.884110911 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.875323044 seconds)
  done (took 47.141864645 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.828079353 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.836193786 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.833327607 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.828070954 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.829110429 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.827987835 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.833233739 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.829906459 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.849732123 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.830301898 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.827240275 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.829490958 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.827524861 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.828845473 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.828171231 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.8409705 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.843495908 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.829956071 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.83263862 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.835305461 seconds)
  done (took 38.404113546 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.821471941 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.677215726 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.173759561 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.077847018 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.822389068 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.824496009 seconds)
  done (took 31.152493992 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.841219953 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.83441123 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.829896808 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.883725256 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.965181558 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.835627162 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.828298505 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.837410735 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.87644684 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.893032598 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.848319506 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.858860693 seconds)
  done (took 24.087815017 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.8251256 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.825807515 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.823500713 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.839170489 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.839752692 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.837010227 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.83788392 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.822441923 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.841118331 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.849544986 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.837801283 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.842722897 seconds)
  done (took 43.781805113 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914631938 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.714701458 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.848821866 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547719419 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298024963 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.034900144 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.337019603 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.162243919 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.828650338 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.099597669 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.93209307 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930430538 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077823624 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824367224 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.847512423 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.302281415 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120959335 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051573832 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850188976 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611634975 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877439624 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371793633 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.673969068 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.885184736 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.037304014 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.958791227 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.086371178 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.782045108 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962254549 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863705907 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835354451 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.826055693 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100386683 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20187691 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933113824 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835522449 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.444867981 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.543317524 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.814840457 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.612205716 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.638721454 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.952305981 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832693628 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823067272 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.759032836 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338773219 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202355926 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.830564699 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.535639136 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.824989097 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835440836 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913664293 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.828575438 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.641543859 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742105897 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.103056694 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.824526319 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832983112 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392442733 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.966200304 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364226311 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.800801814 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.020508628 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620644949 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220065376 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.976236597 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.828624308 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.828693707 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761444266 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.605264938 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880567639 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971114391 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.845703889 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475519269 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134457306 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.992494836 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766036772 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108992999 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.614820643 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.801332796 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057897154 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.782378102 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763266185 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.702742684 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.193353256 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095765621 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864825597 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.469250124 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87148376 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162315696 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.836673601 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843214364 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835932372 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052096288 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.709794094 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826935048 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.686567813 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.970261969 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848089545 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163285551 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.762563126 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.828437261 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084058696 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.039054356 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.067261203 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.344989575 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986645638 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828140773 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.910844834 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.749073319 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.877473079 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.100841381 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889687048 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969013575 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889805928 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.780243396 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125107896 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855593745 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.992890102 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.952294589 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.956906741 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.156686233 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122118986 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893149345 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838556387 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.830011504 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.628147423 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38221623 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.096939575 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.82873142 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374963548 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.876578455 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.830650344 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770917775 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.451865891 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.931623014 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.807843522 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.054852741 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.79767665 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.141677689 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764350658 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976076819 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.946804236 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.053124105 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.478321111 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.908188717 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090271815 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325656065 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.110769836 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881683581 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851746129 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947312476 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853055704 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.269464197 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.124211764 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.834736445 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.834822545 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.640190767 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.830020298 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837621535 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.833652432 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.580392429 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105265801 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.85671839 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.839845464 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.723668137 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.844994526 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897438599 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837876416 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.840624179 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.395596975 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.539765778 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.839264805 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.451511984 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053589454 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839531214 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.633877692 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947460118 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.913908176 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1083844 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893016863 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.765621244 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.543960709 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.52415412 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832531463 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.767409275 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.833580863 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841579256 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843548441 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.214921787 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.113115195 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878764983 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.623810699 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.876064899 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844094798 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.837298642 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832363715 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.374179972 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.986222017 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387113929 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880832791 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973193907 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.848408691 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766591663 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.836551856 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837413462 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.832545036 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.787025736 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886686883 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.630702331 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215596801 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089267145 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.441982084 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849253564 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.739018647 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.896825986 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.852407385 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.726250291 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796582638 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.925995453 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846221046 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.847053812 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.61397775 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.527845076 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398136179 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154576399 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142793142 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283842885 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.329063198 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.139307244 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170753738 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070956792 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366015732 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896464032 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175665357 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779197877 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925609555 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.484383899 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187786044 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847683542 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062150811 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.226454985 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.651239477 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982709507 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047765723 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870358028 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.778288244 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801069342 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.043309927 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977787397 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.629756426 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04359779 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170042459 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.587373451 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.926273351 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.836110612 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.527576847 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925524349 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.54815439 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.199847744 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398706901 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.878108848 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312203827 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.845523827 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.28351097 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190886978 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.194088834 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.961312083 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773648701 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848314921 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.84890382 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.837602338 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.834061631 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.689380925 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.088973554 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848549713 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073919954 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.107845491 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134340225 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.745969254 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.843744273 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839441584 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135282449 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.62605193 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010434597 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.280443332 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.363697145 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841132001 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774403706 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773051425 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.532143132 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.839813526 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.814235401 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060542411 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.025520491 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757141458 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350567401 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087138021 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093457797 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.852642682 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112783848 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118660395 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.539481257 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862970029 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.940432708 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.57873357 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.952975499 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.111555434 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075755736 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.590616725 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.066492333 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.876715353 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.660360053 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.838520895 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055186072 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.109463713 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.839262277 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076399599 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.563709407 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.946126896 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16248315 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898074643 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.834405923 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995750219 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.035625436 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849550195 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925868496 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849786519 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.850783887 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.851874424 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887245842 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.832399184 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.970348812 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.85401878 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929903285 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.004102801 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.370042437 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.844655192 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115772219 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203053866 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174980429 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90256784 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.838748696 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847865369 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773575941 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975960351 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.285835004 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113009852 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.972667378 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.13602798 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869416697 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.576590538 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227132866 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085933476 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116887828 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.736219416 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841521662 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.870657014 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.11014814 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850376549 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.052451271 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068640665 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155454035 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315019694 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.091375489 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210738405 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115461837 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.212412219 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.844066693 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436008989 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.961609703 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.540652502 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.89395008 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.808174523 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121578341 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858745939 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231765411 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870669193 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.047816403 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.365170657 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.652596345 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138929586 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.839879679 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.910550739 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127797393 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2474783 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164918996 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918490089 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859392037 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.554365826 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985612858 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.708117705 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.118742342 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849665661 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060343656 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.558519175 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.860911955 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129708955 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161586621 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.846432427 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.720934385 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859844685 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.859535255 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074502197 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120460491 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104479525 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859499649 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.853031914 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.667440329 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128238478 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913719883 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784833729 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.855049627 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951011064 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100404029 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871118673 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.367596705 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.562660835 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14914158 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.771623066 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872922071 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361393446 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224967817 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183158483 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.394978842 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07933289 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.412525012 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.826533975 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160083737 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.856735063 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366338363 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163409914 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.856720775 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.472787531 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894458684 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.122469071 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.177700454 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.985034021 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.681930278 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.831064137 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082371579 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412188709 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794496108 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861780513 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.918719368 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.857203544 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.988635867 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868398066 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.747846392 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.809056037 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.605345371 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349695733 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.857897498 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.845836601 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.643474502 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.503010703 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89240858 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998966429 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859617404 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.565599636 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.145750212 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107899209 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.473984587 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.861792436 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.857302405 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854258998 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.780920016 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.050726948 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.234465767 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153048323 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.30566147 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.893509715 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85756875 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.069121869 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064159658 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.832207002 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999126425 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346745398 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896428424 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.625344719 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.535658513 seconds)
  done (took 1672.119085427 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.860552111 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.883391596 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.933467966 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.870082856 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902502028 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.969182794 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.899332001 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.923692467 seconds)
  done (took 57.031262202 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.85536076 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.055939852 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.865093222 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.857284098 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.865348076 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.855781832 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.023561434 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.867764893 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.863445026 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.867378157 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.856345142 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.85524796 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.174489589 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.879660981 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.856235374 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.86539877 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.864797924 seconds)
  done (took 74.167379452 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.856897376 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.071098712 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.888835245 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.872014034 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.801882799 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.864807236 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.820491516 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.865804943 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.865267032 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.083067729 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.496001608 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.874482985 seconds)
  done (took 90.153058462 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.868368294 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.865276789 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.864463502 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.863628204 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.862754627 seconds)
  done (took 11.120015286 seconds)
done (took 2175.889744319 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.252348866 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.083183499 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.107879699 seconds)
  done (took 5.983194581 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.016603806 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.066522935 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.185571669 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.204630995 seconds)
  done (took 10.277785978 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.156164849 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.254592351 seconds)
  done (took 6.21273722 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.271519478 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.882400686 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.267351931 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.865995294 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.871412493 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.872724162 seconds)
  done (took 22.415702902 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.871677593 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.874116638 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.869426845 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.871862838 seconds)
  done (took 9.288043855 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.852537886 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.544137249 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.851759601 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.869038679 seconds)
  done (took 20.919954843 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.625942494 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.272816619 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.624394532 seconds)
  done (took 9.326459304 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.411202754 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.772747905 seconds)
  done (took 8.984639691 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.133049623 seconds)
  done (took 3.936060635 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.015759116 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.145678091 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.390532992 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.395911247 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.487226823 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.725104742 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.190500713 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.117261028 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.281936475 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.307740825 seconds)
  done (took 24.861377074 seconds)
done (took 137.67307606 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.247092734 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.110748473 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.068429943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.213126199 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.092830464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.066214399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.08430116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.199807367 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.715020634 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.711696248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.212586627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.094943943 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.026304057 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.107676461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.032149914 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.107261294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.088699492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.26274925 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.90757681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.108540198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.092910889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.843118648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.056871191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.856315078 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.090646487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.019150689 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.420131352 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.110697853 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.06244721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.428834518 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.020063906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.262123874 seconds)
  done (took 172.524294718 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.762251476 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.872787294 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.87378533 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.872226069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.094485843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.872315036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.873257125 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.871094862 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.995518842 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.991783138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.897775922 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.119481181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.88431997 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.868853724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.88514348 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.870237331 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.152442612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.852882733 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.891302804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.893959904 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.899705351 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.019314215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.894587287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.041446125 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.159101738 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.896283563 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.871315273 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.900619675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.877251107 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.881440416 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.88442477 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.870631079 seconds)
  done (took 207.396263435 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.871676441 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.871989593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.8714478 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.873565062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.871298408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.872920543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.871358936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.873012195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.548111304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.542836105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.882498106 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.880950597 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.882362462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.874123674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.885147538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.870327445 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.879847448 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.882023766 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.879704362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.883449405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.885309216 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.586097813 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.880794573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.601695495 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.87906189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.880182257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.8744963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.885092374 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.876475604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.877049006 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.879326468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87454547 seconds)
  done (took 220.666514113 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.067692817 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.880447856 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.878635503 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.818134171 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.882347536 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.87878937 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.834224527 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.070554159 seconds)
  done (took 19.127750702 seconds)
done (took 621.528455272 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.326988486 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.173134094 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.052170669 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.906779785 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.138902931 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.934484154 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.8990473 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.960730398 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.636131776 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.966138608 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.586968851 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.915731153 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.680263722 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.919864898 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.025405557 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.953524978 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.482161556 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.572865994 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.076020193 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.953289178 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.073716718 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.8281404 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.976291653 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.654042796 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.69957957 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.876931029 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.113130799 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.48458764 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.91097957 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.066375813 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.639243064 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.283101667 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.908389032 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.899149931 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.955028761 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.933285699 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.281635705 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.90774418 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.019067894 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.639187961 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.957087577 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.519579132 seconds)
  done (took 103.59660778 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.868869339 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.869802945 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.866442824 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.869151364 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.87201121 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.86946379 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.869595937 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.867364374 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.868202824 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.868120965 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.86964344 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.870457794 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.867908541 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.867529322 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.866233792 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.870347358 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.869988077 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.869660995 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.866418995 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.865901808 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.86558151 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.866551764 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.882325438 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.866972675 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.867988799 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.869344663 seconds)
  done (took 50.411056685 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.884199556 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.030519523 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.136575353 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.899946209 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.880910522 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.886310617 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.899598323 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.890628523 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.886173837 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.884087563 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.989005188 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.892110066 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.901693873 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.13793184 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.900437819 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.883961259 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.883257268 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.880333668 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.039099146 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.900858616 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.902694257 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.893555105 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.901822065 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.898487261 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.883836513 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.883532742 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.888270732 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.334638901 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.892284964 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.984807099 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.937662327 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.908138735 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.327483963 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.154925693 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.935471029 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.889913982 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.884831035 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.993004549 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.890542677 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.884790279 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.902106238 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.890841446 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.138123077 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.372160142 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.89715931 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.886390795 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.349339599 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.002392881 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.925616482 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.89677603 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.144385665 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.900989875 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.890469274 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.885201495 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.919777373 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.8949688 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.883136276 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.224881537 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.897412812 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.903866785 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.891721382 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.886101738 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.044167922 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.892363523 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.030922263 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.891510828 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.893792828 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.885661727 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.142141011 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.901473012 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.382478771 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.895309871 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.885691314 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.986199263 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.034003116 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.368737288 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.894256549 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.044647312 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.337901547 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.907612434 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.891908982 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.3249262 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.910737645 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.896455635 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.886134609 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.887886022 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.885696047 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.928773273 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.900618347 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.306939597 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.385831277 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.238559753 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.914533955 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.901384173 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.890426696 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.226959267 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.892971879 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.891995447 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.132783275 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.383730671 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.898740635 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.895083556 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.369208186 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.90261528 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.906527847 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.895820963 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.147607943 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.90176478 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.929073053 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.886892228 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.895099871 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.889488638 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.907237033 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.892548383 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.889450383 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.356561557 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.010499854 seconds)
  done (took 234.028533176 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.883144016 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.882751516 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.882457314 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.884802377 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.880406992 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.885430356 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.880965857 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.880346563 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.887565078 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.882682255 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.881903098 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.882055394 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.88490603 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.887371036 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.918429415 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.888017595 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.497471035 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.880801527 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.880378941 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.882014712 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.531411917 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.891150713 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.88061408 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.884770079 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.881191684 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.882989922 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.88617429 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.909818095 seconds)
  done (took 167.879531691 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.889342464 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.999356801 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.905768941 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.919507623 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.895631886 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.884428546 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.910166695 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.902062783 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.895100003 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.887376513 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.887753144 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.947270945 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.89813049 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.986279311 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.920319297 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.91867867 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.991402776 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.89683867 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.890482897 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.885769606 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.914978386 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.881485051 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.948004272 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.011610463 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.906078736 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.002928472 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.893372381 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.889094364 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.887592369 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.003952085 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.902052323 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.949021612 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.9159366 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.909089816 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.010199344 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.001524664 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.995173657 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.91828222 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.892906214 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.888451494 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.889090361 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.877306829 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.002983376 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.908251466 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.889167975 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.996146389 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.903013227 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.89212039 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.899260305 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.890821969 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.901994046 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.908717126 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.957834954 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.020628614 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.921896203 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.917926374 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.914409909 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.1754478 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.899542923 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.990144725 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.885468011 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.009485002 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.907628662 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.87900508 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.890613974 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.897702081 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.918053233 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.919785382 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.993483872 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.901682262 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.989169526 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.928331804 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.897078192 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.889840044 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.894172716 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.006254636 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.004205165 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.926879117 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.927671711 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.923987748 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.890396173 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.891033476 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.880826593 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.907596622 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.89684464 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.005157742 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.006090525 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.899962096 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.895474557 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.893226705 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.897415174 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.916694869 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.018933354 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.926580163 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.991644966 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.955381266 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.96647089 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.906017247 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.905269023 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.901920156 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.955728993 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.908215357 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.906876734 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.227170706 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.960767471 seconds)
  done (took 204.713337143 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.360157738 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.94827587 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.951631867 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.190819025 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.322224388 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.749178853 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.938397043 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.944029621 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.965838538 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.133264854 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.013300114 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.963171175 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.926651831 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.918125209 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.942075257 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.966104062 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.959267252 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.286118188 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.060892373 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.037626067 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.921780638 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.219820691 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.260347354 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.328935836 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.977828841 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.297375937 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.615680208 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.190768339 seconds)
  done (took 62.217862117 seconds)
done (took 824.654544392 seconds)
SAVING RESULT...
DONE!
